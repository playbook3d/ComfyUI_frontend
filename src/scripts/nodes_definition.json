{"KSampler": {"input": {"required": {"model": ["MODEL", {"tooltip": "The model used for denoising the input latent."}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "The random seed used for creating the noise."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "tooltip": "The number of steps used in the denoising process."}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01, "tooltip": "The Classifier-Free Guidance scale balances creativity and adherence to the prompt. Higher values result in images more closely matching the prompt however too high values will negatively impact quality."}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"], {"tooltip": "The algorithm used when sampling, this can affect the quality, speed, and style of the generated output."}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"], {"tooltip": "The scheduler controls how noise is gradually removed to form the image."}], "positive": ["CONDITIONING", {"tooltip": "The conditioning describing the attributes you want to include in the image."}], "negative": ["CONDITIONING", {"tooltip": "The conditioning describing the attributes you want to exclude from the image."}], "latent_image": ["LATENT", {"tooltip": "The latent image to denoise."}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The amount of denoising applied, lower values will maintain the structure of the initial image allowing for image to image sampling."}]}}, "input_order": {"required": ["model", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "denoise"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "KSampler", "display_name": "KSampler", "description": "Uses the provided model, positive and negative conditioning to denoise the latent image.", "python_module": "nodes", "category": "sampling", "output_node": false, "output_tooltips": ["The denoised latent."]}, "CheckpointLoaderSimple": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"], {"tooltip": "The name of the checkpoint (model) to load."}]}}, "input_order": {"required": ["ckpt_name"]}, "output": ["MODEL", "CLIP", "VAE"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "VAE"], "name": "CheckpointLoaderSimple", "display_name": "Load Checkpoint", "description": "Loads a diffusion model checkpoint, diffusion models are used to denoise latents.", "python_module": "nodes", "category": "loaders", "output_node": false, "output_tooltips": ["The model used for denoising latents.", "The CLIP model used for encoding text prompts.", "The VAE model used for encoding and decoding images to and from latent space."]}, "CLIPTextEncode": {"input": {"required": {"text": ["STRING", {"multiline": true, "dynamicPrompts": true, "tooltip": "The text to be encoded."}], "clip": ["CLIP", {"tooltip": "The CLIP model used for encoding the text."}]}}, "input_order": {"required": ["text", "clip"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncode", "display_name": "CLIP Text Encode (Prompt)", "description": "Encodes a text prompt using a CLIP model into an embedding that can be used to guide the diffusion model towards generating specific images.", "python_module": "nodes", "category": "conditioning", "output_node": false, "output_tooltips": ["A conditioning containing the embedded text used to guide the diffusion model."]}, "CLIPSetLastLayer": {"input": {"required": {"clip": ["CLIP"], "stop_at_clip_layer": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}]}}, "input_order": {"required": ["clip", "stop_at_clip_layer"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIPSetLastLayer", "display_name": "CLIP Set Last Layer", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "VAEDecode": {"input": {"required": {"samples": ["LATENT", {"tooltip": "The latent to be decoded."}], "vae": ["VAE", {"tooltip": "The VAE model used for decoding the latent."}]}}, "input_order": {"required": ["samples", "vae"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "VAEDecode", "display_name": "VAE Decode", "description": "Decodes latent images back into pixel space images.", "python_module": "nodes", "category": "latent", "output_node": false, "output_tooltips": ["The decoded image."]}, "VAEEncode": {"input": {"required": {"pixels": ["IMAGE"], "vae": ["VAE"]}}, "input_order": {"required": ["pixels", "vae"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "VAEEncode", "display_name": "VAE Encode", "description": "", "python_module": "nodes", "category": "latent", "output_node": false}, "VAEEncodeForInpaint": {"input": {"required": {"pixels": ["IMAGE"], "vae": ["VAE"], "mask": ["MASK"], "grow_mask_by": ["INT", {"default": 6, "min": 0, "max": 64, "step": 1}]}}, "input_order": {"required": ["pixels", "vae", "mask", "grow_mask_by"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "VAEEncodeForInpaint", "display_name": "VAE Encode (for Inpainting)", "description": "", "python_module": "nodes", "category": "latent/inpaint", "output_node": false}, "VAELoader": {"input": {"required": {"vae_name": [["YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]]}}, "input_order": {"required": ["vae_name"]}, "output": ["VAE"], "output_is_list": [false], "output_name": ["VAE"], "name": "VAELoader", "display_name": "Load VAE", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "EmptyLatentImage": {"input": {"required": {"width": ["INT", {"default": 512, "min": 16, "max": 16384, "step": 8, "tooltip": "The width of the latent images in pixels."}], "height": ["INT", {"default": 512, "min": 16, "max": 16384, "step": 8, "tooltip": "The height of the latent images in pixels."}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "tooltip": "The number of latent images in the batch."}]}}, "input_order": {"required": ["width", "height", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptyLatentImage", "display_name": "Empty Latent Image", "description": "Create a new batch of empty latent images to be denoised via sampling.", "python_module": "nodes", "category": "latent", "output_node": false, "output_tooltips": ["The empty latent image batch."]}, "LatentUpscale": {"input": {"required": {"samples": ["LATENT"], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "bislerp"]], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "crop": [["disabled", "center"]]}}, "input_order": {"required": ["samples", "upscale_method", "width", "height", "crop"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentUpscale", "display_name": "Upscale Latent", "description": "", "python_module": "nodes", "category": "latent", "output_node": false}, "LatentUpscaleBy": {"input": {"required": {"samples": ["LATENT"], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "bislerp"]], "scale_by": ["FLOAT", {"default": 1.5, "min": 0.01, "max": 8.0, "step": 0.01}]}}, "input_order": {"required": ["samples", "upscale_method", "scale_by"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentUpscaleBy", "display_name": "Upscale Latent By", "description": "", "python_module": "nodes", "category": "latent", "output_node": false}, "LatentFromBatch": {"input": {"required": {"samples": ["LATENT"], "batch_index": ["INT", {"default": 0, "min": 0, "max": 63}], "length": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["samples", "batch_index", "length"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentFromBatch", "display_name": "Latent From Batch", "description": "", "python_module": "nodes", "category": "latent/batch", "output_node": false}, "RepeatLatentBatch": {"input": {"required": {"samples": ["LATENT"], "amount": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["samples", "amount"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "RepeatLatentBatch", "display_name": "Repeat Latent Batch", "description": "", "python_module": "nodes", "category": "latent/batch", "output_node": false}, "SaveImage": {"input": {"required": {"images": ["IMAGE", {"tooltip": "The images to save."}], "filename_prefix": ["STRING", {"default": "ComfyUI", "tooltip": "The prefix for the file to save. This may include formatting information such as %date:yyyy-MM-dd% or %Empty Latent Image.width% to include values from nodes."}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveImage", "display_name": "Save Image", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "nodes", "category": "image", "output_node": true}, "PreviewImage": {"input": {"required": {"images": ["IMAGE"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "PreviewImage", "display_name": "Preview Image", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "nodes", "category": "image", "output_node": true}, "LoadImage": {"input": {"required": {"image": [["00100-3444294236.png", "01115-3441384736-mature ginger guy, laying on field, armpit, sunburnt, blushing, blued eyes, smile, tank top, muscular, facial hair, moustache ,.png", "0c42073e550d6ae9cb7624ad1b2ee53d1d4e8c69_high.webp", "11121_158078841563e50810b30c1.jpg", "1313766545.png", "2024-08-14ComfyUI_00004_.png", "33097901.jpg", "33246906.jpg", "360_F_562816292_d7bYLVGfttt68HKFkOc4f2QKtWUg8Q5n.jpg", "381543ce-3045-4381-9b52-676686caed8f.jpg", "AnimateDiff_00037.mp4", "BGDK748BV7YGRQNF7P3CDK8910 (1).jpeg", "ComfyUI_00074_.png", "ComfyUI_00078_.png", "ComfyUI_00091_.png", "ComfyUI_00219_.png", "ComfyUI_00222_.png", "ComfyUI_00808_.png", "ComfyUI_00809_.png", "ComfyUI_00810_.png", "ComfyUI_00813_.png", "ComfyUI_00815_.png", "ComfyUI_00818_.png", "ComfyUI_00819_.png", "ComfyUI_00842_.png", "ComfyUI_temp_alxcm_00001_.png", "ComfyUI_temp_ayutp_00001_.png", "ComfyUI_temp_bvpdk_00001_.png", "ComfyUI_temp_bvpdk_00004_.png", "ComfyUI_temp_cgbmm_00001_.png", "ComfyUI_temp_chusq_00001_.png", "ComfyUI_temp_doxtg_00002_.png", "ComfyUI_temp_ecxhs_00001_.png", "ComfyUI_temp_ecxhs_00004_.png", "ComfyUI_temp_ecxhs_00006_ (1).png", "ComfyUI_temp_ecxhs_00006_.png", "ComfyUI_temp_ecxhs_00008_.png", "ComfyUI_temp_ecxhs_00010_.png", "ComfyUI_temp_fqjhe_00001_.png", "ComfyUI_temp_fqjhe_00016_.png", "ComfyUI_temp_gxxzz_00001_.png", "ComfyUI_temp_hlvpl_00001_.png", "ComfyUI_temp_ipugi_00131_.png", "ComfyUI_temp_jluvj_00001_.png", "ComfyUI_temp_kteza_00001_.png", "ComfyUI_temp_kubpn_00003_.png", "ComfyUI_temp_lviic_00009_.png", "ComfyUI_temp_lzhyu_00004_.png", "ComfyUI_temp_nmjmf_00001_.png", "ComfyUI_temp_oqypc_00001_.png", "ComfyUI_temp_oqypc_00004_ (1).png", "ComfyUI_temp_oufve_00001_.png", "ComfyUI_temp_pukae_00002_.png", "ComfyUI_temp_qakbs_00001_.png", "ComfyUI_temp_rdanj_00004_.png", "ComfyUI_temp_rqrpi_00001_.png", "ComfyUI_temp_rsiuu_00005_.png", "ComfyUI_temp_rtbjq_00004_.png", "ComfyUI_temp_toyue_00002_.png", "ComfyUI_temp_tqaav_00002_.png", "ComfyUI_temp_txndi_00002_.png", "Guy_Mask_5.png", "Guy_Matcap_5.png", "Guy_Outline_5.png", "H100Test_00015_.png", "H100Test_00016_.png", "H100Test_00034_.png", "IMG_3440.png", "IMG_6129.png", "MAsk.png", "Mario.webp", "MarkuryFLUX_00003_.png", "MarkuryFLUX_00005_.png", "MarkuryFLUX_00022_.png", "MarkuryFLUX_00036_.png", "MarkuryFLUX_00037_.png", "Mask_2 (1).png", "Mask_2.png", "Matcap.png", "Outline.png", "Outline_2.png", "PB-_temp_bxspr_00001_.png", "PNG image.jpeg", "Playbook_00.png", "Playbook_22.png", "Playbook_47.png", "Playbook__00001_ (1) (1).png", "Playbook__00001_ (1).png", "Playbook__00001_ (2).png", "Playbook__00001_.png", "Playbook__00003_ (4).png", "Playbook__00016_.png", "Playbook__00018_.png", "Playbook__00031_.png", "Playbook__00034_.png", "Playbook__00045_.png", "Playbook__00058_.png", "Playbook__00065_.png", "Playbook__00113_.png", "Playbook__00178_.png", "Playbook__00183_.png", "Playbook__00184_.png", "Playbook__00205_.png", "Playbook__00314.mp4", "Playbook__00348_.png", "Playbook__00417_.png", "Playbook__00419_ (1).png", "Playbook__00419_.png", "SDXL-Lightning_00012_.png", "SDXL_ControlNet_Image.png", "archivs_upscalewithflux.png", "beauty (1).png", "beauty (2).png", "beauty (3).png", "beauty (4).png", "beauty-0 (11).png", "beauty-0 (21).png", "beauty-0 (36).png", "beauty-0 (9).png", "beauty-0 - 2024-07-02T105656.553.png", "beauty.png", "ca-times.brightspotcdn.jpg", "canny.png", "canny_res_00003_ (1).png", "canny_res_00003_.png", "canny_res_00014_.png", "canny_res_00038_.png", "canny_res_00040_.png", "dancer-front-depth.png", "dancer-front-mask.png", "dancer-front-outline.png", "depth (1).png", "depth (2).png", "depth (3).png", "depth (4).png", "depth (5).png", "depth-0 (16).png", "depth-0 (18).png", "depth-0 (19).png", "depth-0 (31).png", "depth-0 (38).png", "depth-0 - 2024-07-02T105656.499.png", "depth.png", "depth0000 (1).png", "depth0000 (2).png", "depth0000 (3).png", "depth0000.png", "depth0001.png", "depth0043.png", "download.png", "example.png", "file.txt", "img_BmzB6PyCLHnFfVvV.png", "img_DpgERK4DxUAwLftG.png", "img_QYLbD1uzHC1nFbAE.png", "img_ULjhfQdRpzpEnmug.png", "img_Xipc5yPPxgtt1QGj.png", "img_iBZAGHnJ2Bv3f1XS.png", "inputs_img_DLe7eAeVKcd5aihb copy.png", "inputs_img_DLe7eAeVKcd5aihb.png", "inputs_img_EPMSddrLooFQ1YVD.png", "inputs_img_JLRRUVkofX1vCmjx.png", "inputs_img_Jvze5V927RFFAHX5.png", "inputs_img_KiPSrfifuNwC54ep.png", "inputs_img_UBc9tSV7cFAx87FQ.png", "inputs_img_Uf1LEsrNL4ovoWpz copy.png", "inputs_img_Uf1LEsrNL4ovoWpz.png", "inputs_img_Yhq6WtF5vDhoS4r5.png", "inputs_img_bG6odzGr8EZUPK1u.png", "inputs_img_fp87ttHy7b3hLkDg.png", "inputs_img_pKYznktDTwbYPGcL.png", "inputs_img_qyyvpcueAihTw9YV.png", "istockphoto-1325701162-612x612.jpg", "large-elephant-herd-walking-dust-savuti-botswana-towards-camera-196186738.webp", "manwithsign-depth.png", "manwithsign-mask.png", "manwithsign-outline.png", "mask (1).png", "mask (10).png", "mask (2).png", "mask (3).png", "mask (4).png", "mask (5).png", "mask (6).png", "mask (7).png", "mask (8).png", "mask (9).png", "mask-0 (11).png", "mask-0 (24).png", "mask-0 (28).png", "mask-0 (9).png", "mask-0 - 2024-07-02T105656.507.png", "mask.png", "masks.png", "night vision.jpg", "outline (1).png", "outline (2).png", "outline (3).png", "outline (4).png", "outline-0 (11).png", "outline-0 (31).png", "outline-0 (9).png", "outline-0 - 2024-07-02T105656.503.png", "outline.png", "outline0000 (1).png", "outline0000 (2).png", "outline0000 (3).png", "outline0000.png", "outline0001.png", "outline0043.png", "playbook_59b784a6-af19-4b44-9a45-1e98bae3c9e5.png", "playbook_e2a76fa6-15a6-41d2-922a-29dd68bfd3e3.png", "refernece.jpg", "result_14.png", "rgthree.compare._temp_rzpfz_00007_.png", "safari.jpg", "undefined_image (1).png", "walking-depth.png", "walking-mask.png", "walking-outline.png"], {"image_upload": true}]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "LoadImage", "display_name": "Load Image", "description": "", "python_module": "nodes", "category": "image", "output_node": false}, "LoadImageMask": {"input": {"required": {"image": [["00100-3444294236.png", "01115-3441384736-mature ginger guy, laying on field, armpit, sunburnt, blushing, blued eyes, smile, tank top, muscular, facial hair, moustache ,.png", "0c42073e550d6ae9cb7624ad1b2ee53d1d4e8c69_high.webp", "11121_158078841563e50810b30c1.jpg", "1313766545.png", "2024-08-14ComfyUI_00004_.png", "33097901.jpg", "33246906.jpg", "360_F_562816292_d7bYLVGfttt68HKFkOc4f2QKtWUg8Q5n.jpg", "381543ce-3045-4381-9b52-676686caed8f.jpg", "AnimateDiff_00037.mp4", "BGDK748BV7YGRQNF7P3CDK8910 (1).jpeg", "ComfyUI_00074_.png", "ComfyUI_00078_.png", "ComfyUI_00091_.png", "ComfyUI_00219_.png", "ComfyUI_00222_.png", "ComfyUI_00808_.png", "ComfyUI_00809_.png", "ComfyUI_00810_.png", "ComfyUI_00813_.png", "ComfyUI_00815_.png", "ComfyUI_00818_.png", "ComfyUI_00819_.png", "ComfyUI_00842_.png", "ComfyUI_temp_alxcm_00001_.png", "ComfyUI_temp_ayutp_00001_.png", "ComfyUI_temp_bvpdk_00001_.png", "ComfyUI_temp_bvpdk_00004_.png", "ComfyUI_temp_cgbmm_00001_.png", "ComfyUI_temp_chusq_00001_.png", "ComfyUI_temp_doxtg_00002_.png", "ComfyUI_temp_ecxhs_00001_.png", "ComfyUI_temp_ecxhs_00004_.png", "ComfyUI_temp_ecxhs_00006_ (1).png", "ComfyUI_temp_ecxhs_00006_.png", "ComfyUI_temp_ecxhs_00008_.png", "ComfyUI_temp_ecxhs_00010_.png", "ComfyUI_temp_fqjhe_00001_.png", "ComfyUI_temp_fqjhe_00016_.png", "ComfyUI_temp_gxxzz_00001_.png", "ComfyUI_temp_hlvpl_00001_.png", "ComfyUI_temp_ipugi_00131_.png", "ComfyUI_temp_jluvj_00001_.png", "ComfyUI_temp_kteza_00001_.png", "ComfyUI_temp_kubpn_00003_.png", "ComfyUI_temp_lviic_00009_.png", "ComfyUI_temp_lzhyu_00004_.png", "ComfyUI_temp_nmjmf_00001_.png", "ComfyUI_temp_oqypc_00001_.png", "ComfyUI_temp_oqypc_00004_ (1).png", "ComfyUI_temp_oufve_00001_.png", "ComfyUI_temp_pukae_00002_.png", "ComfyUI_temp_qakbs_00001_.png", "ComfyUI_temp_rdanj_00004_.png", "ComfyUI_temp_rqrpi_00001_.png", "ComfyUI_temp_rsiuu_00005_.png", "ComfyUI_temp_rtbjq_00004_.png", "ComfyUI_temp_toyue_00002_.png", "ComfyUI_temp_tqaav_00002_.png", "ComfyUI_temp_txndi_00002_.png", "Guy_Mask_5.png", "Guy_Matcap_5.png", "Guy_Outline_5.png", "H100Test_00015_.png", "H100Test_00016_.png", "H100Test_00034_.png", "IMG_3440.png", "IMG_6129.png", "MAsk.png", "Mario.webp", "MarkuryFLUX_00003_.png", "MarkuryFLUX_00005_.png", "MarkuryFLUX_00022_.png", "MarkuryFLUX_00036_.png", "MarkuryFLUX_00037_.png", "Mask_2 (1).png", "Mask_2.png", "Matcap.png", "Outline.png", "Outline_2.png", "PB-_temp_bxspr_00001_.png", "PNG image.jpeg", "Playbook_00.png", "Playbook_22.png", "Playbook_47.png", "Playbook__00001_ (1) (1).png", "Playbook__00001_ (1).png", "Playbook__00001_ (2).png", "Playbook__00001_.png", "Playbook__00003_ (4).png", "Playbook__00016_.png", "Playbook__00018_.png", "Playbook__00031_.png", "Playbook__00034_.png", "Playbook__00045_.png", "Playbook__00058_.png", "Playbook__00065_.png", "Playbook__00113_.png", "Playbook__00178_.png", "Playbook__00183_.png", "Playbook__00184_.png", "Playbook__00205_.png", "Playbook__00314.mp4", "Playbook__00348_.png", "Playbook__00417_.png", "Playbook__00419_ (1).png", "Playbook__00419_.png", "SDXL-Lightning_00012_.png", "SDXL_ControlNet_Image.png", "archivs_upscalewithflux.png", "beauty (1).png", "beauty (2).png", "beauty (3).png", "beauty (4).png", "beauty-0 (11).png", "beauty-0 (21).png", "beauty-0 (36).png", "beauty-0 (9).png", "beauty-0 - 2024-07-02T105656.553.png", "beauty.png", "ca-times.brightspotcdn.jpg", "canny.png", "canny_res_00003_ (1).png", "canny_res_00003_.png", "canny_res_00014_.png", "canny_res_00038_.png", "canny_res_00040_.png", "dancer-front-depth.png", "dancer-front-mask.png", "dancer-front-outline.png", "depth (1).png", "depth (2).png", "depth (3).png", "depth (4).png", "depth (5).png", "depth-0 (16).png", "depth-0 (18).png", "depth-0 (19).png", "depth-0 (31).png", "depth-0 (38).png", "depth-0 - 2024-07-02T105656.499.png", "depth.png", "depth0000 (1).png", "depth0000 (2).png", "depth0000 (3).png", "depth0000.png", "depth0001.png", "depth0043.png", "download.png", "example.png", "file.txt", "img_BmzB6PyCLHnFfVvV.png", "img_DpgERK4DxUAwLftG.png", "img_QYLbD1uzHC1nFbAE.png", "img_ULjhfQdRpzpEnmug.png", "img_Xipc5yPPxgtt1QGj.png", "img_iBZAGHnJ2Bv3f1XS.png", "inputs_img_DLe7eAeVKcd5aihb copy.png", "inputs_img_DLe7eAeVKcd5aihb.png", "inputs_img_EPMSddrLooFQ1YVD.png", "inputs_img_JLRRUVkofX1vCmjx.png", "inputs_img_Jvze5V927RFFAHX5.png", "inputs_img_KiPSrfifuNwC54ep.png", "inputs_img_UBc9tSV7cFAx87FQ.png", "inputs_img_Uf1LEsrNL4ovoWpz copy.png", "inputs_img_Uf1LEsrNL4ovoWpz.png", "inputs_img_Yhq6WtF5vDhoS4r5.png", "inputs_img_bG6odzGr8EZUPK1u.png", "inputs_img_fp87ttHy7b3hLkDg.png", "inputs_img_pKYznktDTwbYPGcL.png", "inputs_img_qyyvpcueAihTw9YV.png", "istockphoto-1325701162-612x612.jpg", "large-elephant-herd-walking-dust-savuti-botswana-towards-camera-196186738.webp", "manwithsign-depth.png", "manwithsign-mask.png", "manwithsign-outline.png", "mask (1).png", "mask (10).png", "mask (2).png", "mask (3).png", "mask (4).png", "mask (5).png", "mask (6).png", "mask (7).png", "mask (8).png", "mask (9).png", "mask-0 (11).png", "mask-0 (24).png", "mask-0 (28).png", "mask-0 (9).png", "mask-0 - 2024-07-02T105656.507.png", "mask.png", "masks.png", "night vision.jpg", "outline (1).png", "outline (2).png", "outline (3).png", "outline (4).png", "outline-0 (11).png", "outline-0 (31).png", "outline-0 (9).png", "outline-0 - 2024-07-02T105656.503.png", "outline.png", "outline0000 (1).png", "outline0000 (2).png", "outline0000 (3).png", "outline0000.png", "outline0001.png", "outline0043.png", "playbook_59b784a6-af19-4b44-9a45-1e98bae3c9e5.png", "playbook_e2a76fa6-15a6-41d2-922a-29dd68bfd3e3.png", "refernece.jpg", "result_14.png", "rgthree.compare._temp_rzpfz_00007_.png", "safari.jpg", "undefined_image (1).png", "walking-depth.png", "walking-mask.png", "walking-outline.png"], {"image_upload": true}], "channel": [["alpha", "red", "green", "blue"]]}}, "input_order": {"required": ["image", "channel"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "LoadImageMask", "display_name": "Load Image (as Mask)", "description": "", "python_module": "nodes", "category": "mask", "output_node": false}, "ImageScale": {"input": {"required": {"image": ["IMAGE"], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1}], "crop": [["disabled", "center"]]}}, "input_order": {"required": ["image", "upscale_method", "width", "height", "crop"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageScale", "display_name": "Upscale Image", "description": "", "python_module": "nodes", "category": "image/upscaling", "output_node": false}, "ImageScaleBy": {"input": {"required": {"image": ["IMAGE"], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]], "scale_by": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 8.0, "step": 0.01}]}}, "input_order": {"required": ["image", "upscale_method", "scale_by"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageScaleBy", "display_name": "Upscale Image By", "description": "", "python_module": "nodes", "category": "image/upscaling", "output_node": false}, "ImageInvert": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageInvert", "display_name": "Invert Image", "description": "", "python_module": "nodes", "category": "image", "output_node": false}, "ImageBatch": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"]}}, "input_order": {"required": ["image1", "image2"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBatch", "display_name": "Batch Images", "description": "", "python_module": "nodes", "category": "image", "output_node": false}, "ImagePadForOutpaint": {"input": {"required": {"image": ["IMAGE"], "left": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "top": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "right": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "bottom": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "feathering": ["INT", {"default": 40, "min": 0, "max": 16384, "step": 1}]}}, "input_order": {"required": ["image", "left", "top", "right", "bottom", "feathering"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImagePadForOutpaint", "display_name": "Pad Image for Outpainting", "description": "", "python_module": "nodes", "category": "image", "output_node": false}, "EmptyImage": {"input": {"required": {"width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "color": ["INT", {"default": 0, "min": 0, "max": 16777215, "step": 1, "display": "color"}]}}, "input_order": {"required": ["width", "height", "batch_size", "color"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "EmptyImage", "display_name": "EmptyImage", "description": "", "python_module": "nodes", "category": "image", "output_node": false}, "ConditioningAverage": {"input": {"required": {"conditioning_to": ["CONDITIONING"], "conditioning_from": ["CONDITIONING"], "conditioning_to_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning_to", "conditioning_from", "conditioning_to_strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningAverage", "display_name": "ConditioningAverage", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ConditioningCombine": {"input": {"required": {"conditioning_1": ["CONDITIONING"], "conditioning_2": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning_1", "conditioning_2"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningCombine", "display_name": "Conditioning (Combine)", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ConditioningConcat": {"input": {"required": {"conditioning_to": ["CONDITIONING"], "conditioning_from": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning_to", "conditioning_from"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningConcat", "display_name": "Conditioning (Concat)", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ConditioningSetArea": {"input": {"required": {"conditioning": ["CONDITIONING"], "width": ["INT", {"default": 64, "min": 64, "max": 16384, "step": 8}], "height": ["INT", {"default": 64, "min": 64, "max": 16384, "step": 8}], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "width", "height", "x", "y", "strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetArea", "display_name": "Conditioning (Set Area)", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ConditioningSetAreaPercentage": {"input": {"required": {"conditioning": ["CONDITIONING"], "width": ["FLOAT", {"default": 1.0, "min": 0, "max": 1.0, "step": 0.01}], "height": ["FLOAT", {"default": 1.0, "min": 0, "max": 1.0, "step": 0.01}], "x": ["FLOAT", {"default": 0, "min": 0, "max": 1.0, "step": 0.01}], "y": ["FLOAT", {"default": 0, "min": 0, "max": 1.0, "step": 0.01}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "width", "height", "x", "y", "strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetAreaPercentage", "display_name": "Conditioning (Set Area with Percentage)", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ConditioningSetAreaStrength": {"input": {"required": {"conditioning": ["CONDITIONING"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetAreaStrength", "display_name": "ConditioningSetAreaStrength", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ConditioningSetMask": {"input": {"required": {"conditioning": ["CONDITIONING"], "mask": ["MASK"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}}, "input_order": {"required": ["conditioning", "mask", "strength", "set_cond_area"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetMask", "display_name": "Conditioning (Set Mask)", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "KSamplerAdvanced": {"input": {"required": {"model": ["MODEL"], "add_noise": [["enable", "disable"]], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at_step": ["INT", {"default": 10000, "min": 0, "max": 10000}], "return_with_leftover_noise": [["disable", "enable"]]}}, "input_order": {"required": ["model", "add_noise", "noise_seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "start_at_step", "end_at_step", "return_with_leftover_noise"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "KSamplerAdvanced", "display_name": "KSampler (Advanced)", "description": "", "python_module": "nodes", "category": "sampling", "output_node": false}, "SetLatentNoiseMask": {"input": {"required": {"samples": ["LATENT"], "mask": ["MASK"]}}, "input_order": {"required": ["samples", "mask"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "SetLatentNoiseMask", "display_name": "Set Latent Noise Mask", "description": "", "python_module": "nodes", "category": "latent/inpaint", "output_node": false}, "LatentComposite": {"input": {"required": {"samples_to": ["LATENT"], "samples_from": ["LATENT"], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "feather": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["samples_to", "samples_from", "x", "y", "feather"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentComposite", "display_name": "Latent Composite", "description": "", "python_module": "nodes", "category": "latent", "output_node": false}, "LatentBlend": {"input": {"required": {"samples1": ["LATENT"], "samples2": ["LATENT"], "blend_factor": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}]}}, "input_order": {"required": ["samples1", "samples2", "blend_factor"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentBlend", "display_name": "Latent Blend", "description": "", "python_module": "nodes", "category": "_for_testing", "output_node": false}, "LatentRotate": {"input": {"required": {"samples": ["LATENT"], "rotation": [["none", "90 degrees", "180 degrees", "270 degrees"]]}}, "input_order": {"required": ["samples", "rotation"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentRotate", "display_name": "Rotate Latent", "description": "", "python_module": "nodes", "category": "latent/transform", "output_node": false}, "LatentFlip": {"input": {"required": {"samples": ["LATENT"], "flip_method": [["x-axis: vertically", "y-axis: horizontally"]]}}, "input_order": {"required": ["samples", "flip_method"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentFlip", "display_name": "Flip Latent", "description": "", "python_module": "nodes", "category": "latent/transform", "output_node": false}, "LatentCrop": {"input": {"required": {"samples": ["LATENT"], "width": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["samples", "width", "height", "x", "y"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentCrop", "display_name": "Crop Latent", "description": "", "python_module": "nodes", "category": "latent/transform", "output_node": false}, "LoraLoader": {"input": {"required": {"model": ["MODEL", {"tooltip": "The diffusion model the LoRA will be applied to."}], "clip": ["CLIP", {"tooltip": "The CLIP model the LoRA will be applied to."}], "lora_name": [["AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"tooltip": "The name of the LoRA."}], "strength_model": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "tooltip": "How strongly to modify the diffusion model. This value can be negative."}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "tooltip": "How strongly to modify the CLIP model. This value can be negative."}]}}, "input_order": {"required": ["model", "clip", "lora_name", "strength_model", "strength_clip"]}, "output": ["MODEL", "CLIP"], "output_is_list": [false, false], "output_name": ["MODEL", "CLIP"], "name": "LoraLoader", "display_name": "Load LoRA", "description": "LoRAs are used to modify diffusion and CLIP models, altering the way in which latents are denoised such as applying styles. Multiple LoRA nodes can be linked together.", "python_module": "nodes", "category": "loaders", "output_node": false, "output_tooltips": ["The modified diffusion model.", "The modified CLIP model."]}, "CLIPLoader": {"input": {"required": {"clip_name": [["clip_l.safetensors", "t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "type": [["stable_diffusion", "stable_cascade", "sd3", "stable_audio"]]}}, "input_order": {"required": ["clip_name", "type"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIPLoader", "display_name": "Load CLIP", "description": "", "python_module": "nodes", "category": "advanced/loaders", "output_node": false}, "UNETLoader": {"input": {"required": {"unet_name": [["IC-Light/iclight_sd15_fbc.safetensors", "IC-Light/iclight_sd15_fc.safetensors", "flux1-dev-fp8.safetensors", "flux1-dev.safetensors"]], "weight_dtype": [["default", "fp8_e4m3fn", "fp8_e5m2"]]}}, "input_order": {"required": ["unet_name", "weight_dtype"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "UNETLoader", "display_name": "Load Diffusion Model", "description": "", "python_module": "nodes", "category": "advanced/loaders", "output_node": false}, "DualCLIPLoader": {"input": {"required": {"clip_name1": [["clip_l.safetensors", "t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "clip_name2": [["clip_l.safetensors", "t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "type": [["sdxl", "sd3", "flux"]]}}, "input_order": {"required": ["clip_name1", "clip_name2", "type"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "DualCLIPLoader", "display_name": "DualCLIPLoader", "description": "", "python_module": "nodes", "category": "advanced/loaders", "output_node": false}, "CLIPVisionEncode": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "image": ["IMAGE"]}}, "input_order": {"required": ["clip_vision", "image"]}, "output": ["CLIP_VISION_OUTPUT"], "output_is_list": [false], "output_name": ["CLIP_VISION_OUTPUT"], "name": "CLIPVisionEncode", "display_name": "CLIP Vision Encode", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "StyleModelApply": {"input": {"required": {"conditioning": ["CONDITIONING"], "style_model": ["STYLE_MODEL"], "clip_vision_output": ["CLIP_VISION_OUTPUT"]}}, "input_order": {"required": ["conditioning", "style_model", "clip_vision_output"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "StyleModelApply", "display_name": "Apply Style Model", "description": "", "python_module": "nodes", "category": "conditioning/style_model", "output_node": false}, "unCLIPConditioning": {"input": {"required": {"conditioning": ["CONDITIONING"], "clip_vision_output": ["CLIP_VISION_OUTPUT"], "strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "noise_augmentation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "clip_vision_output", "strength", "noise_augmentation"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "unCLIPConditioning", "display_name": "unCLIPConditioning", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ControlNetApply": {"input": {"required": {"conditioning": ["CONDITIONING"], "control_net": ["CONTROL_NET"], "image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "control_net", "image", "strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ControlNetApply", "display_name": "Apply ControlNet (OLD)", "description": "", "python_module": "nodes", "category": "conditioning/controlnet", "output_node": false, "deprecated": true}, "ControlNetApplyAdvanced": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "control_net": ["CONTROL_NET"], "image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"vae": ["VAE"]}}, "input_order": {"required": ["positive", "negative", "control_net", "image", "strength", "start_percent", "end_percent"], "optional": ["vae"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "ControlNetApplyAdvanced", "display_name": "Apply ControlNet", "description": "", "python_module": "nodes", "category": "conditioning/controlnet", "output_node": false}, "ControlNetLoader": {"input": {"required": {"control_net_name": [["canny-sdxl-1.0.safetensors", "canny-xl1.0.safetensors", "control_sd15_canny.pth", "control_sd15_depth.pth", "control_sd15_normal.pth", "controlnet11Models_tileE.safetensors", "depth-sdxl-1.0.safetensors", "depth-zoe-xl-v1.0-controlnet.safetensors", "diffusers_xl_canny_full.safetensors", "diffusers_xl_depth_full.safetensors", "flux-canny-controlnet-v3.safetensors", "flux-controlnet-union.safetensors", "flux-depth-controlnet-v3.safetensors", "jasperai_flux_depth_controlnet.safetensors", "jasperai_flux_surface_normals_controlnet.safetensors", "mistoLine_fp16.safetensors", "sai_xl_canny_256lora.safetensors", "sai_xl_depth_256lora.safetensors", "t2i-adapter-canny.safetensors", "t2i-adapter-depth.safetensors", "t2iadapter_canny_sd14v1.pth", "t2iadapter_depth_sd14v1.pth", "v3_sd15_sparsectrl_rgb.ckpt", "xinsir_canny.safetensors", "xinsir_depth.safetensors"]]}}, "input_order": {"required": ["control_net_name"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "ControlNetLoader", "display_name": "Load ControlNet Model", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "DiffControlNetLoader": {"input": {"required": {"model": ["MODEL"], "control_net_name": [["canny-sdxl-1.0.safetensors", "canny-xl1.0.safetensors", "control_sd15_canny.pth", "control_sd15_depth.pth", "control_sd15_normal.pth", "controlnet11Models_tileE.safetensors", "depth-sdxl-1.0.safetensors", "depth-zoe-xl-v1.0-controlnet.safetensors", "diffusers_xl_canny_full.safetensors", "diffusers_xl_depth_full.safetensors", "flux-canny-controlnet-v3.safetensors", "flux-controlnet-union.safetensors", "flux-depth-controlnet-v3.safetensors", "jasperai_flux_depth_controlnet.safetensors", "jasperai_flux_surface_normals_controlnet.safetensors", "mistoLine_fp16.safetensors", "sai_xl_canny_256lora.safetensors", "sai_xl_depth_256lora.safetensors", "t2i-adapter-canny.safetensors", "t2i-adapter-depth.safetensors", "t2iadapter_canny_sd14v1.pth", "t2iadapter_depth_sd14v1.pth", "v3_sd15_sparsectrl_rgb.ckpt", "xinsir_canny.safetensors", "xinsir_depth.safetensors"]]}}, "input_order": {"required": ["model", "control_net_name"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "DiffControlNetLoader", "display_name": "Load ControlNet Model (diff)", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "StyleModelLoader": {"input": {"required": {"style_model_name": [[]]}}, "input_order": {"required": ["style_model_name"]}, "output": ["STYLE_MODEL"], "output_is_list": [false], "output_name": ["STYLE_MODEL"], "name": "StyleModelLoader", "display_name": "Load Style Model", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "CLIPVisionLoader": {"input": {"required": {"clip_name": [["CLIP-ViT-H-14-laion2B-s32B-b79K.safetensors", "CLIP-ViT-bigG-14-laion2B-39B-b160k.safetensors", "SD1.5/pytorch_model.bin", "sdxl_clip.safetensors"]]}}, "input_order": {"required": ["clip_name"]}, "output": ["CLIP_VISION"], "output_is_list": [false], "output_name": ["CLIP_VISION"], "name": "CLIPVisionLoader", "display_name": "Load CLIP Vision", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "VAEDecodeTiled": {"input": {"required": {"samples": ["LATENT"], "vae": ["VAE"], "tile_size": ["INT", {"default": 512, "min": 320, "max": 4096, "step": 64}]}}, "input_order": {"required": ["samples", "vae", "tile_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "VAEDecodeTiled", "display_name": "VAE Decode (Tiled)", "description": "", "python_module": "nodes", "category": "_for_testing", "output_node": false}, "VAEEncodeTiled": {"input": {"required": {"pixels": ["IMAGE"], "vae": ["VAE"], "tile_size": ["INT", {"default": 512, "min": 320, "max": 4096, "step": 64}]}}, "input_order": {"required": ["pixels", "vae", "tile_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "VAEEncodeTiled", "display_name": "VAE Encode (Tiled)", "description": "", "python_module": "nodes", "category": "_for_testing", "output_node": false}, "unCLIPCheckpointLoader": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]]}}, "input_order": {"required": ["ckpt_name"]}, "output": ["MODEL", "CLIP", "VAE", "CLIP_VISION"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "CLIP_VISION"], "name": "unCLIPCheckpointLoader", "display_name": "unCLIPCheckpointLoader", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "GLIGENLoader": {"input": {"required": {"gligen_name": [[]]}}, "input_order": {"required": ["gligen_name"]}, "output": ["GLIGEN"], "output_is_list": [false], "output_name": ["GLIGEN"], "name": "GLIGENLoader", "display_name": "GLIGENLoader", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "GLIGENTextBoxApply": {"input": {"required": {"conditioning_to": ["CONDITIONING"], "clip": ["CLIP"], "gligen_textbox_model": ["GLIGEN"], "text": ["STRING", {"multiline": true, "dynamicPrompts": true}], "width": ["INT", {"default": 64, "min": 8, "max": 16384, "step": 8}], "height": ["INT", {"default": 64, "min": 8, "max": 16384, "step": 8}], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["conditioning_to", "clip", "gligen_textbox_model", "text", "width", "height", "x", "y"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "GLIGENTextBoxApply", "display_name": "GLIGENTextBoxApply", "description": "", "python_module": "nodes", "category": "conditioning/gligen", "output_node": false}, "InpaintModelConditioning": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "pixels": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["positive", "negative", "vae", "pixels", "mask"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "InpaintModelConditioning", "display_name": "InpaintModelConditioning", "description": "", "python_module": "nodes", "category": "conditioning/inpaint", "output_node": false}, "CheckpointLoader": {"input": {"required": {"config_name": [["anything_v3.yaml", "v1-inference.yaml", "v1-inference_clip_skip_2.yaml", "v1-inference_clip_skip_2_fp16.yaml", "v1-inference_fp16.yaml", "v1-inpainting-inference.yaml", "v2-inference-v.yaml", "v2-inference-v_fp32.yaml", "v2-inference.yaml", "v2-inference_fp32.yaml", "v2-inpainting-inference.yaml"]], "ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]]}}, "input_order": {"required": ["config_name", "ckpt_name"]}, "output": ["MODEL", "CLIP", "VAE"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "VAE"], "name": "CheckpointLoader", "display_name": "Load Checkpoint With Config (DEPRECATED)", "description": "", "python_module": "nodes", "category": "advanced/loaders", "output_node": false, "deprecated": true}, "DiffusersLoader": {"input": {"required": {"model_path": [["Marigold"]]}}, "input_order": {"required": ["model_path"]}, "output": ["MODEL", "CLIP", "VAE"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "VAE"], "name": "DiffusersLoader", "display_name": "DiffusersLoader", "description": "", "python_module": "nodes", "category": "advanced/loaders/deprecated", "output_node": false}, "LoadLatent": {"input": {"required": {"latent": [[]]}}, "input_order": {"required": ["latent"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LoadLatent", "display_name": "LoadLatent", "description": "", "python_module": "nodes", "category": "_for_testing", "output_node": false}, "SaveLatent": {"input": {"required": {"samples": ["LATENT"], "filename_prefix": ["STRING", {"default": "latents/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["samples", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveLatent", "display_name": "SaveLatent", "description": "", "python_module": "nodes", "category": "_for_testing", "output_node": true}, "ConditioningZeroOut": {"input": {"required": {"conditioning": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningZeroOut", "display_name": "ConditioningZeroOut", "description": "", "python_module": "nodes", "category": "advanced/conditioning", "output_node": false}, "ConditioningSetTimestepRange": {"input": {"required": {"conditioning": ["CONDITIONING"], "start": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["conditioning", "start", "end"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetTimestepRange", "display_name": "ConditioningSetTimestepRange", "description": "", "python_module": "nodes", "category": "advanced/conditioning", "output_node": false}, "LoraLoaderModelOnly": {"input": {"required": {"model": ["MODEL"], "lora_name": [["AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "lora_name", "strength_model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "LoraLoaderModelOnly", "display_name": "LoraLoaderModelOnly", "description": "LoRAs are used to modify diffusion and CLIP models, altering the way in which latents are denoised such as applying styles. Multiple LoRA nodes can be linked together.", "python_module": "nodes", "category": "loaders", "output_node": false, "output_tooltips": ["The modified diffusion model.", "The modified CLIP model."]}, "LatentAdd": {"input": {"required": {"samples1": ["LATENT"], "samples2": ["LATENT"]}}, "input_order": {"required": ["samples1", "samples2"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentAdd", "display_name": "LatentAdd", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced", "output_node": false}, "LatentSubtract": {"input": {"required": {"samples1": ["LATENT"], "samples2": ["LATENT"]}}, "input_order": {"required": ["samples1", "samples2"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentSubtract", "display_name": "LatentSubtract", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced", "output_node": false}, "LatentMultiply": {"input": {"required": {"samples": ["LATENT"], "multiplier": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["samples", "multiplier"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentMultiply", "display_name": "LatentMultiply", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced", "output_node": false}, "LatentInterpolate": {"input": {"required": {"samples1": ["LATENT"], "samples2": ["LATENT"], "ratio": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["samples1", "samples2", "ratio"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentInterpolate", "display_name": "LatentInterpolate", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced", "output_node": false}, "LatentBatch": {"input": {"required": {"samples1": ["LATENT"], "samples2": ["LATENT"]}}, "input_order": {"required": ["samples1", "samples2"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentBatch", "display_name": "LatentBatch", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/batch", "output_node": false}, "LatentBatchSeedBehavior": {"input": {"required": {"samples": ["LATENT"], "seed_behavior": [["random", "fixed"], {"default": "fixed"}]}}, "input_order": {"required": ["samples", "seed_behavior"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentBatchSeedBehavior", "display_name": "LatentBatchSeedBehavior", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced", "output_node": false}, "HypernetworkLoader": {"input": {"required": {"model": ["MODEL"], "hypernetwork_name": [[]], "strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "hypernetwork_name", "strength"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "HypernetworkLoader", "display_name": "HypernetworkLoader", "description": "", "python_module": "comfy_extras.nodes_hypernetwork", "category": "loaders", "output_node": false}, "UpscaleModelLoader": {"input": {"required": {"model_name": [["4x-UltraSharp.pth", "ESRGAN_4x.pth", "RealESRGAN_x2.pth", "RealESRGAN_x4.pth", "ldsr/last.ckpt"]]}}, "input_order": {"required": ["model_name"]}, "output": ["UPSCALE_MODEL"], "output_is_list": [false], "output_name": ["UPSCALE_MODEL"], "name": "UpscaleModelLoader", "display_name": "Load Upscale Model", "description": "", "python_module": "comfy_extras.nodes_upscale_model", "category": "loaders", "output_node": false}, "ImageUpscaleWithModel": {"input": {"required": {"upscale_model": ["UPSCALE_MODEL"], "image": ["IMAGE"]}}, "input_order": {"required": ["upscale_model", "image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageUpscaleWithModel", "display_name": "Upscale Image (using Model)", "description": "", "python_module": "comfy_extras.nodes_upscale_model", "category": "image/upscaling", "output_node": false}, "ImageBlend": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "blend_factor": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "blend_mode": [["normal", "multiply", "screen", "overlay", "soft_light", "difference"]]}}, "input_order": {"required": ["image1", "image2", "blend_factor", "blend_mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBlend", "display_name": "ImageBlend", "description": "", "python_module": "comfy_extras.nodes_post_processing", "category": "image/postprocessing", "output_node": false}, "ImageBlur": {"input": {"required": {"image": ["IMAGE"], "blur_radius": ["INT", {"default": 1, "min": 1, "max": 31, "step": 1}], "sigma": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 10.0, "step": 0.1}]}}, "input_order": {"required": ["image", "blur_radius", "sigma"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBlur", "display_name": "ImageBlur", "description": "", "python_module": "comfy_extras.nodes_post_processing", "category": "image/postprocessing", "output_node": false}, "ImageQuantize": {"input": {"required": {"image": ["IMAGE"], "colors": ["INT", {"default": 256, "min": 1, "max": 256, "step": 1}], "dither": [["none", "floyd-steinberg", "bayer-2", "bayer-4", "bayer-8", "bayer-16"]]}}, "input_order": {"required": ["image", "colors", "dither"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageQuantize", "display_name": "ImageQuantize", "description": "", "python_module": "comfy_extras.nodes_post_processing", "category": "image/postprocessing", "output_node": false}, "ImageSharpen": {"input": {"required": {"image": ["IMAGE"], "sharpen_radius": ["INT", {"default": 1, "min": 1, "max": 31, "step": 1}], "sigma": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 10.0, "step": 0.01}], "alpha": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}]}}, "input_order": {"required": ["image", "sharpen_radius", "sigma", "alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageSharpen", "display_name": "ImageSharpen", "description": "", "python_module": "comfy_extras.nodes_post_processing", "category": "image/postprocessing", "output_node": false}, "ImageScaleToTotalPixels": {"input": {"required": {"image": ["IMAGE"], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]], "megapixels": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 16.0, "step": 0.01}]}}, "input_order": {"required": ["image", "upscale_method", "megapixels"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageScaleToTotalPixels", "display_name": "ImageScaleToTotalPixels", "description": "", "python_module": "comfy_extras.nodes_post_processing", "category": "image/upscaling", "output_node": false}, "LatentCompositeMasked": {"input": {"required": {"destination": ["LATENT"], "source": ["LATENT"], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "resize_source": ["BOOLEAN", {"default": false}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["destination", "source", "x", "y", "resize_source"], "optional": ["mask"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentCompositeMasked", "display_name": "LatentCompositeMasked", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "latent", "output_node": false}, "ImageCompositeMasked": {"input": {"required": {"destination": ["IMAGE"], "source": ["IMAGE"], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "resize_source": ["BOOLEAN", {"default": false}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["destination", "source", "x", "y", "resize_source"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageCompositeMasked", "display_name": "ImageCompositeMasked", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "image", "output_node": false}, "MaskToImage": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "MaskToImage", "display_name": "Convert Mask to Image", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "ImageToMask": {"input": {"required": {"image": ["IMAGE"], "channel": [["red", "green", "blue", "alpha"]]}}, "input_order": {"required": ["image", "channel"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ImageToMask", "display_name": "Convert Image to Mask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "ImageColorToMask": {"input": {"required": {"image": ["IMAGE"], "color": ["INT", {"default": 0, "min": 0, "max": 16777215, "step": 1, "display": "color"}]}}, "input_order": {"required": ["image", "color"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ImageColorToMask", "display_name": "ImageColorToMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "SolidMask": {"input": {"required": {"value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}]}}, "input_order": {"required": ["value", "width", "height"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "SolidMask", "display_name": "SolidMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "InvertMask": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "InvertMask", "display_name": "InvertMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "CropMask": {"input": {"required": {"mask": ["MASK"], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}]}}, "input_order": {"required": ["mask", "x", "y", "width", "height"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "CropMask", "display_name": "CropMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "MaskComposite": {"input": {"required": {"destination": ["MASK"], "source": ["MASK"], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "operation": [["multiply", "add", "subtract", "and", "or", "xor"]]}}, "input_order": {"required": ["destination", "source", "x", "y", "operation"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskComposite", "display_name": "MaskComposite", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "FeatherMask": {"input": {"required": {"mask": ["MASK"], "left": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "top": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "right": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "bottom": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}]}}, "input_order": {"required": ["mask", "left", "top", "right", "bottom"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "FeatherMask", "display_name": "FeatherMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "GrowMask": {"input": {"required": {"mask": ["MASK"], "expand": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}], "tapered_corners": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["mask", "expand", "tapered_corners"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "GrowMask", "display_name": "GrowMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "ThresholdMask": {"input": {"required": {"mask": ["MASK"], "value": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["mask", "value"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ThresholdMask", "display_name": "ThresholdMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "PorterDuffImageComposite": {"input": {"required": {"source": ["IMAGE"], "source_alpha": ["MASK"], "destination": ["IMAGE"], "destination_alpha": ["MASK"], "mode": [["ADD", "CLEAR", "DARKEN", "DST", "DST_ATOP", "DST_IN", "DST_OUT", "DST_OVER", "LIGHTEN", "MULTIPLY", "OVERLAY", "SCREEN", "SRC", "SRC_ATOP", "SRC_IN", "SRC_OUT", "SRC_OVER", "XOR"], {"default": "DST"}]}}, "input_order": {"required": ["source", "source_alpha", "destination", "destination_alpha", "mode"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "PorterDuffImageComposite", "display_name": "Porter-Duff Image Composite", "description": "", "python_module": "comfy_extras.nodes_compositing", "category": "mask/compositing", "output_node": false}, "SplitImageWithAlpha": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "SplitImageWithAlpha", "display_name": "Split Image with Alpha", "description": "", "python_module": "comfy_extras.nodes_compositing", "category": "mask/compositing", "output_node": false}, "JoinImageWithAlpha": {"input": {"required": {"image": ["IMAGE"], "alpha": ["MASK"]}}, "input_order": {"required": ["image", "alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JoinImageWithAlpha", "display_name": "Join Image with Alpha", "description": "", "python_module": "comfy_extras.nodes_compositing", "category": "mask/compositing", "output_node": false}, "RebatchLatents": {"input": {"required": {"latents": ["LATENT"], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["latents", "batch_size"]}, "output": ["LATENT"], "output_is_list": [true], "output_name": ["LATENT"], "name": "RebatchLatents", "display_name": "Rebatch Latents", "description": "", "python_module": "comfy_extras.nodes_rebatch", "category": "latent/batch", "output_node": false}, "RebatchImages": {"input": {"required": {"images": ["IMAGE"], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["images", "batch_size"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "RebatchImages", "display_name": "Rebatch Images", "description": "", "python_module": "comfy_extras.nodes_rebatch", "category": "image/batch", "output_node": false}, "ModelMergeSimple": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "ratio": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "ratio"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeSimple", "display_name": "ModelMergeSimple", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "ModelMergeBlocks": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "input": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "out": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "input", "middle", "out"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeBlocks", "display_name": "ModelMergeBlocks", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "ModelMergeSubtract": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "multiplier": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "multiplier"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeSubtract", "display_name": "ModelMergeSubtract", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "ModelMergeAdd": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"]}}, "input_order": {"required": ["model1", "model2"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeAdd", "display_name": "ModelMergeAdd", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "CheckpointSave": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "filename_prefix": ["STRING", {"default": "checkpoints/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["model", "clip", "vae", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "CheckpointSave", "display_name": "Save Checkpoint", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": true}, "CLIPMergeSimple": {"input": {"required": {"clip1": ["CLIP"], "clip2": ["CLIP"], "ratio": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["clip1", "clip2", "ratio"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIPMergeSimple", "display_name": "CLIPMergeSimple", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "CLIPMergeSubtract": {"input": {"required": {"clip1": ["CLIP"], "clip2": ["CLIP"], "multiplier": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["clip1", "clip2", "multiplier"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIPMergeSubtract", "display_name": "CLIPMergeSubtract", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "CLIPMergeAdd": {"input": {"required": {"clip1": ["CLIP"], "clip2": ["CLIP"]}}, "input_order": {"required": ["clip1", "clip2"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIPMergeAdd", "display_name": "CLIPMergeAdd", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "CLIPSave": {"input": {"required": {"clip": ["CLIP"], "filename_prefix": ["STRING", {"default": "clip/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["clip", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "CLIPSave", "display_name": "CLIPSave", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": true}, "VAESave": {"input": {"required": {"vae": ["VAE"], "filename_prefix": ["STRING", {"default": "vae/ComfyUI_vae"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["vae", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "VAESave", "display_name": "VAESave", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": true}, "ModelSave": {"input": {"required": {"model": ["MODEL"], "filename_prefix": ["STRING", {"default": "diffusion_models/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["model", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ModelSave", "display_name": "ModelSave", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": true}, "TomePatchModel": {"input": {"required": {"model": ["MODEL"], "ratio": ["FLOAT", {"default": 0.3, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "ratio"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "TomePatchModel", "display_name": "TomePatchModel", "description": "", "python_module": "comfy_extras.nodes_tomesd", "category": "model_patches/unet", "output_node": false}, "CLIPTextEncodeSDXLRefiner": {"input": {"required": {"ascore": ["FLOAT", {"default": 6.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "width": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "height": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "text": ["STRING", {"multiline": true, "dynamicPrompts": true}], "clip": ["CLIP"]}}, "input_order": {"required": ["ascore", "width", "height", "text", "clip"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeSDXLRefiner", "display_name": "CLIPTextEncodeSDXLRefiner", "description": "", "python_module": "comfy_extras.nodes_clip_sdxl", "category": "advanced/conditioning", "output_node": false}, "CLIPTextEncodeSDXL": {"input": {"required": {"width": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "height": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "crop_w": ["INT", {"default": 0, "min": 0, "max": 16384}], "crop_h": ["INT", {"default": 0, "min": 0, "max": 16384}], "target_width": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "target_height": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "text_g": ["STRING", {"multiline": true, "dynamicPrompts": true}], "clip": ["CLIP"], "text_l": ["STRING", {"multiline": true, "dynamicPrompts": true}]}}, "input_order": {"required": ["width", "height", "crop_w", "crop_h", "target_width", "target_height", "text_g", "clip", "text_l"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeSDXL", "display_name": "CLIPTextEncodeSDXL", "description": "", "python_module": "comfy_extras.nodes_clip_sdxl", "category": "advanced/conditioning", "output_node": false}, "Canny": {"input": {"required": {"image": ["IMAGE"], "low_threshold": ["FLOAT", {"default": 0.4, "min": 0.01, "max": 0.99, "step": 0.01}], "high_threshold": ["FLOAT", {"default": 0.8, "min": 0.01, "max": 0.99, "step": 0.01}]}}, "input_order": {"required": ["image", "low_threshold", "high_threshold"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Canny", "display_name": "Canny", "description": "", "python_module": "comfy_extras.nodes_canny", "category": "image/preprocessors", "output_node": false}, "FreeU": {"input": {"required": {"model": ["MODEL"], "b1": ["FLOAT", {"default": 1.1, "min": 0.0, "max": 10.0, "step": 0.01}], "b2": ["FLOAT", {"default": 1.2, "min": 0.0, "max": 10.0, "step": 0.01}], "s1": ["FLOAT", {"default": 0.9, "min": 0.0, "max": 10.0, "step": 0.01}], "s2": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "b1", "b2", "s1", "s2"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "FreeU", "display_name": "FreeU", "description": "", "python_module": "comfy_extras.nodes_freelunch", "category": "model_patches/unet", "output_node": false}, "FreeU_V2": {"input": {"required": {"model": ["MODEL"], "b1": ["FLOAT", {"default": 1.3, "min": 0.0, "max": 10.0, "step": 0.01}], "b2": ["FLOAT", {"default": 1.4, "min": 0.0, "max": 10.0, "step": 0.01}], "s1": ["FLOAT", {"default": 0.9, "min": 0.0, "max": 10.0, "step": 0.01}], "s2": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "b1", "b2", "s1", "s2"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "FreeU_V2", "display_name": "FreeU_V2", "description": "", "python_module": "comfy_extras.nodes_freelunch", "category": "model_patches/unet", "output_node": false}, "SamplerCustom": {"input": {"required": {"model": ["MODEL"], "add_noise": ["BOOLEAN", {"default": true}], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "sampler": ["SAMPLER"], "sigmas": ["SIGMAS"], "latent_image": ["LATENT"]}}, "input_order": {"required": ["model", "add_noise", "noise_seed", "cfg", "positive", "negative", "sampler", "sigmas", "latent_image"]}, "output": ["LATENT", "LATENT"], "output_is_list": [false, false], "output_name": ["output", "denoised_output"], "name": "SamplerCustom", "display_name": "SamplerCustom", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling", "output_node": false}, "BasicScheduler": {"input": {"required": {"model": ["MODEL"], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "scheduler", "steps", "denoise"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "BasicScheduler", "display_name": "BasicScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "KarrasScheduler": {"input": {"required": {"steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "sigma_max": ["FLOAT", {"default": 14.614642, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "sigma_min": ["FLOAT", {"default": 0.0291675, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "rho": ["FLOAT", {"default": 7.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["steps", "sigma_max", "sigma_min", "rho"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "KarrasScheduler", "display_name": "KarrasScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "ExponentialScheduler": {"input": {"required": {"steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "sigma_max": ["FLOAT", {"default": 14.614642, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "sigma_min": ["FLOAT", {"default": 0.0291675, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["steps", "sigma_max", "sigma_min"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "ExponentialScheduler", "display_name": "ExponentialScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "PolyexponentialScheduler": {"input": {"required": {"steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "sigma_max": ["FLOAT", {"default": 14.614642, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "sigma_min": ["FLOAT", {"default": 0.0291675, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "rho": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["steps", "sigma_max", "sigma_min", "rho"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "PolyexponentialScheduler", "display_name": "PolyexponentialScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "LaplaceScheduler": {"input": {"required": {"steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "sigma_max": ["FLOAT", {"default": 14.614642, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "sigma_min": ["FLOAT", {"default": 0.0291675, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "mu": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 10.0, "step": 0.1, "round": false}], "beta": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 10.0, "step": 0.1, "round": false}]}}, "input_order": {"required": ["steps", "sigma_max", "sigma_min", "mu", "beta"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "LaplaceScheduler", "display_name": "LaplaceScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "VPScheduler": {"input": {"required": {"steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "beta_d": ["FLOAT", {"default": 19.9, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "beta_min": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "eps_s": ["FLOAT", {"default": 0.001, "min": 0.0, "max": 1.0, "step": 0.0001, "round": false}]}}, "input_order": {"required": ["steps", "beta_d", "beta_min", "eps_s"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "VPScheduler", "display_name": "VPScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "BetaSamplingScheduler": {"input": {"required": {"model": ["MODEL"], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "alpha": ["FLOAT", {"default": 0.6, "min": 0.0, "max": 50.0, "step": 0.01, "round": false}], "beta": ["FLOAT", {"default": 0.6, "min": 0.0, "max": 50.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["model", "steps", "alpha", "beta"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "BetaSamplingScheduler", "display_name": "BetaSamplingScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "SDTurboScheduler": {"input": {"required": {"model": ["MODEL"], "steps": ["INT", {"default": 1, "min": 1, "max": 10}], "denoise": ["FLOAT", {"default": 1.0, "min": 0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "steps", "denoise"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "SDTurboScheduler", "display_name": "SDTurboScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "KSamplerSelect": {"input": {"required": {"sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]]}}, "input_order": {"required": ["sampler_name"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "KSamplerSelect", "display_name": "KSamplerSelect", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerEulerAncestral": {"input": {"required": {"eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["eta", "s_noise"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerEulerAncestral", "display_name": "SamplerEulerAncestral", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerEulerAncestralCFGPP": {"input": {"required": {"eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["eta", "s_noise"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerEulerAncestralCFGPP", "display_name": "SamplerEulerAncestralCFG++", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerLMS": {"input": {"required": {"order": ["INT", {"default": 4, "min": 1, "max": 100}]}}, "input_order": {"required": ["order"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerLMS", "display_name": "SamplerLMS", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerDPMPP_3M_SDE": {"input": {"required": {"eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "noise_device": [["gpu", "cpu"]]}}, "input_order": {"required": ["eta", "s_noise", "noise_device"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerDPMPP_3M_SDE", "display_name": "SamplerDPMPP_3M_SDE", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerDPMPP_2M_SDE": {"input": {"required": {"solver_type": [["midpoint", "heun"]], "eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "noise_device": [["gpu", "cpu"]]}}, "input_order": {"required": ["solver_type", "eta", "s_noise", "noise_device"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerDPMPP_2M_SDE", "display_name": "SamplerDPMPP_2M_SDE", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerDPMPP_SDE": {"input": {"required": {"eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "r": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "noise_device": [["gpu", "cpu"]]}}, "input_order": {"required": ["eta", "s_noise", "r", "noise_device"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerDPMPP_SDE", "display_name": "SamplerDPMPP_SDE", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerDPMPP_2S_Ancestral": {"input": {"required": {"eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["eta", "s_noise"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerDPMPP_2S_Ancestral", "display_name": "SamplerDPMPP_2S_Ancestral", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerDPMAdaptative": {"input": {"required": {"order": ["INT", {"default": 3, "min": 2, "max": 3}], "rtol": ["FLOAT", {"default": 0.05, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "atol": ["FLOAT", {"default": 0.0078, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "h_init": ["FLOAT", {"default": 0.05, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "pcoeff": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "icoeff": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "dcoeff": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "accept_safety": ["FLOAT", {"default": 0.81, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "eta": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["order", "rtol", "atol", "h_init", "pcoeff", "icoeff", "dcoeff", "accept_safety", "eta", "s_noise"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerDPMAdaptative", "display_name": "SamplerDPMAdaptative", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SplitSigmas": {"input": {"required": {"sigmas": ["SIGMAS"], "step": ["INT", {"default": 0, "min": 0, "max": 10000}]}}, "input_order": {"required": ["sigmas", "step"]}, "output": ["SIGMAS", "SIGMAS"], "output_is_list": [false, false], "output_name": ["high_sigmas", "low_sigmas"], "name": "SplitSigmas", "display_name": "SplitSigmas", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/sigmas", "output_node": false}, "SplitSigmasDenoise": {"input": {"required": {"sigmas": ["SIGMAS"], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["sigmas", "denoise"]}, "output": ["SIGMAS", "SIGMAS"], "output_is_list": [false, false], "output_name": ["high_sigmas", "low_sigmas"], "name": "SplitSigmasDenoise", "display_name": "SplitSigmasDenoise", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/sigmas", "output_node": false}, "FlipSigmas": {"input": {"required": {"sigmas": ["SIGMAS"]}}, "input_order": {"required": ["sigmas"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "FlipSigmas", "display_name": "FlipSigmas", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/sigmas", "output_node": false}, "CFGGuider": {"input": {"required": {"model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}]}}, "input_order": {"required": ["model", "positive", "negative", "cfg"]}, "output": ["GUIDER"], "output_is_list": [false], "output_name": ["GUIDER"], "name": "CFGGuider", "display_name": "CFGGuider", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/guiders", "output_node": false}, "DualCFGGuider": {"input": {"required": {"model": ["MODEL"], "cond1": ["CONDITIONING"], "cond2": ["CONDITIONING"], "negative": ["CONDITIONING"], "cfg_conds": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "cfg_cond2_negative": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}]}}, "input_order": {"required": ["model", "cond1", "cond2", "negative", "cfg_conds", "cfg_cond2_negative"]}, "output": ["GUIDER"], "output_is_list": [false], "output_name": ["GUIDER"], "name": "DualCFGGuider", "display_name": "DualCFGGuider", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/guiders", "output_node": false}, "BasicGuider": {"input": {"required": {"model": ["MODEL"], "conditioning": ["CONDITIONING"]}}, "input_order": {"required": ["model", "conditioning"]}, "output": ["GUIDER"], "output_is_list": [false], "output_name": ["GUIDER"], "name": "BasicGuider", "display_name": "BasicGuider", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/guiders", "output_node": false}, "RandomNoise": {"input": {"required": {"noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["noise_seed"]}, "output": ["NOISE"], "output_is_list": [false], "output_name": ["NOISE"], "name": "RandomNoise", "display_name": "RandomNoise", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/noise", "output_node": false}, "DisableNoise": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["NOISE"], "output_is_list": [false], "output_name": ["NOISE"], "name": "DisableNoise", "display_name": "DisableNoise", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/noise", "output_node": false}, "AddNoise": {"input": {"required": {"model": ["MODEL"], "noise": ["NOISE"], "sigmas": ["SIGMAS"], "latent_image": ["LATENT"]}}, "input_order": {"required": ["model", "noise", "sigmas", "latent_image"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "AddNoise", "display_name": "AddNoise", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "_for_testing/custom_sampling/noise", "output_node": false}, "SamplerCustomAdvanced": {"input": {"required": {"noise": ["NOISE"], "guider": ["GUIDER"], "sampler": ["SAMPLER"], "sigmas": ["SIGMAS"], "latent_image": ["LATENT"]}}, "input_order": {"required": ["noise", "guider", "sampler", "sigmas", "latent_image"]}, "output": ["LATENT", "LATENT"], "output_is_list": [false, false], "output_name": ["output", "denoised_output"], "name": "SamplerCustomAdvanced", "display_name": "SamplerCustomAdvanced", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling", "output_node": false}, "HyperTile": {"input": {"required": {"model": ["MODEL"], "tile_size": ["INT", {"default": 256, "min": 1, "max": 2048}], "swap_size": ["INT", {"default": 2, "min": 1, "max": 128}], "max_depth": ["INT", {"default": 0, "min": 0, "max": 10}], "scale_depth": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["model", "tile_size", "swap_size", "max_depth", "scale_depth"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "HyperTile", "display_name": "HyperTile", "description": "", "python_module": "comfy_extras.nodes_hypertile", "category": "model_patches/unet", "output_node": false}, "ModelSamplingDiscrete": {"input": {"required": {"model": ["MODEL"], "sampling": [["eps", "v_prediction", "lcm", "x0"]], "zsnr": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["model", "sampling", "zsnr"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingDiscrete", "display_name": "ModelSamplingDiscrete", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "ModelSamplingContinuousEDM": {"input": {"required": {"model": ["MODEL"], "sampling": [["v_prediction", "edm_playground_v2.5", "eps"]], "sigma_max": ["FLOAT", {"default": 120.0, "min": 0.0, "max": 1000.0, "step": 0.001, "round": false}], "sigma_min": ["FLOAT", {"default": 0.002, "min": 0.0, "max": 1000.0, "step": 0.001, "round": false}]}}, "input_order": {"required": ["model", "sampling", "sigma_max", "sigma_min"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingContinuousEDM", "display_name": "ModelSamplingContinuousEDM", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "ModelSamplingContinuousV": {"input": {"required": {"model": ["MODEL"], "sampling": [["v_prediction"]], "sigma_max": ["FLOAT", {"default": 500.0, "min": 0.0, "max": 1000.0, "step": 0.001, "round": false}], "sigma_min": ["FLOAT", {"default": 0.03, "min": 0.0, "max": 1000.0, "step": 0.001, "round": false}]}}, "input_order": {"required": ["model", "sampling", "sigma_max", "sigma_min"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingContinuousV", "display_name": "ModelSamplingContinuousV", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "ModelSamplingStableCascade": {"input": {"required": {"model": ["MODEL"], "shift": ["FLOAT", {"default": 2.0, "min": 0.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "shift"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingStableCascade", "display_name": "ModelSamplingStableCascade", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "ModelSamplingSD3": {"input": {"required": {"model": ["MODEL"], "shift": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "shift"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingSD3", "display_name": "ModelSamplingSD3", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "ModelSamplingAuraFlow": {"input": {"required": {"model": ["MODEL"], "shift": ["FLOAT", {"default": 1.73, "min": 0.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "shift"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingAuraFlow", "display_name": "ModelSamplingAuraFlow", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "ModelSamplingFlux": {"input": {"required": {"model": ["MODEL"], "max_shift": ["FLOAT", {"default": 1.15, "min": 0.0, "max": 100.0, "step": 0.01}], "base_shift": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 100.0, "step": 0.01}], "width": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 8}]}}, "input_order": {"required": ["model", "max_shift", "base_shift", "width", "height"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingFlux", "display_name": "ModelSamplingFlux", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "RescaleCFG": {"input": {"required": {"model": ["MODEL"], "multiplier": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "multiplier"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "RescaleCFG", "display_name": "RescaleCFG", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "PatchModelAddDownscale": {"input": {"required": {"model": ["MODEL"], "block_number": ["INT", {"default": 3, "min": 1, "max": 32, "step": 1}], "downscale_factor": ["FLOAT", {"default": 2.0, "min": 0.1, "max": 9.0, "step": 0.001}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 0.35, "min": 0.0, "max": 1.0, "step": 0.001}], "downscale_after_skip": ["BOOLEAN", {"default": true}], "downscale_method": [["bicubic", "nearest-exact", "bilinear", "area", "bislerp"]], "upscale_method": [["bicubic", "nearest-exact", "bilinear", "area", "bislerp"]]}}, "input_order": {"required": ["model", "block_number", "downscale_factor", "start_percent", "end_percent", "downscale_after_skip", "downscale_method", "upscale_method"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "PatchModelAddDownscale", "display_name": "PatchModelAddDownscale (Kohya Deep Shrink)", "description": "", "python_module": "comfy_extras.nodes_model_downscale", "category": "model_patches/unet", "output_node": false}, "ImageCrop": {"input": {"required": {"image": ["IMAGE"], "width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}]}}, "input_order": {"required": ["image", "width", "height", "x", "y"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageCrop", "display_name": "ImageCrop", "description": "", "python_module": "comfy_extras.nodes_images", "category": "image/transform", "output_node": false}, "RepeatImageBatch": {"input": {"required": {"image": ["IMAGE"], "amount": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["image", "amount"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RepeatImageBatch", "display_name": "RepeatImageBatch", "description": "", "python_module": "comfy_extras.nodes_images", "category": "image/batch", "output_node": false}, "ImageFromBatch": {"input": {"required": {"image": ["IMAGE"], "batch_index": ["INT", {"default": 0, "min": 0, "max": 4095}], "length": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["image", "batch_index", "length"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFromBatch", "display_name": "ImageFromBatch", "description": "", "python_module": "comfy_extras.nodes_images", "category": "image/batch", "output_node": false}, "SaveAnimatedWEBP": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "fps": ["FLOAT", {"default": 6.0, "min": 0.01, "max": 1000.0, "step": 0.01}], "lossless": ["BOOLEAN", {"default": true}], "quality": ["INT", {"default": 80, "min": 0, "max": 100}], "method": [["default", "fastest", "slowest"]]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "fps", "lossless", "quality", "method"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveAnimatedWEBP", "display_name": "SaveAnimatedWEBP", "description": "", "python_module": "comfy_extras.nodes_images", "category": "image/animation", "output_node": true}, "SaveAnimatedPNG": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "fps": ["FLOAT", {"default": 6.0, "min": 0.01, "max": 1000.0, "step": 0.01}], "compress_level": ["INT", {"default": 4, "min": 0, "max": 9}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "fps", "compress_level"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveAnimatedPNG", "display_name": "SaveAnimatedPNG", "description": "", "python_module": "comfy_extras.nodes_images", "category": "image/animation", "output_node": true}, "ImageOnlyCheckpointLoader": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]]}}, "input_order": {"required": ["ckpt_name"]}, "output": ["MODEL", "CLIP_VISION", "VAE"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP_VISION", "VAE"], "name": "ImageOnlyCheckpointLoader", "display_name": "Image Only Checkpoint Loader (img2vid model)", "description": "", "python_module": "comfy_extras.nodes_video_model", "category": "loaders/video_models", "output_node": false}, "SVD_img2vid_Conditioning": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "init_image": ["IMAGE"], "vae": ["VAE"], "width": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 576, "min": 16, "max": 16384, "step": 8}], "video_frames": ["INT", {"default": 14, "min": 1, "max": 4096}], "motion_bucket_id": ["INT", {"default": 127, "min": 1, "max": 1023}], "fps": ["INT", {"default": 6, "min": 1, "max": 1024}], "augmentation_level": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["clip_vision", "init_image", "vae", "width", "height", "video_frames", "motion_bucket_id", "fps", "augmentation_level"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "SVD_img2vid_Conditioning", "display_name": "SVD_img2vid_Conditioning", "description": "", "python_module": "comfy_extras.nodes_video_model", "category": "conditioning/video_models", "output_node": false}, "VideoLinearCFGGuidance": {"input": {"required": {"model": ["MODEL"], "min_cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.5, "round": 0.01}]}}, "input_order": {"required": ["model", "min_cfg"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "VideoLinearCFGGuidance", "display_name": "VideoLinearCFGGuidance", "description": "", "python_module": "comfy_extras.nodes_video_model", "category": "sampling/video_models", "output_node": false}, "VideoTriangleCFGGuidance": {"input": {"required": {"model": ["MODEL"], "min_cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.5, "round": 0.01}]}}, "input_order": {"required": ["model", "min_cfg"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "VideoTriangleCFGGuidance", "display_name": "VideoTriangleCFGGuidance", "description": "", "python_module": "comfy_extras.nodes_video_model", "category": "sampling/video_models", "output_node": false}, "ImageOnlyCheckpointSave": {"input": {"required": {"model": ["MODEL"], "clip_vision": ["CLIP_VISION"], "vae": ["VAE"], "filename_prefix": ["STRING", {"default": "checkpoints/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["model", "clip_vision", "vae", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ImageOnlyCheckpointSave", "display_name": "ImageOnlyCheckpointSave", "description": "", "python_module": "comfy_extras.nodes_video_model", "category": "advanced/model_merging", "output_node": true}, "SelfAttentionGuidance": {"input": {"required": {"model": ["MODEL"], "scale": ["FLOAT", {"default": 0.5, "min": -2.0, "max": 5.0, "step": 0.01}], "blur_sigma": ["FLOAT", {"default": 2.0, "min": 0.0, "max": 10.0, "step": 0.1}]}}, "input_order": {"required": ["model", "scale", "blur_sigma"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "SelfAttentionGuidance", "display_name": "Self-Attention Guidance", "description": "", "python_module": "comfy_extras.nodes_sag", "category": "_for_testing", "output_node": false}, "PerpNeg": {"input": {"required": {"model": ["MODEL"], "empty_conditioning": ["CONDITIONING"], "neg_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "empty_conditioning", "neg_scale"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "PerpNeg", "display_name": "Perp-Neg (DEPRECATED by PerpNegGuider)", "description": "", "python_module": "comfy_extras.nodes_perpneg", "category": "_for_testing", "output_node": false, "deprecated": true}, "PerpNegGuider": {"input": {"required": {"model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "empty_conditioning": ["CONDITIONING"], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "neg_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "positive", "negative", "empty_conditioning", "cfg", "neg_scale"]}, "output": ["GUIDER"], "output_is_list": [false], "output_name": ["GUIDER"], "name": "PerpNegGuider", "display_name": "PerpNegGuider", "description": "", "python_module": "comfy_extras.nodes_perpneg", "category": "_for_testing", "output_node": false}, "StableZero123_Conditioning": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "init_image": ["IMAGE"], "vae": ["VAE"], "width": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "elevation": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0, "step": 0.1, "round": false}], "azimuth": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0, "step": 0.1, "round": false}]}}, "input_order": {"required": ["clip_vision", "init_image", "vae", "width", "height", "batch_size", "elevation", "azimuth"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "StableZero123_Conditioning", "display_name": "StableZero123_Conditioning", "description": "", "python_module": "comfy_extras.nodes_stable3d", "category": "conditioning/3d_models", "output_node": false}, "StableZero123_Conditioning_Batched": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "init_image": ["IMAGE"], "vae": ["VAE"], "width": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "elevation": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0, "step": 0.1, "round": false}], "azimuth": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0, "step": 0.1, "round": false}], "elevation_batch_increment": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0, "step": 0.1, "round": false}], "azimuth_batch_increment": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0, "step": 0.1, "round": false}]}}, "input_order": {"required": ["clip_vision", "init_image", "vae", "width", "height", "batch_size", "elevation", "azimuth", "elevation_batch_increment", "azimuth_batch_increment"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "StableZero123_Conditioning_Batched", "display_name": "StableZero123_Conditioning_Batched", "description": "", "python_module": "comfy_extras.nodes_stable3d", "category": "conditioning/3d_models", "output_node": false}, "SV3D_Conditioning": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "init_image": ["IMAGE"], "vae": ["VAE"], "width": ["INT", {"default": 576, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 576, "min": 16, "max": 16384, "step": 8}], "video_frames": ["INT", {"default": 21, "min": 1, "max": 4096}], "elevation": ["FLOAT", {"default": 0.0, "min": -90.0, "max": 90.0, "step": 0.1, "round": false}]}}, "input_order": {"required": ["clip_vision", "init_image", "vae", "width", "height", "video_frames", "elevation"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "SV3D_Conditioning", "display_name": "SV3D_Conditioning", "description": "", "python_module": "comfy_extras.nodes_stable3d", "category": "conditioning/3d_models", "output_node": false}, "SD_4XUpscale_Conditioning": {"input": {"required": {"images": ["IMAGE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "scale_ratio": ["FLOAT", {"default": 4.0, "min": 0.0, "max": 10.0, "step": 0.01}], "noise_augmentation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["images", "positive", "negative", "scale_ratio", "noise_augmentation"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "SD_4XUpscale_Conditioning", "display_name": "SD_4XUpscale_Conditioning", "description": "", "python_module": "comfy_extras.nodes_sdupscale", "category": "conditioning/upscale_diffusion", "output_node": false}, "PhotoMakerLoader": {"input": {"required": {"photomaker_model_name": [[]]}}, "input_order": {"required": ["photomaker_model_name"]}, "output": ["PHOTOMAKER"], "output_is_list": [false], "output_name": ["PHOTOMAKER"], "name": "PhotoMakerLoader", "display_name": "PhotoMakerLoader", "description": "", "python_module": "comfy_extras.nodes_photomaker", "category": "_for_testing/photomaker", "output_node": false}, "PhotoMakerEncode": {"input": {"required": {"photomaker": ["PHOTOMAKER"], "image": ["IMAGE"], "clip": ["CLIP"], "text": ["STRING", {"multiline": true, "dynamicPrompts": true, "default": "photograph of photomaker"}]}}, "input_order": {"required": ["photomaker", "image", "clip", "text"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "PhotoMakerEncode", "display_name": "PhotoMakerEncode", "description": "", "python_module": "comfy_extras.nodes_photomaker", "category": "_for_testing/photomaker", "output_node": false}, "CLIPTextEncodeControlnet": {"input": {"required": {"clip": ["CLIP"], "conditioning": ["CONDITIONING"], "text": ["STRING", {"multiline": true, "dynamicPrompts": true}]}}, "input_order": {"required": ["clip", "conditioning", "text"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeControlnet", "display_name": "CLIPTextEncodeControlnet", "description": "", "python_module": "comfy_extras.nodes_cond", "category": "_for_testing/conditioning", "output_node": false}, "Morphology": {"input": {"required": {"image": ["IMAGE"], "operation": [["erode", "dilate", "open", "close", "gradient", "bottom_hat", "top_hat"]], "kernel_size": ["INT", {"default": 3, "min": 3, "max": 999, "step": 1}]}}, "input_order": {"required": ["image", "operation", "kernel_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Morphology", "display_name": "ImageMorphology", "description": "", "python_module": "comfy_extras.nodes_morphology", "category": "image/postprocessing", "output_node": false}, "StableCascade_EmptyLatentImage": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 256, "max": 16384, "step": 8}], "height": ["INT", {"default": 1024, "min": 256, "max": 16384, "step": 8}], "compression": ["INT", {"default": 42, "min": 4, "max": 128, "step": 1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["width", "height", "compression", "batch_size"]}, "output": ["LATENT", "LATENT"], "output_is_list": [false, false], "output_name": ["stage_c", "stage_b"], "name": "StableCascade_EmptyLatentImage", "display_name": "StableCascade_EmptyLatentImage", "description": "", "python_module": "comfy_extras.nodes_stable_cascade", "category": "latent/stable_cascade", "output_node": false}, "StableCascade_StageB_Conditioning": {"input": {"required": {"conditioning": ["CONDITIONING"], "stage_c": ["LATENT"]}}, "input_order": {"required": ["conditioning", "stage_c"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "StableCascade_StageB_Conditioning", "display_name": "StableCascade_StageB_Conditioning", "description": "", "python_module": "comfy_extras.nodes_stable_cascade", "category": "conditioning/stable_cascade", "output_node": false}, "StableCascade_StageC_VAEEncode": {"input": {"required": {"image": ["IMAGE"], "vae": ["VAE"], "compression": ["INT", {"default": 42, "min": 4, "max": 128, "step": 1}]}}, "input_order": {"required": ["image", "vae", "compression"]}, "output": ["LATENT", "LATENT"], "output_is_list": [false, false], "output_name": ["stage_c", "stage_b"], "name": "StableCascade_StageC_VAEEncode", "display_name": "StableCascade_StageC_VAEEncode", "description": "", "python_module": "comfy_extras.nodes_stable_cascade", "category": "latent/stable_cascade", "output_node": false}, "StableCascade_SuperResolutionControlnet": {"input": {"required": {"image": ["IMAGE"], "vae": ["VAE"]}}, "input_order": {"required": ["image", "vae"]}, "output": ["IMAGE", "LATENT", "LATENT"], "output_is_list": [false, false, false], "output_name": ["controlnet_input", "stage_c", "stage_b"], "name": "StableCascade_SuperResolutionControlnet", "display_name": "StableCascade_SuperResolutionControlnet", "description": "", "python_module": "comfy_extras.nodes_stable_cascade", "category": "_for_testing/stable_cascade", "output_node": false, "experimental": true}, "DifferentialDiffusion": {"input": {"required": {"model": ["MODEL"]}}, "input_order": {"required": ["model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "DifferentialDiffusion", "display_name": "Differential Diffusion", "description": "", "python_module": "comfy_extras.nodes_differential_diffusion", "category": "_for_testing", "output_node": false}, "InstructPixToPixConditioning": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "pixels": ["IMAGE"]}}, "input_order": {"required": ["positive", "negative", "vae", "pixels"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "InstructPixToPixConditioning", "display_name": "InstructPixToPixConditioning", "description": "", "python_module": "comfy_extras.nodes_ip2p", "category": "conditioning/instructpix2pix", "output_node": false}, "ModelMergeSD1": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "time_embed.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "label_emb.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "out.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "time_embed.", "label_emb.", "input_blocks.0.", "input_blocks.1.", "input_blocks.2.", "input_blocks.3.", "input_blocks.4.", "input_blocks.5.", "input_blocks.6.", "input_blocks.7.", "input_blocks.8.", "input_blocks.9.", "input_blocks.10.", "input_blocks.11.", "middle_block.0.", "middle_block.1.", "middle_block.2.", "output_blocks.0.", "output_blocks.1.", "output_blocks.2.", "output_blocks.3.", "output_blocks.4.", "output_blocks.5.", "output_blocks.6.", "output_blocks.7.", "output_blocks.8.", "output_blocks.9.", "output_blocks.10.", "output_blocks.11.", "out."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeSD1", "display_name": "ModelMergeSD1", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeSD2": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "time_embed.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "label_emb.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "out.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "time_embed.", "label_emb.", "input_blocks.0.", "input_blocks.1.", "input_blocks.2.", "input_blocks.3.", "input_blocks.4.", "input_blocks.5.", "input_blocks.6.", "input_blocks.7.", "input_blocks.8.", "input_blocks.9.", "input_blocks.10.", "input_blocks.11.", "middle_block.0.", "middle_block.1.", "middle_block.2.", "output_blocks.0.", "output_blocks.1.", "output_blocks.2.", "output_blocks.3.", "output_blocks.4.", "output_blocks.5.", "output_blocks.6.", "output_blocks.7.", "output_blocks.8.", "output_blocks.9.", "output_blocks.10.", "output_blocks.11.", "out."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeSD2", "display_name": "ModelMergeSD2", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeSDXL": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "time_embed.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "label_emb.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.0": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.4": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.5": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.6": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.7": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.8": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.0": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.0": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.4": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.5": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.6": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.7": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.8": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "out.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "time_embed.", "label_emb.", "input_blocks.0", "input_blocks.1", "input_blocks.2", "input_blocks.3", "input_blocks.4", "input_blocks.5", "input_blocks.6", "input_blocks.7", "input_blocks.8", "middle_block.0", "middle_block.1", "middle_block.2", "output_blocks.0", "output_blocks.1", "output_blocks.2", "output_blocks.3", "output_blocks.4", "output_blocks.5", "output_blocks.6", "output_blocks.7", "output_blocks.8", "out."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeSDXL", "display_name": "ModelMergeSDXL", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeSD3_2B": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "pos_embed.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "x_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "context_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "y_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "final_layer.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "pos_embed.", "x_embedder.", "context_embedder.", "y_embedder.", "t_embedder.", "joint_blocks.0.", "joint_blocks.1.", "joint_blocks.2.", "joint_blocks.3.", "joint_blocks.4.", "joint_blocks.5.", "joint_blocks.6.", "joint_blocks.7.", "joint_blocks.8.", "joint_blocks.9.", "joint_blocks.10.", "joint_blocks.11.", "joint_blocks.12.", "joint_blocks.13.", "joint_blocks.14.", "joint_blocks.15.", "joint_blocks.16.", "joint_blocks.17.", "joint_blocks.18.", "joint_blocks.19.", "joint_blocks.20.", "joint_blocks.21.", "joint_blocks.22.", "joint_blocks.23.", "final_layer."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeSD3_2B", "display_name": "ModelMergeSD3_2B", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeFlux1": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "img_in.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "time_in.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "guidance_in": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "vector_in.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "txt_in.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.24.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.25.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.26.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.27.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.28.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.29.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.30.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.31.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.32.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.33.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.34.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.35.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.36.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.37.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "final_layer.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "img_in.", "time_in.", "guidance_in", "vector_in.", "txt_in.", "double_blocks.0.", "double_blocks.1.", "double_blocks.2.", "double_blocks.3.", "double_blocks.4.", "double_blocks.5.", "double_blocks.6.", "double_blocks.7.", "double_blocks.8.", "double_blocks.9.", "double_blocks.10.", "double_blocks.11.", "double_blocks.12.", "double_blocks.13.", "double_blocks.14.", "double_blocks.15.", "double_blocks.16.", "double_blocks.17.", "double_blocks.18.", "single_blocks.0.", "single_blocks.1.", "single_blocks.2.", "single_blocks.3.", "single_blocks.4.", "single_blocks.5.", "single_blocks.6.", "single_blocks.7.", "single_blocks.8.", "single_blocks.9.", "single_blocks.10.", "single_blocks.11.", "single_blocks.12.", "single_blocks.13.", "single_blocks.14.", "single_blocks.15.", "single_blocks.16.", "single_blocks.17.", "single_blocks.18.", "single_blocks.19.", "single_blocks.20.", "single_blocks.21.", "single_blocks.22.", "single_blocks.23.", "single_blocks.24.", "single_blocks.25.", "single_blocks.26.", "single_blocks.27.", "single_blocks.28.", "single_blocks.29.", "single_blocks.30.", "single_blocks.31.", "single_blocks.32.", "single_blocks.33.", "single_blocks.34.", "single_blocks.35.", "single_blocks.36.", "single_blocks.37.", "final_layer."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeFlux1", "display_name": "ModelMergeFlux1", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "PerturbedAttentionGuidance": {"input": {"required": {"model": ["MODEL"], "scale": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["model", "scale"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "PerturbedAttentionGuidance", "display_name": "PerturbedAttentionGuidance", "description": "", "python_module": "comfy_extras.nodes_pag", "category": "model_patches/unet", "output_node": false}, "AlignYourStepsScheduler": {"input": {"required": {"model_type": [["SD1", "SDXL", "SVD"]], "steps": ["INT", {"default": 10, "min": 10, "max": 10000}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model_type", "steps", "denoise"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "AlignYourStepsScheduler", "display_name": "AlignYourStepsScheduler", "description": "", "python_module": "comfy_extras.nodes_align_your_steps", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "UNetSelfAttentionMultiply": {"input": {"required": {"model": ["MODEL"], "q": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "k": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "v": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "out": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "q", "k", "v", "out"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "UNetSelfAttentionMultiply", "display_name": "UNetSelfAttentionMultiply", "description": "", "python_module": "comfy_extras.nodes_attention_multiply", "category": "_for_testing/attention_experiments", "output_node": false}, "UNetCrossAttentionMultiply": {"input": {"required": {"model": ["MODEL"], "q": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "k": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "v": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "out": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "q", "k", "v", "out"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "UNetCrossAttentionMultiply", "display_name": "UNetCrossAttentionMultiply", "description": "", "python_module": "comfy_extras.nodes_attention_multiply", "category": "_for_testing/attention_experiments", "output_node": false}, "CLIPAttentionMultiply": {"input": {"required": {"clip": ["CLIP"], "q": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "k": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "v": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "out": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["clip", "q", "k", "v", "out"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIPAttentionMultiply", "display_name": "CLIPAttentionMultiply", "description": "", "python_module": "comfy_extras.nodes_attention_multiply", "category": "_for_testing/attention_experiments", "output_node": false}, "UNetTemporalAttentionMultiply": {"input": {"required": {"model": ["MODEL"], "self_structural": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "self_temporal": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "cross_structural": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "cross_temporal": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "self_structural", "self_temporal", "cross_structural", "cross_temporal"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "UNetTemporalAttentionMultiply", "display_name": "UNetTemporalAttentionMultiply", "description": "", "python_module": "comfy_extras.nodes_attention_multiply", "category": "_for_testing/attention_experiments", "output_node": false}, "SamplerLCMUpscale": {"input": {"required": {"scale_ratio": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 20.0, "step": 0.01}], "scale_steps": ["INT", {"default": -1, "min": -1, "max": 1000, "step": 1}], "upscale_method": [["bislerp", "nearest-exact", "bilinear", "area", "bicubic"]]}}, "input_order": {"required": ["scale_ratio", "scale_steps", "upscale_method"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerLCMUpscale", "display_name": "SamplerLCMUpscale", "description": "", "python_module": "comfy_extras.nodes_advanced_samplers", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerEulerCFGpp": {"input": {"required": {"version": [["regular", "alternative"]]}}, "input_order": {"required": ["version"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerEulerCFGpp", "display_name": "SamplerEulerCFG++", "description": "", "python_module": "comfy_extras.nodes_advanced_samplers", "category": "_for_testing", "output_node": false}, "WebcamCapture": {"input": {"required": {"image": ["WEBCAM", {}], "width": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "height": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "capture_on_queue": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "width", "height", "capture_on_queue"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "WebcamCapture", "display_name": "Webcam Capture", "description": "", "python_module": "comfy_extras.nodes_webcam", "category": "image", "output_node": false}, "EmptyLatentAudio": {"input": {"required": {"seconds": ["FLOAT", {"default": 47.6, "min": 1.0, "max": 1000.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "tooltip": "The number of latent images in the batch."}]}}, "input_order": {"required": ["seconds", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptyLatentAudio", "display_name": "EmptyLatentAudio", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "latent/audio", "output_node": false}, "VAEEncodeAudio": {"input": {"required": {"audio": ["AUDIO"], "vae": ["VAE"]}}, "input_order": {"required": ["audio", "vae"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "VAEEncodeAudio", "display_name": "VAEEncodeAudio", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "latent/audio", "output_node": false}, "VAEDecodeAudio": {"input": {"required": {"samples": ["LATENT"], "vae": ["VAE"]}}, "input_order": {"required": ["samples", "vae"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["AUDIO"], "name": "VAEDecodeAudio", "display_name": "VAEDecodeAudio", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "latent/audio", "output_node": false}, "SaveAudio": {"input": {"required": {"audio": ["AUDIO"], "filename_prefix": ["STRING", {"default": "audio/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["audio", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveAudio", "display_name": "SaveAudio", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "audio", "output_node": true}, "LoadAudio": {"input": {"required": {"audio": [["AnimateDiff_00037.mp4", "Playbook__00314.mp4"], {"audio_upload": true}]}}, "input_order": {"required": ["audio"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["AUDIO"], "name": "LoadAudio", "display_name": "LoadAudio", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "audio", "output_node": false}, "PreviewAudio": {"input": {"required": {"audio": ["AUDIO"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["audio"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "PreviewAudio", "display_name": "PreviewAudio", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "audio", "output_node": true}, "TripleCLIPLoader": {"input": {"required": {"clip_name1": [["clip_l.safetensors", "t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "clip_name2": [["clip_l.safetensors", "t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "clip_name3": [["clip_l.safetensors", "t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]]}}, "input_order": {"required": ["clip_name1", "clip_name2", "clip_name3"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "TripleCLIPLoader", "display_name": "TripleCLIPLoader", "description": "", "python_module": "comfy_extras.nodes_sd3", "category": "advanced/loaders", "output_node": false}, "EmptySD3LatentImage": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 16}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["width", "height", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptySD3LatentImage", "display_name": "EmptySD3LatentImage", "description": "", "python_module": "comfy_extras.nodes_sd3", "category": "latent/sd3", "output_node": false}, "CLIPTextEncodeSD3": {"input": {"required": {"clip": ["CLIP"], "clip_l": ["STRING", {"multiline": true, "dynamicPrompts": true}], "clip_g": ["STRING", {"multiline": true, "dynamicPrompts": true}], "t5xxl": ["STRING", {"multiline": true, "dynamicPrompts": true}], "empty_padding": [["none", "empty_prompt"]]}}, "input_order": {"required": ["clip", "clip_l", "clip_g", "t5xxl", "empty_padding"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeSD3", "display_name": "CLIPTextEncodeSD3", "description": "", "python_module": "comfy_extras.nodes_sd3", "category": "advanced/conditioning", "output_node": false}, "ControlNetApplySD3": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "control_net": ["CONTROL_NET"], "vae": ["VAE"], "image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["positive", "negative", "control_net", "vae", "image", "strength", "start_percent", "end_percent"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "ControlNetApplySD3", "display_name": "Apply Controlnet with VAE", "description": "", "python_module": "comfy_extras.nodes_sd3", "category": "conditioning/controlnet", "output_node": false, "deprecated": true}, "GITSScheduler": {"input": {"required": {"coeff": ["FLOAT", {"default": 1.2, "min": 0.8, "max": 1.5, "step": 0.05}], "steps": ["INT", {"default": 10, "min": 2, "max": 1000}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["coeff", "steps", "denoise"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "GITSScheduler", "display_name": "GITSScheduler", "description": "", "python_module": "comfy_extras.nodes_gits", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "SetUnionControlNetType": {"input": {"required": {"control_net": ["CONTROL_NET"], "type": [["auto", "openpose", "depth", "hed/pidi/scribble/ted", "canny/lineart/anime_lineart/mlsd", "normal", "segment", "tile", "repaint"]]}}, "input_order": {"required": ["control_net", "type"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "SetUnionControlNetType", "display_name": "SetUnionControlNetType", "description": "", "python_module": "comfy_extras.nodes_controlnet", "category": "conditioning/controlnet", "output_node": false}, "ControlNetInpaintingAliMamaApply": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "control_net": ["CONTROL_NET"], "vae": ["VAE"], "image": ["IMAGE"], "mask": ["MASK"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["positive", "negative", "control_net", "vae", "image", "mask", "strength", "start_percent", "end_percent"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "ControlNetInpaintingAliMamaApply", "display_name": "ControlNetInpaintingAliMamaApply", "description": "", "python_module": "comfy_extras.nodes_controlnet", "category": "conditioning/controlnet", "output_node": false}, "CLIPTextEncodeHunyuanDiT": {"input": {"required": {"clip": ["CLIP"], "bert": ["STRING", {"multiline": true, "dynamicPrompts": true}], "mt5xl": ["STRING", {"multiline": true, "dynamicPrompts": true}]}}, "input_order": {"required": ["clip", "bert", "mt5xl"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeHunyuanDiT", "display_name": "CLIPTextEncodeHunyuanDiT", "description": "", "python_module": "comfy_extras.nodes_hunyuan", "category": "advanced/conditioning", "output_node": false}, "CLIPTextEncodeFlux": {"input": {"required": {"clip": ["CLIP"], "clip_l": ["STRING", {"multiline": true, "dynamicPrompts": true}], "t5xxl": ["STRING", {"multiline": true, "dynamicPrompts": true}], "guidance": ["FLOAT", {"default": 3.5, "min": 0.0, "max": 100.0, "step": 0.1}]}}, "input_order": {"required": ["clip", "clip_l", "t5xxl", "guidance"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeFlux", "display_name": "CLIPTextEncodeFlux", "description": "", "python_module": "comfy_extras.nodes_flux", "category": "advanced/conditioning/flux", "output_node": false}, "FluxGuidance": {"input": {"required": {"conditioning": ["CONDITIONING"], "guidance": ["FLOAT", {"default": 3.5, "min": 0.0, "max": 100.0, "step": 0.1}]}}, "input_order": {"required": ["conditioning", "guidance"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "FluxGuidance", "display_name": "FluxGuidance", "description": "", "python_module": "comfy_extras.nodes_flux", "category": "advanced/conditioning/flux", "output_node": false}, "LoraSave": {"input": {"required": {"filename_prefix": ["STRING", {"default": "loras/ComfyUI_extracted_lora"}], "rank": ["INT", {"default": 8, "min": 1, "max": 4096, "step": 1}], "lora_type": [["standard", "full_diff"]], "bias_diff": ["BOOLEAN", {"default": true}]}, "optional": {"model_diff": ["MODEL"], "text_encoder_diff": ["CLIP"]}}, "input_order": {"required": ["filename_prefix", "rank", "lora_type", "bias_diff"], "optional": ["model_diff", "text_encoder_diff"]}, "output": [], "output_is_list": [], "output_name": [], "name": "LoraSave", "display_name": "LoraSave", "description": "", "python_module": "comfy_extras.nodes_lora_extract", "category": "_for_testing", "output_node": true}, "TorchCompileModel": {"input": {"required": {"model": ["MODEL"], "backend": [["inductor", "cudagraphs"]]}}, "input_order": {"required": ["model", "backend"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "TorchCompileModel", "display_name": "TorchCompileModel", "description": "", "python_module": "comfy_extras.nodes_torch_compile", "category": "_for_testing", "output_node": false, "experimental": true}, "BlackAndWhite": {"input": {"required": {"image": ["IMAGE"], "red": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "green": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "blue": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "cyan": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "magenta": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "yellow": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}]}}, "input_order": {"required": ["image", "red", "green", "blue", "cyan", "magenta", "yellow"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BlackAndWhite", "display_name": "Black and White", "description": "", "python_module": "custom_nodes.virtuoso-nodes", "category": "Virtuoso/Adjustment", "output_node": false}, "BlendIf": {"input": {"required": {"top_layer": ["IMAGE"], "bottom_layer": ["IMAGE"], "blend_if_layer": [["top", "bottom"]], "blend_if_channel": [["gray", "red", "green", "blue"]], "start_rise": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "end_rise": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "start_fall": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "end_fall": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "opacity": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "match_size": [["crop", "stretch"]], "invert_mask": [["yes", "no"]]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["top_layer", "bottom_layer", "blend_if_layer", "blend_if_channel", "start_rise", "end_rise", "start_fall", "end_fall", "opacity", "match_size", "invert_mask"], "optional": ["mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "BlendIf", "display_name": "Blend If", "description": "", "python_module": "custom_nodes.virtuoso-nodes", "category": "Virtuoso", "output_node": false}, "BlendModes": {"input": {"required": {"backdrop": ["IMAGE"], "source": ["IMAGE"], "blend_mode": [["normal", "dissolve", "darken", "multiply", "color burn", "linear burn", "darker color", "lighten", "screen", "color dodge", "linear dodge (add)", "lighter color", "overlay", "soft light", "hard light", "vivid light", "linear light", "pin light", "hard mix", "difference", "exclusion", "subtract", "divide", "hue", "saturation", "color", "luminosity", "grain extract", "grain merge"]], "opacity": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "source_adjust": [["crop", "stretch"]], "invert_mask": [["yes", "no"]]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["backdrop", "source", "blend_mode", "opacity", "source_adjust", "invert_mask"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BlendModes", "display_name": "Blend Modes", "description": "", "python_module": "custom_nodes.virtuoso-nodes", "category": "Virtuoso", "output_node": false}, "ColorBalance": {"input": {"required": {"image": ["IMAGE"], "lows_cyan_red": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "lows_magenta_green": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "lows_yellow_blue": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "mids_cyan_red": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "mids_magenta_green": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "mids_yellow_blue": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "highs_cyan_red": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "highs_magenta_green": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "highs_yellow_blue": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "preserve_luminosity": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "lows_cyan_red", "lows_magenta_green", "lows_yellow_blue", "mids_cyan_red", "mids_magenta_green", "mids_yellow_blue", "highs_cyan_red", "highs_magenta_green", "highs_yellow_blue", "preserve_luminosity"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ColorBalance", "display_name": "Color Balance", "description": "", "python_module": "custom_nodes.virtuoso-nodes", "category": "Virtuoso/Adjustment", "output_node": false}, "ColorBalanceAdvanced": {"input": {"required": {"image": ["IMAGE"], "brightness_target": ["FLOAT", {"default": 0.5, "min": 0.001, "max": 0.999, "step": 0.001, "round": 0.001, "display": "number"}], "cyan_red": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "magenta_green": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "yellow_blue": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "preserve_luminosity": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "brightness_target", "cyan_red", "magenta_green", "yellow_blue", "preserve_luminosity"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ColorBalanceAdvanced", "display_name": "Color Balance Advanced", "description": "", "python_module": "custom_nodes.virtuoso-nodes", "category": "Virtuoso/Adjustment", "output_node": false}, "HueSat": {"input": {"required": {"image": ["IMAGE"], "hue": [["red", "yellow", "green", "cyan", "blue", "magenta"]], "hue_width": [["normal", "narrow", "wide"]], "feather": [["normal", "none", "wide"]], "hue_offset": ["FLOAT", {"default": 0, "min": -180.0, "max": 180.0, "step": 0.1, "round": 0.01, "display": "number"}], "sat_offset": ["FLOAT", {"default": 0, "min": -100, "max": 100, "step": 0.1, "round": 0.01, "display": "number"}], "lightness_offset": ["FLOAT", {"default": 0, "min": -100.0, "max": 100.0, "step": 0.1, "round": 0.01, "display": "number"}]}}, "input_order": {"required": ["image", "hue", "hue_width", "feather", "hue_offset", "sat_offset", "lightness_offset"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "HueSat", "display_name": "Hue/Saturation", "description": "", "python_module": "custom_nodes.virtuoso-nodes", "category": "Virtuoso/Adjustment", "output_node": false}, "HueSatAdvanced": {"input": {"required": {"image": ["IMAGE"], "hue_low": ["FLOAT", {"default": 0, "min": 0, "max": 360.0, "step": 1, "round": 0.1, "display": "number"}], "hue_low_feather": ["FLOAT", {"default": 0, "min": 0, "max": 180, "step": 1, "round": 0.1, "display": "number"}], "hue_high": ["FLOAT", {"default": 360, "min": 0, "max": 360.0, "step": 1, "round": 0.1, "display": "number"}], "hue_high_feather": ["FLOAT", {"default": 0, "min": 0, "max": 180, "step": 1, "round": 0.1, "display": "number"}], "hue_offset": ["FLOAT", {"default": 0, "min": -180.0, "max": 180.0, "step": 0.1, "round": 0.01, "display": "number"}], "sat_offset": ["FLOAT", {"default": 0, "min": -100, "max": 100, "step": 0.1, "round": 0.01, "display": "number"}], "lightness_offset": ["FLOAT", {"default": 0, "min": -100.0, "max": 100.0, "step": 0.1, "round": 0.01, "display": "number"}]}}, "input_order": {"required": ["image", "hue_low", "hue_low_feather", "hue_high", "hue_high_feather", "hue_offset", "sat_offset", "lightness_offset"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "HueSatAdvanced", "display_name": "Hue/Saturation Advanced", "description": "", "python_module": "custom_nodes.virtuoso-nodes", "category": "Virtuoso/Adjustment", "output_node": false}, "Levels": {"input": {"required": {"image": ["IMAGE"], "channel": [["RGB", "red", "green", "blue"]], "input_black_point": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 0.98, "step": 0.01, "round": 0.001, "display": "number"}], "input_gamma": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 9.99, "step": 0.01, "round": 0.001, "display": "number"}], "input_white_point": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "output_black_point": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}], "output_white_point": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "number"}]}}, "input_order": {"required": ["image", "channel", "input_black_point", "input_gamma", "input_white_point", "output_black_point", "output_white_point"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Levels", "display_name": "Levels", "description": "", "python_module": "custom_nodes.virtuoso-nodes", "category": "Virtuoso/Adjustment", "output_node": false}, "LensBlur": {"input": {"required": {"image": ["IMAGE"], "radius": ["INT", {"default": 5, "min": 1, "max": 4096, "step": 1, "round": 1, "display": "number"}], "components": ["INT", {"default": 4, "min": 1, "max": 6, "step": 1, "round": 1, "display": "number"}], "exposure_gamma": ["FLOAT", {"default": 2, "min": -100, "max": 100, "step": 0.01, "round": 0.01, "display": "number"}]}}, "input_order": {"required": ["image", "radius", "components", "exposure_gamma"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "LensBlur", "display_name": "Lens Blur", "description": "", "python_module": "custom_nodes.virtuoso-nodes", "category": "Virtuoso/Blur", "output_node": false}, "MotionBlur": {"input": {"required": {"image": ["IMAGE"], "size": ["INT", {"default": 100.0, "min": 0.0, "max": 4096.0, "step": 0.1, "round": 0.01, "display": "number"}], "angle": ["INT", {"default": 0.0, "min": 0.0, "max": 360.0, "step": 0.1, "round": 0.01, "display": "number"}]}}, "input_order": {"required": ["image", "size", "angle"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "MotionBlur", "display_name": "Motion Blur", "description": "", "python_module": "custom_nodes.virtuoso-nodes", "category": "Virtuoso/Blur", "output_node": false}, "GaussianBlur": {"input": {"required": {"image": ["IMAGE"], "amount": ["INT", {"default": 100, "min": 1, "max": 100, "step": 1, "round": 1, "display": "number"}]}}, "input_order": {"required": ["image", "amount"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "GaussianBlur", "display_name": "Gaussian Blur", "description": "", "python_module": "custom_nodes.virtuoso-nodes", "category": "Virtuoso/Blur", "output_node": false}, "LensBlurDepth": {"input": {"required": {"image": ["IMAGE"], "depth_map": ["IMAGE"], "components": ["INT", {"default": 4, "min": 1, "max": 6, "step": 1, "round": 1, "display": "number"}], "exposure_gamma": ["FLOAT", {"default": 2, "min": -100, "max": 100, "step": 0.01, "round": 0.01, "display": "number"}], "num_layers": ["INT", {"default": 10, "min": 1, "max": 100, "step": 1, "round": 1, "display": "number"}], "min_blur": ["INT", {"default": 1, "min": 1, "max": 100, "step": 1, "round": 1, "display": "number"}], "max_blur": ["INT", {"default": 100, "min": 1, "max": 100, "step": 1, "round": 1, "display": "number"}]}}, "input_order": {"required": ["image", "depth_map", "components", "exposure_gamma", "num_layers", "min_blur", "max_blur"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "LensBlurDepth", "display_name": "Lens Blur with Depth Map", "description": "", "python_module": "custom_nodes.virtuoso-nodes", "category": "Virtuoso/Blur", "output_node": false}, "MotionBlurDepth": {"input": {"required": {"image": ["IMAGE"], "depth_map": ["IMAGE"], "angle": ["INT", {"default": 0.0, "min": 0.0, "max": 360.0, "step": 0.1, "round": 0.01, "display": "number"}], "num_layers": ["INT", {"default": 10, "min": 1, "max": 100, "step": 1, "round": 1, "display": "number"}], "min_blur": ["INT", {"default": 1, "min": 1, "max": 100, "step": 1, "round": 1, "display": "number"}], "max_blur": ["INT", {"default": 100, "min": 1, "max": 100, "step": 1, "round": 1, "display": "number"}]}}, "input_order": {"required": ["image", "depth_map", "angle", "num_layers", "min_blur", "max_blur"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "MotionBlurDepth", "display_name": "Motion Blur with Depth Map", "description": "", "python_module": "custom_nodes.virtuoso-nodes", "category": "Virtuoso/Blur", "output_node": false}, "GaussianBlurDepth": {"input": {"required": {"image": ["IMAGE"], "depth_map": ["IMAGE"], "sigma": ["INT", {"default": 5, "min": 1, "max": 100, "step": 1, "round": 1, "display": "number"}], "num_layers": ["INT", {"default": 10, "min": 1, "max": 100, "step": 1, "round": 1, "display": "number"}], "min_blur": ["INT", {"default": 1, "min": 1, "max": 100, "step": 1, "round": 1, "display": "number"}], "max_blur": ["INT", {"default": 100, "min": 1, "max": 100, "step": 1, "round": 1, "display": "number"}]}}, "input_order": {"required": ["image", "depth_map", "sigma", "num_layers", "min_blur", "max_blur"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "GaussianBlurDepth", "display_name": "Gaussian Blur with Depth Map", "description": "", "python_module": "custom_nodes.virtuoso-nodes", "category": "Virtuoso/Blur", "output_node": false}, "MergeRGB": {"input": {"required": {"red": ["IMAGE"], "green": ["IMAGE"], "blue": ["IMAGE"]}}, "input_order": {"required": ["red", "green", "blue"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "MergeRGB", "display_name": "Merge RGB", "description": "", "python_module": "custom_nodes.virtuoso-nodes", "category": "Virtuoso/Channels", "output_node": false}, "SplitRGB": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["red", "green", "blue"], "name": "SplitRGB", "display_name": "Split RGB", "description": "", "python_module": "custom_nodes.virtuoso-nodes", "category": "Virtuoso/Channels", "output_node": false}, "SelectiveColor": {"input": {"required": {"image": ["IMAGE"], "color_range": [["reds", "yellows", "greens", "cyans", "blues", "magentas", "whites", "neutrals", "blacks"]], "cyan": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.01, "display": "number"}], "magenta": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.01, "display": "number"}], "yellow": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.01, "display": "number"}], "black": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.01, "round": 0.01, "display": "number"}], "method": [["absolute", "relative"]]}}, "input_order": {"required": ["image", "color_range", "cyan", "magenta", "yellow", "black", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "SelectiveColor", "display_name": "Selective Color", "description": "", "python_module": "custom_nodes.virtuoso-nodes", "category": "Virtuoso/Adjustment", "output_node": false}, "SolidColor": {"input": {"required": {"color": [["black", "silver", "gray", "white", "maroon", "red", "purple", "fuchsia", "green", "lime", "olive", "yellow", "navy", "blue", "teal", "aqua"]], "height": ["INT", {"default": 1024, "min": 1, "max": 4096, "step": 1, "round": 1, "display": "number"}], "width": ["INT", {"default": 1024, "min": 1, "max": 4096, "step": 1, "round": 1, "display": "number"}]}}, "input_order": {"required": ["color", "height", "width"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["solid color image"], "name": "SolidColor", "display_name": "Solid Color", "description": "", "python_module": "custom_nodes.virtuoso-nodes", "category": "Virtuoso/Solid Color", "output_node": false}, "SolidColorRGB": {"input": {"required": {"red": ["FLOAT", {"default": 0, "min": 0, "max": 255.0, "step": 1, "round": 0.1, "display": "number"}], "green": ["FLOAT", {"default": 0, "min": 0, "max": 255.0, "step": 1, "round": 0.1, "display": "number"}], "blue": ["FLOAT", {"default": 0, "min": 0, "max": 255.0, "step": 1, "round": 0.1, "display": "number"}], "height": ["INT", {"default": 1024, "min": 1, "max": 4096, "step": 1, "round": 1, "display": "number"}], "width": ["INT", {"default": 1024, "min": 1, "max": 4096, "step": 1, "round": 1, "display": "number"}]}, "optional": {"hex": ["STRING", {"default": ""}]}}, "input_order": {"required": ["red", "green", "blue", "height", "width"], "optional": ["hex"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["solid color image"], "name": "SolidColorRGB", "display_name": "Solid Color RGB", "description": "", "python_module": "custom_nodes.virtuoso-nodes", "category": "Virtuoso/Solid Color", "output_node": false}, "SolidColorHSV": {"input": {"required": {"hue": ["FLOAT", {"default": 0, "min": 0, "max": 360.0, "step": 1, "round": 0.1, "display": "number"}], "saturation": ["FLOAT", {"default": 50, "min": 0, "max": 100.0, "step": 1, "round": 0.1, "display": "number"}], "value": ["FLOAT", {"default": 100, "min": 0, "max": 100.0, "step": 1, "round": 0.1, "display": "number"}], "height": ["INT", {"default": 1024, "min": 1, "max": 4096, "step": 1, "round": 1, "display": "number"}], "width": ["INT", {"default": 1024, "min": 1, "max": 4096, "step": 1, "round": 1, "display": "number"}]}}, "input_order": {"required": ["hue", "saturation", "value", "height", "width"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["solid color image"], "name": "SolidColorHSV", "display_name": "Solid Color HSV", "description": "", "python_module": "custom_nodes.virtuoso-nodes", "category": "Virtuoso/Solid Color", "output_node": false}, "Playbook Depth": {"input": {"required": {"api_key": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["api_key"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["Image"], "name": "Playbook Depth", "display_name": "Playbook Depth Render Pass", "description": "", "python_module": "custom_nodes.playbook-nodes", "category": "Playbook 3D", "output_node": false}, "Playbook Outline": {"input": {"required": {"api_key": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["api_key"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["Image"], "name": "Playbook Outline", "display_name": "Playbook Outline Render Pass", "description": "", "python_module": "custom_nodes.playbook-nodes", "category": "Playbook 3D", "output_node": false}, "Playbook Mask": {"input": {"required": {"api_key": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["api_key"]}, "output": ["IMAGE", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["Image", "Color 1", "Color 2", "Color 3", "Color 4", "Color 5", "Color 6", "Color 7", "Color 8"], "name": "Playbook Mask", "display_name": "Playbook Mask Render Pass", "description": "", "python_module": "custom_nodes.playbook-nodes", "category": "Playbook 3D", "output_node": false}, "Playbook Beauty": {"input": {"required": {"api_key": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["api_key"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["Image"], "name": "Playbook Beauty", "display_name": "Playbook Beauty Render Pass", "description": "", "python_module": "custom_nodes.playbook-nodes", "category": "Playbook 3D", "output_node": false}, "Playbook Render Result": {"input": {"required": {"image": ["IMAGE"], "api_key": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["image", "api_key"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Playbook Render Result", "display_name": "Playbook Render Result", "description": "", "python_module": "custom_nodes.playbook-nodes", "category": "Playbook 3D", "output_node": false}, "Playbook Boolean": {"input": {"required": {"name": ["STRING", {"multiline": false, "default": "Playbook Boolean ID"}], "playbook_bool": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["name", "playbook_bool"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["Boolean"], "name": "Playbook Boolean", "display_name": "Playbook Boolean (External)", "description": "", "python_module": "custom_nodes.playbook-nodes", "category": "Playbook 3D", "output_node": false}, "Playbook Float": {"input": {"required": {"name": ["STRING", {"multiline": false, "default": "Playbook Float ID"}]}, "optional": {"playbook_float": ["FLOAT", {"multiline": true, "display": "number", "min": -2147483647, "max": 2147483647, "default": 0, "step": 0.01}]}}, "input_order": {"required": ["name"], "optional": ["playbook_float"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["Float"], "name": "Playbook Float", "display_name": "Playbook Float (External)", "description": "", "python_module": "custom_nodes.playbook-nodes", "category": "Playbook 3D", "output_node": false}, "Playbook Number": {"input": {"required": {"name": ["STRING", {"multiline": false, "default": "Playbook Number ID"}]}, "optional": {"playbook_number": ["INT", {"multiline": true, "display": "number", "min": -2147483647, "max": 2147483647, "default": 0}]}}, "input_order": {"required": ["name"], "optional": ["playbook_number"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["Int"], "name": "Playbook Number", "display_name": "Playbook Number (External)", "description": "", "python_module": "custom_nodes.playbook-nodes", "category": "Playbook 3D", "output_node": false}, "Playbook Text": {"input": {"required": {"name": ["STRING", {"multiline": false, "default": "Playbook Text ID"}]}, "optional": {"text": ["STRING", {"multiline": true}], "trigger_words": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["name"], "optional": ["text", "trigger_words"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["Text", "Trigger Words"], "name": "Playbook Text", "display_name": "Playbook Text (External)", "description": "", "python_module": "custom_nodes.playbook-nodes", "category": "Playbook 3D", "output_node": false}, "Playbook Image": {"input": {"required": {"name": ["STRING", {"multiline": false}]}, "optional": {"playbook_image": ["IMAGE"]}}, "input_order": {"required": ["name"], "optional": ["playbook_image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["Image"], "name": "Playbook Image", "display_name": "Playbook Image (External)", "description": "", "python_module": "custom_nodes.playbook-nodes", "category": "Playbook 3D", "output_node": false}, "DitCheckpointLoader": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "model": [["XL/2", "XL/4", "XL/8", "L/2", "L/4", "L/8", "B/2", "B/4", "B/8", "S/2", "S/4", "S/8"]], "image_size": [[256, 512]]}}, "input_order": {"required": ["ckpt_name", "model", "image_size"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "DitCheckpointLoader", "display_name": "DitCheckpointLoader", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/DiT", "output_node": false}, "DiTCondLabelSelect": {"input": {"required": {"model": ["MODEL"], "label_name": [["tench, Tinca tinca", "goldfish, Carassius auratus", "great white shark, white shark, man-eater, man-eating shark, Carcharodon carcharias", "tiger shark, Galeocerdo cuvieri", "hammerhead, hammerhead shark", "electric ray, crampfish, numbfish, torpedo", "stingray", "cock", "hen", "ostrich, Struthio camelus", "brambling, Fringilla montifringilla", "goldfinch, Carduelis carduelis", "house finch, linnet, Carpodacus mexicanus", "junco, snowbird", "indigo bunting, indigo finch, indigo bird, Passerina cyanea", "robin, American robin, Turdus migratorius", "bulbul", "jay", "magpie", "chickadee", "water ouzel, dipper", "kite", "bald eagle, American eagle, Haliaeetus leucocephalus", "vulture", "great grey owl, great gray owl, Strix nebulosa", "European fire salamander, Salamandra salamandra", "common newt, Triturus vulgaris", "eft", "spotted salamander, Ambystoma maculatum", "axolotl, mud puppy, Ambystoma mexicanum", "bullfrog, Rana catesbeiana", "tree frog, tree-frog", "tailed frog, bell toad, ribbed toad, tailed toad, Ascaphus trui", "loggerhead, loggerhead turtle, Caretta caretta", "leatherback turtle, leatherback, leathery turtle, Dermochelys coriacea", "mud turtle", "terrapin", "box turtle, box tortoise", "banded gecko", "common iguana, iguana, Iguana iguana", "American chameleon, anole, Anolis carolinensis", "whiptail, whiptail lizard", "agama", "frilled lizard, Chlamydosaurus kingi", "alligator lizard", "Gila monster, Heloderma suspectum", "green lizard, Lacerta viridis", "African chameleon, Chamaeleo chamaeleon", "Komodo dragon, Komodo lizard, dragon lizard, giant lizard, Varanus komodoensis", "African crocodile, Nile crocodile, Crocodylus niloticus", "American alligator, Alligator mississipiensis", "triceratops", "thunder snake, worm snake, Carphophis amoenus", "ringneck snake, ring-necked snake, ring snake", "hognose snake, puff adder, sand viper", "green snake, grass snake", "king snake, kingsnake", "garter snake, grass snake", "water snake", "vine snake", "night snake, Hypsiglena torquata", "boa constrictor, Constrictor constrictor", "rock python, rock snake, Python sebae", "Indian cobra, Naja naja", "green mamba", "sea snake", "horned viper, cerastes, sand viper, horned asp, Cerastes cornutus", "diamondback, diamondback rattlesnake, Crotalus adamanteus", "sidewinder, horned rattlesnake, Crotalus cerastes", "trilobite", "harvestman, daddy longlegs, Phalangium opilio", "scorpion", "black and gold garden spider, Argiope aurantia", "barn spider, Araneus cavaticus", "garden spider, Aranea diademata", "black widow, Latrodectus mactans", "tarantula", "wolf spider, hunting spider", "tick", "centipede", "black grouse", "ptarmigan", "ruffed grouse, partridge, Bonasa umbellus", "prairie chicken, prairie grouse, prairie fowl", "peacock", "quail", "partridge", "African grey, African gray, Psittacus erithacus", "macaw", "sulphur-crested cockatoo, Kakatoe galerita, Cacatua galerita", "lorikeet", "coucal", "bee eater", "hornbill", "hummingbird", "jacamar", "toucan", "drake", "red-breasted merganser, Mergus serrator", "goose", "black swan, Cygnus atratus", "tusker", "echidna, spiny anteater, anteater", "platypus, duckbill, duckbilled platypus, duck-billed platypus, Ornithorhynchus anatinus", "wallaby, brush kangaroo", "koala, koala bear, kangaroo bear, native bear, Phascolarctos cinereus", "wombat", "jellyfish", "sea anemone, anemone", "brain coral", "flatworm, platyhelminth", "nematode, nematode worm, roundworm", "conch", "snail", "slug", "sea slug, nudibranch", "chiton, coat-of-mail shell, sea cradle, polyplacophore", "chambered nautilus, pearly nautilus, nautilus", "Dungeness crab, Cancer magister", "rock crab, Cancer irroratus", "fiddler crab", "king crab, Alaska crab, Alaskan king crab, Alaska king crab, Paralithodes camtschatica", "American lobster, Northern lobster, Maine lobster, Homarus americanus", "spiny lobster, langouste, rock lobster, crawfish, crayfish, sea crawfish", "crayfish, crawfish, crawdad, crawdaddy", "hermit crab", "isopod", "white stork, Ciconia ciconia", "black stork, Ciconia nigra", "spoonbill", "flamingo", "little blue heron, Egretta caerulea", "American egret, great white heron, Egretta albus", "bittern", "crane", "limpkin, Aramus pictus", "European gallinule, Porphyrio porphyrio", "American coot, marsh hen, mud hen, water hen, Fulica americana", "bustard", "ruddy turnstone, Arenaria interpres", "red-backed sandpiper, dunlin, Erolia alpina", "redshank, Tringa totanus", "dowitcher", "oystercatcher, oyster catcher", "pelican", "king penguin, Aptenodytes patagonica", "albatross, mollymawk", "grey whale, gray whale, devilfish, Eschrichtius gibbosus, Eschrichtius robustus", "killer whale, killer, orca, grampus, sea wolf, Orcinus orca", "dugong, Dugong dugon", "sea lion", "Chihuahua", "Japanese spaniel", "Maltese dog, Maltese terrier, Maltese", "Pekinese, Pekingese, Peke", "Shih-Tzu", "Blenheim spaniel", "papillon", "toy terrier", "Rhodesian ridgeback", "Afghan hound, Afghan", "basset, basset hound", "beagle", "bloodhound, sleuthhound", "bluetick", "black-and-tan coonhound", "Walker hound, Walker foxhound", "English foxhound", "redbone", "borzoi, Russian wolfhound", "Irish wolfhound", "Italian greyhound", "whippet", "Ibizan hound, Ibizan Podenco", "Norwegian elkhound, elkhound", "otterhound, otter hound", "Saluki, gazelle hound", "Scottish deerhound, deerhound", "Weimaraner", "Staffordshire bullterrier, Staffordshire bull terrier", "American Staffordshire terrier, Staffordshire terrier, American pit bull terrier, pit bull terrier", "Bedlington terrier", "Border terrier", "Kerry blue terrier", "Irish terrier", "Norfolk terrier", "Norwich terrier", "Yorkshire terrier", "wire-haired fox terrier", "Lakeland terrier", "Sealyham terrier, Sealyham", "Airedale, Airedale terrier", "cairn, cairn terrier", "Australian terrier", "Dandie Dinmont, Dandie Dinmont terrier", "Boston bull, Boston terrier", "miniature schnauzer", "giant schnauzer", "standard schnauzer", "Scotch terrier, Scottish terrier, Scottie", "Tibetan terrier, chrysanthemum dog", "silky terrier, Sydney silky", "soft-coated wheaten terrier", "West Highland white terrier", "Lhasa, Lhasa apso", "flat-coated retriever", "curly-coated retriever", "golden retriever", "Labrador retriever", "Chesapeake Bay retriever", "German short-haired pointer", "vizsla, Hungarian pointer", "English setter", "Irish setter, red setter", "Gordon setter", "Brittany spaniel", "clumber, clumber spaniel", "English springer, English springer spaniel", "Welsh springer spaniel", "cocker spaniel, English cocker spaniel, cocker", "Sussex spaniel", "Irish water spaniel", "kuvasz", "schipperke", "groenendael", "malinois", "briard", "kelpie", "komondor", "Old English sheepdog, bobtail", "Shetland sheepdog, Shetland sheep dog, Shetland", "collie", "Border collie", "Bouvier des Flandres, Bouviers des Flandres", "Rottweiler", "German shepherd, German shepherd dog, German police dog, alsatian", "Doberman, Doberman pinscher", "miniature pinscher", "Greater Swiss Mountain dog", "Bernese mountain dog", "Appenzeller", "EntleBucher", "boxer", "bull mastiff", "Tibetan mastiff", "French bulldog", "Great Dane", "Saint Bernard, St Bernard", "Eskimo dog, husky", "malamute, malemute, Alaskan malamute", "Siberian husky", "dalmatian, coach dog, carriage dog", "affenpinscher, monkey pinscher, monkey dog", "basenji", "pug, pug-dog", "Leonberg", "Newfoundland, Newfoundland dog", "Great Pyrenees", "Samoyed, Samoyede", "Pomeranian", "chow, chow chow", "keeshond", "Brabancon griffon", "Pembroke, Pembroke Welsh corgi", "Cardigan, Cardigan Welsh corgi", "toy poodle", "miniature poodle", "standard poodle", "Mexican hairless", "timber wolf, grey wolf, gray wolf, Canis lupus", "white wolf, Arctic wolf, Canis lupus tundrarum", "red wolf, maned wolf, Canis rufus, Canis niger", "coyote, prairie wolf, brush wolf, Canis latrans", "dingo, warrigal, warragal, Canis dingo", "dhole, Cuon alpinus", "African hunting dog, hyena dog, Cape hunting dog, Lycaon pictus", "hyena, hyaena", "red fox, Vulpes vulpes", "kit fox, Vulpes macrotis", "Arctic fox, white fox, Alopex lagopus", "grey fox, gray fox, Urocyon cinereoargenteus", "tabby, tabby cat", "tiger cat", "Persian cat", "Siamese cat, Siamese", "Egyptian cat", "cougar, puma, catamount, mountain lion, painter, panther, Felis concolor", "lynx, catamount", "leopard, Panthera pardus", "snow leopard, ounce, Panthera uncia", "jaguar, panther, Panthera onca, Felis onca", "lion, king of beasts, Panthera leo", "tiger, Panthera tigris", "cheetah, chetah, Acinonyx jubatus", "brown bear, bruin, Ursus arctos", "American black bear, black bear, Ursus americanus, Euarctos americanus", "ice bear, polar bear, Ursus Maritimus, Thalarctos maritimus", "sloth bear, Melursus ursinus, Ursus ursinus", "mongoose", "meerkat, mierkat", "tiger beetle", "ladybug, ladybeetle, lady beetle, ladybird, ladybird beetle", "ground beetle, carabid beetle", "long-horned beetle, longicorn, longicorn beetle", "leaf beetle, chrysomelid", "dung beetle", "rhinoceros beetle", "weevil", "fly", "bee", "ant, emmet, pismire", "grasshopper, hopper", "cricket", "walking stick, walkingstick, stick insect", "cockroach, roach", "mantis, mantid", "cicada, cicala", "leafhopper", "lacewing, lacewing fly", "dragonfly, darning needle, devil's darning needle, sewing needle, snake feeder, snake doctor, mosquito hawk, skeeter hawk", "damselfly", "admiral", "ringlet, ringlet butterfly", "monarch, monarch butterfly, milkweed butterfly, Danaus plexippus", "cabbage butterfly", "sulphur butterfly, sulfur butterfly", "lycaenid, lycaenid butterfly", "starfish, sea star", "sea urchin", "sea cucumber, holothurian", "wood rabbit, cottontail, cottontail rabbit", "hare", "Angora, Angora rabbit", "hamster", "porcupine, hedgehog", "fox squirrel, eastern fox squirrel, Sciurus niger", "marmot", "beaver", "guinea pig, Cavia cobaya", "sorrel", "zebra", "hog, pig, grunter, squealer, Sus scrofa", "wild boar, boar, Sus scrofa", "warthog", "hippopotamus, hippo, river horse, Hippopotamus amphibius", "ox", "water buffalo, water ox, Asiatic buffalo, Bubalus bubalis", "bison", "ram, tup", "bighorn, bighorn sheep, cimarron, Rocky Mountain bighorn, Rocky Mountain sheep, Ovis canadensis", "ibex, Capra ibex", "hartebeest", "impala, Aepyceros melampus", "gazelle", "Arabian camel, dromedary, Camelus dromedarius", "llama", "weasel", "mink", "polecat, fitch, foulmart, foumart, Mustela putorius", "black-footed ferret, ferret, Mustela nigripes", "otter", "skunk, polecat, wood pussy", "badger", "armadillo", "three-toed sloth, ai, Bradypus tridactylus", "orangutan, orang, orangutang, Pongo pygmaeus", "gorilla, Gorilla gorilla", "chimpanzee, chimp, Pan troglodytes", "gibbon, Hylobates lar", "siamang, Hylobates syndactylus, Symphalangus syndactylus", "guenon, guenon monkey", "patas, hussar monkey, Erythrocebus patas", "baboon", "macaque", "langur", "colobus, colobus monkey", "proboscis monkey, Nasalis larvatus", "marmoset", "capuchin, ringtail, Cebus capucinus", "howler monkey, howler", "titi, titi monkey", "spider monkey, Ateles geoffroyi", "squirrel monkey, Saimiri sciureus", "Madagascar cat, ring-tailed lemur, Lemur catta", "indri, indris, Indri indri, Indri brevicaudatus", "Indian elephant, Elephas maximus", "African elephant, Loxodonta africana", "lesser panda, red panda, panda, bear cat, cat bear, Ailurus fulgens", "giant panda, panda, panda bear, coon bear, Ailuropoda melanoleuca", "barracouta, snoek", "eel", "coho, cohoe, coho salmon, blue jack, silver salmon, Oncorhynchus kisutch", "rock beauty, Holocanthus tricolor", "anemone fish", "sturgeon", "gar, garfish, garpike, billfish, Lepisosteus osseus", "lionfish", "puffer, pufferfish, blowfish, globefish", "abacus", "abaya", "academic gown, academic robe, judge's robe", "accordion, piano accordion, squeeze box", "acoustic guitar", "aircraft carrier, carrier, flattop, attack aircraft carrier", "airliner", "airship, dirigible", "altar", "ambulance", "amphibian, amphibious vehicle", "analog clock", "apiary, bee house", "apron", "ashcan, trash can, garbage can, wastebin, ash bin, ash-bin, ashbin, dustbin, trash barrel, trash bin", "assault rifle, assault gun", "backpack, back pack, knapsack, packsack, rucksack, haversack", "bakery, bakeshop, bakehouse", "balance beam, beam", "balloon", "ballpoint, ballpoint pen, ballpen, Biro", "Band Aid", "banjo", "bannister, banister, balustrade, balusters, handrail", "barbell", "barber chair", "barbershop", "barn", "barometer", "barrel, cask", "barrow, garden cart, lawn cart, wheelbarrow", "baseball", "basketball", "bassinet", "bassoon", "bathing cap, swimming cap", "bath towel", "bathtub, bathing tub, bath, tub", "beach wagon, station wagon, wagon, estate car, beach waggon, station waggon, waggon", "beacon, lighthouse, beacon light, pharos", "beaker", "bearskin, busby, shako", "beer bottle", "beer glass", "bell cote, bell cot", "bib", "bicycle-built-for-two, tandem bicycle, tandem", "bikini, two-piece", "binder, ring-binder", "binoculars, field glasses, opera glasses", "birdhouse", "boathouse", "bobsled, bobsleigh, bob", "bolo tie, bolo, bola tie, bola", "bonnet, poke bonnet", "bookcase", "bookshop, bookstore, bookstall", "bottlecap", "bow", "bow tie, bow-tie, bowtie", "brass, memorial tablet, plaque", "brassiere, bra, bandeau", "breakwater, groin, groyne, mole, bulwark, seawall, jetty", "breastplate, aegis, egis", "broom", "bucket, pail", "buckle", "bulletproof vest", "bullet train, bullet", "butcher shop, meat market", "cab, hack, taxi, taxicab", "caldron, cauldron", "candle, taper, wax light", "cannon", "canoe", "can opener, tin opener", "cardigan", "car mirror", "carousel, carrousel, merry-go-round, roundabout, whirligig", "carpenter's kit, tool kit", "carton", "car wheel", "cash machine, cash dispenser, automated teller machine, automatic teller machine, automated teller, automatic teller, ATM", "cassette", "cassette player", "castle", "catamaran", "CD player", "cello, violoncello", "cellular telephone, cellular phone, cellphone, cell, mobile phone", "chain", "chainlink fence", "chain mail, ring mail, mail, chain armor, chain armour, ring armor, ring armour", "chain saw, chainsaw", "chest", "chiffonier, commode", "chime, bell, gong", "china cabinet, china closet", "Christmas stocking", "church, church building", "cinema, movie theater, movie theatre, movie house, picture palace", "cleaver, meat cleaver, chopper", "cliff dwelling", "cloak", "clog, geta, patten, sabot", "cocktail shaker", "coffee mug", "coffeepot", "coil, spiral, volute, whorl, helix", "combination lock", "computer keyboard, keypad", "confectionery, confectionary, candy store", "container ship, containership, container vessel", "convertible", "corkscrew, bottle screw", "cornet, horn, trumpet, trump", "cowboy boot", "cowboy hat, ten-gallon hat", "cradle", "crane", "crash helmet", "crate", "crib, cot", "Crock Pot", "croquet ball", "crutch", "cuirass", "dam, dike, dyke", "desk", "desktop computer", "dial telephone, dial phone", "diaper, nappy, napkin", "digital clock", "digital watch", "dining table, board", "dishrag, dishcloth", "dishwasher, dish washer, dishwashing machine", "disk brake, disc brake", "dock, dockage, docking facility", "dogsled, dog sled, dog sleigh", "dome", "doormat, welcome mat", "drilling platform, offshore rig", "drum, membranophone, tympan", "drumstick", "dumbbell", "Dutch oven", "electric fan, blower", "electric guitar", "electric locomotive", "entertainment center", "envelope", "espresso maker", "face powder", "feather boa, boa", "file, file cabinet, filing cabinet", "fireboat", "fire engine, fire truck", "fire screen, fireguard", "flagpole, flagstaff", "flute, transverse flute", "folding chair", "football helmet", "forklift", "fountain", "fountain pen", "four-poster", "freight car", "French horn, horn", "frying pan, frypan, skillet", "fur coat", "garbage truck, dustcart", "gasmask, respirator, gas helmet", "gas pump, gasoline pump, petrol pump, island dispenser", "goblet", "go-kart", "golf ball", "golfcart, golf cart", "gondola", "gong, tam-tam", "gown", "grand piano, grand", "greenhouse, nursery, glasshouse", "grille, radiator grille", "grocery store, grocery, food market, market", "guillotine", "hair slide", "hair spray", "half track", "hammer", "hamper", "hand blower, blow dryer, blow drier, hair dryer, hair drier", "hand-held computer, hand-held microcomputer", "handkerchief, hankie, hanky, hankey", "hard disc, hard disk, fixed disk", "harmonica, mouth organ, harp, mouth harp", "harp", "harvester, reaper", "hatchet", "holster", "home theater, home theatre", "honeycomb", "hook, claw", "hoopskirt, crinoline", "horizontal bar, high bar", "horse cart, horse-cart", "hourglass", "iPod", "iron, smoothing iron", "jack-o'-lantern", "jean, blue jean, denim", "jeep, landrover", "jersey, T-shirt, tee shirt", "jigsaw puzzle", "jinrikisha, ricksha, rickshaw", "joystick", "kimono", "knee pad", "knot", "lab coat, laboratory coat", "ladle", "lampshade, lamp shade", "laptop, laptop computer", "lawn mower, mower", "lens cap, lens cover", "letter opener, paper knife, paperknife", "library", "lifeboat", "lighter, light, igniter, ignitor", "limousine, limo", "liner, ocean liner", "lipstick, lip rouge", "Loafer", "lotion", "loudspeaker, speaker, speaker unit, loudspeaker system, speaker system", "loupe, jeweler's loupe", "lumbermill, sawmill", "magnetic compass", "mailbag, postbag", "mailbox, letter box", "maillot", "maillot, tank suit", "manhole cover", "maraca", "marimba, xylophone", "mask", "matchstick", "maypole", "maze, labyrinth", "measuring cup", "medicine chest, medicine cabinet", "megalith, megalithic structure", "microphone, mike", "microwave, microwave oven", "military uniform", "milk can", "minibus", "miniskirt, mini", "minivan", "missile", "mitten", "mixing bowl", "mobile home, manufactured home", "Model T", "modem", "monastery", "monitor", "moped", "mortar", "mortarboard", "mosque", "mosquito net", "motor scooter, scooter", "mountain bike, all-terrain bike, off-roader", "mountain tent", "mouse, computer mouse", "mousetrap", "moving van", "muzzle", "nail", "neck brace", "necklace", "nipple", "notebook, notebook computer", "obelisk", "oboe, hautboy, hautbois", "ocarina, sweet potato", "odometer, hodometer, mileometer, milometer", "oil filter", "organ, pipe organ", "oscilloscope, scope, cathode-ray oscilloscope, CRO", "overskirt", "oxcart", "oxygen mask", "packet", "paddle, boat paddle", "paddlewheel, paddle wheel", "padlock", "paintbrush", "pajama, pyjama, pj's, jammies", "palace", "panpipe, pandean pipe, syrinx", "paper towel", "parachute, chute", "parallel bars, bars", "park bench", "parking meter", "passenger car, coach, carriage", "patio, terrace", "pay-phone, pay-station", "pedestal, plinth, footstall", "pencil box, pencil case", "pencil sharpener", "perfume, essence", "Petri dish", "photocopier", "pick, plectrum, plectron", "pickelhaube", "picket fence, paling", "pickup, pickup truck", "pier", "piggy bank, penny bank", "pill bottle", "pillow", "ping-pong ball", "pinwheel", "pirate, pirate ship", "pitcher, ewer", "plane, carpenter's plane, woodworking plane", "planetarium", "plastic bag", "plate rack", "plow, plough", "plunger, plumber's helper", "Polaroid camera, Polaroid Land camera", "pole", "police van, police wagon, paddy wagon, patrol wagon, wagon, black Maria", "poncho", "pool table, billiard table, snooker table", "pop bottle, soda bottle", "pot, flowerpot", "potter's wheel", "power drill", "prayer rug, prayer mat", "printer", "prison, prison house", "projectile, missile", "projector", "puck, hockey puck", "punching bag, punch bag, punching ball, punchball", "purse", "quill, quill pen", "quilt, comforter, comfort, puff", "racer, race car, racing car", "racket, racquet", "radiator", "radio, wireless", "radio telescope, radio reflector", "rain barrel", "recreational vehicle, RV, R.V.", "reel", "reflex camera", "refrigerator, icebox", "remote control, remote", "restaurant, eating house, eating place, eatery", "revolver, six-gun, six-shooter", "rifle", "rocking chair, rocker", "rotisserie", "rubber eraser, rubber, pencil eraser", "rugby ball", "rule, ruler", "running shoe", "safe", "safety pin", "saltshaker, salt shaker", "sandal", "sarong", "sax, saxophone", "scabbard", "scale, weighing machine", "school bus", "schooner", "scoreboard", "screen, CRT screen", "screw", "screwdriver", "seat belt, seatbelt", "sewing machine", "shield, buckler", "shoe shop, shoe-shop, shoe store", "shoji", "shopping basket", "shopping cart", "shovel", "shower cap", "shower curtain", "ski", "ski mask", "sleeping bag", "slide rule, slipstick", "sliding door", "slot, one-armed bandit", "snorkel", "snowmobile", "snowplow, snowplough", "soap dispenser", "soccer ball", "sock", "solar dish, solar collector, solar furnace", "sombrero", "soup bowl", "space bar", "space heater", "space shuttle", "spatula", "speedboat", "spider web, spider's web", "spindle", "sports car, sport car", "spotlight, spot", "stage", "steam locomotive", "steel arch bridge", "steel drum", "stethoscope", "stole", "stone wall", "stopwatch, stop watch", "stove", "strainer", "streetcar, tram, tramcar, trolley, trolley car", "stretcher", "studio couch, day bed", "stupa, tope", "submarine, pigboat, sub, U-boat", "suit, suit of clothes", "sundial", "sunglass", "sunglasses, dark glasses, shades", "sunscreen, sunblock, sun blocker", "suspension bridge", "swab, swob, mop", "sweatshirt", "swimming trunks, bathing trunks", "swing", "switch, electric switch, electrical switch", "syringe", "table lamp", "tank, army tank, armored combat vehicle, armoured combat vehicle", "tape player", "teapot", "teddy, teddy bear", "television, television system", "tennis ball", "thatch, thatched roof", "theater curtain, theatre curtain", "thimble", "thresher, thrasher, threshing machine", "throne", "tile roof", "toaster", "tobacco shop, tobacconist shop, tobacconist", "toilet seat", "torch", "totem pole", "tow truck, tow car, wrecker", "toyshop", "tractor", "trailer truck, tractor trailer, trucking rig, rig, articulated lorry, semi", "tray", "trench coat", "tricycle, trike, velocipede", "trimaran", "tripod", "triumphal arch", "trolleybus, trolley coach, trackless trolley", "trombone", "tub, vat", "turnstile", "typewriter keyboard", "umbrella", "unicycle, monocycle", "upright, upright piano", "vacuum, vacuum cleaner", "vase", "vault", "velvet", "vending machine", "vestment", "viaduct", "violin, fiddle", "volleyball", "waffle iron", "wall clock", "wallet, billfold, notecase, pocketbook", "wardrobe, closet, press", "warplane, military plane", "washbasin, handbasin, washbowl, lavabo, wash-hand basin", "washer, automatic washer, washing machine", "water bottle", "water jug", "water tower", "whiskey jug", "whistle", "wig", "window screen", "window shade", "Windsor tie", "wine bottle", "wing", "wok", "wooden spoon", "wool, woolen, woollen", "worm fence, snake fence, snake-rail fence, Virginia fence", "wreck", "yawl", "yurt", "web site, website, internet site, site", "comic book", "crossword puzzle, crossword", "street sign", "traffic light, traffic signal, stoplight", "book jacket, dust cover, dust jacket, dust wrapper", "menu", "plate", "guacamole", "consomme", "hot pot, hotpot", "trifle", "ice cream, icecream", "ice lolly, lolly, lollipop, popsicle", "French loaf", "bagel, beigel", "pretzel", "cheeseburger", "hotdog, hot dog, red hot", "mashed potato", "head cabbage", "broccoli", "cauliflower", "zucchini, courgette", "spaghetti squash", "acorn squash", "butternut squash", "cucumber, cuke", "artichoke, globe artichoke", "bell pepper", "cardoon", "mushroom", "Granny Smith", "strawberry", "orange", "lemon", "fig", "pineapple, ananas", "banana", "jackfruit, jak, jack", "custard apple", "pomegranate", "hay", "carbonara", "chocolate sauce, chocolate syrup", "dough", "meat loaf, meatloaf", "pizza, pizza pie", "potpie", "burrito", "red wine", "espresso", "cup", "eggnog", "alp", "bubble", "cliff, drop, drop-off", "coral reef", "geyser", "lakeside, lakeshore", "promontory, headland, head, foreland", "sandbar, sand bar", "seashore, coast, seacoast, sea-coast", "valley, vale", "volcano", "ballplayer, baseball player", "groom, bridegroom", "scuba diver", "rapeseed", "daisy", "yellow lady's slipper, yellow lady-slipper, Cypripedium calceolus, Cypripedium parviflorum", "corn", "acorn", "hip, rose hip, rosehip", "buckeye, horse chestnut, conker", "coral fungus", "agaric", "gyromitra", "stinkhorn, carrion fungus", "earthstar", "hen-of-the-woods, hen of the woods, Polyporus frondosus, Grifola frondosa", "bolete", "ear, spike, capitulum", "toilet tissue, toilet paper, bathroom tissue"]]}}, "input_order": {"required": ["model", "label_name"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["class"], "name": "DiTCondLabelSelect", "display_name": "DiTCondLabelSelect", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/DiT", "output_node": false}, "DiTCondLabelEmpty": {"input": {"required": {"model": ["MODEL"]}}, "input_order": {"required": ["model"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["empty"], "name": "DiTCondLabelEmpty", "display_name": "DiTCondLabelEmpty", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/DiT", "output_node": false}, "PixArtCheckpointLoader": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "model": [["PixArtMS_XL_2", "PixArtMS_Sigma_XL_2", "PixArtMS_Sigma_XL_2_900M", "PixArtMS_Sigma_XL_2_2K", "PixArt_XL_2", "ControlPixArtHalf", "ControlPixArtMSHalf"]]}}, "input_order": {"required": ["ckpt_name", "model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "PixArtCheckpointLoader", "display_name": "PixArt Checkpoint Loader", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/PixArt", "output_node": false}, "PixArtCheckpointLoaderSimple": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]]}}, "input_order": {"required": ["ckpt_name"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "PixArtCheckpointLoaderSimple", "display_name": "PixArt Checkpoint Loader (auto)", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/PixArt", "output_node": false}, "PixArtResolutionSelect": {"input": {"required": {"model": [["PixArtMS_XL_2", "PixArt_XL_2", "PixArtMS_Sigma_XL_2_2K", "PixArtMS_Sigma_XL_2", "PixArtMS_Sigma_XL_2_512"]], "ratio": [["0.25", "0.26", "0.27", "0.28", "0.32", "0.33", "0.35", "0.40", "0.42", "0.48", "0.50", "0.52", "0.57", "0.60", "0.68", "0.72", "0.78", "0.82", "0.88", "0.94", "1.00", "1.07", "1.13", "1.21", "1.29", "1.38", "1.46", "1.67", "1.75", "2.00", "2.09", "2.40", "2.50", "2.89", "3.00", "3.11", "3.62", "3.75", "3.88", "4.00"], {"default": "1.00"}]}}, "input_order": {"required": ["model", "ratio"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["width", "height"], "name": "PixArtResolutionSelect", "display_name": "PixArt Resolution Select", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/PixArt", "output_node": false}, "PixArtLoraLoader": {"input": {"required": {"model": ["MODEL"], "lora_name": [["AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "strength": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}]}}, "input_order": {"required": ["model", "lora_name", "strength"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "PixArtLoraLoader", "display_name": "PixArt Load LoRA", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/PixArt", "output_node": false}, "PixArtT5TextEncode": {"input": {"required": {"text": ["STRING", {"multiline": true}], "T5": ["T5"]}}, "input_order": {"required": ["text", "T5"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "PixArtT5TextEncode", "display_name": "PixArt T5 Text Encode [Reference]", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/PixArt", "output_node": false}, "PixArtResolutionCond": {"input": {"required": {"cond": ["CONDITIONING"], "width": ["INT", {"default": 1024.0, "min": 0, "max": 8192}], "height": ["INT", {"default": 1024.0, "min": 0, "max": 8192}]}}, "input_order": {"required": ["cond", "width", "height"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["cond"], "name": "PixArtResolutionCond", "display_name": "PixArt Resolution Conditioning", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/PixArt", "output_node": false}, "PixArtControlNetCond": {"input": {"required": {"cond": ["CONDITIONING"], "latent": ["LATENT"]}}, "input_order": {"required": ["cond", "latent"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["cond"], "name": "PixArtControlNetCond", "display_name": "PixArt ControlNet Conditioning", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/PixArt", "output_node": false}, "PixArtT5FromSD3CLIP": {"input": {"required": {"sd3_clip": ["CLIP"], "padding": ["INT", {"default": 1, "min": 1, "max": 300}]}}, "input_order": {"required": ["sd3_clip", "padding"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["t5"], "name": "PixArtT5FromSD3CLIP", "display_name": "PixArt T5 from SD3 CLIP", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/PixArt", "output_node": false}, "T5v11Loader": {"input": {"required": {"t5v11_name": [[]], "t5v11_ver": [["xxl"]], "path_type": [["folder", "file"]], "device": [["auto", "cpu", "gpu"], {"default": "cpu"}], "dtype": [["default", "auto (comfy)", "FP32", "FP16", "bnb8bit", "bnb4bit", "FP8 E4M3", "FP8 E5M2"]]}}, "input_order": {"required": ["t5v11_name", "t5v11_ver", "path_type", "device", "dtype"]}, "output": ["T5"], "output_is_list": [false], "output_name": ["T5"], "name": "T5v11Loader", "display_name": "T5v1.1 Loader", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/T5", "output_node": false}, "T5TextEncode": {"input": {"required": {"text": ["STRING", {"multiline": true}], "T5": ["T5"]}}, "input_order": {"required": ["text", "T5"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "T5TextEncode", "display_name": "T5 Text Encode", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/T5", "output_node": false}, "HYDiTCheckpointLoader": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "model": [["G/2", "G/2-1.2", "XL/2", "L/2", "B/2"], {"default": "G/2"}]}}, "input_order": {"required": ["ckpt_name", "model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "HYDiTCheckpointLoader", "display_name": "Hunyuan DiT Checkpoint Loader", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/HunyuanDiT", "output_node": false}, "HYDiTTextEncoderLoader": {"input": {"required": {"clip_name": [["clip_l.safetensors", "t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "mt5_name": [[]], "device": [["auto", "cpu", "gpu"], {"default": "cpu"}], "dtype": [["default", "auto (comfy)", "FP32", "FP16", "BF16"]]}}, "input_order": {"required": ["clip_name", "mt5_name", "device", "dtype"]}, "output": ["CLIP", "T5"], "output_is_list": [false, false], "output_name": ["CLIP", "T5"], "name": "HYDiTTextEncoderLoader", "display_name": "Hunyuan DiT Text Encoder Loader", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/HunyuanDiT", "output_node": false}, "HYDiTTextEncode": {"input": {"required": {"text": ["STRING", {"multiline": true}], "text_t5": ["STRING", {"multiline": true}], "CLIP": ["CLIP"], "T5": ["T5"]}}, "input_order": {"required": ["text", "text_t5", "CLIP", "T5"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "HYDiTTextEncode", "display_name": "Hunyuan DiT Text Encode", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/HunyuanDiT", "output_node": false}, "HYDiTTextEncodeSimple": {"input": {"required": {"text": ["STRING", {"multiline": true}], "CLIP": ["CLIP"], "T5": ["T5"]}}, "input_order": {"required": ["text", "CLIP", "T5"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "HYDiTTextEncodeSimple", "display_name": "Hunyuan DiT Text Encode (simple)", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/HunyuanDiT", "output_node": false}, "HYDiTSrcSizeCond": {"input": {"required": {"cond": ["CONDITIONING"], "width": ["INT", {"default": 1024.0, "min": 0, "max": 8192, "step": 16}], "height": ["INT", {"default": 1024.0, "min": 0, "max": 8192, "step": 16}]}}, "input_order": {"required": ["cond", "width", "height"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["cond"], "name": "HYDiTSrcSizeCond", "display_name": "Hunyuan DiT Size Conditioning (advanced)", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/HunyuanDiT", "output_node": false}, "ExtraVAELoader": {"input": {"required": {"vae_name": [["YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_type": [["kl-f4", "kl-f8", "kl-f8-d16", "kl-f16", "kl-f32", "vq-f4", "vq-f8", "vq-f16", "Consistency-Decoder", "SDV-VideoDecoder", "MoVQ3"], {"default": "kl-f8"}], "dtype": [["auto", "FP32", "FP16", "BF16"]]}}, "input_order": {"required": ["vae_name", "vae_type", "dtype"]}, "output": ["VAE"], "output_is_list": [false], "output_name": ["VAE"], "name": "ExtraVAELoader", "display_name": "ExtraVAELoader", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels", "output_node": false}, "MiaoBiCLIPLoader": {"input": {"required": {"clip_name": [["clip_l.safetensors", "t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]]}}, "input_order": {"required": ["clip_name"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "MiaoBiCLIPLoader", "display_name": "MiaoBi CLIP Loader", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/MiaoBi", "output_node": false}, "MiaoBiDiffusersLoader": {"input": {"required": {"model_path": [["Marigold"]]}}, "input_order": {"required": ["model_path"]}, "output": ["MODEL", "CLIP", "VAE"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "VAE"], "name": "MiaoBiDiffusersLoader", "display_name": "MiaoBi Checkpoint Loader (Diffusers)", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/MiaoBi", "output_node": false}, "OverrideCLIPDevice": {"input": {"required": {"device": [["cpu", "cuda:0"], {"default": "cpu"}], "clip": ["CLIP"]}}, "input_order": {"required": ["device", "clip"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "OverrideCLIPDevice", "display_name": "Force/Set CLIP Device", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/other", "output_node": false}, "OverrideVAEDevice": {"input": {"required": {"device": [["cpu", "cuda:0"], {"default": "cpu"}], "vae": ["VAE"]}}, "input_order": {"required": ["device", "vae"]}, "output": ["VAE"], "output_is_list": [false], "output_name": ["VAE"], "name": "OverrideVAEDevice", "display_name": "Force/Set VAE Device", "description": "", "python_module": "custom_nodes.ComfyUI_ExtraModels", "category": "ExtraModels/other", "output_node": false}, "Gemini_API_Zho": {"input": {"required": {"prompt": ["STRING", {"default": "What is the meaning of life?", "multiline": true}], "model_name": [["gemini-pro", "gemini-pro-vision", "gemini-1.5-pro-latest"]], "stream": ["BOOLEAN", {"default": false}], "api_key": ["STRING", {"default": ""}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["prompt", "model_name", "stream", "api_key"], "optional": ["image"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "Gemini_API_Zho", "display_name": "\u2728Gemini_API_Zho", "description": "", "python_module": "custom_nodes.ComfyUI-Gemini", "category": "Zho\u6a21\u5757\u7ec4/\u2728Gemini", "output_node": false}, "Gemini_API_Vsion_ImgURL_Zho": {"input": {"required": {"prompt": ["STRING", {"default": "Describe this image", "multiline": true}], "image_url": ["STRING", {"default": ""}], "model_name": [["gemini-pro-vision", "gemini-1.5-pro-latest"]], "stream": ["BOOLEAN", {"default": false}], "api_key": ["STRING", {"default": ""}]}}, "input_order": {"required": ["prompt", "image_url", "model_name", "stream", "api_key"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "Gemini_API_Vsion_ImgURL_Zho", "display_name": "\u2728Gemini_API_Vsion_ImgURL_Zho", "description": "", "python_module": "custom_nodes.ComfyUI-Gemini", "category": "Zho\u6a21\u5757\u7ec4/\u2728Gemini", "output_node": false}, "Gemini_API_Chat_Zho": {"input": {"required": {"prompt": ["STRING", {"default": "What is the meaning of life?", "multiline": true}], "model_name": [["gemini-pro", "gemini-1.5-pro-latest"]], "api_key": ["STRING", {"default": ""}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["prompt", "model_name", "api_key"], "optional": ["image"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["response"], "name": "Gemini_API_Chat_Zho", "display_name": "\u2728Gemini_API_Chat_Zho", "description": "", "python_module": "custom_nodes.ComfyUI-Gemini", "category": "Zho\u6a21\u5757\u7ec4/\u2728Gemini", "output_node": false}, "Gemini_API_S_Zho": {"input": {"required": {"prompt": ["STRING", {"default": "What is the meaning of life?", "multiline": true}], "model_name": [["gemini-pro", "gemini-pro-vision", "gemini-1.5-pro-latest"]], "stream": ["BOOLEAN", {"default": false}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["prompt", "model_name", "stream"], "optional": ["image"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "Gemini_API_S_Zho", "display_name": "\u3299\ufe0fGemini_Zho", "description": "", "python_module": "custom_nodes.ComfyUI-Gemini", "category": "Zho\u6a21\u5757\u7ec4/\u2728Gemini", "output_node": false}, "Gemini_API_S_Vsion_ImgURL_Zho": {"input": {"required": {"prompt": ["STRING", {"default": "Describe this image", "multiline": true}], "image_url": ["STRING", {"default": ""}], "model_name": [["gemini-pro-vision", "gemini-1.5-pro-latest"]], "stream": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["prompt", "image_url", "model_name", "stream"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "Gemini_API_S_Vsion_ImgURL_Zho", "display_name": "\u3299\ufe0fGemini_ImgURL_Zho", "description": "", "python_module": "custom_nodes.ComfyUI-Gemini", "category": "Zho\u6a21\u5757\u7ec4/\u2728Gemini", "output_node": false}, "Gemini_API_S_Chat_Zho": {"input": {"required": {"prompt": ["STRING", {"default": "What is the meaning of life?", "multiline": true}], "model_name": [["gemini-pro", "gemini-1.5-pro-latest"]]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["prompt", "model_name"], "optional": ["image"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["response"], "name": "Gemini_API_S_Chat_Zho", "display_name": "\u3299\ufe0fGemini_Chat_Zho", "description": "", "python_module": "custom_nodes.ComfyUI-Gemini", "category": "Zho\u6a21\u5757\u7ec4/\u2728Gemini", "output_node": false}, "Gemini_15P_API_S_Advance_Zho": {"input": {"required": {"prompt": ["STRING", {"default": "What is the meaning of life?", "multiline": true}], "system_instruction": ["STRING", {"default": "You are creating a prompt for Stable Diffusion to generate an image. First step: describe this image, then put description into text. Second step: generate a text prompt for %s based on first step.  Only respond with the prompt itself, but embellish it as needed but keep it under 80 tokens.", "multiline": true}], "model_name": [["gemini-1.5-pro-latest"]], "stream": ["BOOLEAN", {"default": false}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["prompt", "system_instruction", "model_name", "stream"], "optional": ["image"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "Gemini_15P_API_S_Advance_Zho", "display_name": "\ud83c\udd95Gemini_15P_Advance_Zho", "description": "", "python_module": "custom_nodes.ComfyUI-Gemini", "category": "Zho\u6a21\u5757\u7ec4/\u2728Gemini", "output_node": false}, "Gemini_15P_API_S_Chat_Advance_Zho": {"input": {"required": {"prompt": ["STRING", {"default": "What is the meaning of life?", "multiline": true}], "system_instruction": ["STRING", {"default": "You are creating a prompt for Stable Diffusion to generate an image. First step: describe this image, then put description into text. Second step: generate a text prompt for %s based on first step.  Only respond with the prompt itself, but embellish it as needed but keep it under 80 tokens.", "multiline": true}], "model_name": [["gemini-1.5-pro-latest"]]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["prompt", "system_instruction", "model_name"], "optional": ["image"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["response"], "name": "Gemini_15P_API_S_Chat_Advance_Zho", "display_name": "\ud83c\udd95Gemini_15P_Chat_Advance_Zho", "description": "", "python_module": "custom_nodes.ComfyUI-Gemini", "category": "Zho\u6a21\u5757\u7ec4/\u2728Gemini", "output_node": false}, "Gemini_FileUpload_API_S_Zho": {"input": {"required": {"file": ["STRING", {"default": "./sample.mp3", "multiline": false}]}}, "input_order": {"required": ["file"]}, "output": ["FILE"], "output_is_list": [false], "output_name": ["file"], "name": "Gemini_FileUpload_API_S_Zho", "display_name": "\ud83d\udcc4Gemini_FileUpload_Zho", "description": "", "python_module": "custom_nodes.ComfyUI-Gemini", "category": "Zho\u6a21\u5757\u7ec4/\u2728Gemini", "output_node": false}, "Gemini_File_API_S_Zho": {"input": {"required": {"file": ["FILE"], "prompt": ["STRING", {"default": "Listen carefully to the following audio file. Provide a brief summary.", "multiline": true}], "model_name": [["gemini-1.5-pro-latest"]], "stream": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["file", "prompt", "model_name", "stream"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "Gemini_File_API_S_Zho", "display_name": "\ud83d\udcc4Gemini_File_Zho", "description": "", "python_module": "custom_nodes.ComfyUI-Gemini", "category": "Zho\u6a21\u5757\u7ec4/\u2728Gemini", "output_node": false}, "ConcatText_Zho": {"input": {"required": {"text_1": ["STRING", {"multiline": true}], "text_2": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["text_1", "text_2"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "ConcatText_Zho", "display_name": "\u2728ConcatText_Zho", "description": "", "python_module": "custom_nodes.ComfyUI-Gemini", "category": "Zho\u6a21\u5757\u7ec4/\u2728Gemini", "output_node": false}, "DisplayText_Zho": {"input": {"required": {"text": ["STRING", {"forceInput": true}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["text"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "DisplayText_Zho", "display_name": "\u2728DisplayText_Zho", "description": "", "python_module": "custom_nodes.ComfyUI-Gemini", "category": "Zho\u6a21\u5757\u7ec4/\u2728Gemini", "output_node": true}, "FrequencySeparation": {"input": {"required": {"image": ["IMAGE"], "blur_radius": ["INT", {"default": 3, "min": 1, "max": 15, "step": 1, "display": "slider"}]}}, "input_order": {"required": ["image", "blur_radius"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["high_freq", "low_freq"], "name": "FrequencySeparation", "display_name": "Frequency Separation Node", "description": "", "python_module": "custom_nodes.comfyUI_FrequencySeparation_RGB-HSV", "category": "image/filters", "output_node": false}, "FrequencyCombination": {"input": {"required": {"high_freq": ["IMAGE"], "low_freq": ["IMAGE"]}}, "input_order": {"required": ["high_freq", "low_freq"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "FrequencyCombination", "display_name": "Frequency Combination Node", "description": "", "python_module": "custom_nodes.comfyUI_FrequencySeparation_RGB-HSV", "category": "image/filters", "output_node": false}, "FrequencySeparationHSV": {"input": {"required": {"image": ["IMAGE"], "blur_radius": ["INT", {"default": 3, "min": 1, "max": 15, "step": 1, "display": "slider"}]}}, "input_order": {"required": ["image", "blur_radius"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["high_freq", "low_freq"], "name": "FrequencySeparationHSV", "display_name": "Frequency Separation HSV Node", "description": "", "python_module": "custom_nodes.comfyUI_FrequencySeparation_RGB-HSV", "category": "image/filters", "output_node": false}, "FrequencyCombinationHSV": {"input": {"required": {"high_freq": ["IMAGE"], "low_freq": ["IMAGE"]}}, "input_order": {"required": ["high_freq", "low_freq"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "FrequencyCombinationHSV", "display_name": "Frequency Combination HSV Node", "description": "", "python_module": "custom_nodes.comfyUI_FrequencySeparation_RGB-HSV", "category": "image/filters", "output_node": false}, "LumaAIClient": {"input": {"required": {"api_key": ["STRING", {"default": ""}]}}, "input_order": {"required": ["api_key"]}, "output": ["LUMACLIENT"], "output_is_list": [false], "output_name": ["client"], "name": "LumaAIClient", "display_name": "LumaAI Client", "description": "", "python_module": "custom_nodes.ComfyUI-LumaAI-API", "category": "LumaAI", "output_node": false}, "ImgBBUpload": {"input": {"required": {"image": ["IMAGE"], "api_key": ["STRING", {"default": "", "multiline": false}], "expire": ["BOOLEAN", {"default": false}], "expiration_time": ["INT", {"default": 60, "min": 60, "max": 15552000, "step": 1}]}}, "input_order": {"required": ["image", "api_key", "expire", "expiration_time"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["image_url"], "name": "ImgBBUpload", "display_name": "ImgBB Upload", "description": "", "python_module": "custom_nodes.ComfyUI-LumaAI-API", "category": "image/upload", "output_node": false}, "LumaText2Video": {"input": {"required": {"client": ["LUMACLIENT", {"forceInput": true}], "prompt": ["STRING", {"multiline": true, "default": ""}], "loop": ["BOOLEAN", {"default": false}], "aspect_ratio": [["9:16", "3:4", "1:1", "4:3", "16:9", "21:9"]], "save": ["BOOLEAN", {"default": true}]}, "optional": {"filename": ["STRING", {"default": ""}]}}, "input_order": {"required": ["client", "prompt", "loop", "aspect_ratio", "save"], "optional": ["filename"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["video_url", "generation_id"], "name": "LumaText2Video", "display_name": "Text to Video", "description": "", "python_module": "custom_nodes.ComfyUI-LumaAI-API", "category": "LumaAI", "output_node": true}, "LumaImage2Video": {"input": {"required": {"client": ["LUMACLIENT", {"forceInput": true}], "prompt": ["STRING", {"multiline": true, "default": ""}], "loop": ["BOOLEAN", {"default": false}], "save": ["BOOLEAN", {"default": true}]}, "optional": {"init_image_url": ["STRING", {"default": "", "forceInput": true}], "final_image_url": ["STRING", {"default": "", "forceInput": true}], "filename": ["STRING", {"default": ""}]}}, "input_order": {"required": ["client", "prompt", "loop", "save"], "optional": ["init_image_url", "final_image_url", "filename"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["video_url", "generation_id"], "name": "LumaImage2Video", "display_name": "Image to Video", "description": "", "python_module": "custom_nodes.ComfyUI-LumaAI-API", "category": "LumaAI", "output_node": false}, "LumaInterpolateGenerations": {"input": {"required": {"client": ["LUMACLIENT", {"forceInput": true}], "prompt": ["STRING", {"multiline": true, "default": ""}], "save": ["BOOLEAN", {"default": true}], "generation_id_1": ["STRING", {"default": "", "forceInput": true}], "generation_id_2": ["STRING", {"default": "", "forceInput": true}]}, "optional": {"filename": ["STRING", {"default": ""}]}}, "input_order": {"required": ["client", "prompt", "save", "generation_id_1", "generation_id_2"], "optional": ["filename"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["video_url", "generation_id"], "name": "LumaInterpolateGenerations", "display_name": "Interpolate Generations", "description": "", "python_module": "custom_nodes.ComfyUI-LumaAI-API", "category": "LumaAI", "output_node": false}, "LumaExtendGeneration": {"input": {"required": {"client": ["LUMACLIENT", {"forceInput": true}], "prompt": ["STRING", {"multiline": true, "default": ""}], "save": ["BOOLEAN", {"default": true}]}, "optional": {"init_image_url": ["STRING", {"default": "", "forceInput": true}], "final_image_url": ["STRING", {"default": "", "forceInput": true}], "init_generation_id": ["STRING", {"default": "", "forceInput": true}], "final_generation_id": ["STRING", {"default": "", "forceInput": true}], "filename": ["STRING", {"default": ""}]}}, "input_order": {"required": ["client", "prompt", "save"], "optional": ["init_image_url", "final_image_url", "init_generation_id", "final_generation_id", "filename"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["video_url", "generation_id"], "name": "LumaExtendGeneration", "display_name": "Extend Generation", "description": "", "python_module": "custom_nodes.ComfyUI-LumaAI-API", "category": "LumaAI", "output_node": false}, "LumaPreviewVideo": {"input": {"required": {"video_url": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["video_url"]}, "output": [], "output_is_list": [], "output_name": [], "name": "LumaPreviewVideo", "display_name": "LumaAI Preview Video", "description": "", "python_module": "custom_nodes.ComfyUI-LumaAI-API", "category": "LumaAI", "output_node": true}, "XY Input: Lora Block Weight //Inspire": {"input": {"required": {"category_filter": [["All", "", "lcm/SD1.5", "SDXL-Lightning"]], "lora_name": [["AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "inverse": ["BOOLEAN", {"default": false, "label_on": "True", "label_off": "False"}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "A": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "B": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "preset": [["Preset", "SD-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "SD-INS:1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-IND:1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0", "SD-INALL:1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0", "SD-MIDD:1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0", "SD-MIDD0.2:1,0,0,0,0,0,0.2,0.4,0.4,0.2,0,0,0,0,0,0,0", "SD-MIDD0.8:1,0,0,0,0,0.5,0.8,0.8,0.4,0,0,0,0,0,0,0,0", "SD-MOUT:1,0,0,0,0,0,1,1,1,1,1,1,1,1,0.5,0,0", "SD-OUTD:1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0", "SD-OUTS:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1", "SD-OUTALL:1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1", "SD-ROUT:1,1,1,1,1,1,1,1,R,R,R,R,R,R,R,R,R", "SD-AOUT:A,1,1,1,1,1,1,1,1,1,1,1,A,A,A,A,A", "SD-AB:A,B,B,B,B,B,B,B,B,B,B,B,A,A,A,A,A", "SD-ALL0.5:0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5", "SD-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "SD-LyC-INALL:1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-LyC-MIDALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0", "SD-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1", "SDXL-NONE:0,0,0,0,0,0,0,0,0,0,0,0", "SDXL-ALL:1,1,1,1,1,1,1,1,1,1,1,1", "SDXL-INALL:1,1,1,1,1,0,0,0,0,0,0,0", "SDXL-MIDALL:1,0,0,0,0,1,0,0,0,0,0,0", "SDXL-OUTALL:1,0,0,0,0,0,1,1,1,1,1,1", "SDXL-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SDXL-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "SDXL-LyC-INALL:1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0", "SDXL-LyC-MIDALL:1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0", "SDXL-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1", "FLUX-DBL-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "FLUX-DBL-FRONT7:1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0", "FLUX-DBL-MID6:1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0", "FLUX-DBL-TAIL6:1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1", "FLUX-SINGLE-ALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "FLUX-SINGLE-1to10:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "FLUX-SINGLE-11to20:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "FLUX-SINGLE-21to30:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0", "FLUX-SINGLE-31to37:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1", "FLUX-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "@SD-FULL-TEST:17", "@SD-BLOCK1-TEST:17,12,1", "@SD-BLOCK2-TEST:17,12,2", "@SD-BLOCK3-TEST:17,12,3", "@SD-BLOCK4-TEST:17,12,4", "@SD-BLOCK5-TEST:17,12,5", "@SD-BLOCK6-TEST:17,12,6", "@SD-BLOCK7-TEST:17,12,7", "@SD-BLOCK8-TEST:17,12,8", "@SD-BLOCK9-TEST:17,12,9", "@SD-BLOCK10-TEST:17,12,10", "@SD-BLOCK11-TEST:17,12,11", "@SD-BLOCK12-TEST:17,12,12", "@SD-BLOCK13-TEST:17,12,13", "@SD-BLOCK14-TEST:17,12,14", "@SD-BLOCK15-TEST:17,12,15", "@SD-BLOCK16-TEST:17,12,16", "@SD-BLOCK17-TEST:17,12,17", "@SD-LyC-FULL-TEST:27", "@SDXL-FULL-TEST:12", "@SDXL-LyC-FULL-TEST:21", "@FLUX-DBL-FULL:19", "@FLUX-DBL-SGL-FULL:58", "@FLUX-DBL0-TEST:19,14,2", "@FLUX-DBL1-TEST:19,14,3", "@FLUX-DBL2-TEST:19,14,4", "@FLUX-DBL3-TEST:19,14,5", "@FLUX-DBL4-TEST:19,14,6", "@FLUX-DBL5-TEST:19,14,7", "@FLUX-DBL6-TEST:19,14,8", "@FLUX-DBL7-TEST:19,14,9", "@FLUX-DBL8-TEST:19,14,10", "@FLUX-DBL9-TEST:19,14,11", "@FLUX-DBL10-TEST:19,14,12", "@FLUX-DBL11-TEST:19,14,13", "@FLUX-DBL12-TEST:19,14,14", "@FLUX-DBL13-TEST:19,14,15", "@FLUX-DBL14-TEST:19,14,16", "@FLUX-DBL15-TEST:19,14,17", "@FLUX-DBL16-TEST:19,14,18", "@FLUX-DBL17-TEST:19,14,19", "@FLUX-DBL18-TEST:19,14,20", "@FLUX-SGL0-TEST:58,6,21", "@FLUX-SGL1-TEST:58,6,22", "@FLUX-SGL2-TEST:58,6,23", "@FLUX-SGL3-TEST:58,6,24", "@FLUX-SGL4-TEST:58,6,25", "@FLUX-SGL5-TEST:58,6,26", "@FLUX-SGL6-TEST:58,6,27", "@FLUX-SGL7-TEST:58,6,28", "@FLUX-SGL8-TEST:58,6,29", "@FLUX-SGL9-TEST:58,6,30", "@FLUX-SGL10-TEST:58,6,31", "@FLUX-SGL11-TEST:58,6,32", "@FLUX-SGL12-TEST:58,6,33", "@FLUX-SGL13-TEST:58,6,34", "@FLUX-SGL14-TEST:58,6,35", "@FLUX-SGL15-TEST:58,6,36", "@FLUX-SGL16-TEST:58,6,37", "@FLUX-SGL17-TEST:58,6,38", "@FLUX-SGL18-TEST:58,6,39", "@FLUX-SGL19-TEST:58,6,40", "@FLUX-SGL20-TEST:58,6,41", "@FLUX-SGL21-TEST:58,6,42", "@FLUX-SGL22-TEST:58,6,43", "@FLUX-SGL23-TEST:58,6,44", "@FLUX-SGL24-TEST:58,6,45", "@FLUX-SGL25-TEST:58,6,46", "@FLUX-SGL26-TEST:58,6,47", "@FLUX-SGL27-TEST:58,6,48", "@FLUX-SGL28-TEST:58,6,49", "@FLUX-SGL29-TEST:58,6,50", "@FLUX-SGL30-TEST:58,6,51", "@FLUX-SGL31-TEST:58,6,52", "@FLUX-SGL32-TEST:58,6,53", "@FLUX-SGL33-TEST:58,6,54", "@FLUX-SGL34-TEST:58,6,55", "@FLUX-SGL35-TEST:58,6,56", "@FLUX-SGL36-TEST:58,6,57", "@FLUX-SGL37-TEST:58,6,58", "@FLUX-SGL38-TEST:58,6,59"]], "block_vectors": ["STRING", {"multiline": true, "default": "SD-NONE/SD-ALL\nSD-ALL/SD-ALL\nSD-INS/SD-ALL\nSD-IND/SD-ALL\nSD-INALL/SD-ALL\nSD-MIDD/SD-ALL\nSD-MIDD0.2/SD-ALL\nSD-MIDD0.8/SD-ALL\nSD-MOUT/SD-ALL\nSD-OUTD/SD-ALL\nSD-OUTS/SD-ALL\nSD-OUTALL/SD-ALL", "placeholder": "{target vector}/{reference vector}", "pysssss.autocomplete": false}], "heatmap_palette": [["viridis", "magma", "plasma", "inferno", "cividis"]], "heatmap_alpha": ["FLOAT", {"default": 0.8, "min": 0.0, "max": 1.0, "step": 0.01}], "heatmap_strength": ["FLOAT", {"default": 1.5, "min": 0.0, "max": 10.0, "step": 0.01}], "xyplot_mode": [["Simple", "Diff", "Diff+Heatmap"]]}}, "input_order": {"required": ["category_filter", "lora_name", "strength_model", "strength_clip", "inverse", "seed", "A", "B", "preset", "block_vectors", "heatmap_palette", "heatmap_alpha", "heatmap_strength", "xyplot_mode"]}, "output": ["XY", "XY"], "output_is_list": [false, false], "output_name": ["X (vectors)", "Y (effect_compares)"], "name": "XY Input: Lora Block Weight //Inspire", "display_name": "XY Input: LoRA Block Weight", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/LoraBlockWeight", "output_node": false}, "LoraLoaderBlockWeight //Inspire": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "category_filter": [["All", "", "lcm/SD1.5", "SDXL-Lightning"]], "lora_name": [["AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "inverse": ["BOOLEAN", {"default": false, "label_on": "True", "label_off": "False", "tooltip": "Apply the following weights for each block:\nTrue: 1 - weight\nFalse: weight"}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": ""}], "A": ["FLOAT", {"default": 4.0, "min": -10.0, "max": 10.0, "step": 0.01}], "B": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "preset": [["Preset", "SD-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "SD-INS:1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-IND:1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0", "SD-INALL:1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0", "SD-MIDD:1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0", "SD-MIDD0.2:1,0,0,0,0,0,0.2,0.4,0.4,0.2,0,0,0,0,0,0,0", "SD-MIDD0.8:1,0,0,0,0,0.5,0.8,0.8,0.4,0,0,0,0,0,0,0,0", "SD-MOUT:1,0,0,0,0,0,1,1,1,1,1,1,1,1,0.5,0,0", "SD-OUTD:1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0", "SD-OUTS:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1", "SD-OUTALL:1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1", "SD-ROUT:1,1,1,1,1,1,1,1,R,R,R,R,R,R,R,R,R", "SD-AOUT:A,1,1,1,1,1,1,1,1,1,1,1,A,A,A,A,A", "SD-AB:A,B,B,B,B,B,B,B,B,B,B,B,A,A,A,A,A", "SD-ALL0.5:0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5", "SD-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "SD-LyC-INALL:1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-LyC-MIDALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0", "SD-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1", "SDXL-NONE:0,0,0,0,0,0,0,0,0,0,0,0", "SDXL-ALL:1,1,1,1,1,1,1,1,1,1,1,1", "SDXL-INALL:1,1,1,1,1,0,0,0,0,0,0,0", "SDXL-MIDALL:1,0,0,0,0,1,0,0,0,0,0,0", "SDXL-OUTALL:1,0,0,0,0,0,1,1,1,1,1,1", "SDXL-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SDXL-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "SDXL-LyC-INALL:1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0", "SDXL-LyC-MIDALL:1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0", "SDXL-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1", "FLUX-DBL-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "FLUX-DBL-FRONT7:1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0", "FLUX-DBL-MID6:1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0", "FLUX-DBL-TAIL6:1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1", "FLUX-SINGLE-ALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "FLUX-SINGLE-1to10:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "FLUX-SINGLE-11to20:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "FLUX-SINGLE-21to30:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0", "FLUX-SINGLE-31to37:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1", "FLUX-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"]], "block_vector": ["STRING", {"multiline": true, "placeholder": "block weight vectors", "default": "1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1", "pysssss.autocomplete": false}], "bypass": ["BOOLEAN", {"default": false, "label_on": "True", "label_off": "False"}]}}, "input_order": {"required": ["model", "clip", "category_filter", "lora_name", "strength_model", "strength_clip", "inverse", "seed", "A", "B", "preset", "block_vector", "bypass"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["model", "clip", "populated_vector"], "name": "LoraLoaderBlockWeight //Inspire", "display_name": "LoRA Loader (Block Weight)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/LoraBlockWeight", "output_node": false}, "LoraBlockInfo //Inspire": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "lora_name": [["AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "block_info": ["STRING", {"multiline": true}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["model", "clip", "lora_name", "block_info"], "hidden": ["unique_id"]}, "output": [], "output_is_list": [], "output_name": [], "name": "LoraBlockInfo //Inspire", "display_name": "LoRA Block Info", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/LoraBlockWeight", "output_node": true}, "MakeLBW //Inspire": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "category_filter": [["All", "", "lcm/SD1.5", "SDXL-Lightning"]], "lora_name": [["AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "inverse": ["BOOLEAN", {"default": false, "label_on": "True", "label_off": "False", "tooltip": "Apply the following weights for each block:\nTrue: 1 - weight\nFalse: weight"}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": ""}], "A": ["FLOAT", {"default": 4.0, "min": -10.0, "max": 10.0, "step": 0.01}], "B": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "preset": [["Preset", "SD-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "SD-INS:1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-IND:1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0", "SD-INALL:1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0", "SD-MIDD:1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0", "SD-MIDD0.2:1,0,0,0,0,0,0.2,0.4,0.4,0.2,0,0,0,0,0,0,0", "SD-MIDD0.8:1,0,0,0,0,0.5,0.8,0.8,0.4,0,0,0,0,0,0,0,0", "SD-MOUT:1,0,0,0,0,0,1,1,1,1,1,1,1,1,0.5,0,0", "SD-OUTD:1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0", "SD-OUTS:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1", "SD-OUTALL:1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1", "SD-ROUT:1,1,1,1,1,1,1,1,R,R,R,R,R,R,R,R,R", "SD-AOUT:A,1,1,1,1,1,1,1,1,1,1,1,A,A,A,A,A", "SD-AB:A,B,B,B,B,B,B,B,B,B,B,B,A,A,A,A,A", "SD-ALL0.5:0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5", "SD-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "SD-LyC-INALL:1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-LyC-MIDALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0", "SD-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1", "SDXL-NONE:0,0,0,0,0,0,0,0,0,0,0,0", "SDXL-ALL:1,1,1,1,1,1,1,1,1,1,1,1", "SDXL-INALL:1,1,1,1,1,0,0,0,0,0,0,0", "SDXL-MIDALL:1,0,0,0,0,1,0,0,0,0,0,0", "SDXL-OUTALL:1,0,0,0,0,0,1,1,1,1,1,1", "SDXL-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SDXL-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "SDXL-LyC-INALL:1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0", "SDXL-LyC-MIDALL:1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0", "SDXL-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1", "FLUX-DBL-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "FLUX-DBL-FRONT7:1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0", "FLUX-DBL-MID6:1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0", "FLUX-DBL-TAIL6:1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1", "FLUX-SINGLE-ALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "FLUX-SINGLE-1to10:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "FLUX-SINGLE-11to20:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "FLUX-SINGLE-21to30:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0", "FLUX-SINGLE-31to37:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1", "FLUX-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"]], "block_vector": ["STRING", {"multiline": true, "placeholder": "block weight vectors", "default": "1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1", "pysssss.autocomplete": false}], "bypass": ["BOOLEAN", {"default": false, "label_on": "True", "label_off": "False"}]}}, "input_order": {"required": ["model", "clip", "category_filter", "lora_name", "inverse", "seed", "A", "B", "preset", "block_vector", "bypass"]}, "output": ["LBW_MODEL", "STRING"], "output_is_list": [false, false], "output_name": ["lbw_model", "populated_vector"], "name": "MakeLBW //Inspire", "display_name": "Make LoRA Block Weight", "description": "Instead of directly applying the LoRA Block Weight to the MODEL, it is generated in a separate LBW_MODEL form.", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/LoraBlockWeight", "output_node": false}, "ApplyLBW //Inspire": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "strength_model": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lbw_model": ["LBW_MODEL"]}}, "input_order": {"required": ["model", "clip", "strength_model", "strength_clip", "lbw_model"]}, "output": ["MODEL", "CLIP"], "output_is_list": [false, false], "output_name": ["MODEL", "CLIP"], "name": "ApplyLBW //Inspire", "display_name": "Apply LoRA Block Weight", "description": "Apply LBW_MODEL to MODEL and CLIP", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/LoraBlockWeight", "output_node": false}, "SaveLBW //Inspire": {"input": {"required": {"lbw_model": ["LBW_MODEL"], "filename_prefix": ["STRING", {"default": "ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["lbw_model", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveLBW //Inspire", "display_name": "Save LoRA Block Weight", "description": "Save LBW_MODEL as a .lbw.safetensors file", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/LoraBlockWeight", "output_node": true}, "LoadLBW //Inspire": {"input": {"required": {"lbw_model": [[]]}}, "input_order": {"required": ["lbw_model"]}, "output": ["LBW_MODEL"], "output_is_list": [false], "output_name": ["LBW_MODEL"], "name": "LoadLBW //Inspire", "display_name": "Load LoRA Block Weight", "description": "Load LBW_MODEL from .lbw.safetensors file", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/LoraBlockWeight", "output_node": false}, "OpenPose_Preprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {"detect_hand": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "detect_body": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "detect_face": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "resolution_upscale_by": ["FLOAT", {"default": 1.0, "min": 0.5, "max": 100, "step": 0.1}]}}, "input_order": {"required": ["detect_hand", "detect_body", "detect_face", "resolution_upscale_by"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "OpenPose_Preprocessor_Provider_for_SEGS //Inspire", "display_name": "OpenPose Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "DWPreprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {"detect_hand": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "detect_body": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "detect_face": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "resolution_upscale_by": ["FLOAT", {"default": 1.0, "min": 0.5, "max": 100, "step": 0.1}], "bbox_detector": [["yolox_l.torchscript.pt", "yolox_l.onnx", "yolo_nas_l_fp16.onnx", "yolo_nas_m_fp16.onnx", "yolo_nas_s_fp16.onnx"], {"default": "yolox_l.onnx"}], "pose_estimator": [["dw-ll_ucoco_384_bs5.torchscript.pt", "dw-ll_ucoco_384.onnx", "dw-ll_ucoco.onnx"], {"default": "dw-ll_ucoco_384_bs5.torchscript.pt"}]}}, "input_order": {"required": ["detect_hand", "detect_body", "detect_face", "resolution_upscale_by", "bbox_detector", "pose_estimator"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "DWPreprocessor_Provider_for_SEGS //Inspire", "display_name": "DWPreprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "MiDaS_DepthMap_Preprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {"a": ["FLOAT", {"default": 6.283185307179586, "min": 0.0, "max": 15.707963267948966, "step": 0.05}], "bg_threshold": ["FLOAT", {"default": 0.1, "min": 0, "max": 1, "step": 0.05}]}}, "input_order": {"required": ["a", "bg_threshold"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "MiDaS_DepthMap_Preprocessor_Provider_for_SEGS //Inspire", "display_name": "MiDaS Depth Map Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "LeRes_DepthMap_Preprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {"rm_nearest": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100, "step": 0.1}], "rm_background": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100, "step": 0.1}]}, "optional": {"boost": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}]}}, "input_order": {"required": ["rm_nearest", "rm_background"], "optional": ["boost"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "LeRes_DepthMap_Preprocessor_Provider_for_SEGS //Inspire", "display_name": "LeReS Depth Map Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "Canny_Preprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {"low_threshold": ["FLOAT", {"default": 0.4, "min": 0.01, "max": 0.99, "step": 0.01}], "high_threshold": ["FLOAT", {"default": 0.8, "min": 0.01, "max": 0.99, "step": 0.01}]}}, "input_order": {"required": ["low_threshold", "high_threshold"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "Canny_Preprocessor_Provider_for_SEGS //Inspire", "display_name": "Canny Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "MediaPipe_FaceMesh_Preprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {"max_faces": ["INT", {"default": 10, "min": 1, "max": 50, "step": 1}], "min_confidence": ["FLOAT", {"default": 0.5, "min": 0.01, "max": 1.0, "step": 0.01}], "resolution_upscale_by": ["FLOAT", {"default": 1.0, "min": 0.5, "max": 100, "step": 0.1}]}}, "input_order": {"required": ["max_faces", "min_confidence", "resolution_upscale_by"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "MediaPipe_FaceMesh_Preprocessor_Provider_for_SEGS //Inspire", "display_name": "MediaPipe FaceMesh Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "HEDPreprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {"safe": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}]}}, "input_order": {"required": ["safe"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "HEDPreprocessor_Provider_for_SEGS //Inspire", "display_name": "HED Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "FakeScribblePreprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {"safe": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}]}}, "input_order": {"required": ["safe"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "FakeScribblePreprocessor_Provider_for_SEGS //Inspire", "display_name": "Fake Scribble Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "AnimeLineArt_Preprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "AnimeLineArt_Preprocessor_Provider_for_SEGS //Inspire", "display_name": "AnimeLineArt Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "Manga2Anime_LineArt_Preprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "Manga2Anime_LineArt_Preprocessor_Provider_for_SEGS //Inspire", "display_name": "Manga2Anime LineArt Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "LineArt_Preprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {"coarse": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}]}}, "input_order": {"required": ["coarse"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "LineArt_Preprocessor_Provider_for_SEGS //Inspire", "display_name": "LineArt Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "Color_Preprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "Color_Preprocessor_Provider_for_SEGS //Inspire", "display_name": "Color Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "InpaintPreprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "InpaintPreprocessor_Provider_for_SEGS //Inspire", "display_name": "Inpaint Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "TilePreprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {"pyrUp_iters": ["INT", {"default": 3, "min": 1, "max": 10, "step": 1}]}}, "input_order": {"required": ["pyrUp_iters"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "TilePreprocessor_Provider_for_SEGS //Inspire", "display_name": "Tile Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "MeshGraphormerDepthMapPreprocessorProvider_for_SEGS //Inspire": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "MeshGraphormerDepthMapPreprocessorProvider_for_SEGS //Inspire", "display_name": "MeshGraphormer Depth Map Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "MediaPipeFaceMeshDetectorProvider //Inspire": {"input": {"required": {"max_faces": ["INT", {"default": 10, "min": 1, "max": 50, "step": 1}], "face": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "mouth": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}], "left_eyebrow": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}], "left_eye": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}], "left_pupil": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}], "right_eyebrow": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}], "right_eye": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}], "right_pupil": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}]}}, "input_order": {"required": ["max_faces", "face", "mouth", "left_eyebrow", "left_eye", "left_pupil", "right_eyebrow", "right_eye", "right_pupil"]}, "output": ["BBOX_DETECTOR", "SEGM_DETECTOR"], "output_is_list": [false, false], "output_name": ["BBOX_DETECTOR", "SEGM_DETECTOR"], "name": "MediaPipeFaceMeshDetectorProvider //Inspire", "display_name": "MediaPipeFaceMesh Detector Provider", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Detector", "output_node": false}, "KSampler //Inspire": {"input": {"required": {"model": ["MODEL"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "noise_mode": [["GPU(=A1111)", "CPU"]], "batch_seed_mode": [["incremental", "comfy", "variation str inc:0.01", "variation str inc:0.05"]], "variation_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "variation_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"variation_method": [["linear", "slerp"]], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["model", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "denoise", "noise_mode", "batch_seed_mode", "variation_seed", "variation_strength"], "optional": ["variation_method", "scheduler_func_opt"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "KSampler //Inspire", "display_name": "KSampler (inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/a1111_compat", "output_node": false}, "KSamplerAdvanced //Inspire": {"input": {"required": {"model": ["MODEL"], "add_noise": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.5, "round": 0.01}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at_step": ["INT", {"default": 10000, "min": 0, "max": 10000}], "noise_mode": [["GPU(=A1111)", "CPU"]], "return_with_leftover_noise": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}], "batch_seed_mode": [["incremental", "comfy", "variation str inc:0.01", "variation str inc:0.05"]], "variation_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "variation_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"variation_method": [["linear", "slerp"]], "noise_opt": ["NOISE"], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["model", "add_noise", "noise_seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "start_at_step", "end_at_step", "noise_mode", "return_with_leftover_noise", "batch_seed_mode", "variation_seed", "variation_strength"], "optional": ["variation_method", "noise_opt", "scheduler_func_opt"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "KSamplerAdvanced //Inspire", "display_name": "KSamplerAdvanced (inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/a1111_compat", "output_node": false}, "KSamplerPipe //Inspire": {"input": {"required": {"basic_pipe": ["BASIC_PIPE"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "latent_image": ["LATENT"], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "noise_mode": [["GPU(=A1111)", "CPU"]], "batch_seed_mode": [["incremental", "comfy", "variation str inc:0.01", "variation str inc:0.05"]], "variation_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "variation_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["basic_pipe", "seed", "steps", "cfg", "sampler_name", "scheduler", "latent_image", "denoise", "noise_mode", "batch_seed_mode", "variation_seed", "variation_strength"], "optional": ["scheduler_func_opt"]}, "output": ["LATENT", "VAE"], "output_is_list": [false, false], "output_name": ["LATENT", "VAE"], "name": "KSamplerPipe //Inspire", "display_name": "KSampler [pipe] (inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/a1111_compat", "output_node": false}, "KSamplerAdvancedPipe //Inspire": {"input": {"required": {"basic_pipe": ["BASIC_PIPE"], "add_noise": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.5, "round": 0.01}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "latent_image": ["LATENT"], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at_step": ["INT", {"default": 10000, "min": 0, "max": 10000}], "noise_mode": [["GPU(=A1111)", "CPU"]], "return_with_leftover_noise": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}], "batch_seed_mode": [["incremental", "comfy", "variation str inc:0.01", "variation str inc:0.05"]], "variation_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "variation_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"noise_opt": ["NOISE"], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["basic_pipe", "add_noise", "noise_seed", "steps", "cfg", "sampler_name", "scheduler", "latent_image", "start_at_step", "end_at_step", "noise_mode", "return_with_leftover_noise", "batch_seed_mode", "variation_seed", "variation_strength"], "optional": ["noise_opt", "scheduler_func_opt"]}, "output": ["LATENT", "VAE"], "output_is_list": [false, false], "output_name": ["LATENT", "VAE"], "name": "KSamplerAdvancedPipe //Inspire", "display_name": "KSamplerAdvanced [pipe] (inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/a1111_compat", "output_node": false}, "RandomNoise //Inspire": {"input": {"required": {"noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "noise_mode": [["GPU(=A1111)", "CPU"]], "batch_seed_mode": [["incremental", "comfy", "variation str inc:0.01", "variation str inc:0.05"]], "variation_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "variation_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"variation_method": [["linear", "slerp"]]}}, "input_order": {"required": ["noise_seed", "noise_mode", "batch_seed_mode", "variation_seed", "variation_strength"], "optional": ["variation_method"]}, "output": ["NOISE"], "output_is_list": [false], "output_name": ["NOISE"], "name": "RandomNoise //Inspire", "display_name": "RandomNoise (inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/a1111_compat", "output_node": false}, "HyperTile //Inspire": {"input": {"required": {"model": ["MODEL"], "tile_size": ["INT", {"default": 256, "min": 1, "max": 2048}], "swap_size": ["INT", {"default": 2, "min": 1, "max": 128}], "max_depth": ["INT", {"default": 0, "min": 0, "max": 10}], "scale_depth": ["BOOLEAN", {"default": false}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["model", "tile_size", "swap_size", "max_depth", "scale_depth", "seed"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "HyperTile //Inspire", "display_name": "HyperTile (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/__for_testing", "output_node": false}, "LoadPromptsFromDir //Inspire": {"input": {"required": {"prompt_dir": [["example"]]}, "optional": {"reload": ["BOOLEAN", {"default": false, "label_on": "if file changed", "label_off": "if value changed"}]}}, "input_order": {"required": ["prompt_dir"], "optional": ["reload"]}, "output": ["ZIPPED_PROMPT"], "output_is_list": [true], "output_name": ["ZIPPED_PROMPT"], "name": "LoadPromptsFromDir //Inspire", "display_name": "Load Prompts From Dir (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Prompt", "output_node": false}, "LoadPromptsFromFile //Inspire": {"input": {"required": {"prompt_file": [["example/prompt1.txt", "example/prompt2.txt"]]}, "optional": {"text_data_opt": ["STRING", {"defaultInput": true}], "reload": ["BOOLEAN", {"default": false, "label_on": "if file changed", "label_off": "if value changed"}]}}, "input_order": {"required": ["prompt_file"], "optional": ["text_data_opt", "reload"]}, "output": ["ZIPPED_PROMPT"], "output_is_list": [true], "output_name": ["ZIPPED_PROMPT"], "name": "LoadPromptsFromFile //Inspire", "display_name": "Load Prompts From File (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Prompt", "output_node": false}, "LoadSinglePromptFromFile //Inspire": {"input": {"required": {"prompt_file": [["example/prompt1.txt", "example/prompt2.txt"]], "index": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"text_data_opt": ["STRING", {"defaultInput": true}]}}, "input_order": {"required": ["prompt_file", "index"], "optional": ["text_data_opt"]}, "output": ["ZIPPED_PROMPT"], "output_is_list": [true], "output_name": ["ZIPPED_PROMPT"], "name": "LoadSinglePromptFromFile //Inspire", "display_name": "Load Single Prompt From File (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Prompt", "output_node": false}, "UnzipPrompt //Inspire": {"input": {"required": {"zipped_prompt": ["ZIPPED_PROMPT"]}}, "input_order": {"required": ["zipped_prompt"]}, "output": ["STRING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "name"], "name": "UnzipPrompt //Inspire", "display_name": "Unzip Prompt (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Prompt", "output_node": false}, "ZipPrompt //Inspire": {"input": {"required": {"positive": ["STRING", {"forceInput": true, "multiline": true}], "negative": ["STRING", {"forceInput": true, "multiline": true}]}, "optional": {"name_opt": ["STRING", {"forceInput": true, "multiline": false}]}}, "input_order": {"required": ["positive", "negative"], "optional": ["name_opt"]}, "output": ["ZIPPED_PROMPT"], "output_is_list": [false], "output_name": ["ZIPPED_PROMPT"], "name": "ZipPrompt //Inspire", "display_name": "Zip Prompt (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Prompt", "output_node": false}, "PromptExtractor //Inspire": {"input": {"required": {"image": [["00100-3444294236.png", "01115-3441384736-mature ginger guy, laying on field, armpit, sunburnt, blushing, blued eyes, smile, tank top, muscular, facial hair, moustache ,.png", "0c42073e550d6ae9cb7624ad1b2ee53d1d4e8c69_high.webp", "11121_158078841563e50810b30c1.jpg", "1313766545.png", "2024-08-14ComfyUI_00004_.png", "33097901.jpg", "33246906.jpg", "360_F_562816292_d7bYLVGfttt68HKFkOc4f2QKtWUg8Q5n.jpg", "381543ce-3045-4381-9b52-676686caed8f.jpg", "AnimateDiff_00037.mp4", "BGDK748BV7YGRQNF7P3CDK8910 (1).jpeg", "ComfyUI_00074_.png", "ComfyUI_00078_.png", "ComfyUI_00091_.png", "ComfyUI_00219_.png", "ComfyUI_00222_.png", "ComfyUI_00808_.png", "ComfyUI_00809_.png", "ComfyUI_00810_.png", "ComfyUI_00813_.png", "ComfyUI_00815_.png", "ComfyUI_00818_.png", "ComfyUI_00819_.png", "ComfyUI_00842_.png", "ComfyUI_temp_alxcm_00001_.png", "ComfyUI_temp_ayutp_00001_.png", "ComfyUI_temp_bvpdk_00001_.png", "ComfyUI_temp_bvpdk_00004_.png", "ComfyUI_temp_cgbmm_00001_.png", "ComfyUI_temp_chusq_00001_.png", "ComfyUI_temp_doxtg_00002_.png", "ComfyUI_temp_ecxhs_00001_.png", "ComfyUI_temp_ecxhs_00004_.png", "ComfyUI_temp_ecxhs_00006_ (1).png", "ComfyUI_temp_ecxhs_00006_.png", "ComfyUI_temp_ecxhs_00008_.png", "ComfyUI_temp_ecxhs_00010_.png", "ComfyUI_temp_fqjhe_00001_.png", "ComfyUI_temp_fqjhe_00016_.png", "ComfyUI_temp_gxxzz_00001_.png", "ComfyUI_temp_hlvpl_00001_.png", "ComfyUI_temp_ipugi_00131_.png", "ComfyUI_temp_jluvj_00001_.png", "ComfyUI_temp_kteza_00001_.png", "ComfyUI_temp_kubpn_00003_.png", "ComfyUI_temp_lviic_00009_.png", "ComfyUI_temp_lzhyu_00004_.png", "ComfyUI_temp_nmjmf_00001_.png", "ComfyUI_temp_oqypc_00001_.png", "ComfyUI_temp_oqypc_00004_ (1).png", "ComfyUI_temp_oufve_00001_.png", "ComfyUI_temp_pukae_00002_.png", "ComfyUI_temp_qakbs_00001_.png", "ComfyUI_temp_rdanj_00004_.png", "ComfyUI_temp_rqrpi_00001_.png", "ComfyUI_temp_rsiuu_00005_.png", "ComfyUI_temp_rtbjq_00004_.png", "ComfyUI_temp_toyue_00002_.png", "ComfyUI_temp_tqaav_00002_.png", "ComfyUI_temp_txndi_00002_.png", "Guy_Mask_5.png", "Guy_Matcap_5.png", "Guy_Outline_5.png", "H100Test_00015_.png", "H100Test_00016_.png", "H100Test_00034_.png", "IMG_3440.png", "IMG_6129.png", "MAsk.png", "Mario.webp", "MarkuryFLUX_00003_.png", "MarkuryFLUX_00005_.png", "MarkuryFLUX_00022_.png", "MarkuryFLUX_00036_.png", "MarkuryFLUX_00037_.png", "Mask_2 (1).png", "Mask_2.png", "Matcap.png", "Outline.png", "Outline_2.png", "PB-_temp_bxspr_00001_.png", "PNG image.jpeg", "Playbook_00.png", "Playbook_22.png", "Playbook_47.png", "Playbook__00001_ (1) (1).png", "Playbook__00001_ (1).png", "Playbook__00001_ (2).png", "Playbook__00001_.png", "Playbook__00003_ (4).png", "Playbook__00016_.png", "Playbook__00018_.png", "Playbook__00031_.png", "Playbook__00034_.png", "Playbook__00045_.png", "Playbook__00058_.png", "Playbook__00065_.png", "Playbook__00113_.png", "Playbook__00178_.png", "Playbook__00183_.png", "Playbook__00184_.png", "Playbook__00205_.png", "Playbook__00314.mp4", "Playbook__00348_.png", "Playbook__00417_.png", "Playbook__00419_ (1).png", "Playbook__00419_.png", "SDXL-Lightning_00012_.png", "SDXL_ControlNet_Image.png", "archivs_upscalewithflux.png", "beauty (1).png", "beauty (2).png", "beauty (3).png", "beauty (4).png", "beauty-0 (11).png", "beauty-0 (21).png", "beauty-0 (36).png", "beauty-0 (9).png", "beauty-0 - 2024-07-02T105656.553.png", "beauty.png", "ca-times.brightspotcdn.jpg", "canny.png", "canny_res_00003_ (1).png", "canny_res_00003_.png", "canny_res_00014_.png", "canny_res_00038_.png", "canny_res_00040_.png", "dancer-front-depth.png", "dancer-front-mask.png", "dancer-front-outline.png", "depth (1).png", "depth (2).png", "depth (3).png", "depth (4).png", "depth (5).png", "depth-0 (16).png", "depth-0 (18).png", "depth-0 (19).png", "depth-0 (31).png", "depth-0 (38).png", "depth-0 - 2024-07-02T105656.499.png", "depth.png", "depth0000 (1).png", "depth0000 (2).png", "depth0000 (3).png", "depth0000.png", "depth0001.png", "depth0043.png", "download.png", "example.png", "file.txt", "img_BmzB6PyCLHnFfVvV.png", "img_DpgERK4DxUAwLftG.png", "img_QYLbD1uzHC1nFbAE.png", "img_ULjhfQdRpzpEnmug.png", "img_Xipc5yPPxgtt1QGj.png", "img_iBZAGHnJ2Bv3f1XS.png", "inputs_img_DLe7eAeVKcd5aihb copy.png", "inputs_img_DLe7eAeVKcd5aihb.png", "inputs_img_EPMSddrLooFQ1YVD.png", "inputs_img_JLRRUVkofX1vCmjx.png", "inputs_img_Jvze5V927RFFAHX5.png", "inputs_img_KiPSrfifuNwC54ep.png", "inputs_img_UBc9tSV7cFAx87FQ.png", "inputs_img_Uf1LEsrNL4ovoWpz copy.png", "inputs_img_Uf1LEsrNL4ovoWpz.png", "inputs_img_Yhq6WtF5vDhoS4r5.png", "inputs_img_bG6odzGr8EZUPK1u.png", "inputs_img_fp87ttHy7b3hLkDg.png", "inputs_img_pKYznktDTwbYPGcL.png", "inputs_img_qyyvpcueAihTw9YV.png", "istockphoto-1325701162-612x612.jpg", "large-elephant-herd-walking-dust-savuti-botswana-towards-camera-196186738.webp", "manwithsign-depth.png", "manwithsign-mask.png", "manwithsign-outline.png", "mask (1).png", "mask (10).png", "mask (2).png", "mask (3).png", "mask (4).png", "mask (5).png", "mask (6).png", "mask (7).png", "mask (8).png", "mask (9).png", "mask-0 (11).png", "mask-0 (24).png", "mask-0 (28).png", "mask-0 (9).png", "mask-0 - 2024-07-02T105656.507.png", "mask.png", "masks.png", "night vision.jpg", "outline (1).png", "outline (2).png", "outline (3).png", "outline (4).png", "outline-0 (11).png", "outline-0 (31).png", "outline-0 (9).png", "outline-0 - 2024-07-02T105656.503.png", "outline.png", "outline0000 (1).png", "outline0000 (2).png", "outline0000 (3).png", "outline0000.png", "outline0001.png", "outline0043.png", "playbook_59b784a6-af19-4b44-9a45-1e98bae3c9e5.png", "playbook_e2a76fa6-15a6-41d2-922a-29dd68bfd3e3.png", "refernece.jpg", "result_14.png", "rgthree.compare._temp_rzpfz_00007_.png", "safari.jpg", "undefined_image (1).png", "walking-depth.png", "walking-mask.png", "walking-outline.png"], {"image_upload": true}], "positive_id": ["STRING", {}], "negative_id": ["STRING", {}], "info": ["STRING", {"multiline": true}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["image", "positive_id", "negative_id", "info"], "hidden": ["unique_id"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "PromptExtractor //Inspire", "display_name": "Prompt Extractor (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Prompt", "output_node": true}, "GlobalSeed //Inspire": {"input": {"required": {"value": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "mode": ["BOOLEAN", {"default": true, "label_on": "control_before_generate", "label_off": "control_after_generate"}], "action": [["fixed", "increment", "decrement", "randomize", "increment for each node", "decrement for each node", "randomize for each node"]], "last_seed": ["STRING", {"default": ""}]}}, "input_order": {"required": ["value", "mode", "action", "last_seed"]}, "output": [], "output_is_list": [], "output_name": [], "name": "GlobalSeed //Inspire", "display_name": "Global Seed (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Prompt", "output_node": true}, "GlobalSampler //Inspire": {"input": {"required": {"sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]]}}, "input_order": {"required": ["sampler_name", "scheduler"]}, "output": [], "output_is_list": [], "output_name": [], "name": "GlobalSampler //Inspire", "display_name": "Global Sampler (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Prompt", "output_node": true}, "BindImageListPromptList //Inspire": {"input": {"required": {"images": ["IMAGE"], "zipped_prompts": ["ZIPPED_PROMPT"], "default_positive": ["STRING", {"multiline": true, "placeholder": "default positive"}], "default_negative": ["STRING", {"multiline": true, "placeholder": "default negative"}]}}, "input_order": {"required": ["images", "zipped_prompts", "default_positive", "default_negative"]}, "output": ["IMAGE", "STRING", "STRING", "STRING"], "output_is_list": [true, true, true], "output_name": ["image", "positive", "negative", "prompt_label"], "name": "BindImageListPromptList //Inspire", "display_name": "Bind [ImageList, PromptList] (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Prompt", "output_node": false}, "WildcardEncode //Inspire": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "token_normalization": [["none", "mean", "length", "length+mean"]], "weight_interpretation": [["comfy", "A1111", "compel", "comfy++", "down_weight"], {"default": "comfy++"}], "wildcard_text": ["STRING", {"multiline": true, "dynamicPrompts": false, "placeholder": "Wildcard Prompt (User Input)"}], "populated_text": ["STRING", {"multiline": true, "dynamicPrompts": false, "placeholder": "Populated Prompt (Will be generated automatically)"}], "mode": ["BOOLEAN", {"default": true, "label_on": "Populate", "label_off": "Fixed"}], "Select to add LoRA": [["Select the LoRA to add to the text", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["model", "clip", "token_normalization", "weight_interpretation", "wildcard_text", "populated_text", "mode", "Select to add LoRA", "Select to add Wildcard", "seed"]}, "output": ["MODEL", "CLIP", "CONDITIONING", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["model", "clip", "conditioning", "populated_text"], "name": "WildcardEncode //Inspire", "display_name": "Wildcard Encode (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Prompt", "output_node": false}, "PromptBuilder //Inspire": {"input": {"required": {"category": [["Angle of View", "Artists", "Character Types", "Colors", "Composition", "Composition Form", "Lighting", "Negative", "Picture Effect", "Picture Quality", "Setting", "Shot", "Style", "#PLACEHOLDER"]], "preset": [["#PRESET"]], "text": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["category", "preset", "text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "PromptBuilder //Inspire", "display_name": "Prompt Builder (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Prompt", "output_node": false}, "SeedExplorer //Inspire": {"input": {"required": {"latent": ["LATENT"], "seed_prompt": ["STRING", {"multiline": true, "dynamicPrompts": false, "pysssss.autocomplete": false}], "enable_additional": ["BOOLEAN", {"default": true, "label_on": "true", "label_off": "false"}], "additional_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "additional_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "noise_mode": [["GPU(=A1111)", "CPU"]], "initial_batch_seed_mode": [["incremental", "comfy"]]}, "optional": {"variation_method": [["linear", "slerp"]], "model": ["model"]}}, "input_order": {"required": ["latent", "seed_prompt", "enable_additional", "additional_seed", "additional_strength", "noise_mode", "initial_batch_seed_mode"], "optional": ["variation_method", "model"]}, "output": ["NOISE"], "output_is_list": [false], "output_name": ["NOISE"], "name": "SeedExplorer //Inspire", "display_name": "Seed Explorer (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Prompt", "output_node": false}, "ListCounter //Inspire": {"input": {"required": {"signal": ["*"], "base_value": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["signal", "base_value"], "hidden": ["unique_id"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "ListCounter //Inspire", "display_name": "List Counter (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Util", "output_node": false}, "CLIPTextEncodeWithWeight //Inspire": {"input": {"required": {"text": ["STRING", {"multiline": true}], "clip": ["CLIP"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "add_weight": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["text", "clip", "strength", "add_weight"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeWithWeight //Inspire", "display_name": "CLIPTextEncodeWithWeight (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Util", "output_node": false}, "RandomGeneratorForList //Inspire": {"input": {"required": {"signal": ["*"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["signal", "seed"], "hidden": ["unique_id"]}, "output": ["*", "INT"], "output_is_list": [false, false], "output_name": ["signal", "random_value"], "name": "RandomGeneratorForList //Inspire", "display_name": "Random Generator for List (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Util", "output_node": false}, "MakeBasicPipe //Inspire": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "ckpt_key_opt": ["STRING", {"multiline": false, "placeholder": "If empty, use 'ckpt_name' as the key."}], "positive_wildcard_text": ["STRING", {"multiline": true, "dynamicPrompts": false, "placeholder": "Positive Prompt (User Input)"}], "negative_wildcard_text": ["STRING", {"multiline": true, "dynamicPrompts": false, "placeholder": "Negative Prompt (User Input)"}], "Add selection to": ["BOOLEAN", {"default": true, "label_on": "Positive", "label_off": "Negative"}], "Select to add LoRA": [["Select the LoRA to add to the text", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text"]], "wildcard_mode": ["BOOLEAN", {"default": true, "label_on": "Populate", "label_off": "Fixed"}], "positive_populated_text": ["STRING", {"multiline": true, "dynamicPrompts": false, "placeholder": "Populated Positive Prompt (Will be generated automatically)"}], "negative_populated_text": ["STRING", {"multiline": true, "dynamicPrompts": false, "placeholder": "Populated Negative Prompt (Will be generated automatically)"}], "token_normalization": [["none", "mean", "length", "length+mean"]], "weight_interpretation": [["comfy", "A1111", "compel", "comfy++", "down_weight"], {"default": "comfy++"}], "stop_at_clip_layer": ["INT", {"default": -2, "min": -24, "max": -1, "step": 1}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"vae_opt": ["VAE"]}}, "input_order": {"required": ["ckpt_name", "ckpt_key_opt", "positive_wildcard_text", "negative_wildcard_text", "Add selection to", "Select to add LoRA", "Select to add Wildcard", "wildcard_mode", "positive_populated_text", "negative_populated_text", "token_normalization", "weight_interpretation", "stop_at_clip_layer", "seed"], "optional": ["vae_opt"]}, "output": ["BASIC_PIPE", "STRING"], "output_is_list": [false, false], "output_name": ["basic_pipe", "cache_key"], "name": "MakeBasicPipe //Inspire", "display_name": "Make Basic Pipe (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Prompt", "output_node": false}, "RemoveControlNet //Inspire": {"input": {"required": {"conditioning": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "RemoveControlNet //Inspire", "display_name": "Remove ControlNet (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Util", "output_node": false}, "RemoveControlNetFromRegionalPrompts //Inspire": {"input": {"required": {"regional_prompts": ["REGIONAL_PROMPTS"]}}, "input_order": {"required": ["regional_prompts"]}, "output": ["REGIONAL_PROMPTS"], "output_is_list": [false], "output_name": ["REGIONAL_PROMPTS"], "name": "RemoveControlNetFromRegionalPrompts //Inspire", "display_name": "Remove ControlNet [RegionalPrompts] (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Util", "output_node": false}, "CompositeNoise //Inspire": {"input": {"required": {"destination": ["NOISE"], "source": ["NOISE"], "mode": [["center", "left-top", "right-top", "left-bottom", "right-bottom", "xy"]], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["destination", "source", "mode", "x", "y"]}, "output": ["NOISE"], "output_is_list": [false], "output_name": ["NOISE"], "name": "CompositeNoise //Inspire", "display_name": "Composite Noise (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Prompt", "output_node": false}, "LoadImagesFromDir //Inspire": {"input": {"required": {"directory": ["STRING", {"default": ""}]}, "optional": {"image_load_cap": ["INT", {"default": 0, "min": 0, "step": 1}], "start_index": ["INT", {"default": 0, "min": -1, "step": 1}], "load_always": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}]}}, "input_order": {"required": ["directory"], "optional": ["image_load_cap", "start_index", "load_always"]}, "output": ["IMAGE", "MASK", "INT"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "MASK", "INT"], "name": "LoadImagesFromDir //Inspire", "display_name": "Load Image Batch From Dir (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "image", "output_node": false}, "LoadImageListFromDir //Inspire": {"input": {"required": {"directory": ["STRING", {"default": ""}]}, "optional": {"image_load_cap": ["INT", {"default": 0, "min": 0, "step": 1}], "start_index": ["INT", {"default": 0, "min": 0, "step": 1}], "load_always": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}]}}, "input_order": {"required": ["directory"], "optional": ["image_load_cap", "start_index", "load_always"]}, "output": ["IMAGE", "MASK", "STRING"], "output_is_list": [true, true, true], "output_name": ["IMAGE", "MASK", "FILE PATH"], "name": "LoadImageListFromDir //Inspire", "display_name": "Load Image List From Dir (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "image", "output_node": false}, "LoadImage //Inspire": {"input": {"required": {"image": [["00100-3444294236.png", "01115-3441384736-mature ginger guy, laying on field, armpit, sunburnt, blushing, blued eyes, smile, tank top, muscular, facial hair, moustache ,.png", "0c42073e550d6ae9cb7624ad1b2ee53d1d4e8c69_high.webp", "11121_158078841563e50810b30c1.jpg", "1313766545.png", "2024-08-14ComfyUI_00004_.png", "33097901.jpg", "33246906.jpg", "360_F_562816292_d7bYLVGfttt68HKFkOc4f2QKtWUg8Q5n.jpg", "381543ce-3045-4381-9b52-676686caed8f.jpg", "AnimateDiff_00037.mp4", "BGDK748BV7YGRQNF7P3CDK8910 (1).jpeg", "ComfyUI_00074_.png", "ComfyUI_00078_.png", "ComfyUI_00091_.png", "ComfyUI_00219_.png", "ComfyUI_00222_.png", "ComfyUI_00808_.png", "ComfyUI_00809_.png", "ComfyUI_00810_.png", "ComfyUI_00813_.png", "ComfyUI_00815_.png", "ComfyUI_00818_.png", "ComfyUI_00819_.png", "ComfyUI_00842_.png", "ComfyUI_temp_alxcm_00001_.png", "ComfyUI_temp_ayutp_00001_.png", "ComfyUI_temp_bvpdk_00001_.png", "ComfyUI_temp_bvpdk_00004_.png", "ComfyUI_temp_cgbmm_00001_.png", "ComfyUI_temp_chusq_00001_.png", "ComfyUI_temp_doxtg_00002_.png", "ComfyUI_temp_ecxhs_00001_.png", "ComfyUI_temp_ecxhs_00004_.png", "ComfyUI_temp_ecxhs_00006_ (1).png", "ComfyUI_temp_ecxhs_00006_.png", "ComfyUI_temp_ecxhs_00008_.png", "ComfyUI_temp_ecxhs_00010_.png", "ComfyUI_temp_fqjhe_00001_.png", "ComfyUI_temp_fqjhe_00016_.png", "ComfyUI_temp_gxxzz_00001_.png", "ComfyUI_temp_hlvpl_00001_.png", "ComfyUI_temp_ipugi_00131_.png", "ComfyUI_temp_jluvj_00001_.png", "ComfyUI_temp_kteza_00001_.png", "ComfyUI_temp_kubpn_00003_.png", "ComfyUI_temp_lviic_00009_.png", "ComfyUI_temp_lzhyu_00004_.png", "ComfyUI_temp_nmjmf_00001_.png", "ComfyUI_temp_oqypc_00001_.png", "ComfyUI_temp_oqypc_00004_ (1).png", "ComfyUI_temp_oufve_00001_.png", "ComfyUI_temp_pukae_00002_.png", "ComfyUI_temp_qakbs_00001_.png", "ComfyUI_temp_rdanj_00004_.png", "ComfyUI_temp_rqrpi_00001_.png", "ComfyUI_temp_rsiuu_00005_.png", "ComfyUI_temp_rtbjq_00004_.png", "ComfyUI_temp_toyue_00002_.png", "ComfyUI_temp_tqaav_00002_.png", "ComfyUI_temp_txndi_00002_.png", "Guy_Mask_5.png", "Guy_Matcap_5.png", "Guy_Outline_5.png", "H100Test_00015_.png", "H100Test_00016_.png", "H100Test_00034_.png", "IMG_3440.png", "IMG_6129.png", "MAsk.png", "Mario.webp", "MarkuryFLUX_00003_.png", "MarkuryFLUX_00005_.png", "MarkuryFLUX_00022_.png", "MarkuryFLUX_00036_.png", "MarkuryFLUX_00037_.png", "Mask_2 (1).png", "Mask_2.png", "Matcap.png", "Outline.png", "Outline_2.png", "PB-_temp_bxspr_00001_.png", "PNG image.jpeg", "Playbook_00.png", "Playbook_22.png", "Playbook_47.png", "Playbook__00001_ (1) (1).png", "Playbook__00001_ (1).png", "Playbook__00001_ (2).png", "Playbook__00001_.png", "Playbook__00003_ (4).png", "Playbook__00016_.png", "Playbook__00018_.png", "Playbook__00031_.png", "Playbook__00034_.png", "Playbook__00045_.png", "Playbook__00058_.png", "Playbook__00065_.png", "Playbook__00113_.png", "Playbook__00178_.png", "Playbook__00183_.png", "Playbook__00184_.png", "Playbook__00205_.png", "Playbook__00314.mp4", "Playbook__00348_.png", "Playbook__00417_.png", "Playbook__00419_ (1).png", "Playbook__00419_.png", "SDXL-Lightning_00012_.png", "SDXL_ControlNet_Image.png", "archivs_upscalewithflux.png", "beauty (1).png", "beauty (2).png", "beauty (3).png", "beauty (4).png", "beauty-0 (11).png", "beauty-0 (21).png", "beauty-0 (36).png", "beauty-0 (9).png", "beauty-0 - 2024-07-02T105656.553.png", "beauty.png", "ca-times.brightspotcdn.jpg", "canny.png", "canny_res_00003_ (1).png", "canny_res_00003_.png", "canny_res_00014_.png", "canny_res_00038_.png", "canny_res_00040_.png", "dancer-front-depth.png", "dancer-front-mask.png", "dancer-front-outline.png", "depth (1).png", "depth (2).png", "depth (3).png", "depth (4).png", "depth (5).png", "depth-0 (16).png", "depth-0 (18).png", "depth-0 (19).png", "depth-0 (31).png", "depth-0 (38).png", "depth-0 - 2024-07-02T105656.499.png", "depth.png", "depth0000 (1).png", "depth0000 (2).png", "depth0000 (3).png", "depth0000.png", "depth0001.png", "depth0043.png", "download.png", "example.png", "file.txt", "img_BmzB6PyCLHnFfVvV.png", "img_DpgERK4DxUAwLftG.png", "img_QYLbD1uzHC1nFbAE.png", "img_ULjhfQdRpzpEnmug.png", "img_Xipc5yPPxgtt1QGj.png", "img_iBZAGHnJ2Bv3f1XS.png", "inputs_img_DLe7eAeVKcd5aihb copy.png", "inputs_img_DLe7eAeVKcd5aihb.png", "inputs_img_EPMSddrLooFQ1YVD.png", "inputs_img_JLRRUVkofX1vCmjx.png", "inputs_img_Jvze5V927RFFAHX5.png", "inputs_img_KiPSrfifuNwC54ep.png", "inputs_img_UBc9tSV7cFAx87FQ.png", "inputs_img_Uf1LEsrNL4ovoWpz copy.png", "inputs_img_Uf1LEsrNL4ovoWpz.png", "inputs_img_Yhq6WtF5vDhoS4r5.png", "inputs_img_bG6odzGr8EZUPK1u.png", "inputs_img_fp87ttHy7b3hLkDg.png", "inputs_img_pKYznktDTwbYPGcL.png", "inputs_img_qyyvpcueAihTw9YV.png", "istockphoto-1325701162-612x612.jpg", "large-elephant-herd-walking-dust-savuti-botswana-towards-camera-196186738.webp", "manwithsign-depth.png", "manwithsign-mask.png", "manwithsign-outline.png", "mask (1).png", "mask (10).png", "mask (2).png", "mask (3).png", "mask (4).png", "mask (5).png", "mask (6).png", "mask (7).png", "mask (8).png", "mask (9).png", "mask-0 (11).png", "mask-0 (24).png", "mask-0 (28).png", "mask-0 (9).png", "mask-0 - 2024-07-02T105656.507.png", "mask.png", "masks.png", "night vision.jpg", "outline (1).png", "outline (2).png", "outline (3).png", "outline (4).png", "outline-0 (11).png", "outline-0 (31).png", "outline-0 (9).png", "outline-0 - 2024-07-02T105656.503.png", "outline.png", "outline0000 (1).png", "outline0000 (2).png", "outline0000 (3).png", "outline0000.png", "outline0001.png", "outline0043.png", "playbook_59b784a6-af19-4b44-9a45-1e98bae3c9e5.png", "playbook_e2a76fa6-15a6-41d2-922a-29dd68bfd3e3.png", "refernece.jpg", "result_14.png", "rgthree.compare._temp_rzpfz_00007_.png", "safari.jpg", "undefined_image (1).png", "walking-depth.png", "walking-mask.png", "walking-outline.png", "#DATA"], {"image_upload": true}], "image_data": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["image", "image_data"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "LoadImage //Inspire", "display_name": "Load Image (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/image", "output_node": false}, "ChangeImageBatchSize //Inspire": {"input": {"required": {"image": ["IMAGE"], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "mode": [["simple"]]}}, "input_order": {"required": ["image", "batch_size", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ChangeImageBatchSize //Inspire", "display_name": "Change Image Batch Size (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Util", "output_node": false}, "ChangeLatentBatchSize //Inspire": {"input": {"required": {"latent": ["LATENT"], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "mode": [["simple"]]}}, "input_order": {"required": ["latent", "batch_size", "mode"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "ChangeLatentBatchSize //Inspire", "display_name": "Change Latent Batch Size (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Util", "output_node": false}, "ImageBatchSplitter //Inspire": {"input": {"required": {"images": ["IMAGE"], "split_count": ["INT", {"default": 4, "min": 0, "max": 50, "step": 1}]}}, "input_order": {"required": ["images", "split_count"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBatchSplitter //Inspire", "display_name": "Image Batch Splitter (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Util", "output_node": false}, "LatentBatchSplitter //Inspire": {"input": {"required": {"latent": ["LATENT"], "split_count": ["INT", {"default": 4, "min": 0, "max": 50, "step": 1}]}}, "input_order": {"required": ["latent", "split_count"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentBatchSplitter //Inspire", "display_name": "Latent Batch Splitter (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Util", "output_node": false}, "ColorMapToMasks //Inspire": {"input": {"required": {"color_map": ["IMAGE"], "min_pixels": ["INT", {"default": 500, "min": 1, "max": 18446744073709551615, "step": 1}], "max_count": ["INT", {"default": 5, "min": 0, "max": 1000, "step": 1}]}}, "input_order": {"required": ["color_map", "min_pixels", "max_count"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ColorMapToMasks //Inspire", "display_name": "Color Map To Masks (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Util", "output_node": false}, "SelectNthMask //Inspire": {"input": {"required": {"masks": ["MASK"], "idx": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "step": 1}]}}, "input_order": {"required": ["masks", "idx"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "SelectNthMask //Inspire", "display_name": "Select Nth Mask (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Util", "output_node": false}, "RegionalPromptSimple //Inspire": {"input": {"required": {"basic_pipe": ["BASIC_PIPE"], "mask": ["MASK"], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "wildcard_prompt": ["STRING", {"multiline": true, "dynamicPrompts": false, "placeholder": "wildcard prompt"}], "controlnet_in_pipe": ["BOOLEAN", {"default": false, "label_on": "Keep", "label_off": "Override"}], "sigma_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}, "optional": {"variation_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "variation_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "variation_method": [["linear", "slerp"]], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["basic_pipe", "mask", "cfg", "sampler_name", "scheduler", "wildcard_prompt", "controlnet_in_pipe", "sigma_factor"], "optional": ["variation_seed", "variation_strength", "variation_method", "scheduler_func_opt"]}, "output": ["REGIONAL_PROMPTS"], "output_is_list": [false], "output_name": ["REGIONAL_PROMPTS"], "name": "RegionalPromptSimple //Inspire", "display_name": "Regional Prompt Simple (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Regional", "output_node": false}, "RegionalPromptColorMask //Inspire": {"input": {"required": {"basic_pipe": ["BASIC_PIPE"], "color_mask": ["IMAGE"], "mask_color": ["STRING", {"multiline": false, "default": "#FFFFFF"}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "wildcard_prompt": ["STRING", {"multiline": true, "dynamicPrompts": false, "placeholder": "wildcard prompt"}], "controlnet_in_pipe": ["BOOLEAN", {"default": false, "label_on": "Keep", "label_off": "Override"}], "sigma_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}, "optional": {"variation_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "variation_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "variation_method": [["linear", "slerp"]], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["basic_pipe", "color_mask", "mask_color", "cfg", "sampler_name", "scheduler", "wildcard_prompt", "controlnet_in_pipe", "sigma_factor"], "optional": ["variation_seed", "variation_strength", "variation_method", "scheduler_func_opt"]}, "output": ["REGIONAL_PROMPTS", "MASK"], "output_is_list": [false, false], "output_name": ["REGIONAL_PROMPTS", "MASK"], "name": "RegionalPromptColorMask //Inspire", "display_name": "Regional Prompt By Color Mask (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Regional", "output_node": false}, "RegionalConditioningSimple //Inspire": {"input": {"required": {"clip": ["CLIP"], "mask": ["MASK"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]], "prompt": ["STRING", {"multiline": true, "placeholder": "prompt"}]}}, "input_order": {"required": ["clip", "mask", "strength", "set_cond_area", "prompt"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "RegionalConditioningSimple //Inspire", "display_name": "Regional Conditioning Simple (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Regional", "output_node": false}, "RegionalConditioningColorMask //Inspire": {"input": {"required": {"clip": ["CLIP"], "color_mask": ["IMAGE"], "mask_color": ["STRING", {"multiline": false, "default": "#FFFFFF"}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]], "prompt": ["STRING", {"multiline": true, "placeholder": "prompt"}]}, "optional": {"dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}]}}, "input_order": {"required": ["clip", "color_mask", "mask_color", "strength", "set_cond_area", "prompt"], "optional": ["dilation"]}, "output": ["CONDITIONING", "MASK"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "MASK"], "name": "RegionalConditioningColorMask //Inspire", "display_name": "Regional Conditioning By Color Mask (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Regional", "output_node": false}, "RegionalIPAdapterMask //Inspire": {"input": {"required": {"mask": ["MASK"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 0.7, "min": -1, "max": 3, "step": 0.05}], "noise": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise", "composition precise"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "unfold_batch": ["BOOLEAN", {"default": false}]}, "optional": {"faceid_v2": ["BOOLEAN", {"default": false}], "weight_v2": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "neg_image": ["IMAGE"]}}, "input_order": {"required": ["mask", "image", "weight", "noise", "weight_type", "start_at", "end_at", "unfold_batch"], "optional": ["faceid_v2", "weight_v2", "combine_embeds", "neg_image"]}, "output": ["REGIONAL_IPADAPTER"], "output_is_list": [false], "output_name": ["REGIONAL_IPADAPTER"], "name": "RegionalIPAdapterMask //Inspire", "display_name": "Regional IPAdapter Mask (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Regional", "output_node": false}, "RegionalIPAdapterColorMask //Inspire": {"input": {"required": {"color_mask": ["IMAGE"], "mask_color": ["STRING", {"multiline": false, "default": "#FFFFFF"}], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 0.7, "min": -1, "max": 3, "step": 0.05}], "noise": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise", "composition precise"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "unfold_batch": ["BOOLEAN", {"default": false}]}, "optional": {"faceid_v2": ["BOOLEAN", {"default": false}], "weight_v2": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "neg_image": ["IMAGE"]}}, "input_order": {"required": ["color_mask", "mask_color", "image", "weight", "noise", "weight_type", "start_at", "end_at", "unfold_batch"], "optional": ["faceid_v2", "weight_v2", "combine_embeds", "neg_image"]}, "output": ["REGIONAL_IPADAPTER", "MASK"], "output_is_list": [false, false], "output_name": ["REGIONAL_IPADAPTER", "MASK"], "name": "RegionalIPAdapterColorMask //Inspire", "display_name": "Regional IPAdapter By Color Mask (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Regional", "output_node": false}, "RegionalIPAdapterEncodedMask //Inspire": {"input": {"required": {"mask": ["MASK"], "embeds": ["EMBEDS"], "weight": ["FLOAT", {"default": 0.7, "min": -1, "max": 3, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise", "composition precise"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "unfold_batch": ["BOOLEAN", {"default": false}]}, "optional": {"neg_embeds": ["EMBEDS"]}}, "input_order": {"required": ["mask", "embeds", "weight", "weight_type", "start_at", "end_at", "unfold_batch"], "optional": ["neg_embeds"]}, "output": ["REGIONAL_IPADAPTER"], "output_is_list": [false], "output_name": ["REGIONAL_IPADAPTER"], "name": "RegionalIPAdapterEncodedMask //Inspire", "display_name": "Regional IPAdapter Encoded Mask (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Regional", "output_node": false}, "RegionalIPAdapterEncodedColorMask //Inspire": {"input": {"required": {"color_mask": ["IMAGE"], "mask_color": ["STRING", {"multiline": false, "default": "#FFFFFF"}], "embeds": ["EMBEDS"], "weight": ["FLOAT", {"default": 0.7, "min": -1, "max": 3, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise", "composition precise"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "unfold_batch": ["BOOLEAN", {"default": false}]}, "optional": {"neg_embeds": ["EMBEDS"]}}, "input_order": {"required": ["color_mask", "mask_color", "embeds", "weight", "weight_type", "start_at", "end_at", "unfold_batch"], "optional": ["neg_embeds"]}, "output": ["REGIONAL_IPADAPTER", "MASK"], "output_is_list": [false, false], "output_name": ["REGIONAL_IPADAPTER", "MASK"], "name": "RegionalIPAdapterEncodedColorMask //Inspire", "display_name": "Regional IPAdapter Encoded By Color Mask (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Regional", "output_node": false}, "RegionalSeedExplorerMask //Inspire": {"input": {"required": {"mask": ["MASK"], "noise": ["NOISE"], "seed_prompt": ["STRING", {"multiline": true, "dynamicPrompts": false, "pysssss.autocomplete": false}], "enable_additional": ["BOOLEAN", {"default": true, "label_on": "true", "label_off": "false"}], "additional_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "additional_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "noise_mode": [["GPU(=A1111)", "CPU"]]}, "optional": {"variation_method": [["linear", "slerp"]]}}, "input_order": {"required": ["mask", "noise", "seed_prompt", "enable_additional", "additional_seed", "additional_strength", "noise_mode"], "optional": ["variation_method"]}, "output": ["NOISE"], "output_is_list": [false], "output_name": ["NOISE"], "name": "RegionalSeedExplorerMask //Inspire", "display_name": "Regional Seed Explorer By Mask (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Regional", "output_node": false}, "RegionalSeedExplorerColorMask //Inspire": {"input": {"required": {"color_mask": ["IMAGE"], "mask_color": ["STRING", {"multiline": false, "default": "#FFFFFF"}], "noise": ["NOISE"], "seed_prompt": ["STRING", {"multiline": true, "dynamicPrompts": false, "pysssss.autocomplete": false}], "enable_additional": ["BOOLEAN", {"default": true, "label_on": "true", "label_off": "false"}], "additional_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "additional_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "noise_mode": [["GPU(=A1111)", "CPU"]]}, "optional": {"variation_method": [["linear", "slerp"]]}}, "input_order": {"required": ["color_mask", "mask_color", "noise", "seed_prompt", "enable_additional", "additional_seed", "additional_strength", "noise_mode"], "optional": ["variation_method"]}, "output": ["NOISE", "MASK"], "output_is_list": [false, false], "output_name": ["NOISE", "MASK"], "name": "RegionalSeedExplorerColorMask //Inspire", "display_name": "Regional Seed Explorer By Color Mask (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Regional", "output_node": false}, "ToIPAdapterPipe //Inspire": {"input": {"required": {"ipadapter": ["IPADAPTER"], "model": ["MODEL"]}, "optional": {"clip_vision": ["CLIP_VISION"], "insightface": ["INSIGHTFACE"]}}, "input_order": {"required": ["ipadapter", "model"], "optional": ["clip_vision", "insightface"]}, "output": ["IPADAPTER_PIPE"], "output_is_list": [false], "output_name": ["IPADAPTER_PIPE"], "name": "ToIPAdapterPipe //Inspire", "display_name": "ToIPAdapterPipe (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Util", "output_node": false}, "FromIPAdapterPipe //Inspire": {"input": {"required": {"ipadapter_pipe": ["IPADAPTER_PIPE"]}}, "input_order": {"required": ["ipadapter_pipe"]}, "output": ["IPADAPTER", "MODEL", "CLIP_VISION", "INSIGHTFACE"], "output_is_list": [false, false, false, false], "output_name": ["ipadapter", "model", "clip_vision", "insight_face"], "name": "FromIPAdapterPipe //Inspire", "display_name": "FromIPAdapterPipe (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Util", "output_node": false}, "ApplyRegionalIPAdapters //Inspire": {"input": {"required": {"ipadapter_pipe": ["IPADAPTER_PIPE"], "regional_ipadapter1": ["REGIONAL_IPADAPTER"]}}, "input_order": {"required": ["ipadapter_pipe", "regional_ipadapter1"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ApplyRegionalIPAdapters //Inspire", "display_name": "Apply Regional IPAdapters (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Regional", "output_node": false}, "RegionalCFG //Inspire": {"input": {"required": {"model": ["MODEL"], "mask": ["MASK"]}}, "input_order": {"required": ["model", "mask"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "RegionalCFG //Inspire", "display_name": "Regional CFG (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Regional", "output_node": false}, "ColorMaskToDepthMask //Inspire": {"input": {"required": {"color_mask": ["IMAGE"], "spec": ["STRING", {"multiline": true, "default": "#FF0000:1.0\n#000000:1.0"}], "base_value": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0}], "dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "flatten_method": [["override", "sum", "max"]]}}, "input_order": {"required": ["color_mask", "spec", "base_value", "dilation", "flatten_method"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ColorMaskToDepthMask //Inspire", "display_name": "Color Mask To Depth Mask (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Regional", "output_node": false}, "KSamplerProgress //Inspire": {"input": {"required": {"model": ["MODEL"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "noise_mode": [["GPU(=A1111)", "CPU"]], "interval": ["INT", {"default": 1, "min": 1, "max": 10000}], "omit_start_latent": ["BOOLEAN", {"default": true, "label_on": "True", "label_off": "False"}], "omit_final_latent": ["BOOLEAN", {"default": false, "label_on": "True", "label_off": "False"}]}, "optional": {"scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["model", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "denoise", "noise_mode", "interval", "omit_start_latent", "omit_final_latent"], "optional": ["scheduler_func_opt"]}, "output": ["LATENT", "LATENT"], "output_is_list": [false, false], "output_name": ["latent", "progress_latent"], "name": "KSamplerProgress //Inspire", "display_name": "KSampler Progress (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/analysis", "output_node": false}, "KSamplerAdvancedProgress //Inspire": {"input": {"required": {"model": ["MODEL"], "add_noise": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.5, "round": 0.01}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at_step": ["INT", {"default": 10000, "min": 0, "max": 10000}], "noise_mode": [["GPU(=A1111)", "CPU"]], "return_with_leftover_noise": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}], "interval": ["INT", {"default": 1, "min": 1, "max": 10000}], "omit_start_latent": ["BOOLEAN", {"default": false, "label_on": "True", "label_off": "False"}], "omit_final_latent": ["BOOLEAN", {"default": false, "label_on": "True", "label_off": "False"}]}, "optional": {"prev_progress_latent_opt": ["LATENT"], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["model", "add_noise", "noise_seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "start_at_step", "end_at_step", "noise_mode", "return_with_leftover_noise", "interval", "omit_start_latent", "omit_final_latent"], "optional": ["prev_progress_latent_opt", "scheduler_func_opt"]}, "output": ["LATENT", "LATENT"], "output_is_list": [false, false], "output_name": ["latent", "progress_latent"], "name": "KSamplerAdvancedProgress //Inspire", "display_name": "KSampler Advanced Progress (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/analysis", "output_node": false}, "ScheduledCFGGuider //Inspire": {"input": {"required": {"model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "sigmas": ["SIGMAS"], "from_cfg": ["FLOAT", {"default": 6.5, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "to_cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "schedule": [["linear", "log", "exp", "cos"], {"default": "log"}]}}, "input_order": {"required": ["model", "positive", "negative", "sigmas", "from_cfg", "to_cfg", "schedule"]}, "output": ["GUIDER", "SIGMAS"], "output_is_list": [false, false], "output_name": ["GUIDER", "SIGMAS"], "name": "ScheduledCFGGuider //Inspire", "display_name": "Scheduled CFGGuider (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "sampling/custom_sampling/guiders", "output_node": false}, "ScheduledPerpNegCFGGuider //Inspire": {"input": {"required": {"model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "empty_conditioning": ["CONDITIONING"], "neg_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01}], "sigmas": ["SIGMAS"], "from_cfg": ["FLOAT", {"default": 6.5, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "to_cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "schedule": [["linear", "log", "exp", "cos"], {"default": "log"}]}}, "input_order": {"required": ["model", "positive", "negative", "empty_conditioning", "neg_scale", "sigmas", "from_cfg", "to_cfg", "schedule"]}, "output": ["GUIDER", "SIGMAS"], "output_is_list": [false, false], "output_name": ["GUIDER", "SIGMAS"], "name": "ScheduledPerpNegCFGGuider //Inspire", "display_name": "Scheduled PerpNeg CFGGuider (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "sampling/custom_sampling/guiders", "output_node": false}, "CacheBackendData //Inspire": {"input": {"required": {"key": ["STRING", {"multiline": false, "placeholder": "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)"}], "tag": ["STRING", {"multiline": false, "placeholder": "Tag: short description"}], "data": ["*"]}}, "input_order": {"required": ["key", "tag", "data"]}, "output": ["*"], "output_is_list": [false], "output_name": ["data opt"], "name": "CacheBackendData //Inspire", "display_name": "Cache Backend Data (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Backend", "output_node": true}, "CacheBackendDataNumberKey //Inspire": {"input": {"required": {"key": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "tag": ["STRING", {"multiline": false, "placeholder": "Tag: short description"}], "data": ["*"]}}, "input_order": {"required": ["key", "tag", "data"]}, "output": ["*"], "output_is_list": [false], "output_name": ["data opt"], "name": "CacheBackendDataNumberKey //Inspire", "display_name": "Cache Backend Data [NumberKey] (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Backend", "output_node": true}, "CacheBackendDataList //Inspire": {"input": {"required": {"key": ["STRING", {"multiline": false, "placeholder": "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)"}], "tag": ["STRING", {"multiline": false, "placeholder": "Tag: short description"}], "data": ["*"]}}, "input_order": {"required": ["key", "tag", "data"]}, "output": ["*"], "output_is_list": [true], "output_name": ["data opt"], "name": "CacheBackendDataList //Inspire", "display_name": "Cache Backend Data List (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Backend", "output_node": true}, "CacheBackendDataNumberKeyList //Inspire": {"input": {"required": {"key": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "tag": ["STRING", {"multiline": false, "placeholder": "Tag: short description"}], "data": ["*"]}}, "input_order": {"required": ["key", "tag", "data"]}, "output": ["*"], "output_is_list": [true], "output_name": ["data opt"], "name": "CacheBackendDataNumberKeyList //Inspire", "display_name": "Cache Backend Data List [NumberKey] (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Backend", "output_node": true}, "RetrieveBackendData //Inspire": {"input": {"required": {"key": ["STRING", {"multiline": false, "placeholder": "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)"}]}}, "input_order": {"required": ["key"]}, "output": ["*"], "output_is_list": [true], "output_name": ["data"], "name": "RetrieveBackendData //Inspire", "display_name": "Retrieve Backend Data (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Backend", "output_node": false}, "RetrieveBackendDataNumberKey //Inspire": {"input": {"required": {"key": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["key"]}, "output": ["*"], "output_is_list": [true], "output_name": ["data"], "name": "RetrieveBackendDataNumberKey //Inspire", "display_name": "Retrieve Backend Data [NumberKey] (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Backend", "output_node": false}, "RemoveBackendData //Inspire": {"input": {"required": {"key": ["STRING", {"multiline": false, "placeholder": "Input data key ('*' = clear all)"}]}, "optional": {"signal_opt": ["*"]}}, "input_order": {"required": ["key"], "optional": ["signal_opt"]}, "output": ["*"], "output_is_list": [false], "output_name": ["signal"], "name": "RemoveBackendData //Inspire", "display_name": "Remove Backend Data (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Backend", "output_node": true}, "RemoveBackendDataNumberKey //Inspire": {"input": {"required": {"key": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"signal_opt": ["*"]}}, "input_order": {"required": ["key"], "optional": ["signal_opt"]}, "output": ["*"], "output_is_list": [false], "output_name": ["signal"], "name": "RemoveBackendDataNumberKey //Inspire", "display_name": "Remove Backend Data [NumberKey] (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Backend", "output_node": true}, "ShowCachedInfo //Inspire": {"input": {"required": {"cache_info": ["STRING", {"multiline": true, "default": ""}], "key": ["STRING", {"multiline": false, "default": ""}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["cache_info", "key"], "hidden": ["unique_id"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ShowCachedInfo //Inspire", "display_name": "Show Cached Info (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Backend", "output_node": true}, "CheckpointLoaderSimpleShared //Inspire": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "key_opt": ["STRING", {"multiline": false, "placeholder": "If empty, use 'ckpt_name' as the key."}]}, "optional": {"mode": [["Auto", "Override Cache", "Read Only"]]}}, "input_order": {"required": ["ckpt_name", "key_opt"], "optional": ["mode"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["model", "clip", "vae", "cache key"], "name": "CheckpointLoaderSimpleShared //Inspire", "display_name": "Shared Checkpoint Loader (Inspire)", "description": "Loads a diffusion model checkpoint, diffusion models are used to denoise latents.", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Backend", "output_node": false, "output_tooltips": ["The model used for denoising latents.", "The CLIP model used for encoding text prompts.", "The VAE model used for encoding and decoding images to and from latent space."]}, "StableCascade_CheckpointLoader //Inspire": {"input": {"required": {"stage_b": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"], {"default": "CRM.pth"}], "key_opt_b": ["STRING", {"multiline": false, "placeholder": "If empty, use 'stage_b' as the key."}], "stage_c": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"], {"default": "CRM.pth"}], "key_opt_c": ["STRING", {"multiline": false, "placeholder": "If empty, use 'stage_c' as the key."}], "cache_mode": [["none", "stage_b", "stage_c", "all"], {"default": "none"}]}}, "input_order": {"required": ["stage_b", "key_opt_b", "stage_c", "key_opt_c", "cache_mode"]}, "output": ["MODEL", "VAE", "MODEL", "VAE", "CLIP_VISION", "CLIP", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["b_model", "b_vae", "c_model", "c_vae", "c_clip_vision", "clip", "key_b", "key_c"], "name": "StableCascade_CheckpointLoader //Inspire", "display_name": "Stable Cascade Checkpoint Loader (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Backend", "output_node": false}, "FloatRange //Inspire": {"input": {"required": {"start": ["FLOAT", {"default": 0.0, "min": -100.0, "max": 100.0, "step": 1e-09}], "stop": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 1e-09}], "step": ["FLOAT", {"default": 0.01, "min": 0.0, "max": 100.0, "step": 1e-09}], "limit": ["INT", {"default": 100, "min": 2, "max": 4096, "step": 1}], "ensure_end": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}]}}, "input_order": {"required": ["start", "stop", "step", "limit", "ensure_end"]}, "output": ["FLOAT"], "output_is_list": [true], "output_name": ["FLOAT"], "name": "FloatRange //Inspire", "display_name": "Float Range (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Util", "output_node": false}, "ConcatConditioningsWithMultiplier //Inspire": {"input": {"required": {"conditioning1": ["CONDITIONING"]}, "optional": {"multiplier1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning1"], "optional": ["multiplier1"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConcatConditioningsWithMultiplier //Inspire", "display_name": "Concat Conditionings with Multiplier (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/__for_testing", "output_node": false}, "ConditioningUpscale //Inspire": {"input": {"required": {"conditioning": ["CONDITIONING"], "scalar": ["INT", {"default": 2, "min": 1, "max": 100, "step": 0.5}]}}, "input_order": {"required": ["conditioning", "scalar"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningUpscale //Inspire", "display_name": "Conditioning Upscale (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/conditioning", "output_node": false}, "ConditioningStretch //Inspire": {"input": {"required": {"conditioning": ["CONDITIONING"], "resolutionX": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}], "resolutionY": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}], "newWidth": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}], "newHeight": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["conditioning", "resolutionX", "resolutionY", "newWidth", "newHeight"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningStretch //Inspire", "display_name": "Conditioning Stretch (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/conditioning", "output_node": false}, "IPAdapterModelHelper //Inspire": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "preset": [["SD1.5", "SD1.5 Light v11", "SD1.5 Light", "SD1.5 Plus", "SD1.5 Plus Face", "SD1.5 Full Face", "SD1.5 ViT-G", "SDXL", "SDXL ViT-H", "SDXL Plus ViT-H", "SDXL Plus Face ViT-H", "SD1.5 FaceID", "SD1.5 FaceID Plus v2", "SD1.5 FaceID Plus", "SD1.5 FaceID Portrait v11", "SD1.5 FaceID Portrait", "SDXL FaceID", "SDXL FaceID Portrait", "SDXL FaceID Portrait unnorm", "SD1.5 Plus Composition", "SDXL Plus Composition"]], "lora_strength_model": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}], "lora_strength_clip": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}], "insightface_provider": [["CPU", "CUDA", "ROCM"]], "cache_mode": [["insightface only", "clip_vision only", "all", "none"], {"default": "insightface only"}]}, "optional": {"insightface_model_name": [["buffalo_l", "antelopev2"]]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["model", "clip", "preset", "lora_strength_model", "lora_strength_clip", "insightface_provider", "cache_mode"], "optional": ["insightface_model_name"], "hidden": ["unique_id"]}, "output": ["IPADAPTER_PIPE", "IPADAPTER", "CLIP_VISION", "INSIGHTFACE", "MODEL", "CLIP", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["IPADAPTER_PIPE", "IPADAPTER", "CLIP_VISION", "INSIGHTFACE", "MODEL", "CLIP", "insightface_cache_key", "clip_vision_cache_key"], "name": "IPAdapterModelHelper //Inspire", "display_name": "IPAdapter Model Helper (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/models", "output_node": false}, "RGB_HexToHSV //Inspire": {"input": {"required": {"rgb_hex": ["STRING", {"defaultInput": true}]}}, "input_order": {"required": ["rgb_hex"]}, "output": ["FLOAT", "FLOAT", "FLOAT"], "output_is_list": [false, false, false], "output_name": ["hue", "saturation", "value"], "name": "RGB_HexToHSV //Inspire", "display_name": "RGB Hex To HSV (Inspire)", "description": "", "python_module": "custom_nodes.ComfyUI-Inspire-Pack", "category": "InspirePack/Util", "output_node": false}, "ttN tinyLoader": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "config_name": [["Default", "anything_v3.yaml", "v1-inference.yaml", "v1-inference_clip_skip_2.yaml", "v1-inference_clip_skip_2_fp16.yaml", "v1-inference_fp16.yaml", "v1-inpainting-inference.yaml", "v2-inference-v.yaml", "v2-inference-v_fp32.yaml", "v2-inference.yaml", "v2-inference_fp32.yaml", "v2-inpainting-inference.yaml"], {"default": "Default"}], "sampling": [["Default", "eps", "v_prediction", "lcm", "x0"], {"default": "Default"}], "zsnr": ["BOOLEAN", {"default": false}], "cfg_rescale_mult": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "vae_name": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "clip_skip": ["INT", {"default": -1, "min": -24, "max": 0, "step": 1}], "empty_latent_aspect": [["width x height [custom]", "512 x 512 [S] 1:1", "768 x 768 [S] 1:1", "910 x 910 [S] 1:1", "512 x 682 [P] 3:4", "512 x 768 [P] 2:3", "512 x 910 [P] 9:16", "682 x 512 [L] 4:3", "768 x 512 [L] 3:2", "910 x 512 [L] 16:9", "1024 x 1024 [S] 1:1", "512 x 1024 [P] 1:2", "1024 x 512 [L] 2:1", "640 x 1536 [P] 9:21", "704 x 1472 [P] 9:19", "768 x 1344 [P] 9:16", "768 x 1216 [P] 5:8", "832 x 1216 [P] 2:3", "896 x 1152 [P] 3:4", "1536 x 640 [L] 21:9", "1472 x 704 [L] 19:9", "1344 x 768 [L] 16:9", "1216 x 768 [L] 8:5", "1216 x 832 [L] 3:2", "1152 x 896 [L] 4:3"], {"default": "512 x 512 [S] 1:1"}], "empty_latent_width": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}, "hidden": {"prompt": "PROMPT", "ttNnodeVersion": "1.1.0", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "config_name", "sampling", "zsnr", "cfg_rescale_mult", "vae_name", "clip_skip", "empty_latent_aspect", "empty_latent_width", "empty_latent_height", "batch_size"], "hidden": ["prompt", "ttNnodeVersion", "my_unique_id"]}, "output": ["MODEL", "LATENT", "VAE", "CLIP", "INT", "INT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["model", "latent", "vae", "clip", "width", "height"], "name": "ttN tinyLoader", "display_name": "tinyLoader", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/base", "output_node": false}, "ttN conditioning": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "loras": ["STRING", {"placeholder": "<lora:loraName:weight:optClipWeight>", "multiline": true}], "positive": ["STRING", {"default": "Positive", "multiline": true, "dynamicPrompts": true}], "positive_token_normalization": [["none", "mean", "length", "length+mean"]], "positive_weight_interpretation": [["comfy", "A1111", "compel", "comfy++", "down_weight"]], "negative": ["STRING", {"default": "Negative", "multiline": true, "dynamicPrompts": true}], "negative_token_normalization": [["none", "mean", "length", "length+mean"]], "negative_weight_interpretation": [["comfy", "A1111", "compel", "comfy++", "down_weight"]]}, "optional": {"optional_lora_stack": ["LORA_STACK"], "prepend_positive": ["STRING", {"forceInput": true}], "prepend_negative": ["STRING", {"forceInput": true}]}, "hidden": {"ttNnodeVersion": "1.0.0", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["model", "clip", "loras", "positive", "positive_token_normalization", "positive_weight_interpretation", "negative", "negative_token_normalization", "negative_weight_interpretation"], "optional": ["optional_lora_stack", "prepend_positive", "prepend_negative"], "hidden": ["ttNnodeVersion", "my_unique_id"]}, "output": ["MODEL", "CONDITIONING", "CONDITIONING", "CLIP", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["model", "positive", "negative", "clip", "pos_string", "neg_string"], "name": "ttN conditioning", "display_name": "tinyConditioning", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/base", "output_node": false}, "ttN KSampler_v2": {"input": {"required": {"model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent": ["LATENT"], "vae": ["VAE"], "lora_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "upscale_method": [["None", "[latent] nearest-exact", "[latent] bilinear", "[latent] area", "[latent] bicubic", "[latent] lanczos", "[latent] bislerp", "[hiresFix] nearest-exact", "[hiresFix] bilinear", "[hiresFix] area", "[hiresFix] bicubic", "[hiresFix] lanczos", "[hiresFix] bislerp"], {"default": "None"}], "upscale_model_name": [["4x-UltraSharp.pth", "ESRGAN_4x.pth", "RealESRGAN_x2.pth", "RealESRGAN_x4.pth", "ldsr/last.ckpt", "None"]], "factor": ["FLOAT", {"default": 2, "min": 0.0, "max": 10.0, "step": 0.25}], "rescale": [["by percentage", "to Width/Height", "to longer side - maintain aspect", "None"]], "percent": ["INT", {"default": 50, "min": 0, "max": 1000, "step": 1}], "width": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "height": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "longer_side": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "crop": [["disabled", "center"]], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD", "GITS SD1"]], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "image_output": [["Hide", "Preview", "Save", "Hide/Save", "Disabled"]], "save_prefix": ["STRING", {"default": "ComfyUI"}], "file_type": [["png", "jpg", "jpeg", "tiff", "tif", "webp", "bmp"], {"default": "png"}], "embed_workflow": ["BOOLEAN", {"default": true}]}, "optional": {"clip": ["CLIP"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "input_image_override": ["IMAGE"], "adv_xyPlot": ["ADV_XYPLOT"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "ttNnodeVersion": "2.3.1"}}, "input_order": {"required": ["model", "positive", "negative", "latent", "vae", "lora_name", "lora_strength", "upscale_method", "upscale_model_name", "factor", "rescale", "percent", "width", "height", "longer_side", "crop", "steps", "cfg", "sampler_name", "scheduler", "denoise", "image_output", "save_prefix", "file_type", "embed_workflow"], "optional": ["clip", "seed", "input_image_override", "adv_xyPlot"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id", "ttNnodeVersion"]}, "output": ["MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "CLIP", "IMAGE", "INT", "IMAGE"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["model", "positive", "negative", "latent", "vae", "clip", "images", "seed", "plot_image"], "name": "ttN KSampler_v2", "display_name": "tinyKSampler", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/base", "output_node": true}, "ttN pipeLoader_v2": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "config_name": [["Default", "anything_v3.yaml", "v1-inference.yaml", "v1-inference_clip_skip_2.yaml", "v1-inference_clip_skip_2_fp16.yaml", "v1-inference_fp16.yaml", "v1-inpainting-inference.yaml", "v2-inference-v.yaml", "v2-inference-v_fp32.yaml", "v2-inference.yaml", "v2-inference_fp32.yaml", "v2-inpainting-inference.yaml"], {"default": "Default"}], "vae_name": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "clip_skip": ["INT", {"default": -1, "min": -24, "max": 0, "step": 1}], "loras": ["STRING", {"placeholder": "<lora:loraName:weight:optClipWeight>", "multiline": true}], "positive": ["STRING", {"default": "Positive", "multiline": true, "dynamicPrompts": true}], "positive_token_normalization": [["none", "mean", "length", "length+mean"]], "positive_weight_interpretation": [["comfy", "A1111", "compel", "comfy++", "down_weight"]], "negative": ["STRING", {"default": "Negative", "multiline": true, "dynamicPrompts": true}], "negative_token_normalization": [["none", "mean", "length", "length+mean"]], "negative_weight_interpretation": [["comfy", "A1111", "compel", "comfy++", "down_weight"]], "empty_latent_aspect": [["width x height [custom]", "512 x 512 [S] 1:1", "768 x 768 [S] 1:1", "910 x 910 [S] 1:1", "512 x 682 [P] 3:4", "512 x 768 [P] 2:3", "512 x 910 [P] 9:16", "682 x 512 [L] 4:3", "768 x 512 [L] 3:2", "910 x 512 [L] 16:9", "512 x 1024 [P] 1:2", "1024 x 512 [L] 2:1", "1024 x 1024 [S] 1:1"], {"default": "512 x 512 [S] 1:1"}], "empty_latent_width": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"model_override": ["MODEL"], "clip_override": ["CLIP"], "optional_lora_stack": ["LORA_STACK"], "optional_controlnet_stack": ["CONTROL_NET_STACK"], "prepend_positive": ["STRING", {"forceInput": true}], "prepend_negative": ["STRING", {"forceInput": true}]}, "hidden": {"prompt": "PROMPT", "ttNnodeVersion": "2.1.0", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "config_name", "vae_name", "clip_skip", "loras", "positive", "positive_token_normalization", "positive_weight_interpretation", "negative", "negative_token_normalization", "negative_weight_interpretation", "empty_latent_aspect", "empty_latent_width", "empty_latent_height", "batch_size", "seed"], "optional": ["model_override", "clip_override", "optional_lora_stack", "optional_controlnet_stack", "prepend_positive", "prepend_negative"], "hidden": ["prompt", "ttNnodeVersion", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "CLIP", "INT", "INT", "INT", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["pipe", "model", "positive", "negative", "latent", "vae", "clip", "seed", "width", "height", "pos_string", "neg_string"], "name": "ttN pipeLoader_v2", "display_name": "pipeLoader", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/pipe", "output_node": false}, "ttN pipeKSampler_v2": {"input": {"required": {"pipe": ["PIPE_LINE"], "lora_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "upscale_method": [["None", "[latent] nearest-exact", "[latent] bilinear", "[latent] area", "[latent] bicubic", "[latent] lanczos", "[latent] bislerp", "[hiresFix] nearest-exact", "[hiresFix] bilinear", "[hiresFix] area", "[hiresFix] bicubic", "[hiresFix] lanczos", "[hiresFix] bislerp"], {"default": "None"}], "upscale_model_name": [["4x-UltraSharp.pth", "ESRGAN_4x.pth", "RealESRGAN_x2.pth", "RealESRGAN_x4.pth", "ldsr/last.ckpt", "None"]], "factor": ["FLOAT", {"default": 2, "min": 0.0, "max": 10.0, "step": 0.25}], "rescale": [["by percentage", "to Width/Height", "to longer side - maintain aspect", "None"]], "percent": ["INT", {"default": 50, "min": 0, "max": 1000, "step": 1}], "width": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "height": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "longer_side": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "crop": [["disabled", "center"]], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD", "GITS SD1"]], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "image_output": [["Hide", "Preview", "Save", "Hide/Save", "Disabled"]], "save_prefix": ["STRING", {"default": "ComfyUI"}], "file_type": [["png", "jpg", "jpeg", "tiff", "tif", "webp", "bmp"], {"default": "png"}], "embed_workflow": ["BOOLEAN", {"default": true}]}, "optional": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "optional_model": ["MODEL"], "optional_positive": ["CONDITIONING"], "optional_negative": ["CONDITIONING"], "optional_latent": ["LATENT"], "optional_vae": ["VAE"], "optional_clip": ["CLIP"], "input_image_override": ["IMAGE"], "adv_xyPlot": ["ADV_XYPLOT"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "ttNnodeVersion": "2.3.1"}}, "input_order": {"required": ["pipe", "lora_name", "lora_strength", "upscale_method", "upscale_model_name", "factor", "rescale", "percent", "width", "height", "longer_side", "crop", "steps", "cfg", "sampler_name", "scheduler", "denoise", "image_output", "save_prefix", "file_type", "embed_workflow"], "optional": ["seed", "optional_model", "optional_positive", "optional_negative", "optional_latent", "optional_vae", "optional_clip", "input_image_override", "adv_xyPlot"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id", "ttNnodeVersion"]}, "output": ["PIPE_LINE", "MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "CLIP", "IMAGE", "INT", "IMAGE"], "output_is_list": [false, false, false, false, false, false, false, false, false, false], "output_name": ["pipe", "model", "positive", "negative", "latent", "vae", "clip", "images", "seed", "plot_image"], "name": "ttN pipeKSampler_v2", "display_name": "pipeKSampler", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/pipe", "output_node": true}, "ttN pipeKSamplerAdvanced_v2": {"input": {"required": {"pipe": ["PIPE_LINE"], "lora_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "upscale_method": [["None", "[latent] nearest-exact", "[latent] bilinear", "[latent] area", "[latent] bicubic", "[latent] lanczos", "[latent] bislerp", "[hiresFix] nearest-exact", "[hiresFix] bilinear", "[hiresFix] area", "[hiresFix] bicubic", "[hiresFix] lanczos", "[hiresFix] bislerp"], {"default": "None"}], "upscale_model_name": [["4x-UltraSharp.pth", "ESRGAN_4x.pth", "RealESRGAN_x2.pth", "RealESRGAN_x4.pth", "ldsr/last.ckpt", "None"]], "factor": ["FLOAT", {"default": 2, "min": 0.0, "max": 10.0, "step": 0.25}], "rescale": [["by percentage", "to Width/Height", "to longer side - maintain aspect", "None"]], "percent": ["INT", {"default": 50, "min": 0, "max": 1000, "step": 1}], "width": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "height": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "longer_side": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "crop": [["disabled", "center"]], "add_noise": [["enable", "disable"]], "noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at_step": ["INT", {"default": 10000, "min": 0, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD", "GITS SD1"]], "return_with_leftover_noise": [["disable", "enable"]], "image_output": [["Hide", "Preview", "Save", "Hide/Save", "Disabled"]], "save_prefix": ["STRING", {"default": "ComfyUI"}], "file_type": [["png", "jpg", "jpeg", "tiff", "tif", "webp", "bmp"], {"default": "png"}], "embed_workflow": ["BOOLEAN", {"default": true}]}, "optional": {"noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "optional_model": ["MODEL"], "optional_positive": ["CONDITIONING"], "optional_negative": ["CONDITIONING"], "optional_latent": ["LATENT"], "optional_vae": ["VAE"], "optional_clip": ["CLIP"], "input_image_override": ["IMAGE"], "adv_xyPlot": ["ADV_XYPLOT"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "ttNnodeVersion": "2.3.0"}}, "input_order": {"required": ["pipe", "lora_name", "lora_strength", "upscale_method", "upscale_model_name", "factor", "rescale", "percent", "width", "height", "longer_side", "crop", "add_noise", "noise", "steps", "start_at_step", "end_at_step", "cfg", "sampler_name", "scheduler", "return_with_leftover_noise", "image_output", "save_prefix", "file_type", "embed_workflow"], "optional": ["noise_seed", "optional_model", "optional_positive", "optional_negative", "optional_latent", "optional_vae", "optional_clip", "input_image_override", "adv_xyPlot"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id", "ttNnodeVersion"]}, "output": ["PIPE_LINE", "MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "CLIP", "IMAGE", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["pipe", "model", "positive", "negative", "latent", "vae", "clip", "image", "seed"], "name": "ttN pipeKSamplerAdvanced_v2", "display_name": "pipeKSamplerAdvanced", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/pipe", "output_node": true}, "ttN pipeLoaderSDXL_v2": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "config_name": [["Default", "anything_v3.yaml", "v1-inference.yaml", "v1-inference_clip_skip_2.yaml", "v1-inference_clip_skip_2_fp16.yaml", "v1-inference_fp16.yaml", "v1-inpainting-inference.yaml", "v2-inference-v.yaml", "v2-inference-v_fp32.yaml", "v2-inference.yaml", "v2-inference_fp32.yaml", "v2-inpainting-inference.yaml"], {"default": "Default"}], "vae_name": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "clip_skip": ["INT", {"default": -2, "min": -24, "max": 0, "step": 1}], "loras": ["STRING", {"placeholder": "Loras - <lora:loraName:weight:optClipWeight>", "multiline": true}], "refiner_ckpt_name": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "refiner_config_name": [["Default", "anything_v3.yaml", "v1-inference.yaml", "v1-inference_clip_skip_2.yaml", "v1-inference_clip_skip_2_fp16.yaml", "v1-inference_fp16.yaml", "v1-inpainting-inference.yaml", "v2-inference-v.yaml", "v2-inference-v_fp32.yaml", "v2-inference.yaml", "v2-inference_fp32.yaml", "v2-inpainting-inference.yaml"], {"default": "Default"}], "positive_g": ["STRING", {"placeholder": "Linguistic Positive (positive_g)", "multiline": true, "dynamicPrompts": true}], "positive_l": ["STRING", {"placeholder": "Supporting Terms (positive_l)", "multiline": true, "dynamicPrompts": true}], "negative_g": ["STRING", {"placeholder": "negative_g", "multiline": true, "dynamicPrompts": true}], "negative_l": ["STRING", {"placeholder": "negative_l", "multiline": true, "dynamicPrompts": true}], "conditioning_aspect": [["width x height [custom]", "1x Empty Latent Aspect", "2x Empty Latent Aspect", "3x Empty Latent Aspect", "4x Empty Latent Aspect", "5x Empty Latent Aspect", "6x Empty Latent ASpect", "7x Empty Latent Aspect", "8x Empty Latent Aspect"], {"default": "1x Empty Latent Aspect"}], "conditioning_width": ["INT", {"default": 2048.0, "min": 64, "max": 16384, "step": 8}], "conditioning_height": ["INT", {"default": 2048.0, "min": 64, "max": 16384, "step": 8}], "crop_width": ["INT", {"default": 0, "min": 0, "max": 16384}], "crop_height": ["INT", {"default": 0, "min": 0, "max": 16384}], "target_aspect": [["width x height [custom]", "1x Empty Latent Aspect", "2x Empty Latent Aspect", "3x Empty Latent Aspect", "4x Empty Latent Aspect", "5x Empty Latent Aspect", "6x Empty Latent ASpect", "7x Empty Latent Aspect", "8x Empty Latent Aspect"], {"default": "1x Empty Latent Aspect"}], "target_width": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "target_height": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "positive_ascore": ["INT", {"default": 6.0, "min": 0, "step": 0.1}], "negative_ascore": ["INT", {"default": 2.0, "min": 0, "step": 0.1}], "empty_latent_aspect": [["width x height [custom]", "1024 x 1024 [S] 1:1", "640 x 1536 [P] 9:21", "704 x 1472 [P] 9:19", "768 x 1344 [P] 9:16", "768 x 1216 [P] 5:8", "832 x 1216 [P] 2:3", "896 x 1152 [P] 3:4", "1536 x 640 [L] 21:9", "1472 x 704 [L] 19:9", "1344 x 768 [L] 16:9", "1216 x 768 [L] 8:5", "1216 x 832 [L] 3:2", "1152 x 896 [L] 4:3"], {"default": "1024 x 1024 [S] 1:1"}], "empty_latent_width": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"model_override": ["MODEL"], "clip_override": ["CLIP"], "optional_lora_stack": ["LORA_STACK"], "optional_controlnet_stack": ["CONTROL_NET_STACK"], "refiner_model_override": ["MODEL"], "refiner_clip_override": ["CLIP"], "prepend_positive_g": ["STRING", {"forceInput": true}], "prepend_positive_l": ["STRING", {"forceInput": true}], "prepend_negative_g": ["STRING", {"forceInput": true}], "prepend_negative_l": ["STRING", {"forceInput": true}]}, "hidden": {"prompt": "PROMPT", "ttNnodeVersion": "2.1.0", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "config_name", "vae_name", "clip_skip", "loras", "refiner_ckpt_name", "refiner_config_name", "positive_g", "positive_l", "negative_g", "negative_l", "conditioning_aspect", "conditioning_width", "conditioning_height", "crop_width", "crop_height", "target_aspect", "target_width", "target_height", "positive_ascore", "negative_ascore", "empty_latent_aspect", "empty_latent_width", "empty_latent_height", "batch_size", "seed"], "optional": ["model_override", "clip_override", "optional_lora_stack", "optional_controlnet_stack", "refiner_model_override", "refiner_clip_override", "prepend_positive_g", "prepend_positive_l", "prepend_negative_g", "prepend_negative_l"], "hidden": ["prompt", "ttNnodeVersion", "my_unique_id"]}, "output": ["PIPE_LINE_SDXL", "MODEL", "CONDITIONING", "CONDITIONING", "VAE", "CLIP", "MODEL", "CONDITIONING", "CONDITIONING", "CLIP", "LATENT", "INT", "INT", "INT", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["sdxl_pipe", "model", "positive", "negative", "vae", "clip", "refiner_model", "refiner_positive", "refiner_negative", "refiner_clip", "latent", "seed", "width", "height", "pos_string", "neg_string"], "name": "ttN pipeLoaderSDXL_v2", "display_name": "pipeLoaderSDXL", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/pipe", "output_node": false}, "ttN pipeKSamplerSDXL_v2": {"input": {"required": {"sdxl_pipe": ["PIPE_LINE_SDXL"], "lora_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "upscale_method": [["None", "[latent] nearest-exact", "[latent] bilinear", "[latent] area", "[latent] bicubic", "[latent] lanczos", "[latent] bislerp", "[hiresFix] nearest-exact", "[hiresFix] bilinear", "[hiresFix] area", "[hiresFix] bicubic", "[hiresFix] lanczos", "[hiresFix] bislerp"], {"default": "None"}], "upscale_model_name": [["4x-UltraSharp.pth", "ESRGAN_4x.pth", "RealESRGAN_x2.pth", "RealESRGAN_x4.pth", "ldsr/last.ckpt", "None"]], "factor": ["FLOAT", {"default": 2, "min": 0.0, "max": 10.0, "step": 0.25}], "rescale": [["by percentage", "to Width/Height", "to longer side - maintain aspect", "None"]], "percent": ["INT", {"default": 50, "min": 0, "max": 1000, "step": 1}], "width": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "height": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "longer_side": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "crop": [["disabled", "center"]], "base_steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "refiner_steps": ["INT", {"default": 20, "min": 0, "max": 10000}], "refiner_cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "refiner_denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD", "GITS SD1"]], "image_output": [["Hide", "Preview", "Save", "Hide/Save", "Disabled"]], "save_prefix": ["STRING", {"default": "ComfyUI"}], "file_type": [["png", "jpg", "jpeg", "tiff", "tif", "webp", "bmp"], {"default": "png"}], "embed_workflow": ["BOOLEAN", {"default": true}]}, "optional": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "optional_model": ["MODEL"], "optional_positive": ["CONDITIONING"], "optional_negative": ["CONDITIONING"], "optional_latent": ["LATENT"], "optional_vae": ["VAE"], "optional_refiner_model": ["MODEL"], "optional_refiner_positive": ["CONDITIONING"], "optional_refiner_negative": ["CONDITIONING"], "optional_clip": ["CLIP"], "input_image_override": ["IMAGE"], "adv_xyPlot": ["ADV_XYPLOT"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "ttNnodeVersion": "2.3.1"}}, "input_order": {"required": ["sdxl_pipe", "lora_name", "lora_strength", "upscale_method", "upscale_model_name", "factor", "rescale", "percent", "width", "height", "longer_side", "crop", "base_steps", "cfg", "denoise", "refiner_steps", "refiner_cfg", "refiner_denoise", "sampler_name", "scheduler", "image_output", "save_prefix", "file_type", "embed_workflow"], "optional": ["seed", "optional_model", "optional_positive", "optional_negative", "optional_latent", "optional_vae", "optional_refiner_model", "optional_refiner_positive", "optional_refiner_negative", "optional_clip", "input_image_override", "adv_xyPlot"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id", "ttNnodeVersion"]}, "output": ["PIPE_LINE_SDXL", "PIPE_LINE", "MODEL", "CONDITIONING", "CONDITIONING", "MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "CLIP", "IMAGE", "INT", "IMAGE"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["sdxl_pipe", "pipe", "model", "positive", "negative", "refiner_model", "refiner_positive", "refiner_negative", "latent", "vae", "clip", "images", "seed", "plot_image"], "name": "ttN pipeKSamplerSDXL_v2", "display_name": "pipeKSamplerSDXL", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/pipe", "output_node": true}, "ttN advanced xyPlot": {"input": {"required": {"grid_spacing": ["INT", {"min": 0, "max": 500, "step": 5, "default": 0}], "save_individuals": ["BOOLEAN", {"default": false}], "flip_xy": ["BOOLEAN", {"default": false}], "x_plot": ["STRING", {"default": "", "multiline": true, "placeholder": "X_PLOT\nExample:\n\n<axis number:label1>\n[node_ID:widget_Name='value']\n\n<axis number2:label2>\n[node_ID:widget_Name='value2']\n[node_ID:widget2_Name='value']\n[node_ID2:widget_Name='value']\n\netc...", "pysssss.autocomplete": false}], "y_plot": ["STRING", {"default": "", "multiline": true, "placeholder": "Y_PLOT\nExample:\n\n<axis number:label1>\n[node_ID:widget_Name='value']\n\n<axis number2:label2>\n[node_ID:widget_Name='value2']\n[node_ID:widget2_Name='value']\n[node_ID2:widget_Name='value']\n\netc...", "pysssss.autocomplete": false}], "z_plot": ["STRING", {"default": "", "multiline": true, "placeholder": "Z_PLOT\nExample:\n\n<axis number:label1>\n[node_ID:widget_Name='value']\n\n<axis number2:label2>\n[node_ID:widget_Name='value2']\n[node_ID:widget2_Name='value']\n[node_ID2:widget_Name='value']\n\netc...", "pysssss.autocomplete": false}]}, "hidden": {"my_unique_id": "UNIQUE_ID", "ttNnodeVersion": "1.2.0"}}, "input_order": {"required": ["grid_spacing", "save_individuals", "flip_xy", "x_plot", "y_plot", "z_plot"], "hidden": ["my_unique_id", "ttNnodeVersion"]}, "output": ["ADV_XYPLOT"], "output_is_list": [false], "output_name": ["adv_xyPlot"], "name": "ttN advanced xyPlot", "display_name": "advanced xyPlot", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/xyPlot", "output_node": false}, "ttN advPlot images": {"input": {"required": {"enabled": ["BOOLEAN", {"default": true}], "image": ["IMAGE", {}], "image_output": [["Hide", "Preview", "Save", "Hide/Save", "Disabled"]], "save_prefix": ["STRING", {"default": "ComfyUI"}], "file_type": [["png", "jpg", "jpeg", "tiff", "tif", "webp", "bmp"], {"default": "png"}], "embed_workflow": ["BOOLEAN", {"default": true}]}, "optional": {"adv_xyPlot": ["ADV_XYPLOT"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "ttNnodeVersion": "1.0.0"}}, "input_order": {"required": ["enabled", "image", "image_output", "save_prefix", "file_type", "embed_workflow"], "optional": ["adv_xyPlot"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id", "ttNnodeVersion"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["images", "plot_image"], "name": "ttN advPlot images", "display_name": "advPlot images", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/xyPlot", "output_node": true}, "ttN advPlot range": {"input": {"required": {"node": [["Connect to xyPlot for options"], {}], "widget": [["Select node for options"], {}], "range_mode": [["step_int", "num_steps_int", "step_float", "num_steps_float"], {}], "start": ["FLOAT", {"min": -18446744073709551615, "max": 18446744073709551615, "step": 0.01, "default": 1}], "step": ["FLOAT", {"min": -18446744073709551615, "max": 18446744073709551615, "step": 0.01, "default": 1}], "stop": ["FLOAT", {"min": -18446744073709551615, "max": 18446744073709551615, "step": 0.01, "default": 5}], "include_stop": ["BOOLEAN", {"default": true}], "num_steps": ["INT", {"min": 1, "max": 1000, "step": 1, "default": 5}], "label_type": [["Values", "Title and Values", "ID, Title and Values"], {"default": "Values"}]}, "hidden": {"ttNnodeVersion": "1.1.0"}}, "input_order": {"required": ["node", "widget", "range_mode", "start", "step", "stop", "include_stop", "num_steps", "label_type"], "hidden": ["ttNnodeVersion"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["plot_text"], "name": "ttN advPlot range", "display_name": "advPlot range", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/xyPlot", "output_node": true}, "ttN advPlot string": {"input": {"required": {"node": [["Connect to xyPlot for options"], {}], "widget": [["Select node for options"], {}], "text": ["STRING", {"default": "", "multiline": true}], "delimiter": ["STRING", {"default": "\\n", "multiline": false}], "label_type": [["Values", "Title and Values", "ID, Title and Values"], {"default": "Values"}]}, "hidden": {"ttNnodeVersion": "1.1.0"}}, "input_order": {"required": ["node", "widget", "text", "delimiter", "label_type"], "hidden": ["ttNnodeVersion"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["plot_text"], "name": "ttN advPlot string", "display_name": "advPlot string", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/xyPlot", "output_node": true}, "ttN advPlot combo": {"input": {"required": {"node": [["Connect to xyPlot for options"], {}], "widget": [["Select node for options"], {}], "mode": [["all", "range", "select"]], "start_from": [["Select widget for options"]], "end_with": [["Select widget for options"]], "select": [["Select widget for options"]], "selection": ["STRING", {"default": "", "multiline": true}], "label_type": [["Values", "Title and Values", "ID, Title and Values"], {"default": "Values"}]}, "hidden": {"ttNnodeVersion": "1.1.0", "prompt": "PROMPT"}}, "input_order": {"required": ["node", "widget", "mode", "start_from", "end_with", "select", "selection", "label_type"], "hidden": ["ttNnodeVersion", "prompt"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["plot_text"], "name": "ttN advPlot combo", "display_name": "advPlot combo", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/xyPlot", "output_node": true}, "ttN pipeEDIT": {"input": {"required": {}, "optional": {"pipe": ["PIPE_LINE"], "model": ["MODEL"], "pos": ["CONDITIONING"], "neg": ["CONDITIONING"], "latent": ["LATENT"], "vae": ["VAE"], "clip": ["CLIP"], "image": ["IMAGE"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "forceInput": true}]}, "hidden": {"ttNnodeVersion": "1.1.1", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": [], "optional": ["pipe", "model", "pos", "neg", "latent", "vae", "clip", "image", "seed"], "hidden": ["ttNnodeVersion", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "CLIP", "IMAGE", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["pipe", "model", "pos", "neg", "latent", "vae", "clip", "image", "seed"], "name": "ttN pipeEDIT", "display_name": "pipeEDIT", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/pipe", "output_node": false}, "ttN pipe2BASIC": {"input": {"required": {"pipe": ["PIPE_LINE"]}, "hidden": {"ttNnodeVersion": "1.1.0"}}, "input_order": {"required": ["pipe"], "hidden": ["ttNnodeVersion"]}, "output": ["BASIC_PIPE", "PIPE_LINE"], "output_is_list": [false, false], "output_name": ["basic_pipe", "pipe"], "name": "ttN pipe2BASIC", "display_name": "pipe > basic_pipe", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/pipe", "output_node": false}, "ttN pipe2DETAILER": {"input": {"required": {"pipe": ["PIPE_LINE"], "bbox_detector": ["BBOX_DETECTOR"], "wildcard": ["STRING", {"multiline": true, "placeholder": "wildcard spec: if kept empty, this option will be ignored"}]}, "optional": {"sam_model_opt": ["SAM_MODEL"], "segm_detector_opt": ["SEGM_DETECTOR"], "detailer_hook": ["DETAILER_HOOK"]}, "hidden": {"ttNnodeVersion": "1.2.0"}}, "input_order": {"required": ["pipe", "bbox_detector", "wildcard"], "optional": ["sam_model_opt", "segm_detector_opt", "detailer_hook"], "hidden": ["ttNnodeVersion"]}, "output": ["DETAILER_PIPE", "PIPE_LINE"], "output_is_list": [false, false], "output_name": ["detailer_pipe", "pipe"], "name": "ttN pipe2DETAILER", "display_name": "pipe > detailer_pipe", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/pipe", "output_node": false}, "ttN pipeEncodeConcat": {"input": {"required": {"pipe": ["PIPE_LINE"], "toggle": [[true, false]]}, "optional": {"positive": ["STRING", {"default": "Positive", "multiline": true}], "positive_token_normalization": [["none", "mean", "length", "length+mean"]], "positive_weight_interpretation": [["comfy", "A1111", "compel", "comfy++", "down_weight"]], "negative": ["STRING", {"default": "Negative", "multiline": true}], "negative_token_normalization": [["none", "mean", "length", "length+mean"]], "negative_weight_interpretation": [["comfy", "A1111", "compel", "comfy++", "down_weight"]], "optional_positive_from": ["CONDITIONING"], "optional_negative_from": ["CONDITIONING"], "optional_clip": ["CLIP"]}, "hidden": {"ttNnodeVersion": "1.0.2", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "toggle"], "optional": ["positive", "positive_token_normalization", "positive_weight_interpretation", "negative", "negative_token_normalization", "negative_weight_interpretation", "optional_positive_from", "optional_negative_from", "optional_clip"], "hidden": ["ttNnodeVersion", "my_unique_id"]}, "output": ["PIPE_LINE", "CONDITIONING", "CONDITIONING", "CLIP"], "output_is_list": [false, false, false, false], "output_name": ["pipe", "positive", "negative", "clip"], "name": "ttN pipeEncodeConcat", "display_name": "pipeEncodeConcat", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/pipe", "output_node": true}, "ttN pipeLoraStack": {"input": {"required": {"toggle": [[true, false]], "mode": [["simple", "advanced"]], "num_loras": ["INT", {"default": 1, "min": 0, "max": 20}]}, "optional": {"optional_pipe": ["PIPE_LINE", {"default": null}], "model_override": ["MODEL"], "clip_override": ["CLIP"], "optional_lora_stack": ["LORA_STACK"], "lora_1_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"default": "None"}], "lora_1_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_1_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_1_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_2_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"default": "None"}], "lora_2_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_2_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_2_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_3_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"default": "None"}], "lora_3_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_3_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_3_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_4_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"default": "None"}], "lora_4_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_4_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_4_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_5_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"default": "None"}], "lora_5_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_5_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_5_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_6_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"default": "None"}], "lora_6_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_6_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_6_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_7_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"default": "None"}], "lora_7_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_7_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_7_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_8_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"default": "None"}], "lora_8_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_8_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_8_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_9_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"default": "None"}], "lora_9_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_9_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_9_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_10_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"default": "None"}], "lora_10_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_10_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_10_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_11_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"default": "None"}], "lora_11_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_11_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_11_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_12_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"default": "None"}], "lora_12_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_12_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_12_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_13_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"default": "None"}], "lora_13_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_13_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_13_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_14_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"default": "None"}], "lora_14_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_14_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_14_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_15_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"default": "None"}], "lora_15_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_15_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_15_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_16_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"default": "None"}], "lora_16_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_16_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_16_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_17_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"default": "None"}], "lora_17_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_17_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_17_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_18_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"default": "None"}], "lora_18_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_18_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_18_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_19_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"default": "None"}], "lora_19_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_19_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_19_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_20_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"default": "None"}], "lora_20_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_20_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_20_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}, "hidden": {"ttNnodeVersion": "1.1.1"}}, "input_order": {"required": ["toggle", "mode", "num_loras"], "optional": ["optional_pipe", "model_override", "clip_override", "optional_lora_stack", "lora_1_name", "lora_1_strength", "lora_1_model_strength", "lora_1_clip_strength", "lora_2_name", "lora_2_strength", "lora_2_model_strength", "lora_2_clip_strength", "lora_3_name", "lora_3_strength", "lora_3_model_strength", "lora_3_clip_strength", "lora_4_name", "lora_4_strength", "lora_4_model_strength", "lora_4_clip_strength", "lora_5_name", "lora_5_strength", "lora_5_model_strength", "lora_5_clip_strength", "lora_6_name", "lora_6_strength", "lora_6_model_strength", "lora_6_clip_strength", "lora_7_name", "lora_7_strength", "lora_7_model_strength", "lora_7_clip_strength", "lora_8_name", "lora_8_strength", "lora_8_model_strength", "lora_8_clip_strength", "lora_9_name", "lora_9_strength", "lora_9_model_strength", "lora_9_clip_strength", "lora_10_name", "lora_10_strength", "lora_10_model_strength", "lora_10_clip_strength", "lora_11_name", "lora_11_strength", "lora_11_model_strength", "lora_11_clip_strength", "lora_12_name", "lora_12_strength", "lora_12_model_strength", "lora_12_clip_strength", "lora_13_name", "lora_13_strength", "lora_13_model_strength", "lora_13_clip_strength", "lora_14_name", "lora_14_strength", "lora_14_model_strength", "lora_14_clip_strength", "lora_15_name", "lora_15_strength", "lora_15_model_strength", "lora_15_clip_strength", "lora_16_name", "lora_16_strength", "lora_16_model_strength", "lora_16_clip_strength", "lora_17_name", "lora_17_strength", "lora_17_model_strength", "lora_17_clip_strength", "lora_18_name", "lora_18_strength", "lora_18_model_strength", "lora_18_clip_strength", "lora_19_name", "lora_19_strength", "lora_19_model_strength", "lora_19_clip_strength", "lora_20_name", "lora_20_strength", "lora_20_model_strength", "lora_20_clip_strength"], "hidden": ["ttNnodeVersion"]}, "output": ["PIPE_LINE", "LORA_STACK"], "output_is_list": [false, false], "output_name": ["optional_pipe", "lora_stack"], "name": "ttN pipeLoraStack", "display_name": "pipeLoraStack", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/pipe", "output_node": false}, "ttN multiModelMerge": {"input": {"required": {"ckpt_A_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "config_A_name": [["Default", "anything_v3.yaml", "v1-inference.yaml", "v1-inference_clip_skip_2.yaml", "v1-inference_clip_skip_2_fp16.yaml", "v1-inference_fp16.yaml", "v1-inpainting-inference.yaml", "v2-inference-v.yaml", "v2-inference-v_fp32.yaml", "v2-inference.yaml", "v2-inference_fp32.yaml", "v2-inpainting-inference.yaml"], {"default": "Default"}], "ckpt_B_name": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "config_B_name": [["Default", "anything_v3.yaml", "v1-inference.yaml", "v1-inference_clip_skip_2.yaml", "v1-inference_clip_skip_2_fp16.yaml", "v1-inference_fp16.yaml", "v1-inpainting-inference.yaml", "v2-inference-v.yaml", "v2-inference-v_fp32.yaml", "v2-inference.yaml", "v2-inference_fp32.yaml", "v2-inpainting-inference.yaml"], {"default": "Default"}], "ckpt_C_name": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "config_C_name": [["Default", "anything_v3.yaml", "v1-inference.yaml", "v1-inference_clip_skip_2.yaml", "v1-inference_clip_skip_2_fp16.yaml", "v1-inference_fp16.yaml", "v1-inpainting-inference.yaml", "v2-inference-v.yaml", "v2-inference-v_fp32.yaml", "v2-inference.yaml", "v2-inference_fp32.yaml", "v2-inpainting-inference.yaml"], {"default": "Default"}], "model_interpolation": [["Weighted sum = (  A*(1-M) + B*M  )", "Add difference = (  A + (B-C)*M  )", "A Only"]], "model_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "clip_interpolation": [["Follow model interp", "Weighted sum = (  A*(1-M) + B*M  )", "Add difference = (  A + (B-C)*M  )", "A Only", "B Only", "C Only"]], "clip_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"model_A_override": ["MODEL"], "model_B_override": ["MODEL"], "model_C_override": ["MODEL"], "clip_A_override": ["CLIP"], "clip_B_override": ["CLIP"], "clip_C_override": ["CLIP"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "ttNnodeVersion": "1.1.0", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_A_name", "config_A_name", "ckpt_B_name", "config_B_name", "ckpt_C_name", "config_C_name", "model_interpolation", "model_multiplier", "clip_interpolation", "clip_multiplier"], "optional": ["model_A_override", "model_B_override", "model_C_override", "clip_A_override", "clip_B_override", "clip_C_override"], "hidden": ["prompt", "extra_pnginfo", "ttNnodeVersion", "my_unique_id"]}, "output": ["MODEL", "CLIP"], "output_is_list": [false, false], "output_name": ["model", "clip"], "name": "ttN multiModelMerge", "display_name": "multiModelMerge", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra", "output_node": false}, "ttN debugInput": {"input": {"required": {"print_to_console": ["BOOLEAN"], "console_title": ["STRING", {"default": "ttN debug:"}], "console_color": [["Black", "Red", "Green", "Yellow", "Blue", "Violet", "Cyan", "White", "Grey", "LightRed", "LightGreen", "LightYellow", "LightBlue", "LightViolet", "LightCyan", "LightWhite"], {"default": "Red"}]}, "optional": {"debug": ["*", {"default": null}]}}, "input_order": {"required": ["print_to_console", "console_title", "console_color"], "optional": ["debug"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ttN debugInput", "display_name": "debugInput", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/util", "output_node": true}, "ttN text": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true, "dynamicPrompts": true}]}, "hidden": {"ttNnodeVersion": "1.0.0"}}, "input_order": {"required": ["text"], "hidden": ["ttNnodeVersion"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "ttN text", "display_name": "text", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/text", "output_node": false}, "ttN textDebug": {"input": {"required": {"print_to_console": [[false, true]], "console_title": ["STRING", {"default": ""}], "execute": [["Always", "On Change"]], "text": ["STRING", {"default": "", "multiline": true, "forceInput": true, "dynamicPrompts": true}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "ttNnodeVersion": "1.0."}}, "input_order": {"required": ["print_to_console", "console_title", "execute", "text"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id", "ttNnodeVersion"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "ttN textDebug", "display_name": "textDebug", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/text", "output_node": true}, "ttN concat": {"input": {"required": {"text1": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": true}], "text2": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": true}], "text3": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": true}], "delimiter": ["STRING", {"default": ",", "multiline": false}]}, "hidden": {"ttNnodeVersion": "1.0.0"}}, "input_order": {"required": ["text1", "text2", "text3", "delimiter"], "hidden": ["ttNnodeVersion"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["concat"], "name": "ttN concat", "display_name": "textConcat", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/text", "output_node": false}, "ttN text3BOX_3WAYconcat": {"input": {"required": {"text1": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": true}], "text2": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": true}], "text3": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": true}], "delimiter": ["STRING", {"default": ",", "multiline": false}]}, "hidden": {"ttNnodeVersion": "1.0.0"}}, "input_order": {"required": ["text1", "text2", "text3", "delimiter"], "hidden": ["ttNnodeVersion"]}, "output": ["STRING", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["text1", "text2", "text3", "1 & 2", "1 & 3", "2 & 3", "concat"], "name": "ttN text3BOX_3WAYconcat", "display_name": "3x TXT Loader MultiConcat", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/text", "output_node": false}, "ttN text7BOX_concat": {"input": {"required": {"text1": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": true}], "text2": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": true}], "text3": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": true}], "text4": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": true}], "text5": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": true}], "text6": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": true}], "text7": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": true}], "delimiter": ["STRING", {"default": ",", "multiline": false}]}, "hidden": {"ttNnodeVersion": "1.0.0"}}, "input_order": {"required": ["text1", "text2", "text3", "text4", "text5", "text6", "text7", "delimiter"], "hidden": ["ttNnodeVersion"]}, "output": ["STRING", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["text1", "text2", "text3", "text4", "text5", "text6", "text7", "concat"], "name": "ttN text7BOX_concat", "display_name": "7x TXT Loader Concat", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/text", "output_node": false}, "ttN textCycleLine": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": true}], "index": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "index_control": [["increment", "decrement", "randomize", "fixed"]]}, "hidden": {"ttNnodeVersion": "1.0.0"}}, "input_order": {"required": ["text", "index", "index_control"], "hidden": ["ttNnodeVersion"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "ttN textCycleLine", "display_name": "textCycleLine", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/text", "output_node": false}, "ttN textOutput": {"input": {"required": {"text_output": [["Preview", "Save"], {"default": "Preview"}], "text": ["STRING", {"multiline": true}], "output_path": ["STRING", {"default": "/home/ubuntu/Playbook/ComfyUI/output", "multiline": false}], "save_prefix": ["STRING", {"default": "ComfyUI"}], "number_padding": [["None", 2, 3, 4, 5, 6, 7, 8, 9], {"default": 5}], "file_type": [["txt", "md", "rtf", "log", "ini", "csv"], {"default": "txt"}], "overwrite_existing": ["BOOLEAN", {"default": false}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "ttNnodeVersion": "1.2.0"}}, "input_order": {"required": ["text_output", "text", "output_path", "save_prefix", "number_padding", "file_type", "overwrite_existing"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id", "ttNnodeVersion"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "ttN textOutput", "display_name": "textOutput", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/text", "output_node": true}, "ttN imageOutput": {"input": {"required": {"image": ["IMAGE"], "image_output": [["Hide", "Preview", "Save", "Hide/Save"], {"default": "Preview"}], "output_path": ["STRING", {"default": "/home/ubuntu/Playbook/ComfyUI/output", "multiline": false}], "save_prefix": ["STRING", {"default": "ComfyUI"}], "number_padding": [["None", 2, 3, 4, 5, 6, 7, 8, 9], {"default": 5}], "file_type": [["png", "jpg", "jpeg", "tiff", "tif", "webp", "bmp"], {"default": "png"}], "overwrite_existing": ["BOOLEAN", {"default": false}], "embed_workflow": ["BOOLEAN", {"default": true}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "ttNnodeVersion": "1.2.0"}}, "input_order": {"required": ["image", "image_output", "output_path", "save_prefix", "number_padding", "file_type", "overwrite_existing", "embed_workflow"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id", "ttNnodeVersion"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "ttN imageOutput", "display_name": "imageOutput", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/image", "output_node": true}, "ttN imageREMBG": {"input": {"required": {"image": ["IMAGE"], "image_output": [["Hide", "Preview", "Save", "Hide/Save"], {"default": "Preview"}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "ttNnodeVersion": "1.0.0"}}, "input_order": {"required": ["image", "image_output", "save_prefix"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id", "ttNnodeVersion"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "ttN imageREMBG", "display_name": "imageRemBG", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/image", "output_node": true}, "ttN hiresfixScale": {"input": {"required": {"model_name": [["4x-UltraSharp.pth", "ESRGAN_4x.pth", "RealESRGAN_x2.pth", "RealESRGAN_x4.pth", "ldsr/last.ckpt"]], "vae": ["VAE"], "image": ["IMAGE"], "rescale_after_model": [[false, true], {"default": true}], "rescale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos", "bislerp"]], "rescale": [["by percentage", "to Width/Height", "to longer side - maintain aspect"]], "percent": ["INT", {"default": 50, "min": 0, "max": 1000, "step": 1}], "width": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "height": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "longer_side": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "crop": [["disabled", "center"]], "image_output": [["Hide", "Preview", "Save", "Hide/Save"]], "save_prefix": ["STRING", {"default": "ComfyUI"}], "output_latent": [[false, true], {"default": true}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "ttNnodeVersion": "1.1.0"}}, "input_order": {"required": ["model_name", "vae", "image", "rescale_after_model", "rescale_method", "rescale", "percent", "width", "height", "longer_side", "crop", "image_output", "save_prefix", "output_latent"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id", "ttNnodeVersion"]}, "output": ["LATENT", "IMAGE"], "output_is_list": [false, false], "output_name": ["latent", "image"], "name": "ttN hiresfixScale", "display_name": "hiresfixScale", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/image", "output_node": true}, "ttN int": {"input": {"required": {"int": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "hidden": {"ttNnodeVersion": "1.0.0"}}, "input_order": {"required": ["int"], "hidden": ["ttNnodeVersion"]}, "output": ["INT", "FLOAT", "STRING"], "output_is_list": [false, false, false], "output_name": ["int", "float", "text"], "name": "ttN int", "display_name": "int", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/util", "output_node": false}, "ttN float": {"input": {"required": {"float": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 18446744073709551615, "step": 0.01}]}, "hidden": {"ttNnodeVersion": "1.0.0"}}, "input_order": {"required": ["float"], "hidden": ["ttNnodeVersion"]}, "output": ["FLOAT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["float", "int", "text"], "name": "ttN float", "display_name": "float", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/util", "output_node": false}, "ttN seed": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "hidden": {"ttNnodeVersion": "1.0.0"}}, "input_order": {"required": ["seed"], "hidden": ["ttNnodeVersion"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["seed"], "name": "ttN seed", "display_name": "seed", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/util", "output_node": true}, "ttN xyPlot": {"input": {"required": {"grid_spacing": ["INT", {"min": 0, "max": 500, "step": 5, "default": 0}], "latent_id": ["INT", {"min": 0, "max": 100, "step": 1, "default": 0}], "output_individuals": [["False", "True"], {"default": "False"}], "flip_xy": [["False", "True"], {"default": "False"}], "x_axis": [["None", "---------------------", "sampler: lora_name", "sampler: lora_model_strength", "sampler: lora_clip_strength", "sampler: lora_model&clip_strength", "sampler: steps", "sampler: cfg", "sampler: sampler_name", "sampler: scheduler", "sampler: denoise", "sampler: seed", "---------------------", "loader: ckpt_name", "loader: vae_name", "loader: clip_skip", "loader: lora1_name", "loader: lora1_model_strength", "loader: lora1_clip_strength", "loader: lora1_model&clip_strength", "loader: lora2_name", "loader: lora2_model_strength", "loader: lora2_clip_strength", "loader: lora2_model&clip_strength", "loader: lora3_name", "loader: lora3_model_strength", "loader: lora3_clip_strength", "loader: lora3_model&clip_strength", "loader: positive", "loader: positive_token_normalization", "loader: positive_weight_interpretation", "loader: negative", "loader: negative_token_normalization", "loader: negative_weight_interpretation"], {"default": "None"}], "x_values": ["STRING", {"default": "", "multiline": true, "placeholder": "insert values seperated by \"; \""}], "y_axis": [["None", "---------------------", "sampler: lora_name", "sampler: lora_model_strength", "sampler: lora_clip_strength", "sampler: lora_model&clip_strength", "sampler: steps", "sampler: cfg", "sampler: sampler_name", "sampler: scheduler", "sampler: denoise", "sampler: seed", "---------------------", "loader: ckpt_name", "loader: vae_name", "loader: clip_skip", "loader: lora1_name", "loader: lora1_model_strength", "loader: lora1_clip_strength", "loader: lora1_model&clip_strength", "loader: lora2_name", "loader: lora2_model_strength", "loader: lora2_clip_strength", "loader: lora2_model&clip_strength", "loader: lora3_name", "loader: lora3_model_strength", "loader: lora3_clip_strength", "loader: lora3_model&clip_strength", "loader: positive", "loader: positive_token_normalization", "loader: positive_weight_interpretation", "loader: negative", "loader: negative_token_normalization", "loader: negative_weight_interpretation"], {"default": "None"}], "y_values": ["STRING", {"default": "", "multiline": true, "placeholder": "insert values seperated by \"; \""}]}, "hidden": {"plot_dict": [{"lora_name": ["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], "lora_model_strength": {"min": -4.0, "max": 4.0, "step": 0.01}, "lora_clip_strength": {"min": -4.0, "max": 4.0, "step": 0.01}, "lora_model&clip_strength": {"min": -4.0, "max": 4.0, "step": 0.01}, "steps": {"min": 1, "max": 100, "step": 1}, "cfg": {"min": 0.0, "max": 100.0, "step": 1.0}, "sampler_name": ["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"], "scheduler": ["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"], "denoise": {"min": 0.0, "max": 1.0, "step": 0.01}, "seed": ["increment", "decrement", "randomize"], "ckpt_name": ["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"], "vae_name": ["Baked-VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"], "clip_skip": {"min": -24, "max": -1, "step": 1}, "lora1_name": ["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], "lora1_model_strength": {"min": -4.0, "max": 4.0, "step": 0.01}, "lora1_clip_strength": {"min": -4.0, "max": 4.0, "step": 0.01}, "lora1_model&clip_strength": {"min": -4.0, "max": 4.0, "step": 0.01}, "lora2_name": ["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], "lora2_model_strength": {"min": -4.0, "max": 4.0, "step": 0.01}, "lora2_clip_strength": {"min": -4.0, "max": 4.0, "step": 0.01}, "lora2_model&clip_strength": {"min": -4.0, "max": 4.0, "step": 0.01}, "lora3_name": ["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], "lora3_model_strength": {"min": -4.0, "max": 4.0, "step": 0.01}, "lora3_clip_strength": {"min": -4.0, "max": 4.0, "step": 0.01}, "lora3_model&clip_strength": {"min": -4.0, "max": 4.0, "step": 0.01}, "positive": [], "positive_token_normalization": ["none", "mean", "length", "length+mean"], "positive_weight_interpretation": ["comfy", "A1111", "compel", "comfy++"], "negative": [], "negative_token_normalization": ["none", "mean", "length", "length+mean"], "negative_weight_interpretation": ["comfy", "A1111", "compel", "comfy++"]}], "ttNnodeVersion": "1.2.0"}}, "input_order": {"required": ["grid_spacing", "latent_id", "output_individuals", "flip_xy", "x_axis", "x_values", "y_axis", "y_values"], "hidden": ["plot_dict", "ttNnodeVersion"]}, "output": ["XYPLOT"], "output_is_list": [false], "output_name": ["xyPlot"], "name": "ttN xyPlot", "display_name": "xyPlot", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/legacy", "output_node": false}, "ttN pipeIN": {"input": {"required": {"model": ["MODEL"], "pos": ["CONDITIONING"], "neg": ["CONDITIONING"], "latent": ["LATENT"], "vae": ["VAE"], "clip": ["CLIP"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"image": ["IMAGE"]}, "hidden": {"ttNnodeVersion": "1.1.0"}}, "input_order": {"required": ["model", "pos", "neg", "latent", "vae", "clip", "seed"], "optional": ["image"], "hidden": ["ttNnodeVersion"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "ttN pipeIN", "display_name": "pipeIN (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/legacy", "output_node": false}, "ttN pipeOUT": {"input": {"required": {"pipe": ["PIPE_LINE"]}, "hidden": {"ttNnodeVersion": "1.1.0"}}, "input_order": {"required": ["pipe"], "hidden": ["ttNnodeVersion"]}, "output": ["MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "CLIP", "IMAGE", "INT", "PIPE_LINE"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["model", "pos", "neg", "latent", "vae", "clip", "image", "seed", "pipe"], "name": "ttN pipeOUT", "display_name": "pipeOUT (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/legacy", "output_node": false}, "ttN pipeLoader": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "config_name": [["Default", "anything_v3.yaml", "v1-inference.yaml", "v1-inference_clip_skip_2.yaml", "v1-inference_clip_skip_2_fp16.yaml", "v1-inference_fp16.yaml", "v1-inpainting-inference.yaml", "v2-inference-v.yaml", "v2-inference-v_fp32.yaml", "v2-inference.yaml", "v2-inference_fp32.yaml", "v2-inpainting-inference.yaml"], {"default": "Default"}], "vae_name": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "clip_skip": ["INT", {"default": -1, "min": -24, "max": 0, "step": 1}], "lora1_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora1_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora1_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora2_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora2_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora2_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora3_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora3_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora3_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "positive": ["STRING", {"default": "Positive", "multiline": true}], "positive_token_normalization": [["none", "mean", "length", "length+mean"]], "positive_weight_interpretation": [["comfy", "A1111", "compel", "comfy++", "down_weight"]], "negative": ["STRING", {"default": "Negative", "multiline": true}], "negative_token_normalization": [["none", "mean", "length", "length+mean"]], "negative_weight_interpretation": [["comfy", "A1111", "compel", "comfy++", "down_weight"]], "empty_latent_width": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"model_override": ["MODEL"], "clip_override": ["CLIP"], "optional_lora_stack": ["LORA_STACK"]}, "hidden": {"prompt": "PROMPT", "ttNnodeVersion": "1.1.2", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "config_name", "vae_name", "clip_skip", "lora1_name", "lora1_model_strength", "lora1_clip_strength", "lora2_name", "lora2_model_strength", "lora2_clip_strength", "lora3_name", "lora3_model_strength", "lora3_clip_strength", "positive", "positive_token_normalization", "positive_weight_interpretation", "negative", "negative_token_normalization", "negative_weight_interpretation", "empty_latent_width", "empty_latent_height", "batch_size", "seed"], "optional": ["model_override", "clip_override", "optional_lora_stack"], "hidden": ["prompt", "ttNnodeVersion", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "CLIP", "INT"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["pipe", "model", "positive", "negative", "latent", "vae", "clip", "seed"], "name": "ttN pipeLoader", "display_name": "pipeLoader v1 (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/legacy", "output_node": false}, "ttN pipeKSampler": {"input": {"required": {"pipe": ["PIPE_LINE"], "lora_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "upscale_method": [["None", "nearest-exact", "bilinear", "area", "bicubic", "lanczos", "bislerp"]], "factor": ["FLOAT", {"default": 2, "min": 0.0, "max": 10.0, "step": 0.25}], "crop": [["disabled", "center"]], "sampler_state": [["Sample", "Hold"]], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "image_output": [["Hide", "Preview", "Save", "Hide/Save"]], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "optional_model": ["MODEL"], "optional_positive": ["CONDITIONING"], "optional_negative": ["CONDITIONING"], "optional_latent": ["LATENT"], "optional_vae": ["VAE"], "optional_clip": ["CLIP"], "xyPlot": ["XYPLOT"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [[]], "ttNnodeVersion": "1.0.5"}}, "input_order": {"required": ["pipe", "lora_name", "lora_model_strength", "lora_clip_strength", "upscale_method", "factor", "crop", "sampler_state", "steps", "cfg", "sampler_name", "scheduler", "denoise", "image_output", "save_prefix"], "optional": ["seed", "optional_model", "optional_positive", "optional_negative", "optional_latent", "optional_vae", "optional_clip", "xyPlot"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id", "embeddingsList", "ttNnodeVersion"]}, "output": ["PIPE_LINE", "MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "CLIP", "IMAGE", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["pipe", "model", "positive", "negative", "latent", "vae", "clip", "image", "seed"], "name": "ttN pipeKSampler", "display_name": "pipeKSampler v1 (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/legacy", "output_node": true}, "ttN pipeKSamplerAdvanced": {"input": {"required": {"pipe": ["PIPE_LINE"], "lora_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "upscale_method": [["None", "nearest-exact", "bilinear", "area", "bicubic", "lanczos", "bislerp"]], "factor": ["FLOAT", {"default": 2, "min": 0.0, "max": 10.0, "step": 0.25}], "crop": [["disabled", "center"]], "sampler_state": [["Sample", "Hold"]], "add_noise": [["enable", "disable"]], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at_step": ["INT", {"default": 10000, "min": 0, "max": 10000}], "return_with_leftover_noise": [["disable", "enable"]], "image_output": [["Hide", "Preview", "Save", "Hide/Save"]], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "optional_model": ["MODEL"], "optional_positive": ["CONDITIONING"], "optional_negative": ["CONDITIONING"], "optional_latent": ["LATENT"], "optional_vae": ["VAE"], "optional_clip": ["CLIP"], "xyPlot": ["XYPLOT"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [[]], "ttNnodeVersion": "1.0.5"}}, "input_order": {"required": ["pipe", "lora_name", "lora_model_strength", "lora_clip_strength", "upscale_method", "factor", "crop", "sampler_state", "add_noise", "steps", "cfg", "sampler_name", "scheduler", "start_at_step", "end_at_step", "return_with_leftover_noise", "image_output", "save_prefix"], "optional": ["noise_seed", "optional_model", "optional_positive", "optional_negative", "optional_latent", "optional_vae", "optional_clip", "xyPlot"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id", "embeddingsList", "ttNnodeVersion"]}, "output": ["PIPE_LINE", "MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "CLIP", "IMAGE", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["pipe", "model", "positive", "negative", "latent", "vae", "clip", "image", "seed"], "name": "ttN pipeKSamplerAdvanced", "display_name": "pipeKSamplerAdvanced v1 (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/legacy", "output_node": true}, "ttN pipeLoaderSDXL": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "vae_name": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "lora1_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora1_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora1_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora2_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora2_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora2_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "refiner_ckpt_name": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "refiner_vae_name": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "refiner_lora1_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "refiner_lora1_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "refiner_lora1_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "refiner_lora2_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "refiner_lora2_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "refiner_lora2_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_skip": ["INT", {"default": -2, "min": -24, "max": 0, "step": 1}], "positive": ["STRING", {"default": "Positive", "multiline": true}], "positive_token_normalization": [["none", "mean", "length", "length+mean"]], "positive_weight_interpretation": [["comfy", "A1111", "compel", "comfy++", "down_weight"]], "negative": ["STRING", {"default": "Negative", "multiline": true}], "negative_token_normalization": [["none", "mean", "length", "length+mean"]], "negative_weight_interpretation": [["comfy", "A1111", "compel", "comfy++", "down_weight"]], "empty_latent_width": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "hidden": {"prompt": "PROMPT", "ttNnodeVersion": "1.1.2", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "vae_name", "lora1_name", "lora1_model_strength", "lora1_clip_strength", "lora2_name", "lora2_model_strength", "lora2_clip_strength", "refiner_ckpt_name", "refiner_vae_name", "refiner_lora1_name", "refiner_lora1_model_strength", "refiner_lora1_clip_strength", "refiner_lora2_name", "refiner_lora2_model_strength", "refiner_lora2_clip_strength", "clip_skip", "positive", "positive_token_normalization", "positive_weight_interpretation", "negative", "negative_token_normalization", "negative_weight_interpretation", "empty_latent_width", "empty_latent_height", "batch_size", "seed"], "hidden": ["prompt", "ttNnodeVersion", "my_unique_id"]}, "output": ["PIPE_LINE_SDXL", "MODEL", "CONDITIONING", "CONDITIONING", "VAE", "CLIP", "MODEL", "CONDITIONING", "CONDITIONING", "VAE", "CLIP", "LATENT", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["sdxl_pipe", "model", "positive", "negative", "vae", "clip", "refiner_model", "refiner_positive", "refiner_negative", "refiner_vae", "refiner_clip", "latent", "seed"], "name": "ttN pipeLoaderSDXL", "display_name": "pipeLoaderSDXL v1 (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/legacy", "output_node": false}, "ttN pipeKSamplerSDXL": {"input": {"required": {"sdxl_pipe": ["PIPE_LINE_SDXL"], "upscale_method": [["None", "nearest-exact", "bilinear", "area", "bicubic", "lanczos", "bislerp"]], "factor": ["FLOAT", {"default": 2, "min": 0.0, "max": 10.0, "step": 0.25}], "crop": [["disabled", "center"]], "sampler_state": [["Sample", "Hold"]], "base_steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "refiner_steps": ["INT", {"default": 20, "min": 0, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "image_output": [["Hide", "Preview", "Save", "Hide/Save"]], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "optional_model": ["MODEL"], "optional_positive": ["CONDITIONING"], "optional_negative": ["CONDITIONING"], "optional_vae": ["VAE"], "optional_refiner_model": ["MODEL"], "optional_refiner_positive": ["CONDITIONING"], "optional_refiner_negative": ["CONDITIONING"], "optional_refiner_vae": ["VAE"], "optional_latent": ["LATENT"], "optional_clip": ["CLIP"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [[]], "ttNnodeVersion": "1.0.2"}}, "input_order": {"required": ["sdxl_pipe", "upscale_method", "factor", "crop", "sampler_state", "base_steps", "refiner_steps", "cfg", "sampler_name", "scheduler", "image_output", "save_prefix"], "optional": ["seed", "optional_model", "optional_positive", "optional_negative", "optional_vae", "optional_refiner_model", "optional_refiner_positive", "optional_refiner_negative", "optional_refiner_vae", "optional_latent", "optional_clip"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id", "embeddingsList", "ttNnodeVersion"]}, "output": ["PIPE_LINE_SDXL", "MODEL", "CONDITIONING", "CONDITIONING", "VAE", "MODEL", "CONDITIONING", "CONDITIONING", "VAE", "LATENT", "CLIP", "IMAGE", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["sdxl_pipe", "model", "positive", "negative", "vae", "refiner_model", "refiner_positive", "refiner_negative", "refiner_vae", "latent", "clip", "image", "seed"], "name": "ttN pipeKSamplerSDXL", "display_name": "pipeKSamplerSDXL v1 (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_tinyterraNodes", "category": "\ud83c\udf0f tinyterra/legacy", "output_node": true}, "CR Image Output": {"input": {"required": {"images": ["IMAGE"], "output_type": [["Preview", "Save", "UI (no batch)"]], "filename_prefix": ["STRING", {"default": "CR"}], "prefix_presets": [["None", "yyyyMMdd"]], "file_format": [["png", "jpg", "webp", "tif"]]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}, "optional": {"trigger": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["images", "output_type", "filename_prefix", "prefix_presets", "file_format"], "hidden": ["prompt", "extra_pnginfo"], "optional": ["trigger"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["trigger"], "name": "CR Image Output", "display_name": "\ud83d\udcbe CR Image Output", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": true}, "CR Latent Batch Size": {"input": {"required": {"latent": ["LATENT"], "batch_size": ["INT", {"default": 2, "min": 1, "max": 999, "step": 1}]}}, "input_order": {"required": ["latent", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "CR Latent Batch Size", "display_name": "\u2699\ufe0f CR Latent Batch Size", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": false}, "CR Conditioning Mixer": {"input": {"required": {"conditioning_1": ["CONDITIONING"], "conditioning_2": ["CONDITIONING"], "mix_method": [["Combine", "Average", "Concatenate"]], "average_strength": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning_1", "conditioning_2", "mix_method", "average_strength"]}, "output": ["CONDITIONING", "STRING"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "show_help"], "name": "CR Conditioning Mixer", "display_name": "\u2699\ufe0f CR Conditioning Mixer", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": false}, "CR Select Model": {"input": {"required": {"ckpt_name1": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "ckpt_name2": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "ckpt_name3": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "ckpt_name4": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "ckpt_name5": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "select_model": ["INT", {"default": 1, "min": 1, "max": 5}]}}, "input_order": {"required": ["ckpt_name1", "ckpt_name2", "ckpt_name3", "ckpt_name4", "ckpt_name5", "select_model"]}, "output": ["MODEL", "CLIP", "VAE", "STRING", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "ckpt_name", "show_help"], "name": "CR Select Model", "display_name": "\ud83d\udd2e CR Select Model", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": false}, "CR Seed": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["seed"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["seed", "show_help"], "name": "CR Seed", "display_name": "\ud83c\udf31 CR Seed", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": true}, "CR Prompt Text": {"input": {"required": {"prompt": ["STRING", {"default": "prompt", "multiline": true}]}}, "input_order": {"required": ["prompt"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["prompt", "show_help"], "name": "CR Prompt Text", "display_name": "\u2699\ufe0f CR Prompt Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": false}, "CR Combine Prompt": {"input": {"required": {}, "optional": {"part1": ["STRING", {"default": "", "multiline": true}], "part2": ["STRING", {"default": "", "multiline": true}], "part3": ["STRING", {"default": "", "multiline": true}], "part4": ["STRING", {"default": "", "multiline": true}], "separator": ["STRING", {"default": ",", "multiline": false}]}}, "input_order": {"required": [], "optional": ["part1", "part2", "part3", "part4", "separator"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["prompt", "show_help"], "name": "CR Combine Prompt", "display_name": "\u2699\ufe0f CR Combine Prompt", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": false}, "CR VAE Decode": {"input": {"required": {"samples": ["LATENT"], "vae": ["VAE"], "tiled": ["BOOLEAN", {"default": false}], "circular": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["samples", "vae", "tiled", "circular"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR VAE Decode", "display_name": "\u2699\ufe0f CR VAE Decode", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": false}, "CR Text List": {"input": {"required": {"multiline_text": ["STRING", {"multiline": true, "default": "text"}], "start_index": ["INT", {"default": 0, "min": 0, "max": 9999}], "max_rows": ["INT", {"default": 1000, "min": 1, "max": 9999}]}}, "input_order": {"required": ["multiline_text", "start_index", "max_rows"]}, "output": ["STRING", "STRING"], "output_is_list": [true, false], "output_name": ["STRING", "show_help"], "name": "CR Text List", "display_name": "\ud83d\udcdc CR Text List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Prompt List": {"input": {"required": {"prepend_text": ["STRING", {"multiline": false, "default": ""}], "multiline_text": ["STRING", {"multiline": true, "default": "body_text"}], "append_text": ["STRING", {"multiline": false, "default": ""}], "start_index": ["INT", {"default": 0, "min": 0, "max": 9999}], "max_rows": ["INT", {"default": 1000, "min": 1, "max": 9999}]}}, "input_order": {"required": ["prepend_text", "multiline_text", "append_text", "start_index", "max_rows"]}, "output": ["STRING", "STRING", "STRING"], "output_is_list": [true, true, false], "output_name": ["prompt", "body_text", "show_help"], "name": "CR Prompt List", "display_name": "\ud83d\udcdc CR Prompt List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Simple List": {"input": {"required": {"list_values": ["STRING", {"multiline": true, "default": "text"}]}}, "input_order": {"required": ["list_values"]}, "output": ["*", "STRING"], "output_is_list": [true, false], "output_name": ["LIST", "show_help"], "name": "CR Simple List", "display_name": "\ud83d\udcdc CR Simple List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Float Range List": {"input": {"required": {"start": ["FLOAT", {"default": 0.0, "min": -99999.99, "max": 99999.99, "step": 0.01}], "end": ["FLOAT", {"default": 1.0, "min": -99999.99, "max": 99999.99, "step": 0.01}], "step": ["FLOAT", {"default": 1.0, "min": -99999.99, "max": 99999.99, "step": 0.01}], "operation": [["none", "sin", "cos", "tan"]], "decimal_places": ["INT", {"default": 2, "min": 0, "max": 10}], "ignore_first_value": ["BOOLEAN", {"default": true}], "max_values_per_loop": ["INT", {"default": 128, "min": 1, "max": 99999}], "loops": ["INT", {"default": 1, "min": 1, "max": 999}], "ping_pong": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["start", "end", "step", "operation", "decimal_places", "ignore_first_value", "max_values_per_loop", "loops", "ping_pong"]}, "output": ["FLOAT", "STRING"], "output_is_list": [true, false], "output_name": ["FLOAT", "show_help"], "name": "CR Float Range List", "display_name": "\ud83d\udcdc CR Float Range List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Integer Range List": {"input": {"required": {"start": ["INT", {"default": 0, "min": -99999, "max": 99999}], "end": ["INT", {"default": 0, "min": -99999, "max": 99999}], "step": ["INT", {"default": 1, "min": 1, "max": 99999}], "loops": ["INT", {"default": 1, "min": 1, "max": 999}], "ping_pong": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["start", "end", "step", "loops", "ping_pong"]}, "output": ["INT", "STRING"], "output_is_list": [true, false], "output_name": ["INT", "show_help"], "name": "CR Integer Range List", "display_name": "\ud83d\udcdc CR Integer Range List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Load Text List": {"input": {"required": {"input_file_path": ["STRING", {"multiline": false, "default": ""}], "file_name": ["STRING", {"multiline": false, "default": ""}], "file_extension": [["txt", "csv"]]}}, "input_order": {"required": ["input_file_path", "file_name", "file_extension"]}, "output": ["STRING", "STRING"], "output_is_list": [true, false], "output_name": ["STRING", "show_help"], "name": "CR Load Text List", "display_name": "\ud83d\udcdc CR Load Text List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Binary To Bit List": {"input": {"required": {"bit_string": ["STRING", {"multiline": true, "default": ""}]}}, "input_order": {"required": ["bit_string"]}, "output": ["STRING", "STRING"], "output_is_list": [true, false], "output_name": ["STRING", "show_help"], "name": "CR Binary To Bit List", "display_name": "\ud83d\udcdc CR Binary To Bit List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Text Cycler": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": ""}], "repeats": ["INT", {"default": 1, "min": 1, "max": 99999}], "loops": ["INT", {"default": 1, "min": 1, "max": 99999}]}}, "input_order": {"required": ["text", "repeats", "loops"]}, "output": ["*", "STRING"], "output_is_list": [true, false], "output_name": ["STRING", "show_text"], "name": "CR Text Cycler", "display_name": "\ud83d\udcdc CR Text Cycler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Value Cycler": {"input": {"required": {"values": ["STRING", {"multiline": true, "default": ""}], "repeats": ["INT", {"default": 1, "min": 1, "max": 99999}], "loops": ["INT", {"default": 1, "min": 1, "max": 99999}]}}, "input_order": {"required": ["values", "repeats", "loops"]}, "output": ["FLOAT", "INT", "STRING"], "output_is_list": [true, true, false], "output_name": ["FLOAT", "INT", "show_text"], "name": "CR Value Cycler", "display_name": "\ud83d\udcdc CR Value Cycler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Load Image List": {"input": {"required": {"input_folder": [["clipspace", "pasted"]], "start_index": ["INT", {"default": 0, "min": 0, "max": 9999}], "max_images": ["INT", {"default": 1, "min": 1, "max": 9999}]}, "optional": {"input_path": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["input_folder", "start_index", "max_images"], "optional": ["input_path"]}, "output": ["IMAGE", "STRING"], "output_is_list": [true, false], "output_name": ["IMAGE", "show_help"], "name": "CR Load Image List", "display_name": "\u2328\ufe0f CR Load Image List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\u2328\ufe0f IO", "output_node": false}, "CR Load Image List Plus": {"input": {"required": {"input_folder": [["clipspace", "pasted"]], "start_index": ["INT", {"default": 0, "min": 0, "max": 99999}], "max_images": ["INT", {"default": 1, "min": 1, "max": 99999}]}, "optional": {"input_path": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["input_folder", "start_index", "max_images"], "optional": ["input_path"]}, "output": ["IMAGE", "MASK", "INT", "STRING", "INT", "INT", "INT", "STRING"], "output_is_list": [true, true, true, true, false, false, false, false], "output_name": ["IMAGE", "MASK", "index", "filename", "width", "height", "list_length", "show_help"], "name": "CR Load Image List Plus", "display_name": "\u2328\ufe0f CR Load Image List Plus", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\u2328\ufe0f IO", "output_node": false}, "CR Load GIF As List": {"input": {"required": {"input_folder": [["clipspace", "pasted"]], "gif_filename": ["STRING", {"multiline": false, "default": "text"}], "start_frame": ["INT", {"default": 0, "min": 0, "max": 99999}], "max_frames": ["INT", {"default": 1, "min": 1, "max": 99999}]}, "optional": {"input_path": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["input_folder", "gif_filename", "start_frame", "max_frames"], "optional": ["input_path"]}, "output": ["IMAGE", "MASK", "STRING"], "output_is_list": [true, true, false], "output_name": ["IMAGE", "MASK", "show_help"], "name": "CR Load GIF As List", "display_name": "\u2328\ufe0f CR Load GIF As List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\u2328\ufe0f IO", "output_node": false}, "CR Font File List": {"input": {"required": {"source_folder": [["system", "Comfyroll", "from folder"]], "start_index": ["INT", {"default": 0, "min": 0, "max": 9999}], "max_rows": ["INT", {"default": 1000, "min": 1, "max": 9999}]}, "optional": {"folder_path": ["STRING", {"default": "C:\\Windows\\Fonts", "multiline": false}]}}, "input_order": {"required": ["source_folder", "start_index", "max_rows"], "optional": ["folder_path"]}, "output": ["*", "STRING"], "output_is_list": [true, false], "output_name": ["LIST", "show_help"], "name": "CR Font File List", "display_name": "\u2328\ufe0f CR Font File List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\u2328\ufe0f IO", "output_node": false}, "CR Batch Images From List": {"input": {"required": {"image_list": ["IMAGE"]}}, "input_order": {"required": ["image_list"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image_batch", "show_help"], "name": "CR Batch Images From List", "display_name": "\ud83d\udee0\ufe0f CR Batch Images From List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR Intertwine Lists": {"input": {"required": {"list1": ["STRING", {"multiline": true, "default": "", "forceInput": true}], "list2": ["STRING", {"multiline": true, "default": "", "forceInput": true}]}}, "input_order": {"required": ["list1", "list2"]}, "output": ["STRING", "STRING"], "output_is_list": [true, false], "output_name": ["STRING", "show_help"], "name": "CR Intertwine Lists", "display_name": "\ud83d\udee0\ufe0f CR Intertwine Lists", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR Repeater": {"input": {"required": {"input_data": ["*"], "repeats": ["INT", {"default": 1, "min": 1, "max": 99999}]}}, "input_order": {"required": ["input_data", "repeats"]}, "output": ["*", "STRING"], "output_is_list": [true, false], "output_name": ["list", "show_help"], "name": "CR Repeater", "display_name": "\ud83d\udee0\ufe0f CR Repeater", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR XY Product": {"input": {"required": {"text_x": ["STRING", {"multiline": true}], "text_y": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["text_x", "text_y"]}, "output": ["*", "*", "STRING"], "output_is_list": [true, true, false], "output_name": ["x_values", "y_values", "show_help"], "name": "CR XY Product", "display_name": "\ud83d\udee0\ufe0f CR XY Product", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR Text List To String": {"input": {"required": {"text_list": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text_list"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text List To String", "display_name": "\ud83d\udee0\ufe0f CR Text List To String", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR SD1.5 Aspect Ratio": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 8192}], "height": ["INT", {"default": 512, "min": 64, "max": 8192}], "aspect_ratio": [["custom", "1:1 square 512x512", "1:1 square 1024x1024", "2:3 portrait 512x768", "3:4 portrait 512x682", "3:2 landscape 768x512", "4:3 landscape 682x512", "16:9 cinema 910x512", "1.85:1 cinema 952x512", "2:1 cinema 1024x512", "2.39:1 anamorphic 1224x512"]], "swap_dimensions": [["Off", "On"]], "upscale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "INT", "LATENT", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["width", "height", "upscale_factor", "batch_size", "empty_latent", "show_help"], "name": "CR SD1.5 Aspect Ratio", "display_name": "\ud83d\udd33 CR SD1.5 Aspect Ratio", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio", "output_node": false}, "CR SDXL Aspect Ratio": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 64, "max": 8192}], "height": ["INT", {"default": 1024, "min": 64, "max": 8192}], "aspect_ratio": [["custom", "1:1 square 1024x1024", "3:4 portrait 896x1152", "5:8 portrait 832x1216", "9:16 portrait 768x1344", "9:21 portrait 640x1536", "4:3 landscape 1152x896", "3:2 landscape 1216x832", "16:9 landscape 1344x768", "21:9 landscape 1536x640"]], "swap_dimensions": [["Off", "On"]], "upscale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "INT", "LATENT", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["width", "height", "upscale_factor", "batch_size", "empty_latent", "show_help"], "name": "CR SDXL Aspect Ratio", "display_name": "\ud83d\udd33 CR SDXL Aspect Ratio", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio", "output_node": false}, "CR Aspect Ratio": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 64, "max": 8192}], "height": ["INT", {"default": 1024, "min": 64, "max": 8192}], "aspect_ratio": [["custom", "SD1.5 - 1:1 square 512x512", "SD1.5 - 2:3 portrait 512x768", "SD1.5 - 3:4 portrait 512x682", "SD1.5 - 3:2 landscape 768x512", "SD1.5 - 4:3 landscape 682x512", "SD1.5 - 16:9 cinema 910x512", "SD1.5 - 1.85:1 cinema 952x512", "SD1.5 - 2:1 cinema 1024x512", "SDXL - 1:1 square 1024x1024", "SDXL - 3:4 portrait 896x1152", "SDXL - 5:8 portrait 832x1216", "SDXL - 9:16 portrait 768x1344", "SDXL - 9:21 portrait 640x1536", "SDXL - 4:3 landscape 1152x896", "SDXL - 3:2 landscape 1216x832", "SDXL - 16:9 landscape 1344x768", "SDXL - 21:9 landscape 1536x640"]], "swap_dimensions": [["Off", "On"]], "upscale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "prescale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor", "prescale_factor", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "FLOAT", "INT", "LATENT", "STRING"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["width", "height", "upscale_factor", "prescale_factor", "batch_size", "empty_latent", "show_help"], "name": "CR Aspect Ratio", "display_name": "\ud83d\udd33 CR Aspect Ratio", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio", "output_node": false}, "CR Aspect Ratio Banners": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 64, "max": 8192}], "height": ["INT", {"default": 1024, "min": 64, "max": 8192}], "aspect_ratio": [["custom", "Large Rectangle - 336x280", "Medium Rectangle - 300x250", "Small Rectangle - 180x150", "Square - 250x250", "Small Square - 200x200", "Button - 125x125", "Half Page - 300x600", "Vertical Banner - 120x240", "Wide Skyscraper - 160x600", "Skyscraper - 120x600", "Billboard - 970x250", "Portrait - 300x1050", "Banner - 468x60", "Leaderboard - 728x90"]], "swap_dimensions": [["Off", "On"]], "upscale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "prescale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor", "prescale_factor", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "FLOAT", "INT", "LATENT", "STRING"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["width", "height", "upscale_factor", "prescale_factor", "batch_size", "empty_latent", "show_help"], "name": "CR Aspect Ratio Banners", "display_name": "\ud83d\udd33 CR Aspect Ratio Banners", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio", "output_node": false}, "CR Aspect Ratio Social Media": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 64, "max": 8192}], "height": ["INT", {"default": 1024, "min": 64, "max": 8192}], "aspect_ratio": [["custom", "Instagram Portrait - 1080x1350", "Instagram Square - 1080x1080", "Instagram Landscape - 1080x608", "Instagram Stories/Reels - 1080x1920", "Facebook Landscape - 1080x1350", "Facebook Marketplace - 1200x1200", "Facebook Stories - 1080x1920", "TikTok - 1080x1920", "YouTube Banner - 2560\u00d71440", "LinkedIn Profile Banner - 1584x396", "LinkedIn Page Cover - 1128x191", "LinkedIn Post - 1200x627", "Pinterest Pin Image - 1000x1500", "CivitAI Cover - 1600x400", "OpenArt App - 1500x1000"]], "swap_dimensions": [["Off", "On"]], "upscale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "prescale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor", "prescale_factor", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "FLOAT", "INT", "LATENT", "STRING"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["width", "height", "upscale_factor", "prescale_factor", "batch_size", "empty_latent", "show_help"], "name": "CR Aspect Ratio Social Media", "display_name": "\ud83d\udd33 CR Aspect Ratio Social Media", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio", "output_node": false}, "CR_Aspect Ratio For Print": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 64, "max": 8192}], "height": ["INT", {"default": 1024, "min": 64, "max": 8192}], "aspect_ratio": [["A4 - 2480x3508", "A5 - 1748x2480", "A6 - 1240x1748", "A7 - 874x1240", "A8 - 614x874", "A9 - 437x614", "A10 - 307x437", "B4 - 2953x4169", "B5 - 2079x2953", "B6 - 1476x2079", "B7 - 1039x1476", "B8 - 732x1039", "B9 - 520x732", "B10 - 366x520", "C4 - 2705x3827", "C5 - 1913x2705", "C6 - 1346x1913", "C7 - 957x1346", "C8 - 673x957", "C9 - 472x673", "C10 - 331x472", "Letter (8.5 x 11 inches) - 2550x3300", "Legal (8.5 x 14 inches) - 2550x4200"]], "swap_dimensions": [["Off", "On"]], "upscale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "prescale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor", "prescale_factor", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "FLOAT", "INT", "LATENT", "STRING"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["width", "height", "upscale_factor", "prescale_factor", "batch_size", "empty_latent", "show_help"], "name": "CR_Aspect Ratio For Print", "display_name": "\ud83d\udd33 CR_Aspect Ratio For Print", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio", "output_node": false}, "CR Image Size": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 2048}], "height": ["INT", {"default": 512, "min": 64, "max": 2048}], "upscale_factor": ["FLOAT", {"default": 1, "min": 1, "max": 2000}]}}, "input_order": {"required": ["width", "height", "upscale_factor"]}, "output": ["INT", "INT", "FLOAT", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["Width", "Height", "upscale_factor", "show_help"], "name": "CR Image Size", "display_name": "CR Image Size (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc80 Legacy", "output_node": false}, "CR Aspect Ratio SDXL": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 64, "max": 2048}], "height": ["INT", {"default": 1024, "min": 64, "max": 2048}], "aspect_ratio": [["custom", "1:1 square 1024x1024", "3:4 portrait 896x1152", "5:8 portrait 832x1216", "9:16 portrait 768x1344", "9:21 portrait 640x1536", "4:3 landscape 1152x896", "3:2 landscape 1216x832", "16:9 landscape 1344x768", "21:9 landscape 1536x640"]], "swap_dimensions": [["Off", "On"]], "upscale_factor1": ["FLOAT", {"default": 1, "min": 1, "max": 2000}], "upscale_factor2": ["FLOAT", {"default": 1, "min": 1, "max": 2000}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor1", "upscale_factor2", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "FLOAT", "INT", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["INT", "INT", "FLOAT", "FLOAT", "INT", "show_help"], "name": "CR Aspect Ratio SDXL", "display_name": "CR Aspect Ratio SDXL (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc80 Legacy", "output_node": false}, "CR SDXL Prompt Mixer": {"input": {"required": {}, "optional": {"prompt_positive": ["STRING", {"multiline": true, "default": "BASE_POSITIVE"}], "prompt_negative": ["STRING", {"multiline": true, "default": "BASE_NEGATIVE"}], "style_positive": ["STRING", {"multiline": true, "default": "REFINER_POSTIVE"}], "style_negative": ["STRING", {"multiline": true, "default": "REFINER_NEGATIVE"}], "preset": [["preset 1", "preset 2", "preset 3", "preset 4", "preset 5"]]}}, "input_order": {"required": [], "optional": ["prompt_positive", "prompt_negative", "style_positive", "style_negative", "preset"]}, "output": ["STRING", "STRING", "STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["pos_g", "pos_l", "pos_r", "neg_g", "neg_l", "neg_r"], "name": "CR SDXL Prompt Mixer", "display_name": "CR SDXL Prompt Mixer (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc80 Legacy", "output_node": false}, "CR Seed to Int": {"input": {"required": {"seed": ["SEED"]}}, "input_order": {"required": ["seed"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Seed to Int", "display_name": "CR Seed to Int (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc80 Legacy", "output_node": false}, "CR Apply ControlNet": {"input": {"required": {"conditioning": ["CONDITIONING"], "control_net": ["CONTROL_NET"], "image": ["IMAGE"], "switch": [["On", "Off"]], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "control_net", "image", "switch", "strength"]}, "output": ["CONDITIONING", "STRING"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "show_help"], "name": "CR Apply ControlNet", "display_name": "\ud83d\udd79\ufe0f CR Apply ControlNet", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd79\ufe0f ControlNet", "output_node": false}, "CR Multi-ControlNet Stack": {"input": {"required": {}, "optional": {"switch_1": [["Off", "On"]], "controlnet_1": [["None", "canny-sdxl-1.0.safetensors", "canny-xl1.0.safetensors", "control_sd15_canny.pth", "control_sd15_depth.pth", "control_sd15_normal.pth", "controlnet11Models_tileE.safetensors", "depth-sdxl-1.0.safetensors", "depth-zoe-xl-v1.0-controlnet.safetensors", "diffusers_xl_canny_full.safetensors", "diffusers_xl_depth_full.safetensors", "flux-canny-controlnet-v3.safetensors", "flux-controlnet-union.safetensors", "flux-depth-controlnet-v3.safetensors", "jasperai_flux_depth_controlnet.safetensors", "jasperai_flux_surface_normals_controlnet.safetensors", "mistoLine_fp16.safetensors", "sai_xl_canny_256lora.safetensors", "sai_xl_depth_256lora.safetensors", "t2i-adapter-canny.safetensors", "t2i-adapter-depth.safetensors", "t2iadapter_canny_sd14v1.pth", "t2iadapter_depth_sd14v1.pth", "v3_sd15_sparsectrl_rgb.ckpt", "xinsir_canny.safetensors", "xinsir_depth.safetensors"]], "controlnet_strength_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_1": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "switch_2": [["Off", "On"]], "controlnet_2": [["None", "canny-sdxl-1.0.safetensors", "canny-xl1.0.safetensors", "control_sd15_canny.pth", "control_sd15_depth.pth", "control_sd15_normal.pth", "controlnet11Models_tileE.safetensors", "depth-sdxl-1.0.safetensors", "depth-zoe-xl-v1.0-controlnet.safetensors", "diffusers_xl_canny_full.safetensors", "diffusers_xl_depth_full.safetensors", "flux-canny-controlnet-v3.safetensors", "flux-controlnet-union.safetensors", "flux-depth-controlnet-v3.safetensors", "jasperai_flux_depth_controlnet.safetensors", "jasperai_flux_surface_normals_controlnet.safetensors", "mistoLine_fp16.safetensors", "sai_xl_canny_256lora.safetensors", "sai_xl_depth_256lora.safetensors", "t2i-adapter-canny.safetensors", "t2i-adapter-depth.safetensors", "t2iadapter_canny_sd14v1.pth", "t2iadapter_depth_sd14v1.pth", "v3_sd15_sparsectrl_rgb.ckpt", "xinsir_canny.safetensors", "xinsir_depth.safetensors"]], "controlnet_strength_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_2": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "switch_3": [["Off", "On"]], "controlnet_3": [["None", "canny-sdxl-1.0.safetensors", "canny-xl1.0.safetensors", "control_sd15_canny.pth", "control_sd15_depth.pth", "control_sd15_normal.pth", "controlnet11Models_tileE.safetensors", "depth-sdxl-1.0.safetensors", "depth-zoe-xl-v1.0-controlnet.safetensors", "diffusers_xl_canny_full.safetensors", "diffusers_xl_depth_full.safetensors", "flux-canny-controlnet-v3.safetensors", "flux-controlnet-union.safetensors", "flux-depth-controlnet-v3.safetensors", "jasperai_flux_depth_controlnet.safetensors", "jasperai_flux_surface_normals_controlnet.safetensors", "mistoLine_fp16.safetensors", "sai_xl_canny_256lora.safetensors", "sai_xl_depth_256lora.safetensors", "t2i-adapter-canny.safetensors", "t2i-adapter-depth.safetensors", "t2iadapter_canny_sd14v1.pth", "t2iadapter_depth_sd14v1.pth", "v3_sd15_sparsectrl_rgb.ckpt", "xinsir_canny.safetensors", "xinsir_depth.safetensors"]], "controlnet_strength_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_3": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "image_1": ["IMAGE"], "image_2": ["IMAGE"], "image_3": ["IMAGE"], "controlnet_stack": ["CONTROL_NET_STACK"]}}, "input_order": {"required": [], "optional": ["switch_1", "controlnet_1", "controlnet_strength_1", "start_percent_1", "end_percent_1", "switch_2", "controlnet_2", "controlnet_strength_2", "start_percent_2", "end_percent_2", "switch_3", "controlnet_3", "controlnet_strength_3", "start_percent_3", "end_percent_3", "image_1", "image_2", "image_3", "controlnet_stack"]}, "output": ["CONTROL_NET_STACK", "STRING"], "output_is_list": [false, false], "output_name": ["CONTROLNET_STACK", "show_help"], "name": "CR Multi-ControlNet Stack", "display_name": "\ud83d\udd79\ufe0f CR Multi-ControlNet Stack", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd79\ufe0f ControlNet", "output_node": false}, "CR Apply Multi-ControlNet": {"input": {"required": {"base_positive": ["CONDITIONING"], "base_negative": ["CONDITIONING"], "switch": [["Off", "On"]], "controlnet_stack": ["CONTROL_NET_STACK"]}}, "input_order": {"required": ["base_positive", "base_negative", "switch", "controlnet_stack"]}, "output": ["CONDITIONING", "CONDITIONING", "STRING"], "output_is_list": [false, false, false], "output_name": ["base_pos", "base_neg", "show_help"], "name": "CR Apply Multi-ControlNet", "display_name": "\ud83d\udd79\ufe0f CR Apply Multi-ControlNet", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd79\ufe0f ControlNet", "output_node": false}, "CR Load LoRA": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "switch": [["On", "Off"]], "lora_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "clip", "switch", "lora_name", "strength_model", "strength_clip"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "show_help"], "name": "CR Load LoRA", "display_name": "\ud83d\udc8a CR Load LoRA", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA", "output_node": false}, "CR LoRA Stack": {"input": {"required": {"switch_1": [["Off", "On"]], "lora_name_1": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_weight_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "switch_2": [["Off", "On"]], "lora_name_2": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_weight_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "switch_3": [["Off", "On"]], "lora_name_3": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_weight_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}, "optional": {"lora_stack": ["LORA_STACK"]}}, "input_order": {"required": ["switch_1", "lora_name_1", "model_weight_1", "clip_weight_1", "switch_2", "lora_name_2", "model_weight_2", "clip_weight_2", "switch_3", "lora_name_3", "model_weight_3", "clip_weight_3"], "optional": ["lora_stack"]}, "output": ["LORA_STACK", "STRING"], "output_is_list": [false, false], "output_name": ["LORA_STACK", "show_help"], "name": "CR LoRA Stack", "display_name": "\ud83d\udc8a CR LoRA Stack", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA", "output_node": false}, "CR Random LoRA Stack": {"input": {"required": {"exclusive_mode": [["Off", "On"]], "stride": ["INT", {"default": 1, "min": 1, "max": 1000}], "force_randomize_after_stride": [["Off", "On"]], "lora_name_1": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "switch_1": [["Off", "On"]], "chance_1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "model_weight_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_2": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "switch_2": [["Off", "On"]], "chance_2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "model_weight_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_3": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "switch_3": [["Off", "On"]], "chance_3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "model_weight_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}, "optional": {"lora_stack": ["LORA_STACK"]}}, "input_order": {"required": ["exclusive_mode", "stride", "force_randomize_after_stride", "lora_name_1", "switch_1", "chance_1", "model_weight_1", "clip_weight_1", "lora_name_2", "switch_2", "chance_2", "model_weight_2", "clip_weight_2", "lora_name_3", "switch_3", "chance_3", "model_weight_3", "clip_weight_3"], "optional": ["lora_stack"]}, "output": ["LORA_STACK"], "output_is_list": [false], "output_name": ["LORA_STACK"], "name": "CR Random LoRA Stack", "display_name": "\ud83d\udc8a CR Random LoRA Stack", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA", "output_node": false}, "CR Random Weight LoRA": {"input": {"required": {"stride": ["INT", {"default": 1, "min": 1, "max": 1000}], "force_randomize_after_stride": [["Off", "On"]], "lora_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "switch": [["Off", "On"]], "weight_min": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 10.0, "step": 0.01}], "weight_max": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}, "optional": {"lora_stack": ["LORA_STACK"]}}, "input_order": {"required": ["stride", "force_randomize_after_stride", "lora_name", "switch", "weight_min", "weight_max", "clip_weight"], "optional": ["lora_stack"]}, "output": ["LORA_STACK"], "output_is_list": [false], "output_name": ["LORA_STACK"], "name": "CR Random Weight LoRA", "display_name": "\ud83d\udc8a CR Random Weight LoRA", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA", "output_node": false}, "CR Apply LoRA Stack": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "lora_stack": ["LORA_STACK"]}}, "input_order": {"required": ["model", "clip", "lora_stack"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "show_help"], "name": "CR Apply LoRA Stack", "display_name": "\ud83d\udc8a CR Apply LoRA Stack", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA", "output_node": false}, "CR Apply Model Merge": {"input": {"required": {"model_stack": ["MODEL_STACK"], "merge_method": [["Recursive", "Weighted"]], "normalise_ratios": [["Yes", "No"]], "weight_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model_stack", "merge_method", "normalise_ratios", "weight_factor"]}, "output": ["MODEL", "CLIP", "STRING", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "model_mix_info", "show_help"], "name": "CR Apply Model Merge", "display_name": "\u26cf\ufe0f CR Apply Model Merge", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\u26cf\ufe0f Model Merge", "output_node": false}, "CR Model Merge Stack": {"input": {"required": {"switch_1": [["Off", "On"]], "ckpt_name1": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "model_ratio1": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}], "clip_ratio1": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}], "switch_2": [["Off", "On"]], "ckpt_name2": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "model_ratio2": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}], "clip_ratio2": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}], "switch_3": [["Off", "On"]], "ckpt_name3": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "model_ratio3": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}], "clip_ratio3": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}]}, "optional": {"model_stack": ["MODEL_STACK"]}}, "input_order": {"required": ["switch_1", "ckpt_name1", "model_ratio1", "clip_ratio1", "switch_2", "ckpt_name2", "model_ratio2", "clip_ratio2", "switch_3", "ckpt_name3", "model_ratio3", "clip_ratio3"], "optional": ["model_stack"]}, "output": ["MODEL_STACK", "STRING"], "output_is_list": [false, false], "output_name": ["MODEL_STACK", "show_help"], "name": "CR Model Merge Stack", "display_name": "\u26cf\ufe0f CR Model Merge Stack", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\u26cf\ufe0f Model Merge", "output_node": false}, "CR Data Bus In": {"input": {"required": {}, "optional": {"pipe": ["*"], "any1": ["*"], "any2": ["*"], "any3": ["*"], "any4": ["*"]}}, "input_order": {"required": [], "optional": ["pipe", "any1", "any2", "any3", "any4"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["pipe", "show_help"], "name": "CR Data Bus In", "display_name": "\ud83d\ude8c CR Data Bus In", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\ude8c Bus", "output_node": false}, "CR Data Bus Out": {"input": {"required": {"pipe": ["PIPE_LINE"]}}, "input_order": {"required": ["pipe"]}, "output": ["PIPE_LINE", "*", "*", "*", "*", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["pipe", "any1", "any2", "any3", "any4", "show_help"], "name": "CR Data Bus Out", "display_name": "\ud83d\ude8c CR Data Bus Out", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\ude8c Bus", "output_node": false}, "CR 8 Channel In": {"input": {"required": {}, "optional": {"pipe": ["*"], "ch1": ["*"], "ch2": ["*"], "ch3": ["*"], "ch4": ["*"], "ch5": ["*"], "ch6": ["*"], "ch7": ["*"], "ch8": ["*"]}}, "input_order": {"required": [], "optional": ["pipe", "ch1", "ch2", "ch3", "ch4", "ch5", "ch6", "ch7", "ch8"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["pipe", "show_help"], "name": "CR 8 Channel In", "display_name": "\ud83d\ude8c CR 8 Channel In", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\ude8c Bus", "output_node": false}, "CR 8 Channel Out": {"input": {"required": {"pipe": ["PIPE_LINE"]}}, "input_order": {"required": ["pipe"]}, "output": ["PIPE_LINE", "*", "*", "*", "*", "*", "*", "*", "*", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false, false, false], "output_name": ["pipe", "ch1", "ch2", "ch3", "ch4", "ch5", "ch6", "ch7", "ch8", "show_help"], "name": "CR 8 Channel Out", "display_name": "\ud83d\ude8c CR 8 Channel Out", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\ude8c Bus", "output_node": false}, "CR Module Pipe Loader": {"input": {"required": {}, "optional": {"model": ["MODEL"], "pos": ["CONDITIONING"], "neg": ["CONDITIONING"], "latent": ["LATENT"], "vae": ["VAE"], "clip": ["CLIP"], "controlnet": ["CONTROL_NET"], "image": ["IMAGE"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": [], "optional": ["model", "pos", "neg", "latent", "vae", "clip", "controlnet", "image", "seed"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["pipe", "show_help"], "name": "CR Module Pipe Loader", "display_name": "\u2708\ufe0f CR Module Pipe Loader", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\u2708\ufe0f Module", "output_node": false}, "CR Module Input": {"input": {"required": {"pipe": ["PIPE_LINE"]}}, "input_order": {"required": ["pipe"]}, "output": ["PIPE_LINE", "MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "CLIP", "CONTROL_NET", "IMAGE", "INT", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false], "output_name": ["pipe", "model", "pos", "neg", "latent", "vae", "clip", "controlnet", "image", "seed", "show_help"], "name": "CR Module Input", "display_name": "\u2708\ufe0f CR Module Input", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\u2708\ufe0f Module", "output_node": false}, "CR Module Output": {"input": {"required": {"pipe": ["PIPE_LINE"]}, "optional": {"model": ["MODEL"], "pos": ["CONDITIONING"], "neg": ["CONDITIONING"], "latent": ["LATENT"], "vae": ["VAE"], "clip": ["CLIP"], "controlnet": ["CONTROL_NET"], "image": ["IMAGE"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["pipe"], "optional": ["model", "pos", "neg", "latent", "vae", "clip", "controlnet", "image", "seed"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["pipe", "show_help"], "name": "CR Module Output", "display_name": "\u2708\ufe0f CR Module Output", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\u2708\ufe0f Module", "output_node": false}, "CR Image Pipe In": {"input": {"required": {}, "optional": {"image": ["IMAGE"], "width": ["INT", {"default": 512, "min": 64, "max": 2048}], "height": ["INT", {"default": 512, "min": 64, "max": 2048}], "upscale_factor": ["FLOAT", {"default": 1, "min": 1, "max": 2000}]}}, "input_order": {"required": [], "optional": ["image", "width", "height", "upscale_factor"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["pipe", "show_help"], "name": "CR Image Pipe In", "display_name": "\ud83d\udee9 CR Image Pipe In", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\udee9\ufe0f Image", "output_node": false}, "CR Image Pipe Edit": {"input": {"required": {"pipe": ["PIPE_LINE"]}, "optional": {"image": ["IMAGE"], "width": ["INT", {"default": 512, "min": 64, "max": 2048, "forceInput": true}], "height": ["INT", {"default": 512, "min": 64, "max": 2048, "forceInput": true}], "upscale_factor": ["FLOAT", {"default": 1, "min": 1, "max": 2000, "forceInput": true}]}}, "input_order": {"required": ["pipe"], "optional": ["image", "width", "height", "upscale_factor"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["pipe", "show_help"], "name": "CR Image Pipe Edit", "display_name": "\ud83d\udee9\ufe0f CR Image Pipe Edit", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\udee9\ufe0f Image", "output_node": false}, "CR Image Pipe Out": {"input": {"required": {"pipe": ["PIPE_LINE"]}}, "input_order": {"required": ["pipe"]}, "output": ["PIPE_LINE", "IMAGE", "INT", "INT", "FLOAT", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["pipe", "image", "width", "height", "upscale_factor", "show_help"], "name": "CR Image Pipe Out", "display_name": "\ud83d\udee9\ufe0f CR Image Pipe Out", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\udee9\ufe0f Image", "output_node": false}, "CR Pipe Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}], "pipe1": ["PIPE_LINE"], "pipe2": ["PIPE_LINE"]}}, "input_order": {"required": ["Input", "pipe1", "pipe2"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["PIPE_LINE", "show_help"], "name": "CR Pipe Switch", "display_name": "\ud83d\udd00\ufe0f CR Pipe Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe", "output_node": true}, "CR SDXL Prompt Mix Presets": {"input": {"required": {}, "optional": {"prompt_positive": ["STRING", {"multiline": true, "default": "prompt_pos"}], "prompt_negative": ["STRING", {"multiline": true, "default": "prompt_neg"}], "style_positive": ["STRING", {"multiline": true, "default": "style_pos"}], "style_negative": ["STRING", {"multiline": true, "default": "style_neg"}], "preset": [["default with no style text", "default with style text", "style boost 1", "style boost 2", "style text to refiner"]]}}, "input_order": {"required": [], "optional": ["prompt_positive", "prompt_negative", "style_positive", "style_negative", "preset"]}, "output": ["STRING", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["pos_g", "pos_l", "pos_r", "neg_g", "neg_l", "neg_r", "show_help"], "name": "CR SDXL Prompt Mix Presets", "display_name": "\ud83c\udf1f CR SDXL Prompt Mix Presets", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udf1f SDXL", "output_node": false}, "CR SDXL Style Text": {"input": {"required": {"positive_style": ["STRING", {"default": "POS_STYLE", "multiline": true}], "negative_style": ["STRING", {"default": "NEG_STYLE", "multiline": true}]}}, "input_order": {"required": ["positive_style", "negative_style"]}, "output": ["STRING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["positive_prompt_text_l", "negative_prompt_text_l", "show_help"], "name": "CR SDXL Style Text", "display_name": "\ud83c\udf1f CR SDXL Style Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udf1f SDXL", "output_node": false}, "CR SDXL Base Prompt Encoder": {"input": {"required": {"base_clip": ["CLIP"], "pos_g": ["STRING", {"multiline": true, "default": "POS_G"}], "pos_l": ["STRING", {"multiline": true, "default": "POS_L"}], "neg_g": ["STRING", {"multiline": true, "default": "NEG_G"}], "neg_l": ["STRING", {"multiline": true, "default": "NEG_L"}], "preset": [["preset A", "preset B", "preset C"]], "base_width": ["INT", {"default": 4096.0, "min": 0, "max": 16384, "step": 64}], "base_height": ["INT", {"default": 4096.0, "min": 0, "max": 16384, "step": 64}], "crop_w": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 64}], "crop_h": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 64}], "target_width": ["INT", {"default": 4096.0, "min": 0, "max": 16384, "step": 64}], "target_height": ["INT", {"default": 4096.0, "min": 0, "max": 16384, "step": 64}]}}, "input_order": {"required": ["base_clip", "pos_g", "pos_l", "neg_g", "neg_l", "preset", "base_width", "base_height", "crop_w", "crop_h", "target_width", "target_height"]}, "output": ["CONDITIONING", "CONDITIONING", "STRING"], "output_is_list": [false, false, false], "output_name": ["base_positive", "base_negative", "show_help"], "name": "CR SDXL Base Prompt Encoder", "display_name": "\ud83c\udf1f CR SDXL Base Prompt Encoder", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udf1f SDXL", "output_node": false}, "CR Multi Upscale Stack": {"input": {"required": {"switch_1": [["On", "Off"]], "upscale_model_1": [["None", "4x-UltraSharp.pth", "ESRGAN_4x.pth", "RealESRGAN_x2.pth", "RealESRGAN_x4.pth", "ldsr/last.ckpt"]], "rescale_factor_1": ["FLOAT", {"default": 2, "min": 0.01, "max": 16.0, "step": 0.01}], "switch_2": [["On", "Off"]], "upscale_model_2": [["None", "4x-UltraSharp.pth", "ESRGAN_4x.pth", "RealESRGAN_x2.pth", "RealESRGAN_x4.pth", "ldsr/last.ckpt"]], "rescale_factor_2": ["FLOAT", {"default": 2, "min": 0.01, "max": 16.0, "step": 0.01}], "switch_3": [["On", "Off"]], "upscale_model_3": [["None", "4x-UltraSharp.pth", "ESRGAN_4x.pth", "RealESRGAN_x2.pth", "RealESRGAN_x4.pth", "ldsr/last.ckpt"]], "rescale_factor_3": ["FLOAT", {"default": 2, "min": 0.01, "max": 16.0, "step": 0.01}]}, "optional": {"upscale_stack": ["UPSCALE_STACK"]}}, "input_order": {"required": ["switch_1", "upscale_model_1", "rescale_factor_1", "switch_2", "upscale_model_2", "rescale_factor_2", "switch_3", "upscale_model_3", "rescale_factor_3"], "optional": ["upscale_stack"]}, "output": ["UPSCALE_STACK", "STRING"], "output_is_list": [false, false], "output_name": ["UPSCALE_STACK", "show_help"], "name": "CR Multi Upscale Stack", "display_name": "\ud83d\udd0d CR Multi Upscale Stack", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd0d Upscale", "output_node": false}, "CR Upscale Image": {"input": {"required": {"image": ["IMAGE"], "upscale_model": [["4x-UltraSharp.pth", "ESRGAN_4x.pth", "RealESRGAN_x2.pth", "RealESRGAN_x4.pth", "ldsr/last.ckpt"]], "mode": [["rescale", "resize"]], "rescale_factor": ["FLOAT", {"default": 2, "min": 0.01, "max": 16.0, "step": 0.01}], "resize_width": ["INT", {"default": 1024, "min": 1, "max": 48000, "step": 1}], "resampling_method": [["lanczos", "nearest", "bilinear", "bicubic"]], "supersample": [["true", "false"]], "rounding_modulus": ["INT", {"default": 8, "min": 8, "max": 1024, "step": 8}]}}, "input_order": {"required": ["image", "upscale_model", "mode", "rescale_factor", "resize_width", "resampling_method", "supersample", "rounding_modulus"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Upscale Image", "display_name": "\ud83d\udd0d CR Upscale Image", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd0d Upscale", "output_node": false}, "CR Apply Multi Upscale": {"input": {"required": {"image": ["IMAGE"], "resampling_method": [["lanczos", "nearest", "bilinear", "bicubic"]], "supersample": [["true", "false"]], "rounding_modulus": ["INT", {"default": 8, "min": 8, "max": 1024, "step": 8}], "upscale_stack": ["UPSCALE_STACK"]}}, "input_order": {"required": ["image", "resampling_method", "supersample", "rounding_modulus", "upscale_stack"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Apply Multi Upscale", "display_name": "\ud83d\udd0d CR Apply Multi Upscale", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd0d Upscale", "output_node": false}, "CR XY List": {"input": {"required": {"index": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "list1": ["STRING", {"multiline": true, "default": "x"}], "x_prepend": ["STRING", {"multiline": false, "default": ""}], "x_append": ["STRING", {"multiline": false, "default": ""}], "x_annotation_prepend": ["STRING", {"multiline": false, "default": ""}], "list2": ["STRING", {"multiline": true, "default": "y"}], "y_prepend": ["STRING", {"multiline": false, "default": ""}], "y_append": ["STRING", {"multiline": false, "default": ""}], "y_annotation_prepend": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["index", "list1", "x_prepend", "x_append", "x_annotation_prepend", "list2", "y_prepend", "y_append", "y_annotation_prepend"]}, "output": ["STRING", "STRING", "STRING", "STRING", "BOOLEAN", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["X", "Y", "x_annotation", "y_annotation", "trigger", "show_help"], "name": "CR XY List", "display_name": "\ud83d\udcc9 CR XY List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid", "output_node": false}, "CR XY Interpolate": {"input": {"required": {"x_columns": ["INT", {"default": 5.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "x_start_value": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 0.01}], "x_step": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 0.01}], "x_annotation_prepend": ["STRING", {"multiline": false, "default": ""}], "y_rows": ["INT", {"default": 5.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "y_start_value": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 0.01}], "y_step": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 0.01}], "y_annotation_prepend": ["STRING", {"multiline": false, "default": ""}], "index": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "gradient_profile": [["Lerp"]]}}, "input_order": {"required": ["x_columns", "x_start_value", "x_step", "x_annotation_prepend", "y_rows", "y_start_value", "y_step", "y_annotation_prepend", "index", "gradient_profile"]}, "output": ["FLOAT", "FLOAT", "STRING", "STRING", "BOOLEAN", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["X", "Y", "x_annotation", "y_annotation", "trigger", "show_help"], "name": "CR XY Interpolate", "display_name": "\ud83d\udcc9 CR XY Interpolate", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid", "output_node": false}, "CR XY From Folder": {"input": {"required": {"image_folder": [["steerable-motion"]], "start_index": ["INT", {"default": 1, "min": 0, "max": 10000}], "end_index": ["INT", {"default": 1, "min": 1, "max": 10000}], "max_columns": ["INT", {"default": 1, "min": 1, "max": 10000}], "x_annotation": ["STRING", {"multiline": true}], "y_annotation": ["STRING", {"multiline": true}], "font_size": ["INT", {"default": 50, "min": 1}], "gap": ["INT", {"default": 0, "min": 0}]}, "optional": {"trigger": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image_folder", "start_index", "end_index", "max_columns", "x_annotation", "y_annotation", "font_size", "gap"], "optional": ["trigger"]}, "output": ["IMAGE", "BOOLEAN", "STRING"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "trigger", "show_help"], "name": "CR XY From Folder", "display_name": "\ud83d\udcc9 CR XY From Folder", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid", "output_node": false}, "CR XY Save Grid Image": {"input": {"required": {"mode": [["Save", "Preview"]], "output_folder": [["steerable-motion"]], "image": ["IMAGE"], "filename_prefix": ["STRING", {"default": "CR"}], "file_format": [["webp", "jpg", "png", "tif"]]}, "optional": {"output_path": ["STRING", {"default": "", "multiline": false}], "trigger": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["mode", "output_folder", "image", "filename_prefix", "file_format"], "optional": ["output_path", "trigger"]}, "output": [], "output_is_list": [], "output_name": [], "name": "CR XY Save Grid Image", "display_name": "\ud83d\udcc9 CR XY Save Grid Image", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid", "output_node": true}, "CR XY Index": {"input": {"required": {"x_columns": ["INT", {"default": 5.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "y_rows": ["INT", {"default": 5.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "index": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["x_columns", "y_rows", "index"]}, "output": ["INT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["x", "y", "show_help"], "name": "CR XY Index", "display_name": "\ud83d\udcc9 CR XY Index", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid", "output_node": false}, "CR Halftone Grid": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "dot_style": [["Accent", "afmhot", "autumn", "binary", "Blues", "bone", "BrBG", "brg", "BuGn", "BuPu", "bwr", "cividis", "CMRmap", "cool", "coolwarm", "copper", "cubehelix", "Dark2", "flag", "gist_earth", "gist_gray", "gist_heat", "gist_rainbow", "gist_stern", "gist_yarg", "GnBu", "gnuplot", "gnuplot2", "gray", "Greens", "Greys", "hot", "hsv", "inferno", "jet", "magma", "nipy_spectral", "ocean", "Oranges", "OrRd", "Paired", "Pastel1", "Pastel2", "pink", "PiYG", "plasma", "PRGn", "prism", "PuBu", "PuBuGn", "PuOr", "PuRd", "Purples", "rainbow", "RdBu", "RdGy", "RdPu", "RdYlBu", "RdYlGn", "Reds", "seismic", "Set1", "Set2", "Set3", "Spectral", "spring", "summer", "tab10", "tab20", "tab20b", "tab20c", "terrain", "turbo", "twilight", "twilight_shifted", "viridis", "winter", "Wistia", "YlGn", "YlGnBu", "YlOrBr", "YlOrRd"]], "reverse_dot_style": [["No", "Yes"]], "dot_frequency": ["INT", {"default": 50, "min": 1, "max": 200, "step": 1}], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "x_pos": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "y_pos": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}]}, "optional": {"bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "dot_style", "reverse_dot_style", "dot_frequency", "background_color", "x_pos", "y_pos"], "optional": ["bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Halftone Grid", "display_name": "\ud83d\udfeb CR Halftone Grid", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Color Bars": {"input": {"required": {"mode": [["2-color"]], "width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "color_1": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "color_2": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "orientation": [["vertical", "horizontal", "diagonal", "alt_diagonal"]], "bar_frequency": ["INT", {"default": 5, "min": 1, "max": 200, "step": 1}], "offset": ["FLOAT", {"default": 0, "min": 0, "max": 20, "step": 0.05}]}, "optional": {"color1_hex": ["STRING", {"multiline": false, "default": "#000000"}], "color2_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["mode", "width", "height", "color_1", "color_2", "orientation", "bar_frequency", "offset"], "optional": ["color1_hex", "color2_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Color Bars", "display_name": "\ud83d\udfeb CR Color Bars", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Style Bars": {"input": {"required": {"mode": [["color bars", "sin wave", "gradient bars"]], "width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "bar_style": [["Accent", "afmhot", "autumn", "binary", "Blues", "bone", "BrBG", "brg", "BuGn", "BuPu", "bwr", "cividis", "CMRmap", "cool", "coolwarm", "copper", "cubehelix", "Dark2", "flag", "gist_earth", "gist_gray", "gist_heat", "gist_rainbow", "gist_stern", "gist_yarg", "GnBu", "gnuplot", "gnuplot2", "gray", "Greens", "Greys", "hot", "hsv", "inferno", "jet", "magma", "nipy_spectral", "ocean", "Oranges", "OrRd", "Paired", "Pastel1", "Pastel2", "pink", "PiYG", "plasma", "PRGn", "prism", "PuBu", "PuBuGn", "PuOr", "PuRd", "Purples", "rainbow", "RdBu", "RdGy", "RdPu", "RdYlBu", "RdYlGn", "Reds", "seismic", "Set1", "Set2", "Set3", "Spectral", "spring", "summer", "tab10", "tab20", "tab20b", "tab20c", "terrain", "turbo", "twilight", "twilight_shifted", "viridis", "winter", "Wistia", "YlGn", "YlGnBu", "YlOrBr", "YlOrRd"]], "orientation": [["vertical", "horizontal"]], "bar_frequency": ["INT", {"default": 5, "min": 1, "max": 200, "step": 1}]}}, "input_order": {"required": ["mode", "width", "height", "bar_style", "orientation", "bar_frequency"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Style Bars", "display_name": "\ud83d\udfea CR Style Bars", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Checker Pattern": {"input": {"required": {"mode": [["regular", "stepped"]], "width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "color_1": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "color_2": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "grid_frequency": ["INT", {"default": 8, "min": 1, "max": 200, "step": 1}], "step": ["INT", {"default": 2, "min": 2, "max": 200, "step": 1}]}, "optional": {"color1_hex": ["STRING", {"multiline": false, "default": "#000000"}], "color2_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["mode", "width", "height", "color_1", "color_2", "grid_frequency", "step"], "optional": ["color1_hex", "color2_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Checker Pattern", "display_name": "\ud83d\udfe6 CR Checker Pattern", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Polygons": {"input": {"required": {"mode": [["hexagons", "triangles"]], "width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "rows": ["INT", {"default": 5, "min": 1, "max": 512}], "columns": ["INT", {"default": 5, "min": 1, "max": 512}], "face_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "line_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "line_width": ["INT", {"default": 2, "min": 0, "max": 512}]}, "optional": {"face_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "line_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["mode", "width", "height", "rows", "columns", "face_color", "background_color", "line_color", "line_width"], "optional": ["face_color_hex", "bg_color_hex", "line_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Polygons", "display_name": "\ud83d\udfe9 CR Polygons", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Color Gradient": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "start_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "end_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "gradient_distance": ["FLOAT", {"default": 1, "min": 0, "max": 2, "step": 0.05}], "linear_transition": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.05}], "orientation": [["vertical", "horizontal"]]}, "optional": {"start_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "end_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "start_color", "end_color", "gradient_distance", "linear_transition", "orientation"], "optional": ["start_color_hex", "end_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Color Gradient", "display_name": "\ud83d\udfe8 CR Color Gradient", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Radial Gradient": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "start_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "end_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "gradient_distance": ["FLOAT", {"default": 1, "min": 0, "max": 2, "step": 0.05}], "radial_center_x": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.05}], "radial_center_y": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.05}]}, "optional": {"start_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "end_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "start_color", "end_color", "gradient_distance", "radial_center_x", "radial_center_y"], "optional": ["start_color_hex", "end_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_Help"], "name": "CR Radial Gradient", "display_name": "\ud83d\udfe8 CR Radial Gradient", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Starburst Lines": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "num_lines": ["INT", {"default": 6, "min": 1, "max": 500}], "line_length": ["FLOAT", {"default": 5, "min": 0, "max": 100, "step": 0.1}], "line_width": ["INT", {"default": 5, "min": 1, "max": 512}], "line_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "center_x": ["INT", {"default": 0, "min": 0, "max": 1024}], "center_y": ["INT", {"default": 0, "min": 0, "max": 1024}], "rotation": ["FLOAT", {"default": 0, "min": 0, "max": 720}]}, "optional": {"line_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "num_lines", "line_length", "line_width", "line_color", "background_color", "center_x", "center_y", "rotation"], "optional": ["line_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Starburst Lines", "display_name": "\ud83d\udfe7 CR Starburst Lines", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Starburst Colors": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "num_triangles": ["INT", {"default": 6, "min": 1, "max": 512}], "color_1": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "color_2": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "center_x": ["INT", {"default": 0, "min": 0, "max": 512}], "center_y": ["INT", {"default": 0, "min": 0, "max": 512}], "rotation": ["FLOAT", {"default": 0, "min": 0, "max": 720}], "bbox_factor": ["FLOAT", {"default": 2, "min": 0, "max": 2, "step": 0.01}]}, "optional": {"color1_hex": ["STRING", {"multiline": false, "default": "#000000"}], "color2_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "num_triangles", "color_1", "color_2", "center_x", "center_y", "rotation", "bbox_factor"], "optional": ["color1_hex", "color2_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Starburst Colors", "display_name": "\ud83d\udfe7 CR Starburst Colors", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Simple Binary Pattern": {"input": {"required": {"binary_pattern": ["STRING", {"multiline": true, "default": "10101"}], "width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}]}}, "input_order": {"required": ["binary_pattern", "width", "height"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Simple Binary Pattern", "display_name": "\ud83d\udfe5 CR Simple Binary Pattern", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Binary Pattern": {"input": {"required": {"binary_pattern": ["STRING", {"multiline": true, "default": "10101"}], "width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "color_0": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "color_1": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "outline_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "outline_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "jitter_distance": ["INT", {"default": 0, "min": 0, "max": 1024}], "bias": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.05}]}, "optional": {"bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "color0_hex": ["STRING", {"multiline": false, "default": "#000000"}], "color1_hex": ["STRING", {"multiline": false, "default": "#000000"}], "outline_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["binary_pattern", "width", "height", "background_color", "color_0", "color_1", "outline_thickness", "outline_color", "jitter_distance", "bias"], "optional": ["bg_color_hex", "color0_hex", "color1_hex", "outline_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Binary Pattern", "display_name": "\ud83d\udfe5 CR Binary Pattern", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Draw Shape": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "shape": [["circle", "oval", "square", "diamond", "triangle", "hexagon", "octagon", "quarter circle", "half circle", "quarter circle", "starburst", "star", "cross", "diagonal regions"]], "shape_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "back_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "x_offset": ["INT", {"default": 0, "min": -2048, "max": 2048}], "y_offset": ["INT", {"default": 0, "min": -2048, "max": 2048}], "zoom": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.05}], "rotation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 3600.0, "step": 0.1}]}, "optional": {"shape_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "shape", "shape_color", "back_color", "x_offset", "y_offset", "zoom", "rotation"], "optional": ["shape_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Draw Shape", "display_name": "\ud83d\udfe1 CR Draw Shape", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udfe3 Shape", "output_node": false}, "CR Draw Pie": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "pie_start": ["FLOAT", {"default": 30.0, "min": 0.0, "max": 9999.0, "step": 0.1}], "pie_stop": ["FLOAT", {"default": 330.0, "min": 0.0, "max": 9999.0, "step": 0.1}], "shape_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "back_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "x_offset": ["INT", {"default": 0, "min": -2048, "max": 2048}], "y_offset": ["INT", {"default": 0, "min": -2048, "max": 2048}], "zoom": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.05}], "rotation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 3600.0, "step": 0.1}]}, "optional": {"shape_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "pie_start", "pie_stop", "shape_color", "back_color", "x_offset", "y_offset", "zoom", "rotation"], "optional": ["shape_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Draw Pie", "display_name": "\ud83d\udfe2 CR Draw Pie", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udfe3 Shape", "output_node": false}, "CR Random Shape Pattern": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "num_rows": ["INT", {"default": 5, "min": 1, "max": 128}], "num_cols": ["INT", {"default": 5, "min": 1, "max": 128}], "color1": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "color2": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]]}, "optional": {"color1_hex": ["STRING", {"multiline": false, "default": "#000000"}], "color2_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "num_rows", "num_cols", "color1", "color2"], "optional": ["color1_hex", "color2_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Random Shape Pattern", "display_name": "\ud83d\udd35 CR Random Shape Pattern", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udfe3 Shape", "output_node": false}, "CR Overlay Text": {"input": {"required": {"image": ["IMAGE"], "text": ["STRING", {"multiline": true, "default": "text"}], "font_name": [["Roboto-Regular.ttf", "YoungSerif-Regular.ttf", "Oswald-Bold.ttf", "PixelifySans-Bold.ttf", "comic.ttf", "Caveat-VariableFont_wght.ttf", "NotoSansArabic-Regular.ttf", "impact.ttf", "AlumniSansCollegiateOne-Regular.ttf", "Quicksand-Bold.ttf"]], "font_size": ["INT", {"default": 50, "min": 1, "max": 1024}], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "align": [["center", "top", "bottom"]], "justify": [["center", "left", "right"]], "margins": ["INT", {"default": 0, "min": -1024, "max": 1024}], "line_spacing": ["INT", {"default": 0, "min": -1024, "max": 1024}], "position_x": ["INT", {"default": 0, "min": -4096, "max": 4096}], "position_y": ["INT", {"default": 0, "min": -4096, "max": 4096}], "rotation_angle": ["FLOAT", {"default": 0.0, "min": -360.0, "max": 360.0, "step": 0.1}], "rotation_options": [["text center", "image center"]]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "text", "font_name", "font_size", "font_color", "align", "justify", "margins", "line_spacing", "position_x", "position_y", "rotation_angle", "rotation_options"], "optional": ["font_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Overlay Text", "display_name": "\ud83d\udd24 CR Overlay Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text", "output_node": false}, "CR Draw Text": {"input": {"required": {"image_width": ["INT", {"default": 512, "min": 64, "max": 2048}], "image_height": ["INT", {"default": 512, "min": 64, "max": 2048}], "text": ["STRING", {"multiline": true, "default": "text"}], "font_name": [["Roboto-Regular.ttf", "YoungSerif-Regular.ttf", "Oswald-Bold.ttf", "PixelifySans-Bold.ttf", "comic.ttf", "Caveat-VariableFont_wght.ttf", "NotoSansArabic-Regular.ttf", "impact.ttf", "AlumniSansCollegiateOne-Regular.ttf", "Quicksand-Bold.ttf"]], "font_size": ["INT", {"default": 50, "min": 1, "max": 1024}], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "align": [["center", "top", "bottom"]], "justify": [["center", "left", "right"]], "margins": ["INT", {"default": 0, "min": -1024, "max": 1024}], "line_spacing": ["INT", {"default": 0, "min": -1024, "max": 1024}], "position_x": ["INT", {"default": 0, "min": -4096, "max": 4096}], "position_y": ["INT", {"default": 0, "min": -4096, "max": 4096}], "rotation_angle": ["FLOAT", {"default": 0.0, "min": -360.0, "max": 360.0, "step": 0.1}], "rotation_options": [["text center", "image center"]]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image_width", "image_height", "text", "font_name", "font_size", "font_color", "background_color", "align", "justify", "margins", "line_spacing", "position_x", "position_y", "rotation_angle", "rotation_options"], "optional": ["font_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Draw Text", "display_name": "\ud83d\udd24\ufe0f CR Draw Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text", "output_node": false}, "CR Mask Text": {"input": {"required": {"image": ["IMAGE"], "text": ["STRING", {"multiline": true, "default": "text"}], "font_name": [["Roboto-Regular.ttf", "YoungSerif-Regular.ttf", "Oswald-Bold.ttf", "PixelifySans-Bold.ttf", "comic.ttf", "Caveat-VariableFont_wght.ttf", "NotoSansArabic-Regular.ttf", "impact.ttf", "AlumniSansCollegiateOne-Regular.ttf", "Quicksand-Bold.ttf"]], "font_size": ["INT", {"default": 50, "min": 1, "max": 1024}], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "align": [["center", "top", "bottom"]], "justify": [["center", "left", "right"]], "margins": ["INT", {"default": 0, "min": -1024, "max": 1024}], "line_spacing": ["INT", {"default": 0, "min": -1024, "max": 1024}], "position_x": ["INT", {"default": 0, "min": -4096, "max": 4096}], "position_y": ["INT", {"default": 0, "min": -4096, "max": 4096}], "rotation_angle": ["FLOAT", {"default": 0.0, "min": -360.0, "max": 360.0, "step": 0.1}], "rotation_options": [["text center", "image center"]]}, "optional": {"bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "text", "font_name", "font_size", "background_color", "align", "justify", "margins", "line_spacing", "position_x", "position_y", "rotation_angle", "rotation_options"], "optional": ["bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Mask Text", "display_name": "\ud83d\udd24\ufe0f CR Mask Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text", "output_node": false}, "CR Composite Text": {"input": {"required": {"image_text": ["IMAGE"], "image_background": ["IMAGE"], "text": ["STRING", {"multiline": true, "default": "text"}], "font_name": [["Roboto-Regular.ttf", "YoungSerif-Regular.ttf", "Oswald-Bold.ttf", "PixelifySans-Bold.ttf", "comic.ttf", "Caveat-VariableFont_wght.ttf", "NotoSansArabic-Regular.ttf", "impact.ttf", "AlumniSansCollegiateOne-Regular.ttf", "Quicksand-Bold.ttf"]], "font_size": ["INT", {"default": 50, "min": 1, "max": 1024}], "align": [["center", "top", "bottom"]], "justify": [["center", "left", "right"]], "margins": ["INT", {"default": 0, "min": -1024, "max": 1024}], "line_spacing": ["INT", {"default": 0, "min": -1024, "max": 1024}], "position_x": ["INT", {"default": 0, "min": -4096, "max": 4096}], "position_y": ["INT", {"default": 0, "min": -4096, "max": 4096}], "rotation_angle": ["FLOAT", {"default": 0.0, "min": -360.0, "max": 360.0, "step": 0.1}], "rotation_options": [["text center", "image center"]]}}, "input_order": {"required": ["image_text", "image_background", "text", "font_name", "font_size", "align", "justify", "margins", "line_spacing", "position_x", "position_y", "rotation_angle", "rotation_options"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Composite Text", "display_name": "\ud83d\udd24\ufe0f CR Composite Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text", "output_node": false}, "CR Simple Text Watermark": {"input": {"required": {"image": ["IMAGE"], "text": ["STRING", {"multiline": false, "default": "@ your name"}], "align": [["center", "top left", "top center", "top right", "bottom left", "bottom center", "bottom right"]], "opacity": ["FLOAT", {"default": 0.3, "min": 0.0, "max": 1.0, "step": 0.01}], "font_name": [["Roboto-Regular.ttf", "YoungSerif-Regular.ttf", "Oswald-Bold.ttf", "PixelifySans-Bold.ttf", "comic.ttf", "Caveat-VariableFont_wght.ttf", "NotoSansArabic-Regular.ttf", "impact.ttf", "AlumniSansCollegiateOne-Regular.ttf", "Quicksand-Bold.ttf"]], "font_size": ["INT", {"default": 50, "min": 1, "max": 1024}], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "x_margin": ["INT", {"default": 20, "min": -1024, "max": 1024}], "y_margin": ["INT", {"default": 20, "min": -1024, "max": 1024}]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "text", "align", "opacity", "font_name", "font_size", "font_color", "x_margin", "y_margin"], "optional": ["font_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Simple Text Watermark", "display_name": "\ud83d\udd24\ufe0f CR Simple Text Watermark", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text", "output_node": false}, "CR Select Font": {"input": {"required": {"font_name": [[]]}}, "input_order": {"required": ["font_name"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["font_name", "show_help"], "name": "CR Select Font", "display_name": "\ud83d\udd24\ufe0f CR Select Font", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text", "output_node": false}, "CR Halftone Filter": {"input": {"required": {"image": ["IMAGE"], "dot_size": ["INT", {"default": 5, "min": 1, "max": 30, "step": 1}], "dot_shape": [["ellipse", "rectangle"], {"default": "ellipse"}], "resolution": [["normal", "hi-res (2x output size)"], {"default": "normal"}], "angle_c": ["INT", {"default": 75, "min": 0, "max": 360, "step": 1}], "angle_m": ["INT", {"default": 45, "min": 0, "max": 360, "step": 1}], "angle_y": ["INT", {"default": 15, "min": 0, "max": 360, "step": 1}], "angle_k": ["INT", {"default": 0, "min": 0, "max": 360, "step": 1}], "greyscale": ["BOOLEAN", {"default": true}], "antialias": ["BOOLEAN", {"default": true}], "antialias_scale": ["INT", {"default": 2, "min": 1, "max": 4, "step": 1}], "border_blending": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "dot_size", "dot_shape", "resolution", "angle_c", "angle_m", "angle_y", "angle_k", "greyscale", "antialias", "antialias_scale", "border_blending"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Halftone Filter", "display_name": "\ud83c\udfa8 Halftone Filter", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udfa8 Filter", "output_node": false}, "CR Color Tint": {"input": {"required": {"image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 1.0, "step": 0.1}], "mode": [["custom", "white", "black", "sepia", "red", "green", "blue", "cyan", "magenta", "yellow", "purple", "orange", "warm", "cool", "lime", "navy", "vintage", "rose", "teal", "maroon", "peach", "lavender", "olive"]]}, "optional": {"tint_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "strength", "mode"], "optional": ["tint_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Color Tint", "display_name": "\ud83c\udfa8 CR Color Tint", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udfa8 Filter", "output_node": false}, "CR Vignette Filter": {"input": {"required": {"image": ["IMAGE"], "vignette_shape": [["circle", "oval", "square", "diamond"]], "feather_amount": ["INT", {"default": 100, "min": 0, "max": 1024}], "x_offset": ["INT", {"default": 0, "min": -2048, "max": 2048}], "y_offset": ["INT", {"default": 0, "min": -2048, "max": 2048}], "zoom": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.1}], "reverse": [["no", "yes"]]}}, "input_order": {"required": ["image", "vignette_shape", "feather_amount", "x_offset", "y_offset", "zoom", "reverse"]}, "output": ["IMAGE", "MASK", "STRING"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "MASK", "show_help"], "name": "CR Vignette Filter", "display_name": "\ud83c\udfa8 CR Vignette Filter", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udfa8 Filter", "output_node": false}, "CR Page Layout": {"input": {"required": {"layout_options": [["header", "footer", "header and footer", "no header or footer"]], "image_panel": ["IMAGE"], "header_height": ["INT", {"default": 0, "min": 0, "max": 1024}], "header_text": ["STRING", {"multiline": true, "default": "text"}], "header_align": [["left", "center", "right"]], "footer_height": ["INT", {"default": 0, "min": 0, "max": 1024}], "footer_text": ["STRING", {"multiline": true, "default": "text"}], "footer_align": [["left", "center", "right"]], "font_name": [["Roboto-Regular.ttf", "YoungSerif-Regular.ttf", "Oswald-Bold.ttf", "PixelifySans-Bold.ttf", "comic.ttf", "Caveat-VariableFont_wght.ttf", "NotoSansArabic-Regular.ttf", "impact.ttf", "AlumniSansCollegiateOne-Regular.ttf", "Quicksand-Bold.ttf"]], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "header_font_size": ["INT", {"default": 150, "min": 0, "max": 1024}], "footer_font_size": ["INT", {"default": 50, "min": 0, "max": 1024}], "border_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "border_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "border_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["layout_options", "image_panel", "header_height", "header_text", "header_align", "footer_height", "footer_text", "footer_align", "font_name", "font_color", "header_font_size", "footer_font_size", "border_thickness", "border_color", "background_color"], "optional": ["font_color_hex", "border_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Page Layout", "display_name": "\ud83c\udf01 CR Page Layout", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Image Panel": {"input": {"required": {"image_1": ["IMAGE"], "border_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "border_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "outline_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "outline_color": [["white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "layout_direction": [["horizontal", "vertical"]]}, "optional": {"image_2": ["IMAGE"], "image_3": ["IMAGE"], "image_4": ["IMAGE"], "border_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image_1", "border_thickness", "border_color", "outline_thickness", "outline_color", "layout_direction"], "optional": ["image_2", "image_3", "image_4", "border_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Image Panel", "display_name": "\ud83c\udf01 CR Image Panel", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Image Grid Panel": {"input": {"required": {"images": ["IMAGE"], "border_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "border_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "outline_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "outline_color": [["white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "max_columns": ["INT", {"default": 5, "min": 0, "max": 256}]}, "optional": {"border_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["images", "border_thickness", "border_color", "outline_thickness", "outline_color", "max_columns"], "optional": ["border_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Image Grid Panel", "display_name": "\ud83c\udf01 CR Image Grid Panel", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Image Border": {"input": {"required": {"image": ["IMAGE"], "top_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "bottom_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "left_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "right_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "border_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "outline_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "outline_color": [["white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]]}, "optional": {"border_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "top_thickness", "bottom_thickness", "left_thickness", "right_thickness", "border_color", "outline_thickness", "outline_color"], "optional": ["border_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Image Border", "display_name": "\ud83c\udf01 CR Image Border", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Feathered Border": {"input": {"required": {"image": ["IMAGE"], "top_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "bottom_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "left_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "right_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "border_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "feather_amount": ["INT", {"default": 0, "min": 0, "max": 1024}]}, "optional": {"border_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "top_thickness", "bottom_thickness", "left_thickness", "right_thickness", "border_color", "feather_amount"], "optional": ["border_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Feathered Border", "display_name": "\ud83c\udf01 CR Feathered Border", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Simple Text Panel": {"input": {"required": {"panel_width": ["INT", {"default": 512, "min": 8, "max": 4096}], "panel_height": ["INT", {"default": 512, "min": 8, "max": 4096}], "text": ["STRING", {"multiline": true, "default": "text"}], "font_name": [["Roboto-Regular.ttf", "YoungSerif-Regular.ttf", "Oswald-Bold.ttf", "PixelifySans-Bold.ttf", "comic.ttf", "Caveat-VariableFont_wght.ttf", "NotoSansArabic-Regular.ttf", "impact.ttf", "AlumniSansCollegiateOne-Regular.ttf", "Quicksand-Bold.ttf"]], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "font_size": ["INT", {"default": 100, "min": 0, "max": 1024}], "font_outline_thickness": ["INT", {"default": 0, "min": 0, "max": 50}], "font_outline_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "align": [["top", "center", "bottom"]], "justify": [["left", "center", "right"]]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["panel_width", "panel_height", "text", "font_name", "font_color", "font_size", "font_outline_thickness", "font_outline_color", "background_color", "align", "justify"], "optional": ["font_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Simple Text Panel", "display_name": "\ud83c\udf01 CR Simple Text Panel", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Color Panel": {"input": {"required": {"panel_width": ["INT", {"default": 512, "min": 8, "max": 4096}], "panel_height": ["INT", {"default": 512, "min": 8, "max": 4096}], "fill_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]]}, "optional": {"fill_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["panel_width", "panel_height", "fill_color"], "optional": ["fill_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Color Panel", "display_name": "\ud83c\udf01 CR Color Panel", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Overlay Transparent Image": {"input": {"required": {"back_image": ["IMAGE"], "overlay_image": ["IMAGE"], "transparency": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.1}], "offset_x": ["INT", {"default": 0, "min": -4096, "max": 4096}], "offset_y": ["INT", {"default": 0, "min": -4096, "max": 4096}], "rotation_angle": ["FLOAT", {"default": 0.0, "min": -360.0, "max": 360.0, "step": 0.1}], "overlay_scale_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.001}]}}, "input_order": {"required": ["back_image", "overlay_image", "transparency", "offset_x", "offset_y", "rotation_angle", "overlay_scale_factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CR Overlay Transparent Image", "display_name": "\ud83c\udf01 CR Overlay Transparent Image", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Half Drop Panel": {"input": {"required": {"image": ["IMAGE"], "pattern": [["none", "half drop", "quarter drop", "custom drop %"]]}, "optional": {"drop_percentage": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "pattern"], "optional": ["drop_percentage"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Half Drop Panel", "display_name": "\ud83c\udf01 CR Half Drop Panel", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Diamond Panel": {"input": {"required": {"image": ["IMAGE"], "pattern": [["none", "diamond"]]}}, "input_order": {"required": ["image", "pattern"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Diamond Panel", "display_name": "\ud83c\udf01 CR Diamond Panel", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Simple Meme Template": {"input": {"required": {"image": ["IMAGE"], "preset": [["custom", "One Does Not Simply ... MEME IN COMFY", "This is fine.", "Good Morning ... No Such Thing!"]], "text_top": ["STRING", {"multiline": true, "default": "text_top"}], "text_bottom": ["STRING", {"multiline": true, "default": "text_bottom"}], "font_name": [["Roboto-Regular.ttf", "YoungSerif-Regular.ttf", "Oswald-Bold.ttf", "PixelifySans-Bold.ttf", "comic.ttf", "Caveat-VariableFont_wght.ttf", "NotoSansArabic-Regular.ttf", "impact.ttf", "AlumniSansCollegiateOne-Regular.ttf", "Quicksand-Bold.ttf"]], "max_font_size": ["INT", {"default": 150, "min": 20, "max": 2048}], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "font_outline": [["none", "thin", "thick", "extra thick"]], "bar_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "bar_options": [["no bars", "top", "bottom", "top and bottom"]]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bar_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "preset", "text_top", "text_bottom", "font_name", "max_font_size", "font_color", "font_outline", "bar_color", "bar_options"], "optional": ["font_color_hex", "bar_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Simple Meme Template", "display_name": "\ud83d\udcf1 CR Simple Meme Template", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template", "output_node": false}, "CR Simple Banner": {"input": {"required": {"image": ["IMAGE"], "banner_text": ["STRING", {"multiline": true, "default": "text"}], "font_name": [["Roboto-Regular.ttf", "YoungSerif-Regular.ttf", "Oswald-Bold.ttf", "PixelifySans-Bold.ttf", "comic.ttf", "Caveat-VariableFont_wght.ttf", "NotoSansArabic-Regular.ttf", "impact.ttf", "AlumniSansCollegiateOne-Regular.ttf", "Quicksand-Bold.ttf"]], "max_font_size": ["INT", {"default": 150, "min": 20, "max": 2048}], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "outline_thickness": ["INT", {"default": 0, "min": 0, "max": 500}], "outline_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "margin_size": ["INT", {"default": 0, "min": 0, "max": 500}]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "outline_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "banner_text", "font_name", "max_font_size", "font_color", "outline_thickness", "outline_color", "margin_size"], "optional": ["font_color_hex", "outline_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Simple Banner", "display_name": "\ud83d\udcf1 CR Simple Banner", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template", "output_node": false}, "CR Comic Panel Templates": {"input": {"required": {"page_width": ["INT", {"default": 512, "min": 8, "max": 4096}], "page_height": ["INT", {"default": 512, "min": 8, "max": 4096}], "template": [["custom", "G22", "G33", "H2", "H3", "H12", "H13", "H21", "H23", "H31", "H32", "V2", "V3", "V12", "V13", "V21", "V23", "V31", "V32"]], "reading_direction": [["left to right", "right to left"]], "border_thickness": ["INT", {"default": 5, "min": 0, "max": 1024}], "outline_thickness": ["INT", {"default": 2, "min": 0, "max": 1024}], "outline_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "panel_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]]}, "optional": {"images": ["IMAGE"], "custom_panel_layout": ["STRING", {"multiline": false, "default": "H123"}], "outline_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "panel_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["page_width", "page_height", "template", "reading_direction", "border_thickness", "outline_thickness", "outline_color", "panel_color", "background_color"], "optional": ["images", "custom_panel_layout", "outline_color_hex", "panel_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Comic Panel Templates", "display_name": "\ud83d\udcf1 CR Comic Panel Templates", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template", "output_node": false}, "CR Simple Image Compare": {"input": {"required": {"text1": ["STRING", {"multiline": true, "default": "text"}], "text2": ["STRING", {"multiline": true, "default": "text"}], "footer_height": ["INT", {"default": 100, "min": 0, "max": 1024}], "font_name": [["Roboto-Regular.ttf", "YoungSerif-Regular.ttf", "Oswald-Bold.ttf", "PixelifySans-Bold.ttf", "comic.ttf", "Caveat-VariableFont_wght.ttf", "NotoSansArabic-Regular.ttf", "impact.ttf", "AlumniSansCollegiateOne-Regular.ttf", "Quicksand-Bold.ttf"]], "font_size": ["INT", {"default": 50, "min": 0, "max": 1024}], "mode": [["normal", "dark"]], "border_thickness": ["INT", {"default": 20, "min": 0, "max": 1024}]}, "optional": {"image1": ["IMAGE"], "image2": ["IMAGE"]}}, "input_order": {"required": ["text1", "text2", "footer_height", "font_name", "font_size", "mode", "border_thickness"], "optional": ["image1", "image2"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Simple Image Compare", "display_name": "\ud83d\udcf1 CR Simple Image Compare", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template", "output_node": false}, "CR Thumbnail Preview": {"input": {"required": {"image": ["IMAGE"], "rescale_factor": ["FLOAT", {"default": 0.25, "min": 0.1, "max": 1.0, "step": 0.01}], "max_columns": ["INT", {"default": 5, "min": 0, "max": 256}]}}, "input_order": {"required": ["image", "rescale_factor", "max_columns"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["show_help"], "name": "CR Thumbnail Preview", "display_name": "\ud83d\udcf1 CR Thumbnail Preview", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template", "output_node": true}, "CR Seamless Checker": {"input": {"required": {"image": ["IMAGE"], "rescale_factor": ["FLOAT", {"default": 0.25, "min": 0.1, "max": 1.0, "step": 0.01}], "grid_options": [["2x2", "3x3", "4x4", "5x5", "6x6"]]}}, "input_order": {"required": ["image", "rescale_factor", "grid_options"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["show_help"], "name": "CR Seamless Checker", "display_name": "\ud83d\udcf1 CR Seamless Checker", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template", "output_node": true}, "CR Image Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"image1": ["IMAGE"], "image2": ["IMAGE"]}}, "input_order": {"required": ["Input"], "optional": ["image1", "image2"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Image Input Switch", "display_name": "\ud83d\udd00 CR Image Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Image Input Switch (4 way)": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 4}]}, "optional": {"image1": ["IMAGE"], "image2": ["IMAGE"], "image3": ["IMAGE"], "image4": ["IMAGE"]}}, "input_order": {"required": ["Input"], "optional": ["image1", "image2", "image3", "image4"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Image Input Switch (4 way)", "display_name": "\ud83d\udd00 CR Image Input Switch (4 way)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Latent Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"latent1": ["LATENT"], "latent2": ["LATENT"]}}, "input_order": {"required": ["Input"], "optional": ["latent1", "latent2"]}, "output": ["LATENT", "STRING"], "output_is_list": [false, false], "output_name": ["LATENT", "show_help"], "name": "CR Latent Input Switch", "display_name": "\ud83d\udd00 CR Latent Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Conditioning Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"conditioning1": ["CONDITIONING"], "conditioning2": ["CONDITIONING"]}}, "input_order": {"required": ["Input"], "optional": ["conditioning1", "conditioning2"]}, "output": ["CONDITIONING", "STRING"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "show_help"], "name": "CR Conditioning Input Switch", "display_name": "\ud83d\udd00 CR Conditioning Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Clip Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"clip1": ["CLIP"], "clip2": ["CLIP"]}}, "input_order": {"required": ["Input"], "optional": ["clip1", "clip2"]}, "output": ["CLIP", "STRING"], "output_is_list": [false, false], "output_name": ["CLIP", "show_help"], "name": "CR Clip Input Switch", "display_name": "\ud83d\udd00 CR Clip Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Model Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"model1": ["MODEL"], "model2": ["MODEL"]}}, "input_order": {"required": ["Input"], "optional": ["model1", "model2"]}, "output": ["MODEL", "STRING"], "output_is_list": [false, false], "output_name": ["MODEL", "show_help"], "name": "CR Model Input Switch", "display_name": "\ud83d\udd00 CR Model Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR ControlNet Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}], "control_net1": ["CONTROL_NET"], "control_net2": ["CONTROL_NET"]}, "optional": {"control_net1": ["CONTROL_NET"], "control_net2": ["CONTROL_NET"]}}, "input_order": {"required": ["Input", "control_net1", "control_net2"], "optional": ["control_net1", "control_net2"]}, "output": ["CONTROL_NET", "STRING"], "output_is_list": [false, false], "output_name": ["CONTROL_NET", "show_help"], "name": "CR ControlNet Input Switch", "display_name": "\ud83d\udd00 CR ControlNet Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR VAE Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"VAE1": ["VAE", {"forceInput": true}], "VAE2": ["VAE", {"forceInput": true}]}}, "input_order": {"required": ["Input"], "optional": ["VAE1", "VAE2"]}, "output": ["VAE", "STRING"], "output_is_list": [false, false], "output_name": ["VAE", "show_help"], "name": "CR VAE Input Switch", "display_name": "\ud83d\udd00 CR VAE Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Text Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"text1": ["STRING", {"forceInput": true}], "text2": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["Input"], "optional": ["text1", "text2"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Input Switch", "display_name": "\ud83d\udd00 CR Text Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Text Input Switch (4 way)": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 4}]}, "optional": {"text1": ["STRING", {"forceInput": true}], "text2": ["STRING", {"forceInput": true}], "text3": ["STRING", {"forceInput": true}], "text4": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["Input"], "optional": ["text1", "text2", "text3", "text4"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Input Switch (4 way)", "display_name": "\ud83d\udd00 CR Text Input Switch (4 way)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Switch Model and CLIP": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}], "model1": ["MODEL"], "clip1": ["CLIP"], "model2": ["MODEL"], "clip2": ["CLIP"]}}, "input_order": {"required": ["Input", "model1", "clip1", "model2", "clip2"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "show_help"], "name": "CR Switch Model and CLIP", "display_name": "\ud83d\udd00 CR Switch Model and CLIP", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Batch Process Switch": {"input": {"required": {"Input": [["image", "image batch"]]}, "optional": {"image": ["IMAGE"], "image_batch": ["IMAGE"]}}, "input_order": {"required": ["Input"], "optional": ["image", "image_batch"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Batch Process Switch", "display_name": "\ud83d\udd02 CR Batch Process Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd02 Process", "output_node": false}, "CR Img2Img Process Switch": {"input": {"required": {"Input": [["txt2img", "img2img"]]}, "optional": {"txt2img": ["LATENT"], "img2img": ["LATENT"]}}, "input_order": {"required": ["Input"], "optional": ["txt2img", "img2img"]}, "output": ["LATENT", "STRING"], "output_is_list": [false, false], "output_name": ["LATENT", "show_help"], "name": "CR Img2Img Process Switch", "display_name": "\ud83d\udd02 CR Img2Img Process Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd02 Process", "output_node": false}, "CR Hires Fix Process Switch": {"input": {"required": {"Input": [["latent_upscale", "image_upscale"]]}, "optional": {"latent_upscale": ["LATENT"], "image_upscale": ["LATENT"]}}, "input_order": {"required": ["Input"], "optional": ["latent_upscale", "image_upscale"]}, "output": ["LATENT", "STRING"], "output_is_list": [false, false], "output_name": ["LATENT", "STRING"], "name": "CR Hires Fix Process Switch", "display_name": "\ud83d\udd02 CR Hires Fix Process Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd02 Process", "output_node": false}, "CR Index": {"input": {"required": {"index": ["INT", {"default": 1, "min": 0, "max": 10000}], "print_to_console": [["Yes", "No"]]}}, "input_order": {"required": ["index", "print_to_console"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Index", "display_name": "\ud83d\udd22 CR Index", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index", "output_node": false}, "CR Index Increment": {"input": {"required": {"index": ["INT", {"default": 1, "min": -10000, "max": 10000, "forceInput": true}], "interval": ["INT", {"default": 1, "min": -10000, "max": 10000}]}}, "input_order": {"required": ["index", "interval"]}, "output": ["INT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["index", "interval", "show_help"], "name": "CR Index Increment", "display_name": "\ud83d\udd22 CR Index Increment", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index", "output_node": false}, "CR Index Multiply": {"input": {"required": {"index": ["INT", {"default": 1, "min": 0, "max": 10000, "forceInput": true}], "factor": ["INT", {"default": 1, "min": 0, "max": 10000}]}}, "input_order": {"required": ["index", "factor"]}, "output": ["INT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["index", "factor", "show_help"], "name": "CR Index Multiply", "display_name": "\ud83d\udd22 CR Index Multiply", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index", "output_node": false}, "CR Index Reset": {"input": {"required": {"index": ["INT", {"default": 1, "min": 0, "max": 10000, "forceInput": true}], "reset_to": ["INT", {"default": 1, "min": 0, "max": 10000}]}}, "input_order": {"required": ["index", "reset_to"]}, "output": ["INT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["index", "reset_to", "show_help"], "name": "CR Index Reset", "display_name": "\ud83d\udd22 CR Index Reset", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index", "output_node": false}, "CR Trigger": {"input": {"required": {"index": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "trigger_value": ["INT", {"default": 1, "min": 0, "max": 10000}]}}, "input_order": {"required": ["index", "trigger_value"]}, "output": ["INT", "BOOLEAN", "STRING"], "output_is_list": [false, false, false], "output_name": ["index", "trigger", "show_help"], "name": "CR Trigger", "display_name": "\ud83d\udd22 CR Trigger", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index", "output_node": false}, "CR String To Number": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "text", "forceInput": true}], "round_integer": [["round", "round down", "round up"]]}}, "input_order": {"required": ["text", "round_integer"]}, "output": ["INT", "FLOAT", "STRING"], "output_is_list": [false, false, false], "output_name": ["INT", "FLOAT", "show_help"], "name": "CR String To Number", "display_name": "\ud83d\udd27 CR String To Number", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion", "output_node": false}, "CR String To Combo": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "", "forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["any", "show_help"], "name": "CR String To Combo", "display_name": "\ud83d\udd27 CR String To Combo", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion", "output_node": false}, "CR Float To String": {"input": {"required": {"float_": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000000.0, "forceInput": true}]}}, "input_order": {"required": ["float_"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Float To String", "display_name": "\ud83d\udd27 CR Float To String", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion", "output_node": false}, "CR Float To Integer": {"input": {"required": {"_float": ["FLOAT", {"default": 0.0, "forceInput": true}]}}, "input_order": {"required": ["_float"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Float To Integer", "display_name": "\ud83d\udd27 CR Float To Integer", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion", "output_node": false}, "CR Integer To String": {"input": {"required": {"int_": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "forceInput": true}]}}, "input_order": {"required": ["int_"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Integer To String", "display_name": "\ud83d\udd27 CR Integer To String", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion", "output_node": false}, "CR String To Boolean": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "", "forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["BOOLEAN", "STRING"], "output_is_list": [false, false], "output_name": ["BOOLEAN", "show_help"], "name": "CR String To Boolean", "display_name": "\ud83d\udd27 CR String To Boolean", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion", "output_node": false}, "CR Random Hex Color": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["seed"]}, "output": ["STRING", "STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["hex_color1", "hex_color2", "hex_color3", "hex_color4", "show_help"], "name": "CR Random Hex Color", "display_name": "\ud83c\udfb2 CR Random Hex Color", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random", "output_node": false}, "CR Random RGB": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["seed"]}, "output": ["STRING", "STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["rgb_1", "rgb_2", "rgb_3", "rgb_4", "show_help"], "name": "CR Random RGB", "display_name": "\ud83c\udfb2 CR Random RGB", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random", "output_node": false}, "CR Random Multiline Values": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "value_type": [["binary", "decimal", "natural", "hexadecimal", "alphabetic", "alphanumeric", "custom"]], "rows": ["INT", {"default": 5, "min": 1, "max": 2048}], "string_length": ["INT", {"default": 5, "min": 1, "max": 1024}], "custom_values": ["STRING", {"multiline": false, "default": "123ABC"}], "prepend_text": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["seed", "value_type", "rows", "string_length", "custom_values", "prepend_text"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["multiline_text", "show_help"], "name": "CR Random Multiline Values", "display_name": "\ud83c\udfb2 CR Random Multiline Values", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random", "output_node": false}, "CR Random Multiline Colors": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "value_type": [["rgb", "hex color", "matplotlib xkcd"]], "rows": ["INT", {"default": 5, "min": 1, "max": 2048}]}}, "input_order": {"required": ["seed", "value_type", "rows"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["multiline_text", "show_help"], "name": "CR Random Multiline Colors", "display_name": "\ud83c\udfb2 CR Random Multiline Colors", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random", "output_node": false}, "CR Random RGB Gradient": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "rows": ["INT", {"default": 5, "min": 1, "max": 2048}]}}, "input_order": {"required": ["seed", "rows"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["multiline_text", "show_help"], "name": "CR Random RGB Gradient", "display_name": "\ud83c\udfb2 CR Random RGB Gradient", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random", "output_node": false}, "CR Random Panel Codes": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "rows": ["INT", {"default": 5, "min": 1, "max": 2048}], "string_length": ["INT", {"default": 5, "min": 1, "max": 1024}], "values": ["STRING", {"multiline": false, "default": "123"}]}}, "input_order": {"required": ["seed", "rows", "string_length", "values"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["multiline_text", "show_help"], "name": "CR Random Panel Codes", "display_name": "\ud83c\udfb2 CR Random Panel Codes", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random", "output_node": false}, "CR Text": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true}]}}, "input_order": {"required": ["text"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["text", "show_help"], "name": "CR Text", "display_name": "\ud83d\udd24 CR Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Multiline Text": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true}], "convert_from_csv": ["BOOLEAN", {"default": false}], "csv_quote_char": ["STRING", {"default": "'", "choices": ["'", "\""]}], "remove_chars": ["BOOLEAN", {"default": false}], "chars_to_remove": ["STRING", {"multiline": false, "default": ""}], "split_string": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["text", "convert_from_csv", "csv_quote_char", "remove_chars", "chars_to_remove", "split_string"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["multiline_text", "show_help"], "name": "CR Multiline Text", "display_name": "\ud83d\udd24 CR Multiline Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Split String": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "text"}]}, "optional": {"delimiter": ["STRING", {"multiline": false, "default": ","}]}}, "input_order": {"required": ["text"], "optional": ["delimiter"]}, "output": ["*", "*", "*", "*", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["string_1", "string_2", "string_3", "string_4", "show_help"], "name": "CR Split String", "display_name": "\ud83d\udd24 CR Split String", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Text Concatenate": {"input": {"required": {}, "optional": {"text1": ["STRING", {"multiline": false, "default": "", "forceInput": true}], "text2": ["STRING", {"multiline": false, "default": "", "forceInput": true}], "separator": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": [], "optional": ["text1", "text2", "separator"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Concatenate", "display_name": "\ud83d\udd24 CR Text Concatenate", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Text Replace": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "", "forceInput": true}]}, "optional": {"find1": ["STRING", {"multiline": false, "default": ""}], "replace1": ["STRING", {"multiline": false, "default": ""}], "find2": ["STRING", {"multiline": false, "default": ""}], "replace2": ["STRING", {"multiline": false, "default": ""}], "find3": ["STRING", {"multiline": false, "default": ""}], "replace3": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["text"], "optional": ["find1", "replace1", "find2", "replace2", "find3", "replace3"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Replace", "display_name": "\ud83d\udd24 CR Text Replace", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Text Length": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "", "forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Text Length", "display_name": "\ud83d\udd24 CR Text Length", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Text Operation": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "", "forceInput": true}], "operation": [["uppercase", "lowercase", "capitalize", "invert_case", "reverse", "trim", "remove_spaces"]]}}, "input_order": {"required": ["text", "operation"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Operation", "display_name": "\ud83d\udd24 CR Text Operation", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Text Blacklist": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "", "forceInput": true}], "blacklist_words": ["STRING", {"multiline": true, "default": ""}]}, "optional": {"replacement_text": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["text", "blacklist_words"], "optional": ["replacement_text"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Blacklist", "display_name": "\ud83d\udd24 Text Blacklist", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Save Text To File": {"input": {"required": {"multiline_text": ["STRING", {"multiline": true, "default": ""}], "output_file_path": ["STRING", {"multiline": false, "default": ""}], "file_name": ["STRING", {"multiline": false, "default": ""}], "file_extension": [["txt", "csv"]]}}, "input_order": {"required": ["multiline_text", "output_file_path", "file_name", "file_extension"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["show_help"], "name": "CR Save Text To File", "display_name": "\ud83d\udd24 CR Save Text To File", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": true}, "CR Set Value On Boolean": {"input": {"required": {"boolean": ["BOOLEAN", {"default": true, "forceInput": true}], "value_if_true": ["FLOAT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615}], "value_if_false": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["boolean", "value_if_true", "value_if_false"]}, "output": ["INT", "FLOAT", "STRING"], "output_is_list": [false, false, false], "output_name": ["INT", "FLOAT", "show_help"], "name": "CR Set Value On Boolean", "display_name": "\u2699\ufe0f CR Set Value On Boolean", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Conditional", "output_node": false}, "CR Set Value On Binary": {"input": {"required": {"binary": ["INT", {"default": 1, "min": 0, "max": 1, "forceInput": true}], "value_if_1": ["FLOAT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615}], "value_if_0": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["binary", "value_if_1", "value_if_0"]}, "output": ["INT", "FLOAT", "STRING"], "output_is_list": [false, false, false], "output_name": ["INT", "FLOAT", "show_help"], "name": "CR Set Value On Binary", "display_name": "\u2699\ufe0f CR Set Value On Binary", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Conditional", "output_node": false}, "CR Set Value on String": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "", "forceInput": true}]}, "optional": {"test_string": ["STRING", {"multiline": false, "default": ""}], "value_if_true": ["STRING", {"multiline": false, "default": ""}], "value_if_false": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["text"], "optional": ["test_string", "value_if_true", "value_if_false"]}, "output": ["*", "BOOLEAN", "STRING"], "output_is_list": [false, false, false], "output_name": ["STRING", "BOOLEAN", "show_help"], "name": "CR Set Value on String", "display_name": "\u2699\ufe0f CR Set Value on String", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Conditional", "output_node": false}, "CR Set Switch From String": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "", "forceInput": true}]}, "optional": {"switch_1": ["STRING", {"multiline": false, "default": ""}], "switch_2": ["STRING", {"multiline": false, "default": ""}], "switch_3": ["STRING", {"multiline": false, "default": ""}], "switch_4": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["text"], "optional": ["switch_1", "switch_2", "switch_3", "switch_4"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["switch", "show_help"], "name": "CR Set Switch From String", "display_name": "\u2699\ufe0f CR Set Switch From String", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Conditional", "output_node": false}, "CR Value": {"input": {"required": {"value": ["FLOAT", {"default": 1.0}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["FLOAT", "INT", "show_help"], "name": "CR Value", "display_name": "\u2699\ufe0f CR Value", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Integer Multiple": {"input": {"required": {"integer": ["INT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615}], "multiple": ["FLOAT", {"default": 8, "min": 1, "max": 18446744073709551615}]}}, "input_order": {"required": ["integer", "multiple"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Integer Multiple", "display_name": "\u2699\ufe0f CR Integer Multiple", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Clamp Value": {"input": {"required": {"a": ["FLOAT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615}], "range_min": ["FLOAT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615}], "range_max": ["FLOAT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["a", "range_min", "range_max"]}, "output": ["FLOAT", "STRING"], "output_is_list": [false, false], "output_name": ["a", "show_help"], "name": "CR Clamp Value", "display_name": "\u2699\ufe0f CR Clamp Value", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Math Operation": {"input": {"required": {"a": ["FLOAT", {"default": 1.0}], "operation": [["sin", "cos", "tan", "sqrt", "exp", "log", "neg", "abs"]], "decimal_places": ["INT", {"default": 2, "min": 0, "max": 10}]}}, "input_order": {"required": ["a", "operation", "decimal_places"]}, "output": ["FLOAT", "STRING"], "output_is_list": [false, false], "output_name": ["a", "show_help"], "name": "CR Math Operation", "display_name": "\u2699\ufe0f CR Math Operation", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Get Parameter From Prompt": {"input": {"required": {"prompt": ["STRING", {"multiline": true, "default": "prompt", "forceInput": true}], "search_string": ["STRING", {"multiline": false, "default": "!findme"}]}}, "input_order": {"required": ["prompt", "search_string"]}, "output": ["STRING", "*", "FLOAT", "BOOLEAN", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["prompt", "text", "float", "boolean", "show_help"], "name": "CR Get Parameter From Prompt", "display_name": "\u2699\ufe0f CR Get Parameter From Prompt", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Select Resize Method": {"input": {"required": {"method": [["Fit", "Crop"]]}}, "input_order": {"required": ["method"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["method", "show_help"], "name": "CR Select Resize Method", "display_name": "\u2699\ufe0f CR Select Resize Method", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Select ISO Size": {"input": {"required": {"iso_size": [["A0 - 9933x14043", "A1 - 7016x9933", "A2 - 4960x7016", "A3 - 3508x4960", "A4 - 2480x3508", "A5 - 1748x2480", "A6 - 1240x1748", "A7 - 874x1240", "A8 - 614x874", "A9 - 437x614", "A10 - 307x437", "A11 - 213x307", "A12 - 154x213", "A13 - 106x154", "B0 - 11811x16701", "B1 - 8350x11811", "B2 - 5906x8350", "B3 - 4169x5906", "B4 - 2953x4169", "B5 - 2079x2953", "B6 - 1476x2079", "B7 - 1039x1476", "B8 - 732x1039", "B9 - 520x732", "B10 - 366x520", "C0 - 10831x15319", "C1 - 7654x10831", "C2 - 5409x7654", "C3 - 3827x5409", "C4 - 2705x3827", "C5 - 1913x2705", "C6 - 1346x1913", "C7 - 957x1346", "C8 - 673x957", "C9 - 472x673", "C10 - 331x472"]]}}, "input_order": {"required": ["iso_size"]}, "output": ["INT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["width", "height", "show_help"], "name": "CR Select ISO Size", "display_name": "\u2699\ufe0f CR Select ISO Size", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Simple Schedule": {"input": {"required": {"schedule": ["STRING", {"multiline": true, "default": "frame_number, item_alias, [attr_value1, attr_value2]"}], "schedule_type": [["Value", "Text", "Prompt", "Prompt Weight", "Model", "LoRA", "ControlNet", "Style", "Upscale", "Camera", "Job"]], "schedule_alias": ["STRING", {"default": "", "multiline": false}], "schedule_format": [["CR", "Deforum"]]}}, "input_order": {"required": ["schedule", "schedule_type", "schedule_alias", "schedule_format"]}, "output": ["SCHEDULE", "STRING"], "output_is_list": [false, false], "output_name": ["SCHEDULE", "show_help"], "name": "CR Simple Schedule", "display_name": "\ud83d\udccb CR Simple Schedule", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": false}, "CR Central Schedule": {"input": {"required": {"schedule_1": ["STRING", {"multiline": true, "default": "schedule"}], "schedule_type1": [["Value", "Text", "Prompt", "Prompt Weight", "Model", "LoRA", "ControlNet", "Style", "Upscale", "Camera", "Job"]], "schedule_alias1": ["STRING", {"multiline": false, "default": ""}], "schedule_2": ["STRING", {"multiline": true, "default": "schedule"}], "schedule_type2": [["Value", "Text", "Prompt", "Prompt Weight", "Model", "LoRA", "ControlNet", "Style", "Upscale", "Camera", "Job"]], "schedule_alias2": ["STRING", {"multiline": false, "default": ""}], "schedule_3": ["STRING", {"multiline": true, "default": "schedule"}], "schedule_type3": [["Value", "Text", "Prompt", "Prompt Weight", "Model", "LoRA", "ControlNet", "Style", "Upscale", "Camera", "Job"]], "schedule_alias3": ["STRING", {"multiline": false, "default": ""}], "schedule_format": [["CR", "Deforum"]]}, "optional": {"schedule": ["SCHEDULE"]}}, "input_order": {"required": ["schedule_1", "schedule_type1", "schedule_alias1", "schedule_2", "schedule_type2", "schedule_alias2", "schedule_3", "schedule_type3", "schedule_alias3", "schedule_format"], "optional": ["schedule"]}, "output": ["SCHEDULE", "STRING"], "output_is_list": [false, false], "output_name": ["SCHEDULE", "show_text"], "name": "CR Central Schedule", "display_name": "\ud83d\udccb CR Central Schedule", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": false}, "CR Combine Schedules": {"input": {"required": {}, "optional": {"schedule_1": ["SCHEDULE"], "schedule_2": ["SCHEDULE"], "schedule_3": ["SCHEDULE"], "schedule_4": ["SCHEDULE"]}}, "input_order": {"required": [], "optional": ["schedule_1", "schedule_2", "schedule_3", "schedule_4"]}, "output": ["SCHEDULE", "STRING"], "output_is_list": [false, false], "output_name": ["SCHEDULE", "show_text"], "name": "CR Combine Schedules", "display_name": "\ud83d\udccb CR Combine Schedules", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": false}, "CR Output Schedule To File": {"input": {"required": {"output_file_path": ["STRING", {"multiline": false, "default": ""}], "file_name": ["STRING", {"multiline": false, "default": ""}], "file_extension": [["txt", "csv"]], "schedule": ["SCHEDULE"]}}, "input_order": {"required": ["output_file_path", "file_name", "file_extension", "schedule"]}, "output": [], "output_is_list": [], "output_name": [], "name": "CR Output Schedule To File", "display_name": "\ud83d\udccb CR Output Schedule To File", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": true}, "CR Load Schedule From File": {"input": {"required": {"input_file_path": ["STRING", {"multiline": false, "default": ""}], "file_name": ["STRING", {"multiline": false, "default": ""}], "file_extension": [["txt", "csv"]]}}, "input_order": {"required": ["input_file_path", "file_name", "file_extension"]}, "output": ["SCHEDULE", "STRING"], "output_is_list": [false, false], "output_name": ["SCHEDULE", "show_text"], "name": "CR Load Schedule From File", "display_name": "\ud83d\udccb CR Load Schedule From File", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": false}, "CR Schedule Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}], "schedule1": ["SCHEDULE"], "schedule2": ["SCHEDULE"]}}, "input_order": {"required": ["Input", "schedule1", "schedule2"]}, "output": ["SCHEDULE", "STRING"], "output_is_list": [false, false], "output_name": ["SCHEDULE", "show_help"], "name": "CR Schedule Input Switch", "display_name": "\ud83d\udccb CR Schedule Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": true}, "CR Bit Schedule": {"input": {"required": {"binary_string": ["STRING", {"multiline": true, "default": ""}], "interval": ["INT", {"default": 1, "min": 1, "max": 99999}], "loops": ["INT", {"default": 1, "min": 1, "max": 99999}]}}, "input_order": {"required": ["binary_string", "interval", "loops"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["SCHEDULE", "show_text"], "name": "CR Bit Schedule", "display_name": "\ud83d\udccb CR Bit Schedule", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": false}, "CR Simple Value Scheduler": {"input": {"required": {"schedule": ["STRING", {"multiline": true, "default": "frame_number, value"}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["schedule", "current_frame"]}, "output": ["INT", "FLOAT", "STRING"], "output_is_list": [false, false, false], "output_name": ["INT", "FLOAT", "show_help"], "name": "CR Simple Value Scheduler", "display_name": "\ud83d\udcd1 CR Simple Value Scheduler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Simple Text Scheduler": {"input": {"required": {"schedule": ["STRING", {"multiline": true, "default": "frame_number, text"}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["schedule", "current_frame"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Simple Text Scheduler", "display_name": "\ud83d\udcd1 CR Simple Text Scheduler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Value Scheduler": {"input": {"required": {"mode": [["Default Value", "Schedule"]], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "schedule_alias": ["STRING", {"default": "", "multiline": false}], "default_value": ["FLOAT", {"default": 1.0, "min": -9999.0, "max": 9999.0, "step": 0.01}], "schedule_format": [["CR", "Deforum"]]}, "optional": {"schedule": ["SCHEDULE"]}}, "input_order": {"required": ["mode", "current_frame", "schedule_alias", "default_value", "schedule_format"], "optional": ["schedule"]}, "output": ["INT", "FLOAT", "STRING"], "output_is_list": [false, false, false], "output_name": ["INT", "FLOAT", "show_help"], "name": "CR Value Scheduler", "display_name": "\ud83d\udcd1 CR Value Scheduler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Text Scheduler": {"input": {"required": {"mode": [["Default Text", "Schedule"]], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "schedule_alias": ["STRING", {"default": "", "multiline": false}], "default_text": ["STRING", {"multiline": false, "default": "default text"}], "schedule_format": [["CR", "Deforum"]]}, "optional": {"schedule": ["SCHEDULE"]}}, "input_order": {"required": ["mode", "current_frame", "schedule_alias", "default_text", "schedule_format"], "optional": ["schedule"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Scheduler", "display_name": "\ud83d\udcd1 CR Text Scheduler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Load Scheduled Models": {"input": {"required": {"mode": [["Load default Model", "Schedule"]], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "schedule_alias": ["STRING", {"default": "", "multiline": false}], "default_model": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "schedule_format": [["CR", "Deforum"]]}, "optional": {"model_list": ["MODEL_LIST"], "schedule": ["SCHEDULE"]}}, "input_order": {"required": ["mode", "current_frame", "schedule_alias", "default_model", "schedule_format"], "optional": ["model_list", "schedule"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "show_help"], "name": "CR Load Scheduled Models", "display_name": "\ud83d\udcd1 CR Load Scheduled Models", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Load Scheduled LoRAs": {"input": {"required": {"mode": [["Off", "Load default LoRA", "Schedule"]], "model": ["MODEL"], "clip": ["CLIP"], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "schedule_alias": ["STRING", {"default": "", "multiline": false}], "default_lora": [["AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "schedule_format": [["CR", "Deforum"]]}, "optional": {"lora_list": ["LORA_LIST"], "schedule": ["SCHEDULE"]}}, "input_order": {"required": ["mode", "model", "clip", "current_frame", "schedule_alias", "default_lora", "strength_model", "strength_clip", "schedule_format"], "optional": ["lora_list", "schedule"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "show_help"], "name": "CR Load Scheduled LoRAs", "display_name": "\ud83d\udcd1 CR Load Scheduled LoRAs", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Prompt Scheduler": {"input": {"required": {"mode": [["Default Prompt", "Keyframe List", "Schedule"]], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "default_prompt": ["STRING", {"multiline": false, "default": "default prompt"}], "schedule_format": [["CR", "Deforum"]], "interpolate_prompt": [["Yes", "No"]]}, "optional": {"schedule": ["SCHEDULE"], "schedule_alias": ["STRING", {"default prompt": "", "multiline": false}], "keyframe_list": ["STRING", {"multiline": true, "default": "keyframe list"}], "prepend_text": ["STRING", {"multiline": true, "default": "prepend text"}], "append_text": ["STRING", {"multiline": true, "default": "append text"}]}}, "input_order": {"required": ["mode", "current_frame", "default_prompt", "schedule_format", "interpolate_prompt"], "optional": ["schedule", "schedule_alias", "keyframe_list", "prepend_text", "append_text"]}, "output": ["STRING", "STRING", "FLOAT", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["current_prompt", "next_prompt", "weight", "show_help"], "name": "CR Prompt Scheduler", "display_name": "\ud83d\udcd1 CR Prompt Scheduler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Simple Prompt Scheduler": {"input": {"required": {"keyframe_list": ["STRING", {"multiline": true, "default": "frame_number, text"}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "keyframe_format": [["CR", "Deforum"]]}}, "input_order": {"required": ["keyframe_list", "current_frame", "keyframe_format"]}, "output": ["STRING", "STRING", "FLOAT", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["current_prompt", "next_prompt", "weight", "show_help"], "name": "CR Simple Prompt Scheduler", "display_name": "\ud83d\udcd1 CR Simple Prompt Scheduler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Keyframe List": {"input": {"required": {"keyframe_list": ["STRING", {"multiline": true, "default": "keyframes"}], "keyframe_format": [["Deforum", "CR"]]}}, "input_order": {"required": ["keyframe_list", "keyframe_format"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["keyframe_list", "show_help"], "name": "CR Keyframe List", "display_name": "\ud83d\udcdd CR Keyframe List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcdd Prompt", "output_node": false}, "CR Encode Scheduled Prompts": {"input": {"required": {"clip": ["CLIP"], "current_prompt": ["STRING", {"multiline": true}], "next_prompt": ["STRING", {"multiline": true}], "weight": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.01}]}}, "input_order": {"required": ["clip", "current_prompt", "next_prompt", "weight"]}, "output": ["CONDITIONING", "STRING"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "show_help"], "name": "CR Encode Scheduled Prompts", "display_name": "\ud83d\udcdd CR Encode Scheduled Prompts", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcdd Prompt", "output_node": false}, "CR Gradient Float": {"input": {"required": {"start_value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 0.01}], "end_value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 0.01}], "start_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "frame_duration": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "gradient_profile": [["Lerp"]]}}, "input_order": {"required": ["start_value", "end_value", "start_frame", "frame_duration", "current_frame", "gradient_profile"]}, "output": ["FLOAT", "STRING"], "output_is_list": [false, false], "output_name": ["FLOAT", "show_help"], "name": "CR Gradient Float", "display_name": "\ud83d\udd22 CR Gradient Float", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate", "output_node": false}, "CR Gradient Integer": {"input": {"required": {"start_value": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "end_value": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "start_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "frame_duration": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "gradient_profile": [["Lerp"]]}}, "input_order": {"required": ["start_value", "end_value", "start_frame", "frame_duration", "current_frame", "gradient_profile"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Gradient Integer", "display_name": "\ud83d\udd22 CR Gradient Integer", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate", "output_node": false}, "CR Increment Float": {"input": {"required": {"start_value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 0.001}], "step": ["FLOAT", {"default": 0.1, "min": -9999.0, "max": 9999.0, "step": 0.001}], "start_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "frame_duration": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["start_value", "step", "start_frame", "frame_duration", "current_frame"]}, "output": ["FLOAT", "STRING"], "output_is_list": [false, false], "output_name": ["FLOAT", "show_help"], "name": "CR Increment Float", "display_name": "\ud83d\udd22 CR Increment Float", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate", "output_node": true}, "CR Increment Integer": {"input": {"required": {"start_value": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "step": ["INT", {"default": 1.0, "min": -9999.0, "max": 9999.0, "step": 1.0}], "start_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "frame_duration": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["start_value", "step", "start_frame", "frame_duration", "current_frame"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Increment Integer", "display_name": "\ud83d\udd22 CR Increment Integer", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate", "output_node": true}, "CR Interpolate Latents": {"input": {"required": {"latent1": ["LATENT"], "latent2": ["LATENT"], "weight": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "method": [["lerp"]]}}, "input_order": {"required": ["latent1", "latent2", "weight", "method"]}, "output": ["LATENT", "STRING"], "output_is_list": [false, false], "output_name": ["LATENT", "show_help"], "name": "CR Interpolate Latents", "display_name": "\ud83d\udd22 CR Interpolate Latents", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate", "output_node": false}, "CR Debatch Frames": {"input": {"required": {"frames": ["IMAGE"]}}, "input_order": {"required": ["frames"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["debatched_frames"], "name": "CR Debatch Frames", "display_name": "\ud83d\udee0\ufe0f CR Debatch Frames", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR Current Frame": {"input": {"required": {"index": ["INT", {"default": 1, "min": -10000, "max": 10000}], "print_to_console": [["Yes", "No"]]}}, "input_order": {"required": ["index", "print_to_console"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["index"], "name": "CR Current Frame", "display_name": "\ud83d\udee0\ufe0f CR Current Frame", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR Load Animation Frames": {"input": {"required": {"image_sequence_folder": [["clipspace", "pasted"]], "start_index": ["INT", {"default": 1, "min": 1, "max": 10000}], "max_frames": ["INT", {"default": 1, "min": 1, "max": 10000}]}}, "input_order": {"required": ["image_sequence_folder", "start_index", "max_frames"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Load Animation Frames", "display_name": "\u2328\ufe0f CR Load Animation Frames", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\u2328\ufe0f IO", "output_node": false}, "CR Load Flow Frames": {"input": {"required": {"input_folder": [["clipspace", "pasted"]], "sort_by": [["Index", "Alphabetic"]], "current_frame": ["INT", {"default": 0, "min": 0, "max": 10000, "forceInput": true}], "skip_start_frames": ["INT", {"default": 0, "min": 0, "max": 10000}]}, "optional": {"input_path": ["STRING", {"default": "", "multiline": false}], "file_pattern": ["STRING", {"default": "*.png", "multiline": false}]}}, "input_order": {"required": ["input_folder", "sort_by", "current_frame", "skip_start_frames"], "optional": ["input_path", "file_pattern"]}, "output": ["IMAGE", "IMAGE", "INT", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["current_image", "previous_image", "current_frame", "show_help"], "name": "CR Load Flow Frames", "display_name": "\u2328\ufe0f CR Load Flow Frames", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\u2328\ufe0f IO", "output_node": false}, "CR Output Flow Frames": {"input": {"required": {"output_folder": [["steerable-motion"]], "current_image": ["IMAGE"], "filename_prefix": ["STRING", {"default": "CR"}], "current_frame": ["INT", {"default": 0, "min": 0, "max": 9999999, "forceInput": true}]}, "optional": {"interpolated_img": ["IMAGE"], "output_path": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["output_folder", "current_image", "filename_prefix", "current_frame"], "optional": ["interpolated_img", "output_path"]}, "output": [], "output_is_list": [], "output_name": [], "name": "CR Output Flow Frames", "display_name": "\u2328\ufe0f CR Output Flow Frames", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\u2328\ufe0f IO", "output_node": true}, "CR Prompt List Keyframes": {"input": {"required": {"prompt_list": ["PROMPT_LIST"], "keyframe_format": [["Deforum"]]}}, "input_order": {"required": ["prompt_list", "keyframe_format"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["keyframe_list", "show_help"], "name": "CR Prompt List Keyframes", "display_name": "CR Prompt List Keyframes (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Simple Prompt List": {"input": {"required": {"prompt_1": ["STRING", {"multiline": true, "default": "prompt"}], "prompt_2": ["STRING", {"multiline": true, "default": "prompt"}], "prompt_3": ["STRING", {"multiline": true, "default": "prompt"}], "prompt_4": ["STRING", {"multiline": true, "default": "prompt"}], "prompt_5": ["STRING", {"multiline": true, "default": "prompt"}]}, "optional": {"simple_prompt_list": ["SIMPLE_PROMPT_LIST"]}}, "input_order": {"required": ["prompt_1", "prompt_2", "prompt_3", "prompt_4", "prompt_5"], "optional": ["simple_prompt_list"]}, "output": ["SIMPLE_PROMPT_LIST", "STRING"], "output_is_list": [false, false], "output_name": ["SIMPLE_PROMPT_LIST", "show_help"], "name": "CR Simple Prompt List", "display_name": "CR Simple Prompt List (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Simple Prompt List Keyframes": {"input": {"required": {"simple_prompt_list": ["SIMPLE_PROMPT_LIST"], "keyframe_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "transition_type": [["Default"]], "transition_speed": [["Default"]], "transition_profile": [["Default"]], "keyframe_format": [["Deforum"]]}}, "input_order": {"required": ["simple_prompt_list", "keyframe_interval", "loops", "transition_type", "transition_speed", "transition_profile", "keyframe_format"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["keyframe_list", "show_help"], "name": "CR Simple Prompt List Keyframes", "display_name": "CR Simple Prompt List Keyframes (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Cycle Models": {"input": {"required": {"mode": [["Off", "Sequential"]], "model": ["MODEL"], "clip": ["CLIP"], "model_list": ["MODEL_LIST"], "frame_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["mode", "model", "clip", "model_list", "frame_interval", "loops", "current_frame"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "show_help"], "name": "CR Cycle Models", "display_name": "CR Cycle Models (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Cycle LoRAs": {"input": {"required": {"mode": [["Off", "Sequential"]], "model": ["MODEL"], "clip": ["CLIP"], "lora_list": ["LORA_LIST"], "frame_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["mode", "model", "clip", "lora_list", "frame_interval", "loops", "current_frame"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "show_help"], "name": "CR Cycle LoRAs", "display_name": "CR Cycle LoRAs (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Cycle Text": {"input": {"required": {"mode": [["Sequential"]], "text_list": ["TEXT_LIST"], "frame_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["mode", "text_list", "frame_interval", "loops", "current_frame"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Cycle Text", "display_name": "CR Cycle Text (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Cycle Text Simple": {"input": {"required": {"mode": [["Sequential"]], "frame_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}, "optional": {"text_1": ["STRING", {"multiline": false, "default": ""}], "text_2": ["STRING", {"multiline": false, "default": ""}], "text_3": ["STRING", {"multiline": false, "default": ""}], "text_4": ["STRING", {"multiline": false, "default": ""}], "text_5": ["STRING", {"multiline": false, "default": ""}], "text_list_simple": ["TEXT_LIST_SIMPLE"]}}, "input_order": {"required": ["mode", "frame_interval", "loops", "current_frame"], "optional": ["text_1", "text_2", "text_3", "text_4", "text_5", "text_list_simple"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Cycle Text Simple", "display_name": "CR Cycle Text Simple (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Cycle Images": {"input": {"required": {"mode": [["Sequential"]], "image_list": ["IMAGE_LIST"], "frame_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["mode", "image_list", "frame_interval", "loops", "current_frame"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Cycle Images", "display_name": "CR Cycle Images (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Cycle Images Simple": {"input": {"required": {"mode": [["Sequential"]], "frame_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}, "optional": {"image_1": ["IMAGE"], "image_2": ["IMAGE"], "image_3": ["IMAGE"], "image_4": ["IMAGE"], "image_5": ["IMAGE"], "image_list_simple": ["IMAGE_LIST_SIMPLE"]}}, "input_order": {"required": ["mode", "frame_interval", "loops", "current_frame"], "optional": ["image_1", "image_2", "image_3", "image_4", "image_5", "image_list_simple"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Cycle Images Simple", "display_name": "CR Cycle Images Simple (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Model List": {"input": {"required": {"ckpt_name1": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "alias1": ["STRING", {"multiline": false, "default": ""}], "ckpt_name2": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "alias2": ["STRING", {"multiline": false, "default": ""}], "ckpt_name3": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "alias3": ["STRING", {"multiline": false, "default": ""}], "ckpt_name4": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "alias4": ["STRING", {"multiline": false, "default": ""}], "ckpt_name5": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "alias5": ["STRING", {"multiline": false, "default": ""}]}, "optional": {"model_list": ["MODEL_LIST"]}}, "input_order": {"required": ["ckpt_name1", "alias1", "ckpt_name2", "alias2", "ckpt_name3", "alias3", "ckpt_name4", "alias4", "ckpt_name5", "alias5"], "optional": ["model_list"]}, "output": ["MODEL_LIST", "STRING"], "output_is_list": [false, false], "output_name": ["MODEL_LIST", "show_text"], "name": "CR Model List", "display_name": "CR Model List (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR LoRA List": {"input": {"required": {"lora_name1": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "alias1": ["STRING", {"multiline": false, "default": ""}], "model_strength_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_strength_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name2": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "alias2": ["STRING", {"multiline": false, "default": ""}], "model_strength_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_strength_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name3": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "alias3": ["STRING", {"multiline": false, "default": ""}], "model_strength_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_strength_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}, "optional": {"lora_list": ["lora_LIST"]}}, "input_order": {"required": ["lora_name1", "alias1", "model_strength_1", "clip_strength_1", "lora_name2", "alias2", "model_strength_2", "clip_strength_2", "lora_name3", "alias3", "model_strength_3", "clip_strength_3"], "optional": ["lora_list"]}, "output": ["LORA_LIST", "STRING"], "output_is_list": [false, false], "output_name": ["LORA_LIST", "show_text"], "name": "CR LoRA List", "display_name": "CR LoRA List (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Text List Simple": {"input": {"required": {}, "optional": {"text_1": ["STRING", {"multiline": false, "default": ""}], "text_2": ["STRING", {"multiline": false, "default": ""}], "text_3": ["STRING", {"multiline": false, "default": ""}], "text_4": ["STRING", {"multiline": false, "default": ""}], "text_5": ["STRING", {"multiline": false, "default": ""}], "text_list_simple": ["TEXT_LIST_SIMPLE"]}}, "input_order": {"required": [], "optional": ["text_1", "text_2", "text_3", "text_4", "text_5", "text_list_simple"]}, "output": ["TEXT_LIST_SIMPLE", "STRING"], "output_is_list": [false, false], "output_name": ["TEXT_LIST_SIMPLE", "show_help"], "name": "CR Text List Simple", "display_name": "CR Text List Simple (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Image List": {"input": {"required": {}, "optional": {"image_1": ["IMAGE"], "alias1": ["STRING", {"multiline": false, "default": ""}], "image_2": ["IMAGE"], "alias2": ["STRING", {"multiline": false, "default": ""}], "image_3": ["IMAGE"], "alias3": ["STRING", {"multiline": false, "default": ""}], "image_4": ["IMAGE"], "alias4": ["STRING", {"multiline": false, "default": ""}], "image_5": ["IMAGE"], "alias5": ["STRING", {"multiline": false, "default": ""}], "image_list": ["image_LIST"]}}, "input_order": {"required": [], "optional": ["image_1", "alias1", "image_2", "alias2", "image_3", "alias3", "image_4", "alias4", "image_5", "alias5", "image_list"]}, "output": ["IMAGE_LIST", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE_LIST", "show_help"], "name": "CR Image List", "display_name": "CR Image List (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Image List Simple": {"input": {"required": {}, "optional": {"image_1": ["IMAGE"], "image_2": ["IMAGE"], "image_3": ["IMAGE"], "image_4": ["IMAGE"], "image_5": ["IMAGE"], "image_list_simple": ["IMAGE_LIST_SIMPLE"]}}, "input_order": {"required": [], "optional": ["image_1", "image_2", "image_3", "image_4", "image_5", "image_list_simple"]}, "output": ["IMAGE_LIST_SIMPLE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE_LIST_SIMPLE", "show_help"], "name": "CR Image List Simple", "display_name": "CR Image List Simple (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "SleepNodeAny": {"input": {"required": {"interval": ["FLOAT", {"default": 0.0}]}, "optional": {"inputs": ["*", {"default": 0.0}]}}, "input_order": {"required": ["interval"], "optional": ["inputs"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "SleepNodeAny", "display_name": "SleepNode", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Misc", "output_node": false}, "SleepNodeImage": {"input": {"required": {"interval": ["FLOAT", {"default": 0.0}], "image": ["*"]}}, "input_order": {"required": ["interval", "image"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "SleepNodeImage", "display_name": "Sleep (Image tunnel)", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Misc", "output_node": false}, "ErrorNode": {"input": {"required": {"error_msg": ["STRING", {"default": "Error"}]}}, "input_order": {"required": ["error_msg"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "ErrorNode", "display_name": "ErrorNode", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Misc", "output_node": false}, "DebugComboInputNode": {"input": {"required": {"input1": [["0", "1", "2"], {"default": "0"}]}}, "input_order": {"required": ["input1"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "DebugComboInputNode", "display_name": "Debug Combo Input", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Misc", "output_node": false}, "TextPreviewNode": {"input": {"required": {"text": ["*", {"default": "text", "type": "output"}]}}, "input_order": {"required": ["text"]}, "output": [], "output_is_list": [], "output_name": [], "name": "TextPreviewNode", "display_name": "Text Preview", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Misc", "output_node": true}, "ParseExifNode": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "ParseExifNode", "display_name": "Parse Exif", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Misc", "output_node": false}, "SaveImageCustomNode": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "subfolder_dir": ["STRING", {"default": ""}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "subfolder_dir"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "SaveImageCustomNode", "display_name": "Save Image Custom Node", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "image", "output_node": true}, "SaveTextCustomNode": {"input": {"required": {"text": ["*"], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "subfolder_dir": ["STRING", {"default": ""}], "filename": ["STRING", {"default": ""}]}}, "input_order": {"required": ["text", "filename_prefix", "subfolder_dir", "filename"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "SaveTextCustomNode", "display_name": "Save Text Custom Node", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "text", "output_node": false}, "SaveImageWebpCustomNode": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "subfolder_dir": ["STRING", {"default": ""}]}, "optional": {"quality": ["INT", {"default": 100}], "lossless": ["BOOL", {"default": false}], "compression": ["INT", {"default": 4}], "optimize": ["BOOL", {"default": false}], "metadata_string": ["STRING", {"default": ""}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "subfolder_dir"], "optional": ["quality", "lossless", "compression", "optimize", "metadata_string"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "SaveImageWebpCustomNode", "display_name": "Save Image Webp Node", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "image", "output_node": true}, "ResizeImageNode": {"input": {"required": {"image": ["IMAGE"], "size": ["INT", {"default": 512}], "method": [["NEAREST", "LANCZOS", "BICUBIC"]]}}, "input_order": {"required": ["image", "size", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ResizeImageNode", "display_name": "Resize Image", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "image", "output_node": false}, "ResizeImageResolution": {"input": {"required": {"image": ["IMAGE"], "resolution": ["INT", {"default": 512}], "method": [["NEAREST", "LANCZOS", "BICUBIC"]]}}, "input_order": {"required": ["image", "resolution", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ResizeImageResolution", "display_name": "Resize Image With Resolution", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "image", "output_node": false}, "InvertImageNode": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "InvertImageNode", "display_name": "Invert Image", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "image", "output_node": false}, "ResizeScaleImageNode": {"input": {"required": {"image": ["IMAGE"], "size": ["INT", {"default": 512}], "method": [["NEAREST", "LANCZOS", "BICUBIC"]]}}, "input_order": {"required": ["image", "size", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ResizeScaleImageNode", "display_name": "Resize Scale Image", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "image", "output_node": false}, "ResizeShortestToNode": {"input": {"required": {"image": ["IMAGE"], "size": ["INT", {"default": 512}], "method": [["NEAREST", "LANCZOS", "BICUBIC"]]}}, "input_order": {"required": ["image", "size", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ResizeShortestToNode", "display_name": "Resize Shortest To", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "image", "output_node": false}, "ResizeLongestToNode": {"input": {"required": {"image": ["IMAGE"], "size": ["INT", {"default": 512}], "method": [["NEAREST", "LANCZOS", "BICUBIC"]]}}, "input_order": {"required": ["image", "size", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ResizeLongestToNode", "display_name": "Resize Longest To", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "image", "output_node": false}, "ConvertGreyscaleNode": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ConvertGreyscaleNode", "display_name": "Convert Greyscale", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "image", "output_node": false}, "RotateImageNode": {"input": {"required": {"image": ["IMAGE"], "angle": ["INT", {"default": 0}]}}, "input_order": {"required": ["image", "angle"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RotateImageNode", "display_name": "Rotate Image", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "image", "output_node": false}, "BrightnessNode": {"input": {"required": {"image": ["IMAGE"], "factor": ["FLOAT", {"default": 1.0}]}}, "input_order": {"required": ["image", "factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BrightnessNode", "display_name": "Brightness", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "image", "output_node": false}, "ContrastNode": {"input": {"required": {"image": ["IMAGE"], "factor": ["FLOAT", {"default": 1.0}]}}, "input_order": {"required": ["image", "factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ContrastNode", "display_name": "Contrast", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "image", "output_node": false}, "SharpnessNode": {"input": {"required": {"image": ["IMAGE"], "factor": ["FLOAT", {"default": 1.0}]}}, "input_order": {"required": ["image", "factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "SharpnessNode", "display_name": "Sharpness", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "image", "output_node": false}, "ColorNode": {"input": {"required": {"image": ["IMAGE"], "factor": ["FLOAT", {"default": 1.0}]}}, "input_order": {"required": ["image", "factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ColorNode", "display_name": "Color", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "image", "output_node": false}, "ConvertRGBNode": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ConvertRGBNode", "display_name": "Convert RGB", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "image", "output_node": false}, "ThresholdNode": {"input": {"required": {"image": ["IMAGE"], "threshold": ["INT", {"default": 128}]}}, "input_order": {"required": ["image", "threshold"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ThresholdNode", "display_name": "Threshold image with value", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "image", "output_node": false}, "LogicGateCompare": {"input": {"required": {"input1": ["*", {"default": 0}], "input2": ["*", {"default": 0}]}}, "input_order": {"required": ["input1", "input2"]}, "output": ["BOOL"], "output_is_list": [false], "output_name": ["BOOL"], "name": "LogicGateCompare", "display_name": "ABiggerThanB", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "LogicGateInvertBasic": {"input": {"required": {"input1": ["*", {"default": 0}]}}, "input_order": {"required": ["input1"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "LogicGateInvertBasic", "display_name": "Invert Basic", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "LogicGateNegateValue": {"input": {"required": {"input1": ["*", {"default": 0}]}}, "input_order": {"required": ["input1"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "LogicGateNegateValue", "display_name": "Negate Value", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "LogicGateBitwiseShift": {"input": {"required": {"input1": ["INT", {"default": 0}], "input2": ["INT", {"default": 0}]}}, "input_order": {"required": ["input1", "input2"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "LogicGateBitwiseShift", "display_name": "Bitwise Shift", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "LogicGateBitwiseAnd": {"input": {"required": {"input1": ["INT", {"default": 0}], "input2": ["INT", {"default": 0}]}}, "input_order": {"required": ["input1", "input2"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "LogicGateBitwiseAnd", "display_name": "Bitwise And", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "LogicGateBitwiseOr": {"input": {"required": {"input1": ["INT", {"default": 0}], "input2": ["INT", {"default": 0}]}}, "input_order": {"required": ["input1", "input2"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "LogicGateBitwiseOr", "display_name": "Bitwise Or", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "LogicGateBitwiseXor": {"input": {"required": {"input1": ["INT", {"default": 0}], "input2": ["INT", {"default": 0}]}}, "input_order": {"required": ["input1", "input2"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "LogicGateBitwiseXor", "display_name": "Bitwise Xor", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "LogicGateBitwiseNot": {"input": {"required": {"input1": ["INT", {"default": 0}]}}, "input_order": {"required": ["input1"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "LogicGateBitwiseNot", "display_name": "Bitwise Not", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "LogicGateCompareString": {"input": {"required": {"regex": ["STRING", {"default": ""}], "input2": ["STRING", {"default": ""}]}}, "input_order": {"required": ["regex", "input2"]}, "output": ["BOOL"], "output_is_list": [false], "output_name": ["BOOL"], "name": "LogicGateCompareString", "display_name": "AContainsB(String)", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "StaticNumberInt": {"input": {"required": {"number": ["INT", {"default": 0}]}}, "input_order": {"required": ["number"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "StaticNumberInt", "display_name": "Static Number Int", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "StaticNumberFloat": {"input": {"required": {"number": ["FLOAT", {"default": 0.0}]}}, "input_order": {"required": ["number"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "StaticNumberFloat", "display_name": "Static Number Float", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "StaticString": {"input": {"required": {"string": ["STRING", {"default": ""}]}}, "input_order": {"required": ["string"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "StaticString", "display_name": "Static String", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "LogicGateAnd": {"input": {"required": {"input1": ["*", {"default": 0.0}], "input2": ["*", {"default": 0.0}]}}, "input_order": {"required": ["input1", "input2"]}, "output": ["BOOL"], "output_is_list": [false], "output_name": ["BOOL"], "name": "LogicGateAnd", "display_name": "AAndBGate", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "LogicGateOr": {"input": {"required": {"input1": ["*", {"default": 0}], "input2": ["*", {"default": 0}]}}, "input_order": {"required": ["input1", "input2"]}, "output": ["BOOL"], "output_is_list": [false], "output_name": ["BOOL"], "name": "LogicGateOr", "display_name": "AOrBGate", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "LogicGateEither": {"input": {"required": {"condition": ["*", {"default": 0}], "input1": ["*", {"default": ""}], "input2": ["*", {"default": ""}]}}, "input_order": {"required": ["condition", "input1", "input2"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "LogicGateEither", "display_name": "ReturnAorBValue", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "AddNode": {"input": {"required": {"input1": ["*", {"default": 0}], "input2": ["*", {"default": 0}]}}, "input_order": {"required": ["input1", "input2"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "AddNode", "display_name": "Add Values", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "MergeString": {"input": {"required": {"input1": ["*", {"default": ""}], "input2": ["*", {"default": ""}]}}, "input_order": {"required": ["input1", "input2"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "MergeString", "display_name": "Merge String", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "ReplaceString": {"input": {"required": {"String": ["STRING", {"default": ""}], "Regex": ["STRING", {"default": ""}], "ReplaceWith": ["STRING", {"default": ""}]}}, "input_order": {"required": ["String", "Regex", "ReplaceWith"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "ReplaceString", "display_name": "Replace String", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "MemoryNode": {"input": {"required": {"input1": ["*", {"default": ""}], "flag": ["*", {"default": 0}]}}, "input_order": {"required": ["input1", "flag"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "MemoryNode", "display_name": "Memory String", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "UniformRandomFloat": {"input": {"required": {"min_val": ["FLOAT", {"default": 0.0, "min": -999999999, "max": 999999999.0, "step": 0.02, "display": "number"}], "max_val": ["FLOAT", {"default": 1.0, "min": -999999999, "max": 999999999.0, "step": 0.02, "display": "number"}], "decimal_places": ["INT", {"default": 1, "min": 0, "max": 10, "step": 1, "display": "number"}], "seed": ["INT", {"default": 0, "min": 0, "max": 9999999999, "step": 1, "display": "number"}]}}, "input_order": {"required": ["min_val", "max_val", "decimal_places", "seed"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "UniformRandomFloat", "display_name": "Uniform Random Float", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "UniformRandomInt": {"input": {"required": {"min_val": ["INT", {"default": 0, "min": -999999999, "max": 999999999, "step": 1, "display": "number"}], "max_val": ["INT", {"default": 1, "min": -999999999, "max": 999999999, "step": 1, "display": "number"}], "seed": ["INT", {"default": 0, "min": 0, "max": 9999999999, "step": 1, "display": "number"}]}}, "input_order": {"required": ["min_val", "max_val", "seed"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "UniformRandomInt", "display_name": "Uniform Random Int", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "UniformRandomChoice": {"input": {"required": {"input_string": ["STRING", {"default": "a$b$c", "display": "text"}], "separator": ["STRING", {"default": "$", "display": "text"}], "seed": ["INT", {"default": 0, "min": 0, "max": 9999999999, "step": 1, "display": "number"}]}}, "input_order": {"required": ["input_string", "separator", "seed"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "UniformRandomChoice", "display_name": "Uniform Random Choice", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "ManualChoiceString": {"input": {"required": {"input_string": ["STRING", {"default": "a$b$c", "display": "text"}], "separator": ["STRING", {"default": "$", "display": "text"}], "index": ["INT", {"default": 0, "min": 0, "max": 9999999999, "step": 1, "display": "number"}]}}, "input_order": {"required": ["input_string", "separator", "index"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "ManualChoiceString", "display_name": "Manual Choice String", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "ManualChoiceInt": {"input": {"required": {"input_string": ["STRING", {"default": "1$2$3", "display": "text"}], "separator": ["STRING", {"default": "$", "display": "text"}], "index": ["INT", {"default": 0, "min": 0, "max": 9999999999, "step": 1, "display": "number"}]}}, "input_order": {"required": ["input_string", "separator", "index"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "ManualChoiceInt", "display_name": "Manual Choice Int", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "ManualChoiceFloat": {"input": {"required": {"input_string": ["STRING", {"default": "1.0$2.0$3.0", "display": "text"}], "separator": ["STRING", {"default": "$", "display": "text"}], "index": ["INT", {"default": 0, "min": 0, "max": 9999999999, "step": 1, "display": "number"}]}}, "input_order": {"required": ["input_string", "separator", "index"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "ManualChoiceFloat", "display_name": "Manual Choice Float", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "RandomShuffleInt": {"input": {"required": {"input_string": ["STRING", {"default": "1$2$3", "display": "text"}], "separator": ["STRING", {"default": "$", "display": "text"}], "seed": ["INT", {"default": 0, "min": 0, "max": 9999999999, "step": 1, "display": "number"}]}}, "input_order": {"required": ["input_string", "separator", "seed"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "RandomShuffleInt", "display_name": "Random Shuffle Int", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "RandomShuffleFloat": {"input": {"required": {"input_string": ["STRING", {"default": "1.0$2.0$3.0", "display": "text"}], "separator": ["STRING", {"default": "$", "display": "text"}], "seed": ["INT", {"default": 0, "min": 0, "max": 9999999999, "step": 1, "display": "number"}]}}, "input_order": {"required": ["input_string", "separator", "seed"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "RandomShuffleFloat", "display_name": "Random Shuffle Float", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "RandomShuffleString": {"input": {"required": {"input_string": ["STRING", {"default": "a$b$c", "display": "text"}], "separator": ["STRING", {"default": "$", "display": "text"}], "seed": ["INT", {"default": 0, "min": 0, "max": 9999999999, "step": 1, "display": "number"}]}}, "input_order": {"required": ["input_string", "separator", "seed"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "RandomShuffleString", "display_name": "Random Shuffle String", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "YieldableIteratorString": {"input": {"required": {"input_string": ["STRING", {"default": "a$b$c", "display": "text"}], "separator": ["STRING", {"default": "$", "display": "text"}], "reset": ["INT", {"default": 0, "min": 0, "max": 1, "step": 1, "display": "number"}]}}, "input_order": {"required": ["input_string", "separator", "reset"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "YieldableIteratorString", "display_name": "Yieldable Iterator String", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "YieldableIteratorInt": {"input": {"required": {"start": ["INT", {"default": 0, "min": 0, "max": 9999999999, "step": 1, "display": "number"}], "end": ["INT", {"default": 10, "min": 0, "max": 9999999999, "step": 1, "display": "number"}], "step": ["INT", {"default": 1, "min": 0, "max": 9999999999, "step": 1, "display": "number"}], "reset": ["INT", {"default": 0, "min": 0, "max": 1, "step": 1, "display": "number"}]}}, "input_order": {"required": ["start", "end", "step", "reset"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "YieldableIteratorInt", "display_name": "Yieldable (Sequential) Iterator Int", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "StringListToCombo": {"input": {"required": {"string": ["STRING", {"default": ""}], "separator": ["STRING", {"default": "$"}]}, "optional": {"index": ["INT", {"default": 0}]}}, "input_order": {"required": ["string", "separator"], "optional": ["index"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "StringListToCombo", "display_name": "String List to Combo", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "ConvertComboToString": {"input": {"required": {"combo": ["*", {"default": []}], "separator": ["STRING", {"default": "$"}]}}, "input_order": {"required": ["combo", "separator"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "ConvertComboToString", "display_name": "Convert Combo to String", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Logic Gates", "output_node": false}, "ConvertAny2Int": {"input": {"required": {"input1": ["*", {"default": 0.0}]}}, "input_order": {"required": ["input1"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "ConvertAny2Int", "display_name": "Convert to Int", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Conversion", "output_node": false}, "ConvertAny2Float": {"input": {"required": {"input1": ["*", {"default": 0.0}]}}, "input_order": {"required": ["input1"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "ConvertAny2Float", "display_name": "Convert to Float", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Conversion", "output_node": false}, "ConvertAny2Bool": {"input": {"required": {"input1": ["*", {"default": 0.0}]}}, "input_order": {"required": ["input1"]}, "output": ["BOOL"], "output_is_list": [false], "output_name": ["BOOL"], "name": "ConvertAny2Bool", "display_name": "Convert to Bool", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Conversion", "output_node": false}, "ConvertAny2String": {"input": {"required": {"input1": ["*", {"default": 0.0}]}}, "input_order": {"required": ["input1"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "ConvertAny2String", "display_name": "Convert to String", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Conversion", "output_node": false}, "MinNode": {"input": {"required": {"input1": ["*"], "input2": ["*"]}}, "input_order": {"required": ["input1", "input2"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "MinNode", "display_name": "Min", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Math", "output_node": false}, "MaxNode": {"input": {"required": {"input1": ["*"], "input2": ["*"]}}, "input_order": {"required": ["input1", "input2"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "MaxNode", "display_name": "Max", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Math", "output_node": false}, "RoundNode": {"input": {"required": {"input1": ["*"]}}, "input_order": {"required": ["input1"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "RoundNode", "display_name": "Round", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Math", "output_node": false}, "AbsNode": {"input": {"required": {"input1": ["*"]}}, "input_order": {"required": ["input1"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "AbsNode", "display_name": "Abs", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Math", "output_node": false}, "FloorNode": {"input": {"required": {"input1": ["*"]}}, "input_order": {"required": ["input1"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "FloorNode", "display_name": "Floor", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Math", "output_node": false}, "CeilNode": {"input": {"required": {"input1": ["*"]}}, "input_order": {"required": ["input1"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "CeilNode", "display_name": "Ceil", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Math", "output_node": false}, "PowerNode": {"input": {"required": {"input1": ["*"], "power": ["*"]}}, "input_order": {"required": ["input1", "power"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "PowerNode", "display_name": "Power", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Math", "output_node": false}, "LogNode": {"input": {"required": {"input1": ["FLOAT"], "base": ["FLOAT"]}}, "input_order": {"required": ["input1", "base"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "LogNode", "display_name": "Log", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Math", "output_node": false}, "MultiplyNode": {"input": {"required": {"input1": ["*"], "input2": ["*"]}}, "input_order": {"required": ["input1", "input2"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "MultiplyNode", "display_name": "Multiply", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Math", "output_node": false}, "DivideNode": {"input": {"required": {"input1": ["*"], "input2": ["*"]}}, "input_order": {"required": ["input1", "input2"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "DivideNode", "display_name": "Divide", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "Math", "output_node": false}, "SDWebuiAPINode": {"input": {"required": {"prompt": ["STRING", {"default": ""}], "api_endpoint": ["STRING", {"default": ""}]}, "optional": {"auth": ["STRING", {"default": ""}], "seed": ["INT", {"default": -1}], "negative_prompt": ["STRING", {"default": ""}], "steps": ["INT", {"default": 28}], "width": ["INT", {"default": 1024}], "height": ["INT", {"default": 1024}], "hr_scale": ["FLOAT", {"default": 1.5}], "hr_upscale": ["STRING", {"default": "Latent"}], "enable_hr": ["BOOL", {"default": false}], "cfg_scale": ["INT", {"default": 7}]}}, "input_order": {"required": ["prompt", "api_endpoint"], "optional": ["auth", "seed", "negative_prompt", "steps", "width", "height", "hr_scale", "hr_upscale", "enable_hr", "cfg_scale"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "SDWebuiAPINode", "display_name": "Get Image From Prompt", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "WebUI API", "output_node": false}, "SDWebuiAPIFallbackNode": {"input": {"required": {"prompt": ["STRING", {"default": ""}], "api_endpoint": ["STRING", {"default": ""}]}, "optional": {"auth": ["STRING", {"default": ""}], "seed": ["INT", {"default": -1}], "negative_prompt": ["STRING", {"default": ""}], "steps": ["INT", {"default": 28}], "width": ["INT", {"default": 1024}], "height": ["INT", {"default": 1024}], "hr_scale": ["FLOAT", {"default": 1.5}], "hr_upscale": ["STRING", {"default": "Latent"}], "enable_hr": ["BOOL", {"default": false}], "cfg_scale": ["INT", {"default": 7}]}}, "input_order": {"required": ["prompt", "api_endpoint"], "optional": ["auth", "seed", "negative_prompt", "steps", "width", "height", "hr_scale", "hr_upscale", "enable_hr", "cfg_scale"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "SDWebuiAPIFallbackNode", "display_name": "Get Image From Prompt (Fallback)", "description": "", "python_module": "custom_nodes.ComfyUI-LogicUtils", "category": "WebUI API", "output_node": false}, "Compare-\ud83d\udd2c": {"input": {"required": {"a": ["*", {"default": 0}], "b": ["*", {"default": 0}], "comparison": [["a == b", "a != b", "a < b", "a > b", "a <= b", "a >= b"], {"default": "a == b"}]}}, "input_order": {"required": ["a", "b", "comparison"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Compare-\ud83d\udd2c", "display_name": "Compare", "description": "", "python_module": "custom_nodes.ComfyUI-Logic", "category": "Logic", "output_node": false}, "Int-\ud83d\udd2c": {"input": {"required": {"value": ["INT", {"default": 0}]}}, "input_order": {"required": ["value"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "Int-\ud83d\udd2c", "display_name": "Int", "description": "", "python_module": "custom_nodes.ComfyUI-Logic", "category": "Logic", "output_node": false}, "Float-\ud83d\udd2c": {"input": {"required": {"value": ["FLOAT", {"default": 0, "step": 0.01}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "Float-\ud83d\udd2c", "display_name": "Float", "description": "", "python_module": "custom_nodes.ComfyUI-Logic", "category": "Logic", "output_node": false}, "Bool-\ud83d\udd2c": {"input": {"required": {"value": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["value"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Bool-\ud83d\udd2c", "display_name": "Bool", "description": "", "python_module": "custom_nodes.ComfyUI-Logic", "category": "Logic", "output_node": false}, "String-\ud83d\udd2c": {"input": {"required": {"value": ["STRING", {"default": "", "multiline": true}]}}, "input_order": {"required": ["value"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "String-\ud83d\udd2c", "display_name": "String", "description": "", "python_module": "custom_nodes.ComfyUI-Logic", "category": "Logic", "output_node": false}, "If ANY return A else B-\ud83d\udd2c": {"input": {"required": {"ANY": ["*"], "IF_TRUE": ["*"], "IF_FALSE": ["*"]}}, "input_order": {"required": ["ANY", "IF_TRUE", "IF_FALSE"]}, "output": ["*"], "output_is_list": [false], "output_name": ["?"], "name": "If ANY return A else B-\ud83d\udd2c", "display_name": "If ANY return A else B", "description": "", "python_module": "custom_nodes.ComfyUI-Logic", "category": "Logic", "output_node": false, "output_tooltips": ["Based on the value of ANY, either IF_TRUE or IF_FALSE will be returned."]}, "DebugPrint-\ud83d\udd2c": {"input": {"required": {"ANY": ["{}"]}}, "input_order": {"required": ["ANY"]}, "output": [], "output_is_list": [], "output_name": [], "name": "DebugPrint-\ud83d\udd2c", "display_name": "DebugPrint", "description": "", "python_module": "custom_nodes.ComfyUI-Logic", "category": "Logic", "output_node": true}, "CRMPreprocessForPoser": {"input": {"required": {"reference_image": ["IMAGE"], "reference_mask": ["MASK"], "foreground_ratio": ["FLOAT", {"default": 1, "min": 0.5, "max": 1, "step": 0.1}]}}, "input_order": {"required": ["reference_image", "reference_mask", "foreground_ratio"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["processed"], "name": "CRMPreprocessForPoser", "display_name": "CRM Preprocessor For Poser", "description": "", "python_module": "custom_nodes.ComfyUI-Flowty-CRM", "category": "Flowty CRM", "output_node": false}, "CCMSampler": {"input": {"required": {"ccm_model": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "config": ["CRM_POSE_CONFIG"], "poses": ["IMAGE"]}}, "input_order": {"required": ["ccm_model", "config", "poses"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CCMSampler", "display_name": "CCM Sampler", "description": "", "python_module": "custom_nodes.ComfyUI-Flowty-CRM", "category": "Flowty CRM", "output_node": false}, "CRMPoseSampler": {"input": {"required": {"pixel_model": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "config": ["CRM_POSE_CONFIG"]}}, "input_order": {"required": ["pixel_model", "config"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CRMPoseSampler", "display_name": "CRM Pose Sampler", "description": "", "python_module": "custom_nodes.ComfyUI-Flowty-CRM", "category": "Flowty CRM", "output_node": false}, "CRMPoserConfig": {"input": {"required": {"processed_image": ["IMAGE"], "seed": ["INT", {"default": 1234, "min": 0, "max": 18446744073709551615}], "cfg": ["FLOAT", {"default": 5.5, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "steps": ["INT", {"default": 30, "min": 6, "max": 10000}]}}, "input_order": {"required": ["processed_image", "seed", "cfg", "steps"]}, "output": ["CRM_POSE_CONFIG"], "output_is_list": [false], "output_name": ["CRM_POSE_CONFIG"], "name": "CRMPoserConfig", "display_name": "CRM PoserConfig", "description": "", "python_module": "custom_nodes.ComfyUI-Flowty-CRM", "category": "Flowty CRM", "output_node": false}, "CRMModelLoader": {"input": {"required": {"crm_model": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]]}}, "input_order": {"required": ["crm_model"]}, "output": ["CRM_MODEL"], "output_is_list": [false], "output_name": ["CRM_MODEL"], "name": "CRMModelLoader", "display_name": "CRM Model Loader", "description": "", "python_module": "custom_nodes.ComfyUI-Flowty-CRM", "category": "Flowty CRM", "output_node": false}, "CRMModeler": {"input": {"required": {"crm_model": ["CRM_MODEL"], "poses": ["IMAGE"], "coordinates": ["IMAGE"]}}, "input_order": {"required": ["crm_model", "poses", "coordinates"]}, "output": ["MESH"], "output_is_list": [false], "output_name": ["MESH"], "name": "CRMModeler", "display_name": "CRM Modeler", "description": "", "python_module": "custom_nodes.ComfyUI-Flowty-CRM", "category": "Flowty CRM", "output_node": false}, "CRMModelerCuda": {"input": {"required": {"crm_model": ["CRM_MODEL"], "poses": ["IMAGE"], "coordinates": ["IMAGE"]}}, "input_order": {"required": ["crm_model", "poses", "coordinates"]}, "output": ["MESH"], "output_is_list": [false], "output_name": ["MESH"], "name": "CRMModelerCuda", "display_name": "CRM Modeler (Cuda only)", "description": "", "python_module": "custom_nodes.ComfyUI-Flowty-CRM", "category": "Flowty CRM", "output_node": false}, "CRMViewer": {"input": {"required": {"mesh": ["MESH"]}}, "input_order": {"required": ["mesh"]}, "output": [], "output_is_list": [], "output_name": [], "name": "CRMViewer", "display_name": "CRM Viewer", "description": "", "python_module": "custom_nodes.ComfyUI-Flowty-CRM", "category": "Flowty CRM", "output_node": true}, "InstantIDModelLoader": {"input": {"required": {"instantid_file": [[]]}}, "input_order": {"required": ["instantid_file"]}, "output": ["INSTANTID"], "output_is_list": [false], "output_name": ["INSTANTID"], "name": "InstantIDModelLoader", "display_name": "Load InstantID Model", "description": "", "python_module": "custom_nodes.ComfyUI_InstantID", "category": "InstantID", "output_node": false}, "InstantIDFaceAnalysis": {"input": {"required": {"provider": [["CPU", "CUDA", "ROCM", "CoreML"]]}}, "input_order": {"required": ["provider"]}, "output": ["FACEANALYSIS"], "output_is_list": [false], "output_name": ["FACEANALYSIS"], "name": "InstantIDFaceAnalysis", "display_name": "InstantID Face Analysis", "description": "", "python_module": "custom_nodes.ComfyUI_InstantID", "category": "InstantID", "output_node": false}, "ApplyInstantID": {"input": {"required": {"instantid": ["INSTANTID"], "insightface": ["FACEANALYSIS"], "control_net": ["CONTROL_NET"], "image": ["IMAGE"], "model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "weight": ["FLOAT", {"default": 0.8, "min": 0.0, "max": 5.0, "step": 0.01}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"image_kps": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["instantid", "insightface", "control_net", "image", "model", "positive", "negative", "weight", "start_at", "end_at"], "optional": ["image_kps", "mask"]}, "output": ["MODEL", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "positive", "negative"], "name": "ApplyInstantID", "display_name": "Apply InstantID", "description": "", "python_module": "custom_nodes.ComfyUI_InstantID", "category": "InstantID", "output_node": false}, "ApplyInstantIDAdvanced": {"input": {"required": {"instantid": ["INSTANTID"], "insightface": ["FACEANALYSIS"], "control_net": ["CONTROL_NET"], "image": ["IMAGE"], "model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "ip_weight": ["FLOAT", {"default": 0.8, "min": 0.0, "max": 3.0, "step": 0.01}], "cn_strength": ["FLOAT", {"default": 0.8, "min": 0.0, "max": 10.0, "step": 0.01}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "noise": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.1}], "combine_embeds": [["average", "norm average", "concat"], {"default": "average"}]}, "optional": {"image_kps": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["instantid", "insightface", "control_net", "image", "model", "positive", "negative", "ip_weight", "cn_strength", "start_at", "end_at", "noise", "combine_embeds"], "optional": ["image_kps", "mask"]}, "output": ["MODEL", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "positive", "negative"], "name": "ApplyInstantIDAdvanced", "display_name": "Apply InstantID Advanced", "description": "", "python_module": "custom_nodes.ComfyUI_InstantID", "category": "InstantID", "output_node": false}, "FaceKeypointsPreprocessor": {"input": {"required": {"faceanalysis": ["FACEANALYSIS"], "image": ["IMAGE"]}}, "input_order": {"required": ["faceanalysis", "image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "FaceKeypointsPreprocessor", "display_name": "Face Keypoints Preprocessor", "description": "", "python_module": "custom_nodes.ComfyUI_InstantID", "category": "InstantID", "output_node": false}, "InstantIDAttentionPatch": {"input": {"required": {"instantid": ["INSTANTID"], "insightface": ["FACEANALYSIS"], "image": ["IMAGE"], "model": ["MODEL"], "weight": ["FLOAT", {"default": 1.0, "min": -1.0, "max": 3.0, "step": 0.01}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "noise": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.1}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["instantid", "insightface", "image", "model", "weight", "start_at", "end_at", "noise"], "optional": ["mask"]}, "output": ["MODEL", "FACE_EMBEDS"], "output_is_list": [false, false], "output_name": ["MODEL", "FACE_EMBEDS"], "name": "InstantIDAttentionPatch", "display_name": "InstantID Patch Attention", "description": "", "python_module": "custom_nodes.ComfyUI_InstantID", "category": "InstantID", "output_node": false}, "ApplyInstantIDControlNet": {"input": {"required": {"face_embeds": ["FACE_EMBEDS"], "control_net": ["CONTROL_NET"], "image_kps": ["IMAGE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["face_embeds", "control_net", "image_kps", "positive", "negative", "strength", "start_at", "end_at"], "optional": ["mask"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "ApplyInstantIDControlNet", "display_name": "InstantID Apply ControlNet", "description": "", "python_module": "custom_nodes.ComfyUI_InstantID", "category": "InstantID", "output_node": false}, "BatchCreativeInterpolation": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "images": ["IMAGE"], "model": ["MODEL"], "ipadapter": ["IPADAPTER"], "clip_vision": ["CLIP_VISION"], "type_of_frame_distribution": [["linear", "dynamic"]], "linear_frame_distribution_value": ["INT", {"default": 16, "min": 4, "max": 64, "step": 1}], "dynamic_frame_distribution_values": ["STRING", {"multiline": true, "default": "0,10,26,40"}], "type_of_key_frame_influence": [["linear", "dynamic"]], "linear_key_frame_influence_value": ["STRING", {"multiline": false, "default": "(1.0,1.0)"}], "dynamic_key_frame_influence_values": ["STRING", {"multiline": true, "default": "(1.0,1.0),(1.0,1.5)(1.0,0.5)"}], "type_of_strength_distribution": [["linear", "dynamic"]], "linear_strength_value": ["STRING", {"multiline": false, "default": "(0.3,0.4)"}], "dynamic_strength_values": ["STRING", {"multiline": true, "default": "(0.0,1.0),(0.0,1.0),(0.0,1.0),(0.0,1.0)"}], "buffer": ["INT", {"default": 4, "min": 1, "max": 16, "step": 1}], "high_detail_mode": ["BOOLEAN", {"default": true}]}, "optional": {"base_ipa_advanced_settings": ["ADVANCED_IPA_SETTINGS"], "detail_ipa_advanced_settings": ["ADVANCED_IPA_SETTINGS"]}}, "input_order": {"required": ["positive", "negative", "images", "model", "ipadapter", "clip_vision", "type_of_frame_distribution", "linear_frame_distribution_value", "dynamic_frame_distribution_values", "type_of_key_frame_influence", "linear_key_frame_influence_value", "dynamic_key_frame_influence_values", "type_of_strength_distribution", "linear_strength_value", "dynamic_strength_values", "buffer", "high_detail_mode"], "optional": ["base_ipa_advanced_settings", "detail_ipa_advanced_settings"]}, "output": ["IMAGE", "CONDITIONING", "CONDITIONING", "MODEL", "STRING", "INT", "INT", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["GRAPH", "POSITIVE", "NEGATIVE", "MODEL", "KEYFRAME_POSITIONS", "BATCH_SIZE", "BUFFER", "FRAMES_TO_DROP"], "name": "BatchCreativeInterpolation", "display_name": "Batch Creative Interpolation \ud83c\udf9e\ufe0f\ud83c\udd62\ud83c\udd5c", "description": "", "python_module": "custom_nodes.steerable-motion", "category": "Steerable-Motion", "output_node": false}, "IpaConfiguration": {"input": {"required": {"ipa_starts_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "ipa_ends_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "ipa_weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle"]], "ipa_weight": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 0.01}], "ipa_embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]], "ipa_noise_strength": ["FLOAT", {"default": 0.3, "min": 0.0, "max": 1.0, "step": 0.01}], "use_image_for_noise": ["BOOLEAN", {"default": false}], "type_of_noise": [["fade", "dissolve", "gaussian", "shuffle"]], "noise_blur": ["INT", {"default": 0, "min": 0, "max": 32, "step": 1}]}, "optional": {}}, "input_order": {"required": ["ipa_starts_at", "ipa_ends_at", "ipa_weight_type", "ipa_weight", "ipa_embeds_scaling", "ipa_noise_strength", "use_image_for_noise", "type_of_noise", "noise_blur"], "optional": []}, "output": ["ADVANCED_IPA_SETTINGS"], "output_is_list": [false], "output_name": ["configuration"], "name": "IpaConfiguration", "display_name": "IPA Configuration  \ud83c\udf9e\ufe0f\ud83c\udd62\ud83c\udd5c", "description": "", "python_module": "custom_nodes.steerable-motion", "category": "Steerable-Motion", "output_node": false}, "RemoveAndInterpolateFrames": {"input": {"required": {"images": ["IMAGE"], "frames_to_drop": ["STRING", {"multiline": true, "default": "[8, 16, 24]"}]}, "optional": {}}, "input_order": {"required": ["images", "frames_to_drop"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "RemoveAndInterpolateFrames", "display_name": "Remove and Interpolate Frames \ud83c\udf9e\ufe0f\ud83c\udd62\ud83c\udd5c", "description": "", "python_module": "custom_nodes.steerable-motion", "category": "Steerable-Motion", "output_node": false}, "gcLatentTunnel": {"input": {"required": {"samples": ["LATENT"]}}, "input_order": {"required": ["samples"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "gcLatentTunnel", "display_name": "LatentGarbageCollector", "description": "", "python_module": "custom_nodes.gcLatentTunnel", "category": "latent", "output_node": false}, "FluxLoraLoader": {"input": {"required": {"model": ["MODEL"], "lora_name": [["art_nouveau_flux_lora_v1.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "lora_name", "strength_model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "FluxLoraLoader", "display_name": "Load Flux LoRA", "description": "", "python_module": "custom_nodes.x-flux-comfyui", "category": "XLabsNodes", "output_node": false}, "LoadFluxControlNet": {"input": {"required": {"model_name": [["flux-dev", "flux-dev-fp8", "flux-schnell"]], "controlnet_path": [["flux-canny-controlnet_v2.safetensors", "flux-depth-controlnet_v2.safetensors", "flux-hed-controlnet-v3.safetensors", "flux-hed-controlnet.safetensors"]]}}, "input_order": {"required": ["model_name", "controlnet_path"]}, "output": ["FluxControlNet"], "output_is_list": [false], "output_name": ["ControlNet"], "name": "LoadFluxControlNet", "display_name": "Load Flux ControlNet", "description": "", "python_module": "custom_nodes.x-flux-comfyui", "category": "XLabsNodes", "output_node": false}, "ApplyFluxControlNet": {"input": {"required": {"controlnet": ["FluxControlNet"], "image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}, "optional": {"controlnet_condition": ["ControlNetCondition", {"default": null}]}}, "input_order": {"required": ["controlnet", "image", "strength"], "optional": ["controlnet_condition"]}, "output": ["ControlNetCondition"], "output_is_list": [false], "output_name": ["controlnet_condition"], "name": "ApplyFluxControlNet", "display_name": "Apply Flux ControlNet", "description": "", "python_module": "custom_nodes.x-flux-comfyui", "category": "XLabsNodes", "output_node": false}, "ApplyAdvancedFluxControlNet": {"input": {"required": {"controlnet": ["FluxControlNet"], "image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "end": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"controlnet_condition": ["ControlNetCondition", {"default": null}]}}, "input_order": {"required": ["controlnet", "image", "strength", "start", "end"], "optional": ["controlnet_condition"]}, "output": ["ControlNetCondition"], "output_is_list": [false], "output_name": ["controlnet_condition"], "name": "ApplyAdvancedFluxControlNet", "display_name": "Apply Advanced Flux ControlNet", "description": "", "python_module": "custom_nodes.x-flux-comfyui", "category": "XLabsNodes", "output_node": false}, "XlabsSampler": {"input": {"required": {"model": ["MODEL"], "conditioning": ["CONDITIONING"], "neg_conditioning": ["CONDITIONING"], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 100}], "timestep_to_start_cfg": ["INT", {"default": 20, "min": 0, "max": 100}], "true_gs": ["FLOAT", {"default": 3, "min": 0, "max": 100}], "image_to_image_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "denoise_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"latent_image": ["LATENT", {"default": null}], "controlnet_condition": ["ControlNetCondition", {"default": null}]}}, "input_order": {"required": ["model", "conditioning", "neg_conditioning", "noise_seed", "steps", "timestep_to_start_cfg", "true_gs", "image_to_image_strength", "denoise_strength"], "optional": ["latent_image", "controlnet_condition"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "XlabsSampler", "display_name": "Xlabs Sampler", "description": "", "python_module": "custom_nodes.x-flux-comfyui", "category": "XLabsNodes", "output_node": false}, "ApplyFluxIPAdapter": {"input": {"required": {"model": ["MODEL"], "ip_adapter_flux": ["IP_ADAPTER_FLUX"], "image": ["IMAGE"], "strength_model": ["FLOAT", {"default": 0.6, "min": -100.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "ip_adapter_flux", "image", "strength_model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ApplyFluxIPAdapter", "display_name": "Apply Flux IPAdapter", "description": "", "python_module": "custom_nodes.x-flux-comfyui", "category": "XLabsNodes", "output_node": false}, "LoadFluxIPAdapter": {"input": {"required": {"ipadatper": [["flux-ip-adapter.safetensors"]], "clip_vision": [["CLIP-ViT-H-14-laion2B-s32B-b79K.safetensors", "CLIP-ViT-bigG-14-laion2B-39B-b160k.safetensors", "SD1.5/pytorch_model.bin", "sdxl_clip.safetensors"]], "provider": [["CPU", "GPU"]]}}, "input_order": {"required": ["ipadatper", "clip_vision", "provider"]}, "output": ["IP_ADAPTER_FLUX"], "output_is_list": [false], "output_name": ["ipadapterFlux"], "name": "LoadFluxIPAdapter", "display_name": "Load Flux IPAdatpter", "description": "", "python_module": "custom_nodes.x-flux-comfyui", "category": "XLabsNodes", "output_node": false}, "ApplyAdvancedFluxIPAdapter": {"input": {"required": {"model": ["MODEL"], "ip_adapter_flux": ["IP_ADAPTER_FLUX"], "image": ["IMAGE"], "begin_strength": ["FLOAT", {"default": 0.0, "min": -100.0, "max": 100.0, "step": 0.01}], "end_strength": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}], "smothing_type": [["Linear", "First half", "Second half", "Sigmoid"]]}}, "input_order": {"required": ["model", "ip_adapter_flux", "image", "begin_strength", "end_strength", "smothing_type"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ApplyAdvancedFluxIPAdapter", "display_name": "Apply Advanced Flux IPAdapter", "description": "", "python_module": "custom_nodes.x-flux-comfyui", "category": "XLabsNodes", "output_node": false}, "AppInfo": {"input": {"required": {"name": ["STRING", {"multiline": false, "default": "Mixlab-App", "dynamicPrompts": false}], "input_ids": ["STRING", {"multiline": true, "default": "1\n2\n3", "dynamicPrompts": false}], "output_ids": ["STRING", {"multiline": true, "default": "5\n9", "dynamicPrompts": false}]}, "optional": {"image": ["IMAGE"], "description": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": false}], "version": ["INT", {"default": 1, "min": 1, "max": 10000, "step": 1, "display": "number"}], "share_prefix": ["STRING", {"multiline": false, "default": "", "dynamicPrompts": false}], "link": ["STRING", {"multiline": false, "default": "https://", "dynamicPrompts": false}], "category": ["STRING", {"multiline": false, "default": "", "dynamicPrompts": false}], "auto_save": [["enable", "disable"]], "idle_animation": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["name", "input_ids", "output_ids"], "optional": ["image", "description", "version", "share_prefix", "link", "category", "auto_save", "idle_animation"]}, "output": [], "output_is_list": [], "output_name": [], "name": "AppInfo", "display_name": "App Info \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab", "output_node": true}, "TESTNODE_": {"input": {"required": {"ANY": ["*"]}}, "input_order": {"required": ["ANY"]}, "output": ["*"], "output_is_list": [true], "output_name": ["*"], "name": "TESTNODE_", "display_name": "TESTNODE_ \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Test", "output_node": true}, "TESTNODE_TOKEN": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "clip": ["CLIP"]}}, "input_order": {"required": ["text", "clip"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "TESTNODE_TOKEN", "display_name": "TESTNODE_TOKEN \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Test", "output_node": true}, "RandomPrompt": {"input": {"required": {"max_count": ["INT", {"default": 9, "min": 1, "max": 1000}], "mutable_prompt": ["STRING", {"multiline": true, "default": "Swing\nSlide\nClimbing frame\nSandbox\nSee-saw\nMerry-go-round\nJungle gym\nTrampoline\nMonkey bars\nRocking horse\nPlayhouse\nHopscotch\nBalance beam\nSpring rider\nWater play area\nBall pit\nTunnel\nZip line\nBasketball hoop\nBicycle rack\nSpinner\nClimbing wall\nRope ladder\nTetherball\nFlying fox\nSwinging bridge\nSpiral slide\nWater sprinkler\nPedal go-kart\nMiniature golf course"}], "immutable_prompt": ["STRING", {"multiline": true, "default": "sticker, Cartoon, ``"}], "random_sample": [["enable", "disable"]]}, "optional": {"seed": ["*", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["max_count", "mutable_prompt", "immutable_prompt", "random_sample"], "optional": ["seed"]}, "output": ["STRING"], "output_is_list": [true], "output_name": ["STRING"], "name": "RandomPrompt", "display_name": "Random Prompt \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Prompt", "output_node": true}, "EmbeddingPrompt": {"input": {"required": {"embedding": [[]], "weight": ["FLOAT", {"default": 1, "min": -2, "max": 2, "step": 0.01, "display": "slider"}]}}, "input_order": {"required": ["embedding", "weight"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "EmbeddingPrompt", "display_name": "Embedding Prompt \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Prompt", "output_node": false}, "PromptSlide": {"input": {"required": {"prompt_keyword": ["STRING", {"multiline": false, "default": "", "dynamicPrompts": false}], "weight": ["FLOAT", {"default": 1, "min": -3, "max": 3, "step": 0.01, "display": "slider"}]}}, "input_order": {"required": ["prompt_keyword", "weight"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["prompt"], "name": "PromptSlide", "display_name": "Prompt Slide \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Prompt", "output_node": false}, "GLIGENTextBoxApply_Advanced": {"input": {"required": {"conditioning": ["CONDITIONING"], "clip": ["CLIP"], "gligen_textbox_model": ["GLIGEN"], "grids": ["_GRID"], "labels": ["STRING", {"multiline": true, "default": "", "forceInput": true}], "index": ["INT", {"default": -1, "min": -1, "max": 300, "step": 1}], "max_size": ["INT", {"default": 8, "min": 1, "max": 300, "step": 1}], "random_shuffle": [["on", "off"]]}, "optional": {"seed": ["*", {"default": 0, "min": 0, "max": 18446744073709551615, "step": 1}]}}, "input_order": {"required": ["conditioning", "clip", "gligen_textbox_model", "grids", "labels", "index", "max_size", "random_shuffle"], "optional": ["seed"]}, "output": ["CONDITIONING", "STRING"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "label"], "name": "GLIGENTextBoxApply_Advanced", "display_name": "GLIGEN TextBox Apply \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Prompt", "output_node": false}, "PromptSimplification": {"input": {"required": {"prompt": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": false}], "length": ["INT", {"default": 5, "min": 1, "max": 100, "step": 1, "display": "number"}]}}, "input_order": {"required": ["prompt", "length"]}, "output": ["STRING"], "output_is_list": [true], "output_name": ["prompts"], "name": "PromptSimplification", "display_name": "PromptSimplification \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Prompt", "output_node": true}, "GridInput": {"input": {"required": {"grids": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": false}], "padding": ["INT", {"default": 24, "min": -500, "max": 5000, "step": 1, "display": "number"}]}, "optional": {"width": ["INT", {"forceInput": true}], "height": ["INT", {"forceInput": true}]}}, "input_order": {"required": ["grids", "padding"], "optional": ["width", "height"]}, "output": ["_GRID", "STRING", "IMAGE"], "output_is_list": [true, true, false], "output_name": ["grids", "labels", "image"], "name": "GridInput", "display_name": "Grid Input \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Input", "output_node": true}, "ImagesPrompt_": {"input": {"required": {"image_base64": ["STRING", {"multiline": false, "default": "", "dynamicPrompts": false}], "text": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": true}]}}, "input_order": {"required": ["image_base64", "text"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "text"], "name": "ImagesPrompt_", "display_name": "Images Input \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Input", "output_node": false}, "KeyInput": {"input": {"required": {"key": ["KEY"]}}, "input_order": {"required": ["key"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["key"], "name": "KeyInput", "display_name": "API Key Input \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Input", "output_node": false}, "FloatSlider": {"input": {"required": {"number": ["FLOAT", {"default": 0, "min": 0, "max": 18446744073709551615, "step": 0.001, "display": "slider"}], "min_value": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 0.001, "display": "number"}], "max_value": ["FLOAT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615, "step": 0.001, "display": "number"}], "step": ["FLOAT", {"default": 0.001, "min": -18446744073709551615, "max": 18446744073709551615, "step": 0.001, "display": "number"}]}}, "input_order": {"required": ["number", "min_value", "max_value", "step"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "FloatSlider", "display_name": "Float Slider Input \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Input", "output_node": false}, "IntNumber": {"input": {"required": {"number": ["INT", {"default": 0, "min": -1, "max": 18446744073709551615, "step": 1, "display": "number"}], "min_value": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 1, "display": "number"}], "max_value": ["INT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615, "step": 1, "display": "number"}], "step": ["INT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615, "step": 1, "display": "number"}]}}, "input_order": {"required": ["number", "min_value", "max_value", "step"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "IntNumber", "display_name": "Int Input \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Input", "output_node": false}, "TextInput_": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": ""}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "TextInput_", "display_name": "Text Input \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Input", "output_node": false}, "Font": {"input": {"required": {"font": [["opentype/urw-base35/C059-BdIta", "opentype/urw-base35/C059-Bold", "opentype/urw-base35/C059-Italic", "opentype/urw-base35/C059-Roman", "opentype/urw-base35/D050000L", "opentype/urw-base35/NimbusMonoPS-Bold", "opentype/urw-base35/NimbusMonoPS-BoldItalic", "opentype/urw-base35/NimbusMonoPS-Italic", "opentype/urw-base35/NimbusMonoPS-Regular", "opentype/urw-base35/NimbusRoman-Bold", "opentype/urw-base35/NimbusRoman-BoldItalic", "opentype/urw-base35/NimbusRoman-Italic", "opentype/urw-base35/NimbusRoman-Regular", "opentype/urw-base35/NimbusSans-Bold", "opentype/urw-base35/NimbusSans-BoldItalic", "opentype/urw-base35/NimbusSans-Italic", "opentype/urw-base35/NimbusSans-Regular", "opentype/urw-base35/NimbusSansNarrow-Bold", "opentype/urw-base35/NimbusSansNarrow-BoldOblique", "opentype/urw-base35/NimbusSansNarrow-Oblique", "opentype/urw-base35/NimbusSansNarrow-Regular", "opentype/urw-base35/P052-Bold", "opentype/urw-base35/P052-BoldItalic", "opentype/urw-base35/P052-Italic", "opentype/urw-base35/P052-Roman", "opentype/urw-base35/StandardSymbolsPS", "opentype/urw-base35/URWBookman-Demi", "opentype/urw-base35/URWBookman-DemiItalic", "opentype/urw-base35/URWBookman-Light", "opentype/urw-base35/URWBookman-LightItalic", "opentype/urw-base35/URWGothic-Book", "opentype/urw-base35/URWGothic-BookOblique", "opentype/urw-base35/URWGothic-Demi", "opentype/urw-base35/URWGothic-DemiOblique", "opentype/urw-base35/Z003-MediumItalic", "truetype/dejavu/DejaVuSans-Bold", "truetype/dejavu/DejaVuSans", "truetype/dejavu/DejaVuSansMono-Bold", "truetype/dejavu/DejaVuSansMono", "truetype/dejavu/DejaVuSerif-Bold", "truetype/dejavu/DejaVuSerif", "truetype/droid/DroidSansFallbackFull", "truetype/liberation/LiberationMono-Bold", "truetype/liberation/LiberationMono-BoldItalic", "truetype/liberation/LiberationMono-Italic", "truetype/liberation/LiberationMono-Regular", "truetype/liberation/LiberationSans-Bold", "truetype/liberation/LiberationSans-BoldItalic", "truetype/liberation/LiberationSans-Italic", "truetype/liberation/LiberationSans-Regular", "truetype/liberation/LiberationSansNarrow-Bold", "truetype/liberation/LiberationSansNarrow-BoldItalic", "truetype/liberation/LiberationSansNarrow-Italic", "truetype/liberation/LiberationSansNarrow-Regular", "truetype/liberation/LiberationSerif-Bold", "truetype/liberation/LiberationSerif-BoldItalic", "truetype/liberation/LiberationSerif-Italic", "truetype/liberation/LiberationSerif-Regular", "truetype/noto/NotoMono-Regular", "truetype/noto/NotoSansMono-Bold", "truetype/noto/NotoSansMono-Regular"]]}}, "input_order": {"required": ["font"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Font", "display_name": "Font Input \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Input", "output_node": false}, "LimitNumber": {"input": {"required": {"number": ["*"], "min_value": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "step": 1, "display": "number"}], "max_value": ["INT", {"default": 1, "min": 1, "max": 18446744073709551615, "step": 1, "display": "number"}]}}, "input_order": {"required": ["number", "min_value", "max_value"]}, "output": ["*"], "output_is_list": [false], "output_name": ["number"], "name": "LimitNumber", "display_name": "LimitNumber Input \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Input", "output_node": false}, "PromptImage": {"input": {"required": {"prompts": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": false}], "images": ["IMAGE", {"default": null}], "save_to_image": [["enable", "disable"]]}}, "input_order": {"required": ["prompts", "images", "save_to_image"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["json_str"], "name": "PromptImage", "display_name": "Output Prompt and Image \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Output", "output_node": true}, "SaveImageToLocal": {"input": {"required": {"images": ["IMAGE"], "file_path": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": false}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "file_path"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveImageToLocal", "display_name": "Save Image To Local \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Output", "output_node": true}, "SaveImageAndMetadata_": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "Mixlab"}], "metadata": [["disable", "enable"]]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "metadata"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveImageAndMetadata_", "display_name": "Save Image Output \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Output", "output_node": true}, "ComparingTwoFrames_": {"input": {"required": {"before_image": ["IMAGE"], "after_image": ["IMAGE"]}}, "input_order": {"required": ["before_image", "after_image"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ComparingTwoFrames_", "display_name": "Comparing Two Frames \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Output", "output_node": true}, "CreateJsonNode": {"input": {"required": {"key": ["STRING", {"multiline": false, "default": "data", "dynamicPrompts": false}], "value": ["*"], "save": ["BOOLEAN", {"default": true}]}, "optional": {"json_str": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["key", "value", "save"], "optional": ["json_str"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["json_str"], "name": "CreateJsonNode", "display_name": "Create Json", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Output", "output_node": true}, "MirroredImage": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "MirroredImage", "display_name": "MirroredImage \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Image", "output_node": false}, "NoiseImage": {"input": {"required": {"width": ["INT", {"default": 512, "min": 1, "max": 8192, "step": 1, "display": "number"}], "height": ["INT", {"default": 512, "min": 1, "max": 8192, "step": 1, "display": "number"}], "noise_level": ["INT", {"default": 128, "min": 0, "max": 8192, "step": 1, "display": "slider"}], "color_hex": ["STRING", {"multiline": false, "default": "#FFFFFF", "dynamicPrompts": false}]}}, "input_order": {"required": ["width", "height", "noise_level", "color_hex"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "NoiseImage", "display_name": "NoiseImage \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Image", "output_node": false}, "GradientImage": {"input": {"required": {"width": ["INT", {"default": 512, "min": 1, "max": 8192, "step": 1, "display": "number"}], "height": ["INT", {"default": 512, "min": 1, "max": 8192, "step": 1, "display": "number"}], "start_color_hex": ["STRING", {"multiline": false, "default": "#FFFFFF", "dynamicPrompts": false}], "end_color_hex": ["STRING", {"multiline": false, "default": "#000000", "dynamicPrompts": false}]}}, "input_order": {"required": ["width", "height", "start_color_hex", "end_color_hex"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "GradientImage", "display_name": "GradientImage \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Image", "output_node": false}, "TransparentImage": {"input": {"required": {"images": ["IMAGE"], "masks": ["MASK"], "invert": [["yes", "no"]], "save": [["yes", "no"]]}, "optional": {"filename_prefix": ["STRING", {"multiline": false, "default": "Mixlab_save"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "masks", "invert", "save"], "optional": ["filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["STRING", "IMAGE", "RGBA"], "output_is_list": [true, true, true], "output_name": ["file_path", "IMAGE", "RGBA"], "name": "TransparentImage", "display_name": "TransparentImage \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Image", "output_node": true}, "ResizeImageMixlab": {"input": {"required": {"width": ["INT", {"default": 512, "min": 1, "max": 8192, "step": 1, "display": "number"}], "height": ["INT", {"default": 512, "min": 1, "max": 8192, "step": 1, "display": "number"}], "scale_option": [["width", "height", "overall", "center"]]}, "optional": {"image": ["IMAGE"], "average_color": [["on", "off"]], "fill_color": ["STRING", {"multiline": false, "default": "#FFFFFF", "dynamicPrompts": false}], "mask": ["MASK"]}}, "input_order": {"required": ["width", "height", "scale_option"], "optional": ["image", "average_color", "fill_color", "mask"]}, "output": ["IMAGE", "IMAGE", "STRING", "MASK"], "output_is_list": [true, true, true, true], "output_name": ["image list", "average_image", "average_hex", "mask"], "name": "ResizeImageMixlab", "display_name": "Resize Image \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Image", "output_node": false}, "LoadImagesFromPath": {"input": {"required": {"file_path": ["STRING", {"multiline": false, "default": "", "dynamicPrompts": false}]}, "optional": {"white_bg": [["disable", "enable"]], "sort_by": [["file_name", "newest"]], "index_variable": ["INT", {"default": 0, "min": -1, "max": 2048, "step": 1, "display": "number"}], "watcher": [["disable", "enable"]], "result": ["WATCHER"], "prompt": ["PROMPT"], "seed": ["*", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["file_path"], "optional": ["white_bg", "sort_by", "index_variable", "watcher", "result", "prompt", "seed"]}, "output": ["IMAGE", "MASK", "STRING", "STRING"], "output_is_list": [true, true, false, true], "output_name": ["image list", "MASK", "prompt_for_FloatingVideo", "filepaths"], "name": "LoadImagesFromPath", "display_name": "Load Images From Path \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Image", "output_node": false}, "LoadImagesFromURL": {"input": {"required": {"url": ["STRING", {"multiline": true, "default": "https://", "dynamicPrompts": false}]}, "optional": {"seed": ["*", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["url"], "optional": ["seed"]}, "output": ["IMAGE", "MASK"], "output_is_list": [true, true], "output_name": ["images", "masks"], "name": "LoadImagesFromURL", "display_name": "Load Images From URL \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Image", "output_node": false}, "LoadImagesToBatch": {"input": {"required": {"images": ["IMAGEBASE64"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "LoadImagesToBatch", "display_name": "Load Images(base64) \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Image", "output_node": false}, "TextImage": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "\u9f8d\u99ac\u7cbe\u795e\u8fce\u65b0\u6b72", "dynamicPrompts": false}], "font": [["\u6709\u7231\u9ed1\u4f53arheiuhk_bd.ttf", "\u6709\u7231\u9ed1\u4f53ARHei.ttf", "\u738b\u6c49\u5b97\u989c\u6977\u4f53\u7e41.ttf", "\u5e9e\u95e8\u6b63\u9053\u7c97\u4e66\u4f536.0.ttf"]], "font_size": ["INT", {"default": 100, "min": 1, "max": 10000000, "step": 1, "display": "number"}], "spacing": ["INT", {"default": 12, "min": -2000000000, "max": 2000000000, "step": 1, "display": "number"}], "line_spacing": ["INT", {"default": 12, "min": -2000000000, "max": 2000000000, "step": 1, "display": "number"}], "padding": ["INT", {"default": 8, "min": 0, "max": 2000000000, "step": 1, "display": "number"}], "text_color": ["STRING", {"multiline": false, "default": "#000000", "dynamicPrompts": false}], "vertical": ["BOOLEAN", {"default": true}], "stroke": ["BOOLEAN", {"default": false}], "max_characters_per_line": ["INT", {"default": 44, "min": 1, "max": 2000000000, "step": 1, "display": "number"}], "fixed_width": ["INT", {"default": 0, "min": 0, "max": 2000000000, "step": 1, "display": "number"}]}}, "input_order": {"required": ["text", "font", "font_size", "spacing", "line_spacing", "padding", "text_color", "vertical", "stroke", "max_characters_per_line", "fixed_width"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "TextImage", "display_name": "Text Image \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Image", "output_node": false}, "EnhanceImage": {"input": {"required": {"image": ["IMAGE"], "contrast": ["FLOAT", {"default": 0.5, "min": 0, "max": 10, "step": 0.01, "display": "slider"}]}}, "input_order": {"required": ["image", "contrast"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "EnhanceImage", "display_name": "Enhance Image \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Image", "output_node": false}, "SvgImage": {"input": {"required": {"upload": ["SVG"]}}, "input_order": {"required": ["upload"]}, "output": ["IMAGE", "LAYER"], "output_is_list": [false, true], "output_name": ["IMAGE", "layers"], "name": "SvgImage", "display_name": "Svg Image \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Image", "output_node": false}, "ImageListToBatch_": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageListToBatch_", "display_name": "Image List To Batch \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Image", "output_node": false}, "ImageBatchToList_": {"input": {"required": {"image_batch": ["IMAGE"]}}, "input_order": {"required": ["image_batch"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["image_list"], "name": "ImageBatchToList_", "display_name": "Image Batch To List \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Image", "output_node": false}, "ImageCropByAlpha": {"input": {"required": {"image": ["IMAGE"], "RGBA": ["RGBA"]}}, "input_order": {"required": ["image", "RGBA"]}, "output": ["IMAGE", "MASK", "MASK", "INT", "INT", "INT", "INT"], "output_is_list": [true, true, true, true, true, true, true], "output_name": ["IMAGE", "MASK", "AREA_MASK", "x", "y", "width", "height"], "name": "ImageCropByAlpha", "display_name": "ImageCropByAlpha \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Image", "output_node": false}, "GetImageSize_": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"min_width": ["INT", {"default": 512, "min": 1, "max": 2048, "step": 8, "display": "number"}]}}, "input_order": {"required": ["image"], "optional": ["min_width"]}, "output": ["INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["width", "height", "min_width", "min_height"], "name": "GetImageSize_", "display_name": "Get Image Size \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Image", "output_node": false}, "3DImage": {"input": {"required": {"upload": ["THREED"]}, "optional": {"material": ["IMAGE"]}}, "input_order": {"required": ["upload"], "optional": ["material"]}, "output": ["IMAGE", "MASK", "IMAGE", "IMAGE"], "output_is_list": [false, false, false, false], "output_name": ["IMAGE", "MASK", "BG_IMAGE", "MATERIAL"], "name": "3DImage", "display_name": "3DImage \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/3D", "output_node": true}, "DepthViewer": {"input": {"required": {"image": ["IMAGE"], "depth_map": ["IMAGE"]}, "optional": {"frames": ["IMAGEBASE64"]}}, "input_order": {"required": ["image", "depth_map"], "optional": ["frames"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["frames"], "name": "DepthViewer", "display_name": "Depth Viewer \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/3D", "output_node": true}, "ImageColorTransfer": {"input": {"required": {"source": ["IMAGE"], "target": ["IMAGE"], "weight": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["source", "target", "weight"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageColorTransfer", "display_name": "Image Color Transfer \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Color", "output_node": false}, "Color": {"input": {"required": {"color": ["TCOLOR"]}}, "input_order": {"required": ["color"]}, "output": ["STRING", "INT", "INT", "INT", "FLOAT"], "output_is_list": [false, false, false, false, false], "output_name": ["hex", "r", "g", "b", "a"], "name": "Color", "display_name": "Color Input \u267e\ufe0fMixlabApp", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Color", "output_node": false}, "ShowLayer": {"input": {"required": {"edit": ["EDIT"], "x": ["INT", {"default": 0, "min": -100, "max": 8192, "step": 1, "display": "number"}], "y": ["INT", {"default": 0, "min": 0, "max": 8192, "step": 1, "display": "number"}], "width": ["INT", {"default": 512, "min": 1, "max": 8192, "step": 1, "display": "number"}], "height": ["INT", {"default": 512, "min": 1, "max": 8192, "step": 1, "display": "number"}], "z_index": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1, "display": "number"}], "scale_option": [["width", "height", "overall"]]}, "optional": {"layers": ["LAYER", {"default": null}]}}, "input_order": {"required": ["edit", "x", "y", "width", "height", "z_index", "scale_option"], "optional": ["layers"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ShowLayer", "display_name": "Show Layer \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Layer", "output_node": false}, "NewLayer": {"input": {"required": {"x": ["INT", {"default": 0, "min": -1024, "max": 8192, "step": 1, "display": "number"}], "y": ["INT", {"default": 0, "min": -1024, "max": 8192, "step": 1, "display": "number"}], "width": ["INT", {"default": 512, "min": 1, "max": 8192, "step": 1, "display": "number"}], "height": ["INT", {"default": 512, "min": 1, "max": 8192, "step": 1, "display": "number"}], "z_index": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1, "display": "number"}], "scale_option": [["width", "height", "overall"]], "image": ["*"]}, "optional": {"mask": ["MASK", {"default": null}], "layers": ["LAYER", {"default": null}], "canvas": ["IMAGE", {"default": null}]}}, "input_order": {"required": ["x", "y", "width", "height", "z_index", "scale_option", "image"], "optional": ["mask", "layers", "canvas"]}, "output": ["LAYER"], "output_is_list": [true], "output_name": ["layers"], "name": "NewLayer", "display_name": "New Layer \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Layer", "output_node": false}, "MergeLayers": {"input": {"required": {"layers": ["LAYER"], "images": ["IMAGE"]}, "optional": {"is_multiply_blend": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["layers", "images"], "optional": ["is_multiply_blend"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "MergeLayers", "display_name": "Merge Layers \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Layer", "output_node": false}, "CompositeImages_": {"input": {"required": {"foreground": ["*"], "mask": ["MASK"], "background": ["IMAGE"]}, "optional": {"is_multiply_blend": ["BOOLEAN", {"default": false}], "position": [["overall", "center_center", "left_bottom", "center_bottom", "right_bottom", "left_top", "center_top", "right_top"]], "scale": ["FLOAT", {"default": 0.35, "min": 0.01, "max": 1, "step": 0.01, "display": "number"}]}}, "input_order": {"required": ["foreground", "mask", "background"], "optional": ["is_multiply_blend", "position", "scale"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CompositeImages_", "display_name": "Composite Images \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Layer", "output_node": false}, "SplitImage": {"input": {"required": {"image": ["IMAGE"], "num": ["INT", {"default": 4, "min": 1, "max": 500, "step": 1, "display": "number"}], "seed": ["INT", {"default": 4, "min": 1, "max": 500, "step": 1, "display": "number"}]}}, "input_order": {"required": ["image", "num", "seed"]}, "output": ["_GRID", "_GRID", "MASK"], "output_is_list": [false, false, false], "output_name": ["grids", "grid", "mask"], "name": "SplitImage", "display_name": "Split Image \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Layer", "output_node": false}, "CenterImage": {"input": {"required": {"canvas": ["IMAGE"], "left": ["INT", {"default": 24, "min": 0, "max": 5000, "step": 1, "display": "number"}], "top": ["INT", {"default": 24, "min": 0, "max": 5000, "step": 1, "display": "number"}], "right": ["INT", {"default": 24, "min": 0, "max": 5000, "step": 1, "display": "number"}], "bottom": ["INT", {"default": 24, "min": 0, "max": 5000, "step": 1, "display": "number"}]}}, "input_order": {"required": ["canvas", "left", "top", "right", "bottom"]}, "output": ["_GRID", "MASK"], "output_is_list": [false, false], "output_name": ["grid", "mask"], "name": "CenterImage", "display_name": "Center Image \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Layer", "output_node": false}, "GridOutput": {"input": {"required": {"grid": ["_GRID"]}, "optional": {"bg_image": ["IMAGE"]}}, "input_order": {"required": ["grid"], "optional": ["bg_image"]}, "output": ["INT", "INT", "INT", "INT", "MASK"], "output_is_list": [false, false, false, false, false], "output_name": ["x", "y", "width", "height", "mask"], "name": "GridOutput", "display_name": "Grid Output \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Layer", "output_node": false}, "GridDisplayAndSave": {"input": {"required": {"labels": ["STRING", {"multiline": true, "default": "", "forceInput": true, "dynamicPrompts": false}], "grids": ["_GRID"], "image": ["IMAGE"], "filename_prefix": ["STRING", {"default": "mixlab/grids"}]}}, "input_order": {"required": ["labels", "grids", "image", "filename_prefix"]}, "output": [], "output_is_list": [], "output_name": [], "name": "GridDisplayAndSave", "display_name": "Grid Display And Save \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Layer", "output_node": true}, "SplitLongMask": {"input": {"required": {"long_mask": ["MASK"], "count": ["INT", {"default": 1, "min": 1, "max": 1024, "step": 1}]}}, "input_order": {"required": ["long_mask", "count"]}, "output": ["MASK"], "output_is_list": [true], "output_name": ["MASK"], "name": "SplitLongMask", "display_name": "Splitting a long image into sections", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Mask", "output_node": false}, "FeatheredMask": {"input": {"required": {"mask": ["MASK"], "start_offset": ["INT", {"default": 1, "min": -150, "max": 150, "step": 1, "display": "slider"}], "feathering_weight": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1, "step": 0.1, "display": "slider"}]}}, "input_order": {"required": ["mask", "start_offset", "feathering_weight"]}, "output": ["MASK"], "output_is_list": [true], "output_name": ["MASK"], "name": "FeatheredMask", "display_name": "Feathered Mask \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Mask", "output_node": false}, "SmoothMask": {"input": {"required": {"mask": ["MASK"], "smoothness": ["INT", {"default": 1, "min": 0, "max": 150, "step": 1, "display": "slider"}]}}, "input_order": {"required": ["mask", "smoothness"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "SmoothMask", "display_name": "Smooth Mask \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Mask", "output_node": false}, "FaceToMask": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "FaceToMask", "display_name": "Face To Mask \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Mask", "output_node": false}, "AreaToMask": {"input": {"required": {"RGBA": ["RGBA"]}}, "input_order": {"required": ["RGBA"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "AreaToMask", "display_name": "Area To Mask \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Mask", "output_node": false}, "OutlineMask": {"input": {"required": {"mask": ["MASK"], "outline_width": ["INT", {"default": 10, "min": 1, "max": 16384, "step": 1}], "tapered_corners": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["mask", "outline_width", "tapered_corners"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "OutlineMask", "display_name": "Outline Mask \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Mask", "output_node": false}, "MaskListMerge_": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskListMerge_", "display_name": "MaskList to Mask \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Mask", "output_node": false}, "PreviewMask_": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": [], "output_is_list": [], "output_name": [], "name": "PreviewMask_", "display_name": "Preview Mask \u267e\ufe0fMixlab", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Mask", "output_node": true}, "ScreenShare": {"input": {"required": {"image_base64": ["CHEESE"], "refresh_rate": ["INT", {"default": 500, "min": 0, "step": 50, "max": 18446744073709551615}]}, "optional": {"prompt": ["PROMPT"], "slide": ["SLIDE"], "seed": ["SEED"]}}, "input_order": {"required": ["image_base64", "refresh_rate"], "optional": ["prompt", "slide", "seed"]}, "output": ["IMAGE", "STRING", "FLOAT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["current frame (image)", "prompt", "denoise (float)", "seed (int)"], "name": "ScreenShare", "display_name": "Screen Share \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Screen", "output_node": false}, "FloatingVideo": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": [], "output_is_list": [], "output_name": [], "name": "FloatingVideo", "display_name": "Floating Video \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Screen", "output_node": true}, "SpeechRecognition": {"input": {"required": {"upload": ["AUDIOINPUTMIX"]}, "optional": {"start_by": ["INT", {"default": 0, "min": 0, "max": 2048, "step": 1, "display": "number"}]}}, "input_order": {"required": ["upload"], "optional": ["start_by"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["prompt"], "name": "SpeechRecognition", "display_name": "SpeechRecognition \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Audio", "output_node": false}, "SpeechSynthesis": {"input": {"required": {"text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [true], "output_name": ["STRING"], "name": "SpeechSynthesis", "display_name": "SpeechSynthesis \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Audio", "output_node": true}, "AudioPlay": {"input": {"required": {"audio": ["AUDIO"]}}, "input_order": {"required": ["audio"]}, "output": [], "output_is_list": [], "output_name": [], "name": "AudioPlay", "display_name": "Preview Audio \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Audio", "output_node": true}, "AnalyzeAudio": {"input": {"required": {"json": ["*"]}}, "input_order": {"required": ["json"]}, "output": ["*"], "output_is_list": [false], "output_name": ["result"], "name": "AnalyzeAudio", "display_name": "Analyze Audio \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Audio", "output_node": false}, "TextToNumber": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "1"}], "random_number": [["enable", "disable"]], "max_num": ["INT", {"default": 10, "min": 2, "max": 10000000000, "step": 1, "display": "number"}]}, "optional": {"seed": ["*", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["text", "random_number", "max_num"], "optional": ["seed"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "TextToNumber", "display_name": "TextToNumber", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Text", "output_node": false}, "JoinWithDelimiter": {"input": {"required": {"text_list": ["*"], "delimiter": [["newline", "comma", "backslash", "space"]]}}, "input_order": {"required": ["text_list", "delimiter"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JoinWithDelimiter", "display_name": "JoinWithDelimiter", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Text", "output_node": false}, "MultiplicationNode": {"input": {"required": {"numberA": ["*"], "multiply_by": ["FLOAT", {"default": 1, "min": -2, "max": 18446744073709551615, "step": 0.01, "display": "number"}], "add_by": ["FLOAT", {"default": 0, "min": -2000, "max": 18446744073709551615, "step": 0.01, "display": "number"}]}}, "input_order": {"required": ["numberA", "multiply_by", "add_by"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "MultiplicationNode", "display_name": "Math Operation \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Utils", "output_node": false}, "DynamicDelayProcessor": {"input": {"required": {"delay_seconds": ["INT", {"default": 1, "min": 0, "max": 1000000}]}, "optional": {"any_input": ["*"], "delay_by_text": ["STRING", {"multiline": true, "dynamicPrompts": false}], "words_per_seconds": ["FLOAT", {"default": 1.5, "min": 0.0, "max": 1000.0, "display": "Chars per second?"}], "replace_output": [["disable", "enable"]], "replace_value": ["INT", {"default": -1, "min": 0, "max": 1000000, "display": "Replacement value"}]}}, "input_order": {"required": ["delay_seconds"], "optional": ["any_input", "delay_by_text", "words_per_seconds", "replace_output", "replace_value"]}, "output": ["*"], "output_is_list": [false], "output_name": ["output"], "name": "DynamicDelayProcessor", "display_name": "DynamicDelayByText \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Utils", "output_node": false}, "SwitchByIndex": {"input": {"optional": {"A": ["*"], "B": ["*"]}, "required": {"index": ["INT", {"default": -1, "min": -1, "max": 1000, "step": 1, "display": "number"}], "flat": [["off", "on"]]}}, "input_order": {"optional": ["A", "B"], "required": ["index", "flat"]}, "output": ["*", "INT"], "output_is_list": [true, false], "output_name": ["list", "count"], "name": "SwitchByIndex", "display_name": "List Switch By Index \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Utils", "output_node": false}, "ListSplit_": {"input": {"optional": {"A": ["*"]}, "required": {"chunk_size": ["INT", {"default": 10, "min": 1, "step": 1}], "transition_size": ["INT", {"default": 0, "min": 0, "step": 1}], "index": ["INT", {"default": -1, "min": -1, "step": 1}]}}, "input_order": {"optional": ["A"], "required": ["chunk_size", "transition_size", "index"]}, "output": ["*"], "output_is_list": [true], "output_name": ["B"], "name": "ListSplit_", "display_name": "Split List \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Utils", "output_node": false}, "Seed_": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["seed"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["seed"], "name": "Seed_", "display_name": "CreateSeedNode \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Experiment", "output_node": true}, "CkptNames_": {"input": {"required": {"ckpt_names": ["STRING", {"multiline": true, "default": "CRM.pth\nSUPIR-v0F.ckpt\nSUPIR-v0Q.ckpt\ndisneyPixarCartoon_A.safetensors\ndisneyPixarCartoon_v10.safetensors\ndreamshaperXL_alpha2Xl10.safetensors\ndreamshaper_8.safetensors\ndynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors\nepicrealism_naturalSinRC1VAE.safetensors\nfenrisxlFlux_fenrisxlV18THLSDXL.safetensors\nflat2DAnimerge_v45Sharp.safetensors\nflux1-dev.safetensors\njuggernautXL_juggXIByRundiffusion.safetensors\njuggernautXL_v9Rdphoto2Lightning.safetensors\njuggernaut_reborn.safetensors\nphotonLCM_v10.safetensors\nphoton_v1.safetensors\nrealisticVisionV60B1_v51HyperVAE.safetensors\nrealvisxlV50_v50LightningBakedvae.safetensors\nsdXL_v10VAEFix.safetensors\nturbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors\nwildcardxXLTURBO_wildcardxXLTURBOV10.safetensors", "dynamicPrompts": false}]}}, "input_order": {"required": ["ckpt_names"]}, "output": ["*"], "output_is_list": [true], "output_name": ["ckpt_names"], "name": "CkptNames_", "display_name": "CreateCkptNames \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Experiment", "output_node": false}, "SamplerNames_": {"input": {"required": {"sampler_names": ["STRING", {"multiline": true, "default": "euler\neuler_cfg_pp\neuler_ancestral\neuler_ancestral_cfg_pp\nheun\nheunpp2\ndpm_2\ndpm_2_ancestral\nlms\ndpm_fast\ndpm_adaptive\ndpmpp_2s_ancestral\ndpmpp_2s_ancestral_cfg_pp\ndpmpp_sde\ndpmpp_sde_gpu\ndpmpp_2m\ndpmpp_2m_cfg_pp\ndpmpp_2m_sde\ndpmpp_2m_sde_gpu\ndpmpp_3m_sde\ndpmpp_3m_sde_gpu\nddpm\nlcm\nipndm\nipndm_v\ndeis\nddim\nuni_pc\nuni_pc_bh2", "dynamicPrompts": false}]}}, "input_order": {"required": ["sampler_names"]}, "output": ["*"], "output_is_list": [true], "output_name": ["sampler_names"], "name": "SamplerNames_", "display_name": "CreateSampler_names \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Experiment", "output_node": false}, "LoraNames_": {"input": {"required": {"lora_names": ["STRING", {"multiline": true, "default": "AnimateLCM_sd15_t2v_lora.safetensors\nBending_Illustartion-000007.safetensors\nBending_Illustartion-000010.safetensors\nBending_Illustartion-000014.safetensors\nCPA.safetensors\nKodak Motion Picture Film Style v5_2.safetensors\nLego_XL_v2.1.safetensors\nPixarXL.safetensors\nRW_PS1v1.safetensors\nRW_pixelart_XL_v1.safetensors\nRetro_Comic_Flux_v1_renderartist.safetensors\nSDXL-Lightning/sdxl_lightning_2step_lora.safetensors\nVivid Midjourney mimic - XL SDXL v2.0.safetensors\nadd_detail.safetensors\nanime_lora_comfy_converted.safetensors\ndisney_lora_comfy_converted.safetensors\nflux_realism_lora.safetensors\nflux_spirited_away.safetensors\nfurry_lora.safetensors\nhouse_architecture_Exterior_SDlife_Chiasedamme.safetensors\nlcm/SD1.5/pytorch_lora_weights.safetensors\nlegody-v10.safetensors\nmoonies&glorpies_lora.safetensors\nmoonies_lora.safetensors\nmore_details.safetensors\npieter.safetensors\nps1_style_SDXL_v2.safetensors\nsdxl_lightning_4step_lora.safetensors\nv3_sd15_adapter.ckpt\nxl_more_art-full_v1.safetensors\nzavy-cntrst-sdxl.safetensors\nzyd232_Ink_Style_Flux1D_v1_1.safetensors", "dynamicPrompts": false}]}}, "input_order": {"required": ["lora_names"]}, "output": ["*", "STRING"], "output_is_list": [true, true], "output_name": ["lora_names", "prompt"], "name": "LoraNames_", "display_name": "LoraName \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Experiment", "output_node": false}, "ApplyVisualStylePrompting_": {"input": {"required": {"reference_image": ["IMAGE"], "reference_image_text": ["STRING", {"multiline": true}], "model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "enabled": ["BOOLEAN", {"default": true}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 2}]}}, "input_order": {"required": ["reference_image", "reference_image_text", "model", "clip", "vae", "positive", "negative", "enabled", "denoise", "batch_size"]}, "output": ["MODEL", "CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false, false], "output_name": ["model", "positive", "negative", "latents"], "name": "ApplyVisualStylePrompting_", "display_name": "Apply VisualStyle Prompting \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Style", "output_node": false}, "StyleAlignedReferenceSampler_": {"input": {"required": {"ref_latents": ["STEP_LATENTS"], "reference_image_text": ["STRING", {"multiline": true}], "model": ["MODEL"], "clip": ["CLIP"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "share_norm": [["both", "group", "layer", "disabled"]], "share_attn": [["q+k", "q+k+v", "disabled"]], "scale": ["FLOAT", {"default": 1, "min": 0, "max": 2.0, "step": 0.01}], "batch_size": ["INT", {"default": 2, "min": 1, "max": 8, "step": 1}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["ref_latents", "reference_image_text", "model", "clip", "positive", "negative", "share_norm", "share_attn", "scale", "batch_size", "seed", "steps", "cfg", "scheduler", "denoise"]}, "output": ["LATENT", "LATENT"], "output_is_list": [false, false], "output_name": ["output", "denoised_output"], "name": "StyleAlignedReferenceSampler_", "display_name": "StyleAligned Reference Sampler \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Style", "output_node": false}, "StyleAlignedSampleReferenceLatents_": {"input": {"required": {"reference_image": ["IMAGE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "model": ["MODEL"], "vae": ["VAE"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "scheduler": [null], "denoise": ["FLOAT", {"default": 1, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["reference_image", "positive", "negative", "model", "vae", "seed", "steps", "cfg", "scheduler", "denoise"]}, "output": ["STEP_LATENTS", "LATENT"], "output_is_list": [false, false], "output_name": ["ref_latents", "noised_output"], "name": "StyleAlignedSampleReferenceLatents_", "display_name": "StyleAligned Sample Reference Latents \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Style", "output_node": false}, "StyleAlignedBatchAlign_": {"input": {"required": {"model": ["MODEL"], "share_norm": [["both", "group", "layer", "disabled"]], "share_attn": [["q+k", "q+k+v", "disabled"]], "scale": ["FLOAT", {"default": 1, "min": 0, "max": 1.0, "step": 0.1}]}}, "input_order": {"required": ["model", "share_norm", "share_attn", "scale"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "StyleAlignedBatchAlign_", "display_name": "StyleAligned Batch Align \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Style", "output_node": false}, "MaskListReplace_": {"input": {"required": {"masks": ["MASK"], "mask_replace": ["MASK"], "start_index": ["INT", {"default": 0, "min": 0, "step": 1}], "end_index": ["INT", {"default": 0, "min": 0, "step": 1}], "invert": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["masks", "mask_replace", "start_index", "end_index", "invert"]}, "output": ["MASK"], "output_is_list": [true], "output_name": ["MASK"], "name": "MaskListReplace_", "display_name": "MaskList Replace \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Video", "output_node": false}, "IncrementingListNode_": {"input": {"required": {"min_value": ["FLOAT", {"default": 0, "min": -2000, "max": 18446744073709551615, "step": 0.01, "display": "number"}], "max_value": ["FLOAT", {"default": 10, "min": -2000, "max": 18446744073709551615, "step": 0.01, "display": "number"}], "step": ["FLOAT", {"default": 0, "min": -2000, "max": 18446744073709551615, "step": 0.01, "display": "number"}], "count": ["INT", {"default": 1, "min": 1, "max": 18446744073709551615, "step": 1, "display": "number"}]}, "optional": {"seed": ["INT", {"default": -1, "min": -1, "max": 1000000}]}}, "input_order": {"required": ["min_value", "max_value", "step", "count"], "optional": ["seed"]}, "output": ["INT", "FLOAT"], "output_is_list": [true, true], "output_name": ["int_list", "float_list"], "name": "IncrementingListNode_", "display_name": "Create Incrementing Number List \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Video", "output_node": false}, "P5Input": {"input": {"required": {"frames": ["IMAGEBASE64"]}}, "input_order": {"required": ["frames"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["frames"], "name": "P5Input", "display_name": "P5 Input \u267e\ufe0fMixlab for test", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Input", "output_node": true}, "ChatGPTOpenAI": {"input": {"required": {"prompt": ["STRING", {"multiline": true, "dynamicPrompts": false}], "system_content": ["STRING", {"default": "You are ChatGPT, a large language model trained by OpenAI. Answer as concisely as possible.", "multiline": true, "dynamicPrompts": false}], "model": [["gpt-3.5-turbo", "gpt-3.5-turbo-16k", "gpt-4o", "gpt-4o-2024-05-13", "gpt-4", "gpt-4-0314", "gpt-4-0613", "gpt-3.5-turbo-0301", "gpt-3.5-turbo-0613", "gpt-3.5-turbo-16k-0613", "qwen-turbo", "qwen-plus", "qwen-long", "qwen-max", "qwen-max-longcontext", "glm-4", "glm-3-turbo", "moonshot-v1-8k", "moonshot-v1-32k", "moonshot-v1-128k", "deepseek-chat", "Qwen/Qwen2-7B-Instruct", "THUDM/glm-4-9b-chat", "01-ai/Yi-1.5-9B-Chat-16K", "meta-llama/Meta-Llama-3.1-8B-Instruct"], {"default": "gpt-3.5-turbo"}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "step": 1}], "context_size": ["INT", {"default": 1, "min": 0, "max": 30, "step": 1}], "api_url": [["openai", "api2d", "Kimi", "DeepSeek-V2", "SiliconCloud"], {"default": "openai"}]}, "optional": {"api_key": ["STRING", {"forceInput": true}], "custom_model_name": ["STRING", {"forceInput": true}], "custom_api_url": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["prompt", "system_content", "model", "seed", "context_size", "api_url"], "optional": ["api_key", "custom_model_name", "custom_api_url"]}, "output": ["STRING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["text", "messages", "session_history"], "name": "ChatGPTOpenAI", "display_name": "ChatGPT & Local LLM \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/GPT", "output_node": false}, "SiliconflowLLM": {"input": {"required": {"api_key": ["STRING", {"forceInput": true}], "prompt": ["STRING", {"multiline": true, "dynamicPrompts": false}], "system_content": ["STRING", {"default": "You are ChatGPT, a large language model trained by OpenAI. Answer as concisely as possible.", "multiline": true, "dynamicPrompts": false}], "model": [["Qwen/Qwen2.5-7B-Instruct", "Qwen/Qwen2-7B-Instruct", "THUDM/glm-4-9b-chat", "01-ai/Yi-1.5-9B-Chat-16K", "meta-llama/Meta-Llama-3.1-8B-Instruct"], {"default": "Qwen/Qwen2.5-7B-Instruct"}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "step": 1}], "context_size": ["INT", {"default": 1, "min": 0, "max": 30, "step": 1}], "max_tokens": ["INT", {"default": 512, "min": 512, "max": 200000, "step": 1}]}, "optional": {"custom_model_name": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["api_key", "prompt", "system_content", "model", "seed", "context_size", "max_tokens"], "optional": ["custom_model_name"]}, "output": ["STRING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["text", "messages", "session_history"], "name": "SiliconflowLLM", "display_name": "LLM Siliconflow \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/GPT", "output_node": false}, "SiliconflowTextToImageNode": {"input": {"required": {"api_key": ["STRING", {"forceInput": true}], "prompt": ["STRING", {"multiline": true, "dynamicPrompts": false}], "width": ["INT", {"default": 512, "min": 512, "max": 4096, "step": 8}], "height": ["INT", {"default": 512, "min": 512, "max": 4096, "step": 8}], "model": [["black-forest-labs/FLUX.1-schnell"], {"default": "black-forest-labs/FLUX.1-schnell"}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "step": 1}]}, "optional": {"custom_model_name": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["api_key", "prompt", "width", "height", "model", "seed"], "optional": ["custom_model_name"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "SiliconflowTextToImageNode", "display_name": "TextToImage Siliconflow \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Image", "output_node": false}, "ShowTextForGPT": {"input": {"required": {"text": ["STRING", {"forceInput": true, "dynamicPrompts": false}]}, "optional": {"output_dir": ["STRING", {"forceInput": true, "default": "", "multiline": true, "dynamicPrompts": false}]}}, "input_order": {"required": ["text"], "optional": ["output_dir"]}, "output": ["STRING"], "output_is_list": [true], "output_name": ["STRING"], "name": "ShowTextForGPT", "display_name": "Show Text \u267e\ufe0fMixlabApp", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Text", "output_node": true}, "CharacterInText": {"input": {"required": {"text": ["STRING", {"multiline": true, "dynamicPrompts": false}], "character": ["STRING", {"multiline": true, "dynamicPrompts": false}], "start_index": ["INT", {"default": 1, "min": 0, "max": 1024, "step": 1, "display": "number"}]}}, "input_order": {"required": ["text", "character", "start_index"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "CharacterInText", "display_name": "Character In Text", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Text", "output_node": false}, "TextSplitByDelimiter": {"input": {"required": {"text": ["STRING", {"multiline": true, "dynamicPrompts": false}], "delimiter": ["STRING", {"multiline": false, "default": ",", "dynamicPrompts": false}], "start_index": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1, "display": "number"}], "skip_every": ["INT", {"default": 0, "min": 0, "max": 10, "step": 1, "display": "number"}], "max_count": ["INT", {"default": 10, "min": 1, "max": 1000, "step": 1, "display": "number"}]}}, "input_order": {"required": ["text", "delimiter", "start_index", "skip_every", "max_count"]}, "output": ["STRING"], "output_is_list": [true], "output_name": ["STRING"], "name": "TextSplitByDelimiter", "display_name": "Text Split By Delimiter", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Text", "output_node": false}, "JsonRepair": {"input": {"required": {"json_string": ["STRING", {"forceInput": true}], "key": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": ""}]}, "optional": {"json_string2": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["json_string", "key"], "optional": ["json_string2"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["json_string", "value"], "name": "JsonRepair", "display_name": "Json Repair", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/GPT", "output_node": false}, "SimulateDevDesignDiscussions": {"input": {"required": {"subject": ["STRING", {"multiline": true, "dynamicPrompts": false}], "model": [["gpt-4o", "gpt-4o-2024-05-13", "gpt-4", "gpt-4-0314", "gpt-4-0613", "qwen-turbo", "qwen-plus", "qwen-long", "qwen-max", "qwen-max-longcontext", "glm-4", "glm-3-turbo", "moonshot-v1-8k", "moonshot-v1-32k", "moonshot-v1-128k", "deepseek-chat", "Qwen/Qwen2-7B-Instruct", "THUDM/glm-4-9b-chat", "01-ai/Yi-1.5-9B-Chat-16K"], {"default": "gpt-4o"}], "api_url": [["openai", "api2d", "Kimi", "DeepSeek-V2", "SiliconCloud"], {"default": "openai"}]}, "optional": {"api_key": ["STRING", {"forceInput": true}], "custom_model_name": ["STRING", {"forceInput": true}], "custom_api_url": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["subject", "model", "api_url"], "optional": ["api_key", "custom_model_name", "custom_api_url"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "SimulateDevDesignDiscussions", "display_name": "SimulateDevDesignDiscussions \u267e\ufe0fMixlab Podcast", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/GPT", "output_node": false}, "EditMask": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"image_update": ["IMAGE_FILE"]}}, "input_order": {"required": ["image"], "optional": ["image_update"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "EditMask", "display_name": "Edit Mask \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Mask", "output_node": true}, "ClipInterrogator": {"input": {"required": {"image": ["IMAGE"], "prompt_mode": [["fast", "classic", "best", "negative"]], "image_analysis": [["off", "on"]]}}, "input_order": {"required": ["image", "prompt_mode", "image_analysis"]}, "output": ["STRING", "STRING"], "output_is_list": [true, true], "output_name": ["prompt", "random_samples"], "name": "ClipInterrogator", "display_name": "Clip Interrogator \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Prompt", "output_node": true}, "PromptGenerate_Mix": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": false}]}, "optional": {"multiple": [["off", "on"]], "seed": ["INT", {"default": 100, "min": 100, "max": 18446744073709551615}]}}, "input_order": {"required": ["text"], "optional": ["multiple", "seed"]}, "output": ["STRING"], "output_is_list": [true], "output_name": ["prompt"], "name": "PromptGenerate_Mix", "display_name": "Prompt Generate \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Prompt", "output_node": true}, "ChinesePrompt_Mix": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": false}], "generation": [["on", "off"], {"default": "off"}]}, "optional": {"seed": ["INT", {"default": 100, "min": 100, "max": 18446744073709551615}]}}, "input_order": {"required": ["text", "generation"], "optional": ["seed"]}, "output": ["STRING"], "output_is_list": [true], "output_name": ["prompt"], "name": "ChinesePrompt_Mix", "display_name": "Chinese Prompt \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Prompt", "output_node": true}, "RembgNode_Mix": {"input": {"required": {"image": ["IMAGE"], "model_name": [[]]}}, "input_order": {"required": ["image", "model_name"]}, "output": ["MASK", "IMAGE", "RGBA"], "output_is_list": [true, true, true], "output_name": ["masks", "images", "RGBAs"], "name": "RembgNode_Mix", "display_name": "Remove Background \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Mask", "output_node": true}, "VAEEncodeForInpaint_Frames": {"input": {"required": {"vae": ["VAE"], "images": ["IMAGE"], "masks": ["MASK"], "grow_mask_by": ["INT", {"default": 6, "min": 0, "max": 64, "step": 1}]}}, "input_order": {"required": ["vae", "images", "masks", "grow_mask_by"]}, "output": ["LATENT"], "output_is_list": [true], "output_name": ["LATENT"], "name": "VAEEncodeForInpaint_Frames", "display_name": "VAE Encode For Inpaint Frames \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Video", "output_node": true}, "ImageListReplace_": {"input": {"required": {"images": ["IMAGE"], "start_index": ["INT", {"default": 0, "min": 0, "step": 1}], "end_index": ["INT", {"default": 0, "min": 0, "step": 1}], "invert": ["BOOLEAN", {"default": false}]}, "optional": {"image_replace": ["IMAGE"], "images_replace": ["IMAGE"]}}, "input_order": {"required": ["images", "start_index", "end_index", "invert"], "optional": ["image_replace", "images_replace"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [true, true], "output_name": ["images", "select_images"], "name": "ImageListReplace_", "display_name": "Image List Replace", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Video", "output_node": true}, "LoadVideoAndSegment_": {"input": {"required": {"video": [["AnimateDiff_00037.mp4", "Playbook__00314.mp4"], {"video_upload": true}], "video_segment_frames": ["INT", {"default": 10, "min": -1, "step": 1}], "transition_frames": ["INT", {"default": 0, "min": 0, "step": 1}]}}, "input_order": {"required": ["video", "video_segment_frames", "transition_frames"]}, "output": ["SCENE_VIDEO", "INT", "INT", "INT"], "output_is_list": [true, false, false, false], "output_name": ["scenes_video", "scenes_count", "frame_count", "fps"], "name": "LoadVideoAndSegment_", "display_name": "Load Video And Segment", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Video", "output_node": true}, "VideoCombine_Adv": {"input": {"required": {"image_batch": ["IMAGE"], "frame_rate": ["INT", {"default": 8, "min": 1, "step": 1}], "loop_count": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "filename_prefix": ["STRING", {"default": "Comfyui"}], "format": [["image/gif", "image/webp", "video/av1-webm", "video/h264-mp4", "video/h265-mp4", "video/webm"]], "pingpong": ["BOOLEAN", {"default": false}], "save_image": ["BOOLEAN", {"default": true}], "metadata": ["BOOLEAN", {"default": false}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["image_batch", "frame_rate", "loop_count", "filename_prefix", "format", "pingpong", "save_image", "metadata"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["SCENE_VIDEO"], "output_is_list": [false], "output_name": ["scenes_video"], "name": "VideoCombine_Adv", "display_name": "Video Combine", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Video", "output_node": true}, "LoadAndCombinedAudio_": {"input": {"required": {"audios": ["AUDIOBASE64"], "start_time": ["FLOAT", {"default": 0, "min": 0, "max": 10000000, "step": 0.01}], "duration": ["FLOAT", {"default": 10, "min": -1, "max": 10000000, "step": 0.01}]}}, "input_order": {"required": ["audios", "start_time", "duration"]}, "output": ["STRING", "AUDIO"], "output_is_list": [false, false], "output_name": ["audio_file_path", "audio"], "name": "LoadAndCombinedAudio_", "display_name": "Load And Combined Audio", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Audio", "output_node": false}, "CombineAudioVideo": {"input": {"required": {"video": ["SCENE_VIDEO"], "audio": ["AUDIO"]}}, "input_order": {"required": ["video", "audio"]}, "output": ["SCENE_VIDEO"], "output_is_list": [false], "output_name": ["SCENE_VIDEO"], "name": "CombineAudioVideo", "display_name": "Combine Audio Video", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Video", "output_node": true}, "ScenesNode_": {"input": {"required": {"scenes_video": ["SCENE_VIDEO"], "index": ["INT", {"default": 0, "min": 0, "step": 1}]}}, "input_order": {"required": ["scenes_video", "index"]}, "output": ["IMAGE", "INT"], "output_is_list": [false, false], "output_name": ["video frames (batch)", "count"], "name": "ScenesNode_", "display_name": "Select Scene", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Video", "output_node": false}, "GenerateFramesByCount": {"input": {"required": {"frames": ["IMAGE"], "frame_count": ["INT", {"default": 72, "min": 1, "step": 1}], "revert": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["frames", "frame_count", "revert"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["frames"], "name": "GenerateFramesByCount", "display_name": "Generate Frames By Count", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Video", "output_node": false}, "LoadTripoSRModel_": {"input": {"required": {"chunk_size": ["INT", {"default": 8192, "min": 0, "max": 10000}]}}, "input_order": {"required": ["chunk_size"]}, "output": ["TRIPOSR_MODEL"], "output_is_list": [false], "output_name": ["TRIPOSR_MODEL"], "name": "LoadTripoSRModel_", "display_name": "Load TripoSR Model", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/3D/TripoSR", "output_node": false}, "TripoSRSampler_": {"input": {"required": {"model": ["TRIPOSR_MODEL"], "image": ["IMAGE"], "resolution": ["INT", {"default": 256, "min": 128, "max": 12288}], "threshold": ["FLOAT", {"default": 25.0, "min": 0.0, "step": 0.01}], "device": [["auto", "cpu"]]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["model", "image", "resolution", "threshold", "device"], "optional": ["mask"]}, "output": ["MESH"], "output_is_list": [false], "output_name": ["MESH"], "name": "TripoSRSampler_", "display_name": "TripoSR Sampler", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/3D/TripoSR", "output_node": false}, "SaveTripoSRMesh": {"input": {"required": {"mesh": ["MESH"], "filename_prefix": ["STRING", {"multiline": false, "default": "TripoSR_"}]}}, "input_order": {"required": ["mesh", "filename_prefix"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveTripoSRMesh", "display_name": "Save TripoSR Mesh", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/3D/TripoSR", "output_node": true}, "MiniCPM_VQA_Simple": {"input": {"required": {"images": ["IMAGE"], "text": ["STRING", {"default": "", "multiline": true}], "seed": ["INT", {"default": -1}], "extract_keywords": ["BOOLEAN", {"default": false}], "temperature": ["FLOAT", {"default": 0.7}], "keep_model_loaded": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["images", "text", "seed", "extract_keywords", "temperature", "keep_model_loaded"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["result", "keywords"], "name": "MiniCPM_VQA_Simple", "display_name": "MiniCPM VQA Simple", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Image", "output_node": false}, "ScenedetectNode_": {"input": {"required": {"video": [["AnimateDiff_00037.mp4", "Playbook__00314.mp4"], {"video_upload": true}], "min_scene_len": ["INT", {"default": 10, "min": 1, "step": 1}], "adaptive_threshold": ["FLOAT", {"default": 2.5, "min": 0, "step": 0.1}], "number_of_sample_frames": ["INT", {"default": 1, "min": 1, "step": 1}]}}, "input_order": {"required": ["video", "min_scene_len", "adaptive_threshold", "number_of_sample_frames"]}, "output": ["SCENE_VIDEO", "SCENE_", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["scenes_video", "scenes", "scene_len", "total_frames"], "name": "ScenedetectNode_", "display_name": "Video Scene Detect", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Video", "output_node": false}, "SceneInfoNode": {"input": {"required": {"scenes": ["SCENE_"], "index": ["INT", {"default": 0, "min": -1, "step": 1}]}}, "input_order": {"required": ["scenes", "index"]}, "output": ["IMAGE", "IMAGE", "INT", "INT", "SCENE_VIDEO"], "output_is_list": [false, false, false, false, false], "output_name": ["sample_frames", "middle_frames", "start_frame", "end_frame", "scene_video"], "name": "SceneInfoNode", "display_name": "Scene Info", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Video", "output_node": false}, "LoadVQGAN": {"input": {"required": {"config": [["firefly_gan_vq.yaml"], {"default": "firefly_gan_vq.yaml"}], "model": [[]], "device": [["cuda", "cpu"], {"default": "cuda"}]}}, "input_order": {"required": ["config", "model", "device"]}, "output": ["VQGAN"], "output_is_list": [false], "output_name": ["vqgan"], "name": "LoadVQGAN", "display_name": "Load VQGAN", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Audio/FishSpeech", "output_node": false}, "AudioToPrompt": {"input": {"required": {"vqgan": ["VQGAN"], "audio": ["AUDIO"], "device": [["cuda", "cpu"], {"default": "cuda"}]}}, "input_order": {"required": ["vqgan", "audio", "device"]}, "output": ["AUDIO", "NUMPY"], "output_is_list": [false, false], "output_name": ["restored_audio", "prompt_tokens"], "name": "AudioToPrompt", "display_name": "Audio To Prompt", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Audio/FishSpeech", "output_node": false}, "Prompt2Semantic": {"input": {"required": {"text": ["STRING", {"multiline": true}], "prompt_text": ["STRING", {"multiline": true}], "prompt_tokens": ["NUMPY"], "max_new_tokens": ["INT", {"default": 1024, "min": 0, "max": 2048, "step": 8, "display": "number"}], "top_p": ["FLOAT", {"default": 0.7, "min": 0.6, "max": 0.9, "step": 0.01, "display": "number"}], "repetition_penalty": ["FLOAT", {"default": 1.2, "min": 1.0, "max": 1.5, "step": 0.01, "display": "number"}], "temperature": ["FLOAT", {"default": 0.7, "min": 0.6, "max": 0.9, "step": 0.01, "display": "number"}], "seed": ["INT", {"default": 42, "min": 0, "max": 4294967295, "step": 1, "display": "number"}], "iterative_prompt": [["yes", "no"], {"default": "yes"}], "chunk_length": ["INT", {"default": 100, "min": 0, "max": 500, "step": 8, "display": "number"}], "compile": [["yes", "no"], {"default": "no"}], "precision": [["bf16", "half"], {"default": "bf16"}], "device": [["cuda", "cpu"], {"default": "cuda"}]}}, "input_order": {"required": ["text", "prompt_text", "prompt_tokens", "max_new_tokens", "top_p", "repetition_penalty", "temperature", "seed", "iterative_prompt", "chunk_length", "compile", "precision", "device"]}, "output": ["NUMPY"], "output_is_list": [false], "output_name": ["codes"], "name": "Prompt2Semantic", "display_name": "Prompt To Semantic", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Audio/FishSpeech", "output_node": false}, "Semantic2Audio": {"input": {"required": {"vqgan": ["VQGAN"], "codes": ["NUMPY"], "device": [["cuda", "cpu"], {"default": "cuda"}]}}, "input_order": {"required": ["vqgan", "codes", "device"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["generated_audio"], "name": "Semantic2Audio", "display_name": "Semantic To Audio", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Audio/FishSpeech", "output_node": false}, "SenseVoiceNode": {"input": {"required": {"audio": ["AUDIO"], "device": [["auto", "cpu"], {"default": "auto"}], "language": [["auto", "zh", "en", "yue", "ja", "ko", "nospeech"], {"default": "auto"}], "num_threads": ["INT", {"default": 4, "min": 1, "max": 32, "step": 1, "display": "number"}], "use_int8": ["BOOLEAN", {"default": true}], "use_itn": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["audio", "device", "language", "num_threads", "use_int8", "use_itn"]}, "output": ["*", "STRING", "STRING", "FLOAT"], "output_is_list": [false, false, false, false], "output_name": ["result", "srt", "text", "total_seconds"], "name": "SenseVoiceNode", "display_name": "Sense Voice \u267e\ufe0fMixlab", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Audio", "output_node": true}, "VideoGenKlingNode": {"input": {"required": {"prompt": ["STRING", {"default": "", "multiline": true}], "duration": [["5", "10"], {"default": "5"}], "aspect_ratio": [["16:9", "9:16", "1:1"], {"default": "16:9"}], "mode": [["standard", "pro"], {"default": "standard"}], "fal_key": ["STRING", {"forceInput": true}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["prompt", "duration", "aspect_ratio", "mode", "fal_key"], "optional": ["image"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "VideoGenKlingNode", "display_name": "Kling Video Generation @fal", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Video", "output_node": false}, "VideoGenRunwayGen3Node": {"input": {"required": {"prompt": ["STRING", {"default": "", "multiline": true}], "image": ["IMAGE"], "duration": [["5", "10"], {"default": "5"}], "aspect_ratio": [["16:9", "9:16"], {"default": "16:9"}], "fal_key": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["prompt", "image", "duration", "aspect_ratio", "fal_key"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "VideoGenRunwayGen3Node", "display_name": "Runway Gen3 Image-to-Video @fal", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Video", "output_node": false}, "VideoGenLumaDreamMachineNode": {"input": {"required": {"prompt": ["STRING", {"default": "", "multiline": true}], "aspect_ratio": [["16:9", "9:16", "4:3", "3:4", "21:9", "9:21"], {"default": "16:9"}], "fal_key": ["STRING", {"forceInput": true}]}, "optional": {"image": ["IMAGE"], "loop": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["prompt", "aspect_ratio", "fal_key"], "optional": ["image", "loop"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "VideoGenLumaDreamMachineNode", "display_name": "Luma Dream Machine @fal", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Video", "output_node": false}, "LoadVideoFromURL": {"input": {"required": {"url": ["STRING", {"default": "https://example.com/video.mp4"}], "force_rate": ["INT", {"default": 0, "min": 0, "max": 60, "step": 1}], "force_size": [["Disabled", "Custom Height", "Custom Width", "Custom", "256x?", "?x256", "256x256", "512x?", "?x512", "512x512"]], "custom_width": ["INT", {"default": 512, "min": 0, "max": 8192, "step": 8}], "custom_height": ["INT", {"default": 512, "min": 0, "max": 8192, "step": 8}], "frame_load_cap": ["INT", {"default": 0, "min": 0, "max": 1000000, "step": 1}], "skip_first_frames": ["INT", {"default": 0, "min": 0, "max": 1000000, "step": 1}], "select_every_nth": ["INT", {"default": 1, "min": 1, "max": 1000000, "step": 1}]}}, "input_order": {"required": ["url", "force_rate", "force_size", "custom_width", "custom_height", "frame_load_cap", "skip_first_frames", "select_every_nth"]}, "output": ["IMAGE", "INT", "VHS_VIDEOINFO"], "output_is_list": [false, false, false], "output_name": ["frames", "frame_count", "video_info"], "name": "LoadVideoFromURL", "display_name": "Load Video from URL", "description": "", "python_module": "custom_nodes.comfyui-mixlab-nodes", "category": "\u267e\ufe0fMixlab/Video", "output_node": false}, "LDSRUpscaler": {"input": {"required": {"model": [["4x-UltraSharp.pth", "ESRGAN_4x.pth", "RealESRGAN_x2.pth", "RealESRGAN_x4.pth", "ldsr/last.ckpt"], {"default": "ldsr/last.ckpt"}], "images": ["IMAGE"], "steps": [["25", "50", "100", "250", "500", "1000"], {"default": "100"}], "pre_downscale": [["None", "1/2", "1/4"], {"default": "None"}], "post_downscale": [["None", "Original Size", "1/2", "1/4"], {"default": "None"}], "downsample_method": [["Nearest", "Lanczos"], {"default": "Lanczos"}]}}, "input_order": {"required": ["model", "images", "steps", "pre_downscale", "post_downscale", "downsample_method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "LDSRUpscaler", "display_name": "LDSR Upscale (all-in-one)", "description": "", "python_module": "custom_nodes.ComfyUI-Flowty-LDSR", "category": "Flowty LDSR", "output_node": false}, "LDSRModelLoader": {"input": {"required": {"model": [["4x-UltraSharp.pth", "ESRGAN_4x.pth", "RealESRGAN_x2.pth", "RealESRGAN_x4.pth", "ldsr/last.ckpt"], {"default": "ldsr/last.ckpt"}]}}, "input_order": {"required": ["model"]}, "output": ["UPSCALE_MODEL"], "output_is_list": [false], "output_name": ["UPSCALE_MODEL"], "name": "LDSRModelLoader", "display_name": "Load LDSR Model", "description": "", "python_module": "custom_nodes.ComfyUI-Flowty-LDSR", "category": "Flowty LDSR", "output_node": false}, "LDSRUpscale": {"input": {"required": {"upscale_model": ["UPSCALE_MODEL"], "images": ["IMAGE"], "steps": [["25", "50", "100", "250", "500", "1000"], {"default": "100"}], "pre_downscale": [["None", "1/2", "1/4"], {"default": "None"}], "post_downscale": [["None", "Original Size", "1/2", "1/4"], {"default": "None"}], "downsample_method": [["Nearest", "Lanczos"], {"default": "Lanczos"}]}}, "input_order": {"required": ["upscale_model", "images", "steps", "pre_downscale", "post_downscale", "downsample_method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "LDSRUpscale", "display_name": "LDSR Upscale", "description": "", "python_module": "custom_nodes.ComfyUI-Flowty-LDSR", "category": "Flowty LDSR", "output_node": false}, "DownloadAndLoadFlorence2Model": {"input": {"required": {"model": [["microsoft/Florence-2-base", "microsoft/Florence-2-base-ft", "microsoft/Florence-2-large", "microsoft/Florence-2-large-ft", "HuggingFaceM4/Florence-2-DocVQA", "thwri/CogFlorence-2.1-Large", "thwri/CogFlorence-2.2-Large", "gokaygokay/Florence-2-SD3-Captioner", "gokaygokay/Florence-2-Flux-Large", "MiaoshouAI/Florence-2-base-PromptGen-v1.5", "MiaoshouAI/Florence-2-large-PromptGen-v1.5"], {"default": "microsoft/Florence-2-base"}], "precision": [["fp16", "bf16", "fp32"], {"default": "fp16"}], "attention": [["flash_attention_2", "sdpa", "eager"], {"default": "sdpa"}]}, "optional": {"lora": ["PEFTLORA"]}}, "input_order": {"required": ["model", "precision", "attention"], "optional": ["lora"]}, "output": ["FL2MODEL"], "output_is_list": [false], "output_name": ["florence2_model"], "name": "DownloadAndLoadFlorence2Model", "display_name": "DownloadAndLoadFlorence2Model", "description": "", "python_module": "custom_nodes.ComfyUI-Florence2", "category": "Florence2", "output_node": false}, "DownloadAndLoadFlorence2Lora": {"input": {"required": {"model": [["NikshepShetty/Florence-2-pixelprose"]]}}, "input_order": {"required": ["model"]}, "output": ["PEFTLORA"], "output_is_list": [false], "output_name": ["lora"], "name": "DownloadAndLoadFlorence2Lora", "display_name": "DownloadAndLoadFlorence2Lora", "description": "", "python_module": "custom_nodes.ComfyUI-Florence2", "category": "Florence2", "output_node": false}, "Florence2Run": {"input": {"required": {"image": ["IMAGE"], "florence2_model": ["FL2MODEL"], "text_input": ["STRING", {"default": "", "multiline": true}], "task": [["region_caption", "dense_region_caption", "region_proposal", "caption", "detailed_caption", "more_detailed_caption", "caption_to_phrase_grounding", "referring_expression_segmentation", "ocr", "ocr_with_region", "docvqa", "prompt_gen_tags", "prompt_gen_mixed_caption"]], "fill_mask": ["BOOLEAN", {"default": true}]}, "optional": {"keep_model_loaded": ["BOOLEAN", {"default": false}], "max_new_tokens": ["INT", {"default": 1024, "min": 1, "max": 4096}], "num_beams": ["INT", {"default": 3, "min": 1, "max": 64}], "do_sample": ["BOOLEAN", {"default": true}], "output_mask_select": ["STRING", {"default": ""}], "seed": ["INT", {"default": 1, "min": 1, "max": 18446744073709551615}]}}, "input_order": {"required": ["image", "florence2_model", "text_input", "task", "fill_mask"], "optional": ["keep_model_loaded", "max_new_tokens", "num_beams", "do_sample", "output_mask_select", "seed"]}, "output": ["IMAGE", "MASK", "STRING", "JSON"], "output_is_list": [false, false, false, false], "output_name": ["image", "mask", "caption", "data"], "name": "Florence2Run", "display_name": "Florence2Run", "description": "", "python_module": "custom_nodes.ComfyUI-Florence2", "category": "Florence2", "output_node": false}, "Load Vit Matte Model (mtb)": {"input": {"required": {"kind": [["Composition-1K", "Distinctions-646"]], "autodownload": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["kind", "autodownload"]}, "output": ["VITMATTE_MODEL"], "output_is_list": [false], "output_name": ["torch_script"], "name": "Load Vit Matte Model (mtb)", "display_name": "Load Vit Matte Model (mtb)", "description": "", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/vitmatte", "output_node": false}, "Generate Trimap (mtb)": {"input": {"required": {"mask": ["MASK"], "erode": ["INT", {"default": 10}], "dilate": ["INT", {"default": 10}]}}, "input_order": {"required": ["mask", "erode", "dilate"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["trimap"], "name": "Generate Trimap (mtb)", "display_name": "Generate Trimap (mtb)", "description": "", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/vitmatte", "output_node": false}, "Apply Vit Matte (mtb)": {"input": {"required": {"model": ["VITMATTE_MODEL"], "image": ["IMAGE"], "trimap": ["IMAGE"], "returns": [["RGB", "RGBA"]]}}, "input_order": {"required": ["model", "image", "trimap", "returns"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image (rgba)", "mask"], "name": "Apply Vit Matte (mtb)", "display_name": "Apply Vit Matte (mtb)", "description": "", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/utils", "output_node": false}, "Filter Z (mtb)": {"input": {"required": {"image": ["IMAGE"], "depth": ["IMAGE"], "to_black": ["BOOLEAN", {"default": true}], "threshold": ["FLOAT", {"default": 0.5, "step": 0.01, "min": 0.0, "max": 1.0}], "invert": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "depth", "to_black", "threshold", "invert"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Filter Z (mtb)", "display_name": "Filter Z (mtb)", "description": "# Filter Z\nFilters an image based on a depth map\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/filters", "output_node": false}, "Restore Face (mtb)": {"input": {"required": {"image": ["IMAGE"], "model": ["FACEENHANCE_MODEL"], "aligned": ["BOOLEAN", {"default": false}], "only_center_face": ["BOOLEAN", {"default": false}], "weight": ["FLOAT", {"default": 0.5}], "save_tmp_steps": ["BOOLEAN", {"default": true}]}, "optional": {"preserve_alpha": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "model", "aligned", "only_center_face", "weight", "save_tmp_steps"], "optional": ["preserve_alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Restore Face (mtb)", "display_name": "Restore Face (mtb)", "description": "# Restore Face\nUses GFPGan to restore faces\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/facetools", "output_node": false}, "Load Face Enhance Model (mtb)": {"input": {"required": {"model_name": [[], {"default": "None"}], "upscale": ["INT", {"default": 1}]}, "optional": {"bg_upsampler": ["UPSCALE_MODEL", {"default": null}]}}, "input_order": {"required": ["model_name", "upscale"], "optional": ["bg_upsampler"]}, "output": ["FACEENHANCE_MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "Load Face Enhance Model (mtb)", "display_name": "Load Face Enhance Model (mtb)", "description": "# Load Face Enhance Model\n\nLoads a GFPGan or RestoreFormer model for face enhancement.\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/facetools", "output_node": false}, "Image Remove Background Rembg (mtb)": {"input": {"required": {"image": ["IMAGE"], "alpha_matting": ["BOOLEAN", {"default": false}], "alpha_matting_foreground_threshold": ["INT", {"default": 240, "min": 0, "max": 255}], "alpha_matting_background_threshold": ["INT", {"default": 10, "min": 0, "max": 255}], "alpha_matting_erode_size": ["INT", {"default": 10, "min": 0, "max": 255}], "post_process_mask": ["BOOLEAN", {"default": false}], "bgcolor": ["COLOR", {"default": "#000000"}]}}, "input_order": {"required": ["image", "alpha_matting", "alpha_matting_foreground_threshold", "alpha_matting_background_threshold", "alpha_matting_erode_size", "post_process_mask", "bgcolor"]}, "output": ["IMAGE", "MASK", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["Image (rgba)", "Mask", "Image"], "name": "Image Remove Background Rembg (mtb)", "display_name": "Image Remove Background Rembg (mtb)", "description": "# Image Remove Background\n\nRemoves the background from the input using Rembg.\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/image", "output_node": false}, "Load Image Sequence (mtb)": {"input": {"required": {"path": ["STRING", {"default": "videos/####.png"}], "current_frame": ["INT", {"default": 0, "min": -1, "max": 9999999}]}, "optional": {"range": ["STRING", {"default": ""}]}}, "input_order": {"required": ["path", "current_frame"], "optional": ["range"]}, "output": ["IMAGE", "MASK", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["image", "mask", "current_frame", "total_frames"], "name": "Load Image Sequence (mtb)", "display_name": "Load Image Sequence (mtb)", "description": "# Load Image Sequence\n\nLoad an image sequence from a folder. The current frame is used to determine which image to load.  \nThe UX need improvements but you can use it as follow:  \n\n- If current_frame is -1, it will load all the frames matching the pattern.\n- If the path contains a `*` it will glob the paths using it.\n- If range is provided (for instance `0-10` to load frame 0 to 10) current_frame is ignored.\n\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/IO", "output_node": false}, "Save Image Sequence (mtb)": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "Sequence"}], "current_frame": ["INT", {"default": 0, "min": 0, "max": 9999999}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "current_frame"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Save Image Sequence (mtb)", "display_name": "Save Image Sequence (mtb)", "description": "# Save Image Sequence\n\nSave an image sequence to a folder. The current frame is used to determine which image to save.\nThis is merely a wrapper around the `save_images` function with formatting for the output folder and filename.\n    \n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/IO", "output_node": true}, "Latent Lerp (mtb)": {"input": {"required": {"A": ["LATENT"], "B": ["LATENT"], "t": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["A", "B", "t"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "Latent Lerp (mtb)", "display_name": "Latent Lerp (mtb)", "description": "# Latent Lerp\nLinear interpolation (blend) between two latent vectors\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/latent", "output_node": false}, "Float To Number (mtb)": {"input": {"required": {"float": ["FLOAT", {"default": 0, "min": -1000000000.0, "max": 1000000000.0, "step": 1, "forceInput": true}]}}, "input_order": {"required": ["float"]}, "output": ["NUMBER"], "output_is_list": [false], "output_name": ["NUMBER"], "name": "Float To Number (mtb)", "display_name": "Float To Number (mtb)", "description": "Node addon for the WAS Suite. Converts a \"comfy\" FLOAT to a NUMBER.", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/number", "output_node": false}, "Int To Bool (mtb)": {"input": {"required": {"int": ["INT", {"default": 0}]}}, "input_order": {"required": ["int"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Int To Bool (mtb)", "display_name": "Int To Bool (mtb)", "description": "# Int to Bool\n\nBasic int to bool conversion, >= 1 is true\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/number", "output_node": false}, "Int To Number (mtb)": {"input": {"required": {"int": ["INT", {"default": 0, "min": -1000000000.0, "max": 1000000000.0, "step": 1, "forceInput": true}]}}, "input_order": {"required": ["int"]}, "output": ["NUMBER"], "output_is_list": [false], "output_name": ["NUMBER"], "name": "Int To Number (mtb)", "display_name": "Int To Number (mtb)", "description": "Node addon for the WAS Suite. Converts a \"comfy\" INT to a NUMBER.", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/number", "output_node": false}, "Unsplash Image (mtb)": {"input": {"required": {"width": ["INT", {"default": 512, "max": 8096, "min": 0, "step": 1}], "height": ["INT", {"default": 512, "max": 8096, "min": 0, "step": 1}], "random_seed": ["INT", {"default": 0, "max": 100000.0, "min": 0, "step": 1}]}, "optional": {"keyword": ["STRING", {"default": "nature"}]}}, "input_order": {"required": ["width", "height", "random_seed"], "optional": ["keyword"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Unsplash Image (mtb)", "display_name": "Unsplash Image (mtb)", "description": "# Unsplash Image\n\nUnsplash Image given a keyword and a size\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/generate", "output_node": false}, "Text To Image (mtb)": {"input": {"required": {"text": ["STRING", {"default": "Hello world!"}], "font": [["font"]], "wrap": ["BOOLEAN", {"default": true}], "trim": ["BOOLEAN", {"default": true}], "line_height": ["FLOAT", {"default": 1.0, "min": 0, "step": 0.1}], "font_size": ["INT", {"default": 32, "min": 1, "max": 2500, "step": 1}], "width": ["INT", {"default": 512, "min": 1, "max": 8096, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 8096, "step": 1}], "color": ["COLOR", {"default": "black"}], "background": ["COLOR", {"default": "white"}], "h_align": [["left", "center", "right"], {"default": "left"}], "v_align": [["top", "center", "bottom"], {"default": "top"}], "h_offset": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "v_offset": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "h_coverage": ["INT", {"default": 100, "min": 1, "max": 100, "step": 1}]}}, "input_order": {"required": ["text", "font", "wrap", "trim", "line_height", "font_size", "width", "height", "color", "background", "h_align", "v_align", "h_offset", "v_offset", "h_coverage"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Text To Image (mtb)", "display_name": "Text To Image (mtb)", "description": "# Text to Image\n\nThis node look for any font files in comfy_dir/fonts.\nby default it fallsback to a default font.\n\n![img](https://i.imgur.com/3GT92hy.gif)\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/generate", "output_node": false}, "Bbox From Mask (mtb)": {"input": {"required": {"mask": ["MASK"], "invert": ["BOOLEAN", {"default": false}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["mask", "invert"], "optional": ["image"]}, "output": ["BBOX", "IMAGE"], "output_is_list": [false, false], "output_name": ["bbox", "image (optional)"], "name": "Bbox From Mask (mtb)", "display_name": "Bbox From Mask (mtb)", "description": "# BBox from Mask\n\nFrom a mask extract the bounding box\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/crop", "output_node": false}, "Bbox (mtb)": {"input": {"required": {"x": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "y": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "width": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}], "height": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}]}}, "input_order": {"required": ["x", "y", "width", "height"]}, "output": ["BBOX"], "output_is_list": [false], "output_name": ["BBOX"], "name": "Bbox (mtb)", "display_name": "Bbox (mtb)", "description": "# BBox\n\nThe bounding box (BBOX) custom type used by other nodes\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/crop", "output_node": false}, "Crop (mtb)": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"mask": ["MASK"], "x": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "y": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "width": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}], "height": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}], "bbox": ["BBOX"]}}, "input_order": {"required": ["image"], "optional": ["mask", "x", "y", "width", "height", "bbox"]}, "output": ["IMAGE", "MASK", "BBOX"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "MASK", "BBOX"], "name": "Crop (mtb)", "display_name": "Crop (mtb)", "description": "# Crop\n\nCrops an image and an optional mask to a given bounding box\n\nThe bounding box can be given as a tuple of (x, y, width, height) or as a BBOX type\nThe BBOX input takes precedence over the tuple input\n    \n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/crop", "output_node": false}, "Uncrop (mtb)": {"input": {"required": {"image": ["IMAGE"], "crop_image": ["IMAGE"], "bbox": ["BBOX"], "border_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "crop_image", "bbox", "border_blending"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Uncrop (mtb)", "display_name": "Uncrop (mtb)", "description": "# Uncrop\nUncrops an image to a given bounding box\nThe bounding box can be given as a tuple of (x, y, width, height) or as a BBOX type\nThe BBOX input takes precedence over the tuple input\n    \n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/crop", "output_node": false}, "Split Bbox (mtb)": {"input": {"required": {"bbox": ["BBOX"]}}, "input_order": {"required": ["bbox"]}, "output": ["INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["x", "y", "width", "height"], "name": "Split Bbox (mtb)", "display_name": "Split Bbox (mtb)", "description": "Split the components of a bbox", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/crop", "output_node": false}, "Save Gif (mtb)": {"input": {"required": {"image": ["IMAGE"], "fps": ["INT", {"default": 12, "min": 1, "max": 120}], "resize_by": ["FLOAT", {"default": 1.0, "min": 0.1}], "optimize": ["BOOLEAN", {"default": false}], "pingpong": ["BOOLEAN", {"default": false}], "resample_filter": [["nearest", "box", "bilinear", "hamming", "bicubic", "lanczos"]], "use_ffmpeg": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "fps", "resize_by", "optimize", "pingpong", "resample_filter", "use_ffmpeg"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Save Gif (mtb)", "display_name": "Save Gif (mtb)", "description": "# Save GIF\nSave the images from the batch as a GIF\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/IO", "output_node": true}, "Export With Ffmpeg (mtb)": {"input": {"optional": {"images": ["IMAGE"], "playlist": ["PLAYLIST"]}, "required": {"fps": ["FLOAT", {"default": 24, "min": 1}], "prefix": ["STRING", {"default": "export"}], "format": [["mov", "mp4", "mkv", "gif", "avi"], {"default": "mov"}], "codec": [["prores_ks", "libx264", "libx265", "gif"], {"default": "prores_ks"}]}}, "input_order": {"optional": ["images", "playlist"], "required": ["fps", "prefix", "format", "codec"]}, "output": ["VIDEO"], "output_is_list": [false], "output_name": ["VIDEO"], "name": "Export With Ffmpeg (mtb)", "display_name": "Export With Ffmpeg (mtb)", "description": "# Export with FFmpeg\n\nQuite crude node, [VHS](https://github.com/Kosinkadink/ComfyUI-VideoHelperSuite) is recommended now\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/IO", "output_node": true}, "Add To Playlist (mtb)": {"input": {"required": {"relative_paths": ["BOOLEAN", {"default": false}], "persistant_playlist": ["BOOLEAN", {"default": false}], "playlist_name": ["STRING", {"default": "playlist_{index:04d}"}], "index": ["INT", {"default": 0, "min": 0}]}}, "input_order": {"required": ["relative_paths", "persistant_playlist", "playlist_name", "index"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Add To Playlist (mtb)", "display_name": "Add To Playlist (mtb)", "description": "Add a video to the playlist", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/IO", "output_node": true}, "Read Playlist (mtb)": {"input": {"required": {"enable": ["BOOLEAN", {"default": true}], "persistant_playlist": ["BOOLEAN", {"default": false}], "playlist_name": ["STRING", {"default": "playlist_{index:04d}"}], "index": ["INT", {"default": 0, "min": 0}]}}, "input_order": {"required": ["enable", "persistant_playlist", "playlist_name", "index"]}, "output": ["PLAYLIST"], "output_is_list": [false], "output_name": ["PLAYLIST"], "name": "Read Playlist (mtb)", "display_name": "Read Playlist (mtb)", "description": "# Read a playlist\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/IO", "output_node": false}, "String Replace (mtb)": {"input": {"required": {"string": ["STRING", {"forceInput": true}], "old": ["STRING", {"default": ""}], "new": ["STRING", {"default": ""}]}}, "input_order": {"required": ["string", "old", "new"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "String Replace (mtb)", "display_name": "String Replace (mtb)", "description": "# String Replace\nBasic string replacement.\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/string", "output_node": false}, "Fit Number (mtb)": {"input": {"required": {"value": ["FLOAT", {"default": 0, "forceInput": true}], "clamp": ["BOOLEAN", {"default": false}], "source_min": ["FLOAT", {"default": 0.0, "step": 0.01, "min": -100000.0}], "source_max": ["FLOAT", {"default": 1.0, "step": 0.01, "min": -100000.0}], "target_min": ["FLOAT", {"default": 0.0, "step": 0.01, "min": -100000.0}], "target_max": ["FLOAT", {"default": 1.0, "step": 0.01, "min": -100000.0}], "easing": [["Linear", "Sine In", "Sine Out", "Sine In/Out", "Quart In", "Quart Out", "Quart In/Out", "Cubic In", "Cubic Out", "Cubic In/Out", "Circ In", "Circ Out", "Circ In/Out", "Back In", "Back Out", "Back In/Out", "Elastic In", "Elastic Out", "Elastic In/Out", "Bounce In", "Bounce Out", "Bounce In/Out"], {"default": "Linear"}]}}, "input_order": {"required": ["value", "clamp", "source_min", "source_max", "target_min", "target_max", "easing"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "Fit Number (mtb)", "display_name": "Fit Number (mtb)", "description": "Fit the input float using a source and target range", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/math", "output_node": false}, "Get Batch From History (mtb)": {"input": {"required": {"enable": ["BOOLEAN", {"default": true}], "count": ["INT", {"default": 1, "min": 0}], "offset": ["INT", {"default": 0, "min": -1000000000.0, "max": 1000000000.0}], "internal_count": ["INT", {"default": 0}]}, "optional": {"passthrough_image": ["IMAGE"]}}, "input_order": {"required": ["enable", "count", "offset", "internal_count"], "optional": ["passthrough_image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Get Batch From History (mtb)", "display_name": "Get Batch From History (mtb)", "description": "# Get Batch from History\n\nThis experimental node does something really simple, it reads the outputs from the history endpoint of Comfy.\nOutputs gets populated by... output nodes. There are various ones but  for instance in core comfy, `Save Image` and `Preview Image` are output nodes.\nI advice to start simple and have workflows that only generates one output per queue run. Of course once you master it you can use multiple outputs as output order is kept (as long as all outputs are ran).\n\nAnother basic use case of batch from history that you can see in the 4th [example](Examples), the fake deforum effect, basically this flow allows you to **feedback** an image using the history.\n\nA classic example when showing the feedback concept is the poor man's [grey scott diffusion model](https://groups.csail.mit.edu/mac/projects/amorphous/GrayScott/) i.e the \"creative\" derivative using only a gaussian blur and a sharp at each fed steps. \n\n \nHere is an example workflow of just that.\n\nthis is the output:  \n<p align=center>\n<img width=250 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/162fb62e-96d4-4843-8902-19d59c536469\"/>\n</p>\n\nand the workflow:\n<p align=center>  \n<img width=1000 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/11257918-86ff-4ddd-8d08-f2a59f7f45a2\"/>\n</p>\n\n<details><summary>expand here to copy paste this workflow</summary>\n\n```json\n{\"last_node_id\":13,\"last_link_id\":16,\"nodes\":[{\"id\":3,\"type\":\"Get Batch From History (mtb)\",\"pos\":[401,280],\"size\":[315,130],\"flags\":{},\"order\":4,\"mode\":0,\"inputs\":[{\"name\":\"passthrough_image\",\"type\":\"IMAGE\",\"link\":2,\"slot_index\":0},{\"name\":\"enable\",\"type\":\"BOOLEAN\",\"link\":16,\"widget\":{\"name\":\"enable\"}}],\"outputs\":[{\"name\":\"images\",\"type\":\"IMAGE\",\"links\":[8],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Get Batch From History (mtb)\"},\"widgets_values\":[false,1,0,357]},{\"id\":1,\"type\":\"Batch Shape (mtb)\",\"pos\":[90,228],\"size\":[210,310],\"flags\":{},\"order\":0,\"mode\":0,\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[2],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Shape (mtb)\"},\"widgets_values\":[1,\"Box\",512,512,229,\"#ffffff\",\"#000000\",\"#000000\",0,0]},{\"id\":10,\"type\":\"Blur (mtb)\",\"pos\":[733,282],\"size\":[315,82],\"flags\":{},\"order\":6,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":8}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[14],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Blur (mtb)\"},\"widgets_values\":[8,6]},{\"id\":13,\"type\":\"Sharpen (mtb)\",\"pos\":[1067,280],\"size\":[315,130],\"flags\":{},\"order\":7,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":14}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[15],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Sharpen (mtb)\"},\"widgets_values\":[31,1,1,1]},{\"id\":2,\"type\":\"PreviewImage\",\"pos\":[1404,278],\"size\":[210,246],\"flags\":{},\"order\":8,\"mode\":0,\"inputs\":[{\"name\":\"images\",\"type\":\"IMAGE\",\"link\":15}],\"properties\":{\"Node name for S&R\":\"PreviewImage\"}},{\"id\":6,\"type\":\"Int To Bool (mtb)\",\"pos\":[153,597],\"size\":[210,42.27488708496094],\"flags\":{},\"order\":2,\"mode\":0,\"inputs\":[{\"name\":\"int\",\"type\":\"INT\",\"link\":4,\"widget\":{\"name\":\"int\"}}],\"outputs\":[{\"name\":\"BOOLEAN\",\"type\":\"BOOLEAN\",\"links\":[16],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Int To Bool (mtb)\"},\"widgets_values\":[0]},{\"id\":9,\"type\":\"Get Batch From History (mtb)\",\"pos\":[181,706],\"size\":[315,130],\"flags\":{},\"order\":3,\"mode\":0,\"inputs\":[{\"name\":\"passthrough_image\",\"type\":\"IMAGE\",\"link\":null,\"slot_index\":0},{\"name\":\"enable\",\"type\":\"BOOLEAN\",\"link\":6,\"widget\":{\"name\":\"enable\"}}],\"outputs\":[{\"name\":\"images\",\"type\":\"IMAGE\",\"links\":[7],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Get Batch From History (mtb)\"},\"widgets_values\":[true,44,0,357]},{\"id\":7,\"type\":\"Save Gif (mtb)\",\"pos\":[567,703],\"size\":[210,372],\"flags\":{},\"order\":5,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":7}],\"properties\":{\"Node name for S&R\":\"Save Gif (mtb)\"},\"widgets_values\":[20,1,false,true,\"nearest\",\"/view?filename=25d12cbdb5.gif&subfolder=&type=output\"]},{\"id\":4,\"type\":\"Animation Builder (mtb)\",\"pos\":[-110,596],\"size\":[210,318],\"flags\":{},\"order\":1,\"mode\":0,\"outputs\":[{\"name\":\"frame\",\"type\":\"INT\",\"links\":[4],\"shape\":3,\"slot_index\":0},{\"name\":\"0-1 (scaled)\",\"type\":\"FLOAT\",\"links\":null,\"shape\":3},{\"name\":\"count\",\"type\":\"INT\",\"links\":null,\"shape\":3},{\"name\":\"loop_ended\",\"type\":\"BOOLEAN\",\"links\":[6],\"shape\":3,\"slot_index\":3}],\"properties\":{\"Node name for S&R\":\"Animation Builder (mtb)\"},\"widgets_values\":[45,1,1,0,0,\"Idle\",\"Iteration: Idle\",\"reset\",\"queue\"]}],\"links\":[[2,1,0,3,0,\"IMAGE\"],[4,4,0,6,0,\"INT\"],[6,4,3,9,1,\"BOOLEAN\"],[7,9,0,7,0,\"IMAGE\"],[8,3,0,10,0,\"IMAGE\"],[14,10,0,13,0,\"IMAGE\"],[15,13,0,2,0,\"IMAGE\"],[16,6,0,3,1,\"BOOLEAN\"]],\"groups\":[],\"config\":{},\"extra\":{},\"version\":0.4}\n```\n\n</details>\n\nThe blue bordered node is the one doing the feedback, on first frame (frame == 0 converted to bool is false) the passthrough image will be used, this example uses the [Batch Shape](nodes-batch-shape) node, only on the first queue item, then the previous queue item is fed to each subsequent queue item.\nThe orange bordered one is fetching all the frames we queued once done to assemble the GIF. All this happens in \"one click\" thanks to [Animation Builder](nodes-animation-builder)\n\n\n## Inputs\n|name|description|\n|-|-|\n|passthrough_image | This is the image that gets sent out when `enable` is set to false, useful for the init first image in the fake deforum [example](Examples) for instance ([04-animation_builder-deforum.json](https://github.com/melMass/comfy_mtb/blob/main/examples/04-animation_builder-deforum.json)) |\n|enable | This makes the node not fetch the history. For instance when you just initiated the server the history is empty, see [Animation Builder](nodes-animation-builder) for practical examples |\n|count | the number of frames to fetch from the history |\n| **Reset Button** | resets the internal counters, although the node is though around using its queue button it should still work fine when using the regular queue button of comfy |\n| **Queue Button** | Convenience button to run the queues (`total_frames` * `loop_count`) |", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/animation", "output_node": false}, "Any To String (mtb)": {"input": {"required": {"input": "*"}}, "input_order": {"required": ["input"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Any To String (mtb)", "display_name": "Any To String (mtb)", "description": "# Any to String\n\nTries to take any input and convert it to a string.\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/converters", "output_node": false}, "Concat Images (mtb)": {"input": {"required": {"reverse": ["BOOLEAN", {"default": false}]}, "optional": {"on_mismatch": [["Error", "Smallest", "Largest"], {"default": "Smallest"}]}}, "input_order": {"required": ["reverse"], "optional": ["on_mismatch"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Concat Images (mtb)", "display_name": "Concat Images (mtb)", "description": "# Concat Images\n\nAdd images to batch.\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/image", "output_node": false}, "Math Expression (mtb)": {"input": {"required": {"expression": ["STRING", {"default": "", "multiline": true}]}}, "input_order": {"required": ["expression"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["result (float)", "result (int)"], "name": "Math Expression (mtb)", "display_name": "Math Expression (mtb)", "description": "evaluate a simple math expression string, only supports literal_eval", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/math", "output_node": false}, "To Device (mtb)": {"input": {"required": {"ignore_errors": ["BOOLEAN", {"default": false}], "device": [["cpu", "cuda", "cuda0"], {"default": "cpu"}]}, "optional": {"image": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["ignore_errors", "device"], "optional": ["image", "mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["images", "masks"], "name": "To Device (mtb)", "display_name": "To Device (mtb)", "description": "# To Device\nSend a image or mask tensor to the given device.\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/utils", "output_node": false}, "Apply Text Template (mtb)": {"input": {"required": {"template": ["STRING", {"default": "", "multiline": true}]}}, "input_order": {"required": ["template"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["string"], "name": "Apply Text Template (mtb)", "display_name": "Apply Text Template (mtb)", "description": "# Apply Text Template\n\nVery basic string interpolation using [dynamic inputs](web-dynamic-inputs).\n\nThe var names are `var_1`, `var_2` etc... They are interpolated like this: `{var_1}`, see the following example for a more concrete idea:\n\n![template_string](https://github.com/melMass/comfy_mtb/assets/7041726/abf8d63e-87f6-426a-adcc-514b85daeb5c)\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/utils", "output_node": false}, "Match Dimensions (mtb)": {"input": {"required": {"source": ["IMAGE"], "reference": ["IMAGE"], "match": [["height", "width"], {"default": "height"}]}}, "input_order": {"required": ["source", "reference", "match"]}, "output": ["IMAGE", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["image", "new_width", "new_height"], "name": "Match Dimensions (mtb)", "display_name": "Match Dimensions (mtb)", "description": "# Match Dimensions\n\nMatch images dimensions along the given axis, preserving aspect ratio.\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/utils", "output_node": false}, "Auto Pan Equilateral (mtb)": {"input": {"required": {"equilateral_image": ["IMAGE"], "fovX": ["FLOAT", {"default": 45.0}], "fovY": ["FLOAT", {"default": 45.0}], "elevation": ["FLOAT", {"default": 0.5}], "frame_count": ["INT", {"default": 100}], "width": ["INT", {"default": 768}], "height": ["INT", {"default": 512}]}, "optional": {"floats_fovX": ["FLOATS"], "floats_fovY": ["FLOATS"], "floats_elevation": ["FLOATS"]}}, "input_order": {"required": ["equilateral_image", "fovX", "fovY", "elevation", "frame_count", "width", "height"], "optional": ["floats_fovX", "floats_fovY", "floats_elevation"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Auto Pan Equilateral (mtb)", "display_name": "Auto Pan Equilateral (mtb)", "description": "# Autopan Equilateral\n\nGenerate a 360 panning video from an equilateral image.\n\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/utils", "output_node": false}, "Floats To Float (mtb)": {"input": {"required": {"floats": ["FLOATS"]}}, "input_order": {"required": ["floats"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["float"], "name": "Floats To Float (mtb)", "display_name": "Floats To Float (mtb)", "description": "# `FLOATS` to `FLOAT`\n\nAD, IPA, Fitz etc have commonly choose to mistype float lists as FLOAT.\n\nThis is just a hack to be compatible with these\n    \n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/utils", "output_node": false}, "Float To Floats (mtb)": {"input": {"required": {"float": ["FLOAT", {"default": 0.0, "forceInput": true}]}}, "input_order": {"required": ["float"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["floats"], "name": "Float To Floats (mtb)", "display_name": "Float To Floats (mtb)", "description": "Conversion utility for compatibility with other extensions (AD, IPA, Fitz are using FLOAT to represent list of floats.)", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/utils", "output_node": false}, "Floats To Ints (mtb)": {"input": {"required": {"floats": ["FLOATS", {"forceInput": true}]}}, "input_order": {"required": ["floats"]}, "output": ["INTS", "INT"], "output_is_list": [false, false], "output_name": ["INTS", "INT"], "name": "Floats To Ints (mtb)", "display_name": "Floats To Ints (mtb)", "description": "Conversion utility for compatibility with frame interpolation.", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/utils", "output_node": false}, "Debug (mtb)": {"input": {"required": {"output_to_console": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["output_to_console"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Debug (mtb)", "display_name": "Debug (mtb)", "description": "# Debug\n\nThis node is basically trying to provide informations about any input types supported by Comfy.\nIt uses the [dynamic inputs](web-dynamic-inputs) concept used across a few of the mtb nodes.\nIt specifically handles a few types and fallback to string representation for the others.\n\n![debug](https://github.com/melMass/comfy_mtb/assets/7041726/e20b5379-b5bf-4e2f-8d4c-c79f217d7f8d)\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/debug", "output_node": true}, "Save Tensors (mtb)": {"input": {"required": {"filename_prefix": ["STRING", {"default": "ComfyPickle"}]}, "optional": {"image": ["IMAGE"], "mask": ["MASK"], "latent": ["LATENT"]}}, "input_order": {"required": ["filename_prefix"], "optional": ["image", "mask", "latent"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Save Tensors (mtb)", "display_name": "Save Tensors (mtb)", "description": "# Save Tensors\nSave torch tensors (image, mask or latent) to disk.\nuseful to debug things outside comfy like in notebooks.\n    \n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/debug", "output_node": true}, "Batch Float (mtb)": {"input": {"required": {"mode": [["Single", "Steps"], {"default": "Steps"}], "count": ["INT", {"default": 2}], "min": ["FLOAT", {"default": 0.0, "step": 0.001}], "max": ["FLOAT", {"default": 1.0, "step": 0.001}], "easing": [["Linear", "Sine In", "Sine Out", "Sine In/Out", "Quart In", "Quart Out", "Quart In/Out", "Cubic In", "Cubic Out", "Cubic In/Out", "Circ In", "Circ Out", "Circ In/Out", "Back In", "Back Out", "Back In/Out", "Elastic In", "Elastic Out", "Elastic In/Out", "Bounce In", "Bounce Out", "Bounce In/Out"], {"default": "Linear"}]}}, "input_order": {"required": ["mode", "count", "min", "max", "easing"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["FLOATS"], "name": "Batch Float (mtb)", "display_name": "Batch Float (mtb)", "description": "# Batch Float\n\nGenerates a batch of float values with interpolation\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/batch", "output_node": false}, "Batch2d Transform (mtb)": {"input": {"required": {"image": ["IMAGE"], "border_handling": [["edge", "constant", "reflect", "symmetric"], {"default": "edge"}], "constant_color": ["COLOR", {"default": "#000000"}]}, "optional": {"x": ["FLOATS"], "y": ["FLOATS"], "zoom": ["FLOATS"], "angle": ["FLOATS"], "shear": ["FLOATS"]}}, "input_order": {"required": ["image", "border_handling", "constant_color"], "optional": ["x", "y", "zoom", "angle", "shear"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Batch2d Transform (mtb)", "display_name": "Batch2d Transform (mtb)", "description": "# Batch Transform\n\nTransform a batch of images using a batch of keyframes\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/batch", "output_node": false}, "Batch Shape (mtb)": {"input": {"required": {"count": ["INT", {"default": 1}], "shape": [["Box", "Circle", "Diamond", "Tube"], {"default": "Circle"}], "image_width": ["INT", {"default": 512}], "image_height": ["INT", {"default": 512}], "shape_size": ["INT", {"default": 100}], "color": ["COLOR", {"default": "#ffffff"}], "bg_color": ["COLOR", {"default": "#000000"}], "shade_color": ["COLOR", {"default": "#000000"}], "thickness": ["INT", {"default": 5}], "shadex": ["FLOAT", {"default": 0.0}], "shadey": ["FLOAT", {"default": 0.0}]}}, "input_order": {"required": ["count", "shape", "image_width", "image_height", "shape_size", "color", "bg_color", "shade_color", "thickness", "shadex", "shadey"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Batch Shape (mtb)", "display_name": "Batch Shape (mtb)", "description": "# Batch Shape\n\nGenerates a batch of 2D shapes with optional shading (experimental)\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/batch", "output_node": false}, "Batch Make (mtb)": {"input": {"required": {"image": ["IMAGE"], "count": ["INT", {"default": 1}]}}, "input_order": {"required": ["image", "count"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Batch Make (mtb)", "display_name": "Batch Make (mtb)", "description": "# Batch Make \n\nSimply duplicates the input frame as a batch", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/batch", "output_node": false}, "Batch Float Assemble (mtb)": {"input": {"required": {"reverse": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["reverse"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["FLOATS"], "name": "Batch Float Assemble (mtb)", "display_name": "Batch Float Assemble (mtb)", "description": "# Batch Float Assemble\n\nAssembles mutiple batches of floats into a single stream (batch)\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/batch", "output_node": false}, "Batch Float Fill (mtb)": {"input": {"required": {"floats": ["FLOATS"], "direction": [["head", "tail"], {"default": "tail"}], "value": ["FLOAT", {"default": 0.0}], "count": ["INT", {"default": 1}]}}, "input_order": {"required": ["floats", "direction", "value", "count"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["FLOATS"], "name": "Batch Float Fill (mtb)", "display_name": "Batch Float Fill (mtb)", "description": "# Batch Float Fill\n\nFills a batch float with a single value until it reaches the target length\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/batch", "output_node": false}, "Batch Float Normalize (mtb)": {"input": {"required": {"floats": ["FLOATS"]}}, "input_order": {"required": ["floats"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["normalized_floats"], "name": "Batch Float Normalize (mtb)", "display_name": "Batch Float Normalize (mtb)", "description": "Normalize the values in the list of floats", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/batch", "output_node": false}, "Batch Merge (mtb)": {"input": {"required": {"fusion_mode": [["add", "multiply", "average"], {"default": "average"}], "fill": [["head", "tail"], {"default": "tail"}]}}, "input_order": {"required": ["fusion_mode", "fill"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Batch Merge (mtb)", "display_name": "Batch Merge (mtb)", "description": "# Batch Merge\n\nMerges multiple image batches with different frame counts\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/batch", "output_node": false}, "Batch Shake (mtb)": {"input": {"required": {"images": ["IMAGE"], "position_amount_x": ["FLOAT", {"default": 1.0}], "position_amount_y": ["FLOAT", {"default": 1.0}], "rotation_amount": ["FLOAT", {"default": 10.0}], "frequency": ["FLOAT", {"default": 1.0, "min": 0.005}], "frequency_divider": ["FLOAT", {"default": 1.0, "min": 0.005}], "octaves": ["INT", {"default": 1, "min": 1}], "seed": ["INT", {"default": 0}]}}, "input_order": {"required": ["images", "position_amount_x", "position_amount_y", "rotation_amount", "frequency", "frequency_divider", "octaves", "seed"]}, "output": ["IMAGE", "FLOATS", "FLOATS", "FLOATS"], "output_is_list": [false, false, false, false], "output_name": ["image", "pos_x", "pos_y", "rot"], "name": "Batch Shake (mtb)", "display_name": "Batch Shake (mtb)", "description": "# Batch Shake\n\nApplies a shaking effect to batches of images.\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/batch", "output_node": false}, "Plot Batch Float (mtb)": {"input": {"required": {"width": ["INT", {"default": 768}], "height": ["INT", {"default": 768}], "point_size": ["INT", {"default": 4}], "seed": ["INT", {"default": 1}], "start_at_zero": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["width", "height", "point_size", "seed", "start_at_zero"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["plot"], "name": "Plot Batch Float (mtb)", "display_name": "Plot Batch Float (mtb)", "description": "# Plot `FLOATS`\nPlot FLOATS using matplotlib, each of them are drawn in a different\ncolor.\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/batch", "output_node": false}, "Batch Time Wrap (mtb)": {"input": {"required": {"target_count": ["INT", {"default": 25, "min": 2}], "frames": ["IMAGE"], "curve": ["FLOATS"]}}, "input_order": {"required": ["target_count", "frames", "curve"]}, "output": ["IMAGE", "FLOATS"], "output_is_list": [false, false], "output_name": ["image", "interpolated_floats"], "name": "Batch Time Wrap (mtb)", "display_name": "Batch Time Wrap (mtb)", "description": "Remap a batch using a time curve (FLOATS)", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/batch", "output_node": false}, "Batch Float Fit (mtb)": {"input": {"required": {"values": ["FLOATS", {"forceInput": true}], "clamp": ["BOOLEAN", {"default": false}], "auto_compute_source": ["BOOLEAN", {"default": false}], "source_min": ["FLOAT", {"default": 0.0, "step": 0.01}], "source_max": ["FLOAT", {"default": 1.0, "step": 0.01}], "target_min": ["FLOAT", {"default": 0.0, "step": 0.01}], "target_max": ["FLOAT", {"default": 1.0, "step": 0.01}], "easing": [["Linear", "Sine In", "Sine Out", "Sine In/Out", "Quart In", "Quart Out", "Quart In/Out", "Cubic In", "Cubic Out", "Cubic In/Out", "Circ In", "Circ Out", "Circ In/Out", "Back In", "Back Out", "Back In/Out", "Elastic In", "Elastic Out", "Elastic In/Out", "Bounce In", "Bounce Out", "Bounce In/Out"], {"default": "Linear"}]}}, "input_order": {"required": ["values", "clamp", "auto_compute_source", "source_min", "source_max", "target_min", "target_max", "easing"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["FLOATS"], "name": "Batch Float Fit (mtb)", "display_name": "Batch Float Fit (mtb)", "description": "Fit a list of floats using a source and target range", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/batch", "output_node": false}, "Batch Float Math (mtb)": {"input": {"required": {"reverse": ["BOOLEAN", {"default": false}], "operation": [["add", "sub", "mul", "div", "pow", "abs"], {"default": "add"}]}}, "input_order": {"required": ["reverse", "operation"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["FLOATS"], "name": "Batch Float Math (mtb)", "display_name": "Batch Float Math (mtb)", "description": "", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/utils", "output_node": false}, "Deep Bump (mtb)": {"input": {"required": {"image": ["IMAGE"], "mode": [["Color to Normals", "Normals to Curvature", "Normals to Height"]], "color_to_normals_overlap": [["SMALL", "MEDIUM", "LARGE"]], "normals_to_curvature_blur_radius": [["SMALLEST", "SMALLER", "SMALL", "MEDIUM", "LARGE", "LARGER", "LARGEST"]], "normals_to_height_seamless": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "mode", "color_to_normals_overlap", "normals_to_curvature_blur_radius", "normals_to_height_seamless"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Deep Bump (mtb)", "display_name": "Deep Bump (mtb)", "description": "# Deep Bump\n\nThis node uses the [deep bump](https://github.com/HugoTini/DeepBump) model (GPLv3).\nThe 3 inference modes (color -> normals, normals -> curvature, normals -> depth) are all baked into a single node with a dropdown to select the operation.\nSome inputs are only used in some context, UX could be better.\nThe inputs are self explanatory, but you should probably experiment a bit with it since inference is quite fast. One thing to be sure is to tick `normals_to_height_seamless` when the input is seamless, see below for more infos.\n\nThis example is available in the [base examples list](https://github.com/melMass/comfy_mtb/wiki/Examples). In the example we also use the [Model Patch Seamless](nodes-model-patch-seamless) node in order to have non repeating, tileable textures\n| workflow | This is the output textures from the workflow applied to a tessellated mesh in blender | \n| - | - |\n|![](https://user-images.githubusercontent.com/7041726/272970715-7e4477f6-8e18-4839-9864-83d07d6690a1.png)| ![](https://user-images.githubusercontent.com/7041726/272970506-9db516b5-45d2-4389-b904-b3a94660f24c.png) |", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/textures", "output_node": false}, "Animation Builder (mtb)": {"input": {"required": {"total_frames": ["INT", {"default": 100, "min": 0}], "scale_float": ["FLOAT", {"default": 1.0, "min": 0.0}], "loop_count": ["INT", {"default": 1, "min": 0}], "raw_iteration": ["INT", {"default": 0, "min": 0}], "raw_loop": ["INT", {"default": 0, "min": 0}]}}, "input_order": {"required": ["total_frames", "scale_float", "loop_count", "raw_iteration", "raw_loop"]}, "output": ["INT", "FLOAT", "INT", "BOOLEAN"], "output_is_list": [false, false, false, false], "output_name": ["frame", "0-1 (scaled)", "count", "loop_ended"], "name": "Animation Builder (mtb)", "display_name": "Animation Builder (mtb)", "description": "\n# Animation Builder\n\nCheck the\n[wiki page](https://github.com/melMass/comfy_mtb/wiki/nodes-animation-builder)\nfor more info.\n\n\n- This basic example should help to understand the meaning of\nits inputs and outputs thanks to the [debug](nodes-debug) node.\n\n![](https://github.com/melMass/comfy_mtb/assets/7041726/2b5c7e4f-372d-4494-9e73-abb2daa7cb36)\n\n- In this other example Animation Builder is used in combination with\n[Batch From History](https://github.com/melMass/comfy_mtb/wiki/nodes-batch-from-history)\nto create a zoom-in animation on a static image\n\n![](https://github.com/melMass/comfy_mtb/assets/7041726/77d37da1-0a8e-4519-a493-dfdef7f755ea)\n\n## Inputs\n\n| name | description |\n| ---- | :----------:|\n| total_frames | The number of frame to queue (this is multiplied by the `loop_count`)|\n| scale_float | Convenience input to scale the normalized `current value` (a float between 0 and 1 lerp over the current queue length) |\n| loop_count | The number of loops to queue |\n| **Reset Button** | resets the internal counters, although the node is though around using its queue button it should still work fine when using the regular queue button of comfy |\n| **Queue Button** | Convenience button to run the queues (`total_frames` * `loop_count`) |\n\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/animation", "output_node": false}, "Qr Code (mtb)": {"input": {"required": {"url": ["STRING", {"default": "https://www.github.com"}], "width": ["INT", {"default": 256, "max": 8096, "min": 0, "step": 1}], "height": ["INT", {"default": 256, "max": 8096, "min": 0, "step": 1}], "error_correct": [["L", "M", "Q", "H"], {"default": "L"}], "box_size": ["INT", {"default": 10, "max": 8096, "min": 0, "step": 1}], "border": ["INT", {"default": 4, "max": 8096, "min": 0, "step": 1}], "invert": [["BOOLEAN"], {"default": false}]}}, "input_order": {"required": ["url", "width", "height", "error_correct", "box_size", "border", "invert"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Qr Code (mtb)", "display_name": "Qr Code (mtb)", "description": "# QR Code\nBasic QR Code generator\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/generate", "output_node": false}, "Stack Images (mtb)": {"input": {"required": {"vertical": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["vertical"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Stack Images (mtb)", "display_name": "Stack Images (mtb)", "description": "# Stack Images\n\nA simple way to stack images either horizontally or vertically. Stack image uses [dynamic inputs](web-dynamic-inputs).\n\nIt outputs RGBA tensors and supports RGB or RGBA as input (normalized to RGBA internally). If the image dimensions don't match they must at least match:\n- in `width` when stacking vertically.\n- in `height` when stacking horizontally.\n\nHere is an example workflow using [Text To Image](nodes-text-to-image) (the text was generated using [Nous Hermes 2 Vision](https://huggingface.co/billborkowski/llava-NousResearch_Nous-Hermes-2-Vision-GGUF) thanks to the great [ComfyUI_VLM_nodes](https://github.com/gokayfem/ComfyUI_VLM_nodes) extension. For simplicity's sake, the workflow doesn't contain external nodes:\n\n![stack_images](https://github.com/melMass/comfy_mtb/assets/7041726/a0c03621-3377-46cf-a6b4-f47e70c7d11f)\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/image utils", "output_node": false}, "Pick From Batch (mtb)": {"input": {"required": {"image": ["IMAGE"], "from_direction": [["end", "start"], {"default": "start"}], "count": ["INT", {"default": 1}]}}, "input_order": {"required": ["image", "from_direction", "count"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Pick From Batch (mtb)", "display_name": "Pick From Batch (mtb)", "description": "# Pick From Batch\nPick a specific number of images from a batch either from the head or the tail.\n    \n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/image utils", "output_node": false}, "Face Swap (mtb)": {"input": {"required": {"image": ["IMAGE"], "reference": ["IMAGE"], "faces_index": ["STRING", {"default": "0"}], "faceanalysis_model": ["FACE_ANALYSIS_MODEL", {"default": "None"}], "faceswap_model": ["FACESWAP_MODEL", {"default": "None"}]}, "optional": {"preserve_alpha": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "reference", "faces_index", "faceanalysis_model", "faceswap_model"], "optional": ["preserve_alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Face Swap (mtb)", "display_name": "Face Swap (mtb)", "description": "# Face Swap\nFace swap using deepinsight/insightface models\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/facetools", "output_node": false}, "Load Face Swap Model (mtb)": {"input": {"required": {"faceswap_model": [["inswapper_128.onnx"], {"default": "None"}]}}, "input_order": {"required": ["faceswap_model"]}, "output": ["FACESWAP_MODEL"], "output_is_list": [false], "output_name": ["FACESWAP_MODEL"], "name": "Load Face Swap Model (mtb)", "display_name": "Load Face Swap Model (mtb)", "description": "# Load Face Swap Model\n\nLoads a faceswap model\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/facetools", "output_node": false}, "Load Face Analysis Model (mtb)": {"input": {"required": {"faceswap_model": [["antelopev2", "buffalo_l", "buffalo_m", "buffalo_sc"], {"default": "buffalo_l"}]}}, "input_order": {"required": ["faceswap_model"]}, "output": ["FACE_ANALYSIS_MODEL"], "output_is_list": [false], "output_name": ["FACE_ANALYSIS_MODEL"], "name": "Load Face Analysis Model (mtb)", "display_name": "Load Face Analysis Model (mtb)", "description": "# Load Face Analysis\n\nLoads a face analysis model\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/facetools", "output_node": false}, "Transform Image (mtb)": {"input": {"required": {"image": ["IMAGE"], "x": ["FLOAT", {"default": 0, "step": 1, "min": -4096, "max": 4096}], "y": ["FLOAT", {"default": 0, "step": 1, "min": -4096, "max": 4096}], "zoom": ["FLOAT", {"default": 1.0, "min": 0.001, "step": 0.01}], "angle": ["FLOAT", {"default": 0, "step": 1, "min": -360, "max": 360}], "shear": ["FLOAT", {"default": 0, "step": 1, "min": -4096, "max": 4096}], "border_handling": [["edge", "constant", "reflect", "symmetric"], {"default": "edge"}], "constant_color": ["COLOR", {"default": "#000000"}]}}, "input_order": {"required": ["image", "x", "y", "zoom", "angle", "shear", "border_handling", "constant_color"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Transform Image (mtb)", "display_name": "Transform Image (mtb)", "description": "# Transform Image\n\nTransform images while maintaining the input tensor shape\n    \n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/transform", "output_node": false}, "Audio Sequence (mtb)": {"input": {"required": {"silence_duration": ["FLOAT", {"default": 0.0, "min": -999.0, "max": 999, "step": 0.01}]}}, "input_order": {"required": ["silence_duration"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["sequenced_audio"], "name": "Audio Sequence (mtb)", "display_name": "Audio Sequence (mtb)", "description": "Sequence audio inputs (dynamic inputs).\n\n    - adding silence_duration between each segment\n      can now also be negative to overlap the clips, safely bound\n      to the the input length.\n    - resample audios to the highest sample rate in the inputs.\n    - convert them all to stereo if one of the inputs is.\n    ", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/audio", "output_node": false}, "Audio Stack (mtb)": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["stacked_audio"], "name": "Audio Stack (mtb)", "display_name": "Audio Stack (mtb)", "description": "Stack/Overlay audio inputs (dynamic inputs).\n\n    - pad audios to the longest inputs.\n    - resample audios to the highest sample rate in the inputs.\n    - convert them all to stereo if one of the inputs is.\n    ", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/audio", "output_node": false}, "Audio Cut (mtb)": {"input": {"required": {"audio": ["AUDIO"], "length": ["FLOAT", {"default": 1000.0, "min": 0.0, "max": 999999.0, "step": 1}], "offset": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 999999.0, "step": 1}]}}, "input_order": {"required": ["audio", "length", "offset"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["cut_audio"], "name": "Audio Cut (mtb)", "display_name": "Audio Cut (mtb)", "description": "Basic audio cutter, values are in ms.", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/audio", "output_node": false}, "Model Pruner (mtb)": {"input": {"optional": {"unet": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"]}, "required": {"save_separately": ["BOOLEAN", {"default": false}], "save_folder": ["STRING", {"default": "checkpoints/ComfyUI"}], "fix_clip": ["BOOLEAN", {"default": true}], "remove_junk": ["BOOLEAN", {"default": true}], "ema_mode": [["disabled", "remove_ema", "ema_only"], {"default": "remove_ema"}], "precision_unet": [["full", "fp32", "fp16", "bf16", "fp8"], {"default": "full"}], "operation_unet": [["copy", "convert", "delete"], {"default": "convert"}], "precision_clip": [["full", "fp32", "fp16", "bf16", "fp8"], {"default": "full"}], "operation_clip": [["copy", "convert", "delete"], {"default": "convert"}], "precision_vae": [["full", "fp32", "fp16", "bf16", "fp8"], {"default": "full"}], "operation_vae": [["copy", "convert", "delete"], {"default": "convert"}]}}, "input_order": {"optional": ["unet", "clip", "vae"], "required": ["save_separately", "save_folder", "fix_clip", "remove_junk", "ema_mode", "precision_unet", "operation_unet", "precision_clip", "operation_clip", "precision_vae", "operation_vae"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Model Pruner (mtb)", "display_name": "Model Pruner (mtb)", "description": "# Model Pruner\n\nBasic output node to prune/downsample a model.\n\nIf `save_folder` is a relative path, it will be relative to comfy's output directory?\n\n**This is a bit experimental for now**\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/prune", "output_node": true}, "Smart Step (mtb)": {"input": {"required": {"step": ["INT", {"default": 20, "min": 1, "max": 10000, "step": 1}], "start_percent": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "end_percent": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}]}}, "input_order": {"required": ["step", "start_percent", "end_percent"]}, "output": ["INT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["step", "start", "end"], "name": "Smart Step (mtb)", "display_name": "Smart Step (mtb)", "description": "# Smart Step\n\nUtils to control the steps start/stop of the KAdvancedSampler in percentage\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/conditioning", "output_node": false}, "Styles Loader (mtb)": {"input": {"required": {"style_name": [["name", "\u274cLow Token", "\u2705Line Art / Manga"]]}}, "input_order": {"required": ["style_name"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "Styles Loader (mtb)", "display_name": "Styles Loader (mtb)", "description": "# Styles Loader\n\nThis node uses the same logic as the A111 styles csv.  \nThe first column is the name, the second the positive, the third the negative.  \nA sample [styles.csv](https://github.com/melMass/comfy_mtb/blob/main/styles.csv) gets installed on first run.\n\n> **Note**\n> Some styles can have empty columns, for instance I personally use distinct ones for positive and negatives, so be sure to wire the right output.\n\n## Extract Styles\nIt's sometime useful to be able to directly act on the content of a given style, for that an option was added to the context menu of that node to.. extract the styles to plain text inputs:  \n![extract](https://github.com/melMass/comfy_mtb/assets/7041726/c068d770-d5a8-4078-bc3c-20bb6533e42d)\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/conditioning", "output_node": false}, "Interpolate Clip Sequential (mtb)": {"input": {"required": {"base_text": ["STRING", {"multiline": true}], "text_to_replace": ["STRING", {"default": ""}], "clip": ["CLIP"], "interpolation_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["base_text", "text_to_replace", "clip", "interpolation_strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "Interpolate Clip Sequential (mtb)", "display_name": "Interpolate Clip Sequential (mtb)", "description": "", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/conditioning", "output_node": false}, "Color Correct (mtb)": {"input": {"required": {"image": ["IMAGE"], "clamp": [[true, false], {"default": true}], "gamma": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "contrast": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "exposure": ["FLOAT", {"default": 0.0, "min": -5.0, "max": 5.0, "step": 0.01}], "offset": ["FLOAT", {"default": 0.0, "min": -5.0, "max": 5.0, "step": 0.01}], "hue": ["FLOAT", {"default": 0.0, "min": -0.5, "max": 0.5, "step": 0.01}], "saturation": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "clamp", "gamma", "contrast", "exposure", "offset", "hue", "saturation", "value"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Color Correct (mtb)", "display_name": "Color Correct (mtb)", "description": "# Color Correct\n\nVarious color correction methods\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/image processing", "output_node": false}, "Color Correct GPU (mtb)": {"input": {"required": {"image": ["IMAGE"], "force_gpu": ["BOOLEAN", {"default": true}], "clamp": [[true, false], {"default": true}], "gamma": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "contrast": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "exposure": ["FLOAT", {"default": 0.0, "min": -5.0, "max": 5.0, "step": 0.01}], "offset": ["FLOAT", {"default": 0.0, "min": -5.0, "max": 5.0, "step": 0.01}], "hue": ["FLOAT", {"default": 0.0, "min": -0.5, "max": 0.5, "step": 0.01}], "saturation": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "force_gpu", "clamp", "gamma", "contrast", "exposure", "offset", "hue", "saturation", "value"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Color Correct GPU (mtb)", "display_name": "Color Correct GPU (mtb)", "description": "Various color correction methods using only Torch.", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/image processing", "output_node": false}, "Image Compare (mtb)": {"input": {"required": {"imageA": ["IMAGE"], "imageB": ["IMAGE"], "mode": [["checkerboard", "diff", "blend"], {"default": "checkerboard"}]}}, "input_order": {"required": ["imageA", "imageB", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Compare (mtb)", "display_name": "Image Compare (mtb)", "description": "# Image Compare\nCompare two images and return a difference image\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/image", "output_node": false}, "Image Tile Offset (mtb)": {"input": {"required": {"image": ["IMAGE"], "tilesX": ["INT", {"default": 2, "min": 1}], "tilesY": ["INT", {"default": 2, "min": 1}]}}, "input_order": {"required": ["image", "tilesX", "tilesY"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Tile Offset (mtb)", "display_name": "Image Tile Offset (mtb)", "description": "# Image Tile Offset\n\nMimics an old photoshop technique to check for seamless textures\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/generate", "output_node": false}, "Blur (mtb)": {"input": {"required": {"image": ["IMAGE"], "sigmaX": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 200.0, "step": 0.01}], "sigmaY": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 200.0, "step": 0.01}]}, "optional": {"sigmasX": ["FLOATS"], "sigmasY": ["FLOATS"]}}, "input_order": {"required": ["image", "sigmaX", "sigmaY"], "optional": ["sigmasX", "sigmasY"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Blur (mtb)", "display_name": "Blur (mtb)", "description": "# Blur\n\nApplies a Gaussian blur to the given image / batch.  \nIt allows a few more things than the core blur node, namely:\n- **Higher values** (core is limited to 30)  \n  <img width=650 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/c0cd8426-7b44-4067-bb98-9a178e715169\"/>\n\n- **Individual X & Y blur**  \n  <img width=650 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/f5511f9a-d659-4935-abb5-3242894a0a82\"/>\n\n- [`FLOATS`](nodes-batch#batch-floats) support for individual batch frame blur\n  <img width=650 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/8aab18d2-b140-4e04-a4bd-fd294f2e187b\"/>\n\n\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/image processing", "output_node": false}, "Mask To Image (mtb)": {"input": {"required": {"mask": ["MASK"], "color": ["COLOR"], "background": ["COLOR", {"default": "#000000"}]}, "optional": {"invert": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["mask", "color", "background"], "optional": ["invert"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Mask To Image (mtb)", "display_name": "Mask To Image (mtb)", "description": "# Mask to Image\n\nConverts a mask (alpha) to an RGB image with a color and background\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/generate", "output_node": false}, "Colored Image (mtb)": {"input": {"required": {"color": ["COLOR"], "width": ["INT", {"default": 512, "min": 16, "max": 8160}], "height": ["INT", {"default": 512, "min": 16, "max": 8160}]}, "optional": {"foreground_image": ["IMAGE"], "foreground_mask": ["MASK"], "invert": ["BOOLEAN", {"default": false}], "mask_opacity": ["FLOAT", {"default": 1.0, "step": 0.1, "min": 0}]}}, "input_order": {"required": ["color", "width", "height"], "optional": ["foreground_image", "foreground_mask", "invert", "mask_opacity"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Colored Image (mtb)", "display_name": "Colored Image (mtb)", "description": "# Colored Image\n\nConstant color images of a given size can also be used to mask images.\n\nThis example uses [VHS Nodes](https://github.com/Kosinkadink/ComfyUI-VideoHelperSuite) for animation preview\n![batch_shapes](https://github.com/melMass/comfy_mtb/assets/7041726/a1aa62c5-f8cb-4f90-a14a-f7260a982e5a)\n\n**Workflow**: \n```json\n{\"last_node_id\":41,\"last_link_id\":65,\"nodes\":[{\"id\":13,\"type\":\"Batch Float (mtb)\",\"pos\":[-1213,622],\"size\":[315,154],\"flags\":{},\"order\":0,\"mode\":0,\"outputs\":[{\"name\":\"FLOATS\",\"type\":\"FLOATS\",\"links\":[30],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Float (mtb)\"},\"widgets_values\":[\"Steps\",12,0.001,5,\"Quart In/Out\"]},{\"id\":31,\"type\":\"VHS_VideoCombine\",\"pos\":[1080,280],\"size\":[315,314],\"flags\":{},\"order\":16,\"mode\":0,\"inputs\":[{\"name\":\"images\",\"type\":\"IMAGE\",\"link\":50},{\"name\":\"audio\",\"type\":\"VHS_AUDIO\",\"link\":null},{\"name\":\"batch_manager\",\"type\":\"VHS_BatchManager\",\"link\":null}],\"outputs\":[{\"name\":\"Filenames\",\"type\":\"VHS_FILENAMES\",\"links\":null,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"VHS_VideoCombine\"},\"widgets_values\":{\"frame_rate\":12,\"loop_count\":0,\"filename_prefix\":\"AnimateDiff\",\"format\":\"video/nvenc_hevc-mp4\",\"pix_fmt\":\"yuv420p\",\"bitrate\":10,\"megabit\":true,\"save_metadata\":true,\"pingpong\":false,\"save_output\":false,\"videopreview\":{\"hidden\":false,\"paused\":false,\"params\":{\"filename\":\"AnimateDiff_00004.mp4\",\"subfolder\":\"\",\"type\":\"temp\",\"format\":\"video/nvenc_hevc-mp4\"}}}},{\"id\":22,\"type\":\"Batch Float Fill (mtb)\",\"pos\":[-884,621],\"size\":[315,106],\"flags\":{},\"order\":4,\"mode\":0,\"inputs\":[{\"name\":\"floats\",\"type\":\"FLOATS\",\"link\":30}],\"outputs\":[{\"name\":\"FLOATS\",\"type\":\"FLOATS\",\"links\":[31],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Float Fill (mtb)\"},\"widgets_values\":[\"tail\",0,20]},{\"id\":30,\"type\":\"ImageBlend\",\"pos\":[680,280],\"size\":[315,102],\"flags\":{},\"order\":14,\"mode\":0,\"inputs\":[{\"name\":\"image1\",\"type\":\"IMAGE\",\"link\":65},{\"name\":\"image2\",\"type\":\"IMAGE\",\"link\":48}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[50],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"ImageBlend\"},\"widgets_values\":[1,\"screen\"]},{\"id\":15,\"type\":\"Batch Transform (mtb)\",\"pos\":[484,561],\"size\":[210,194],\"flags\":{},\"order\":10,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":29,\"slot_index\":0},{\"name\":\"x\",\"type\":\"FLOATS\",\"link\":null},{\"name\":\"y\",\"type\":\"FLOATS\",\"link\":null},{\"name\":\"zoom\",\"type\":\"FLOATS\",\"link\":33},{\"name\":\"angle\",\"type\":\"FLOATS\",\"link\":null},{\"name\":\"shear\",\"type\":\"FLOATS\",\"link\":null}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[48],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Transform (mtb)\"},\"widgets_values\":[\"edge\",\"#fa96c0\"]},{\"id\":23,\"type\":\"Batch Float Fill (mtb)\",\"pos\":[110,623],\"size\":[315,106],\"flags\":{},\"order\":5,\"mode\":0,\"inputs\":[{\"name\":\"floats\",\"type\":\"FLOATS\",\"link\":32}],\"outputs\":[{\"name\":\"FLOATS\",\"type\":\"FLOATS\",\"links\":[33],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Float Fill (mtb)\"},\"widgets_values\":[\"head\",0,20]},{\"id\":21,\"type\":\"Batch Float (mtb)\",\"pos\":[-246,623],\"size\":[315,154],\"flags\":{},\"order\":1,\"mode\":0,\"outputs\":[{\"name\":\"FLOATS\",\"type\":\"FLOATS\",\"links\":[32],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Float (mtb)\"},\"widgets_values\":[\"Steps\",20,0.001,4.5,\"Quart In/Out\"]},{\"id\":41,\"type\":\"Reroute\",\"pos\":[-91,283],\"size\":[75,26],\"flags\":{},\"order\":12,\"mode\":0,\"inputs\":[{\"name\":\"\",\"type\":\"*\",\"link\":64}],\"outputs\":[{\"name\":\"\",\"type\":\"IMAGE\",\"links\":[65]}],\"properties\":{\"showOutputText\":false,\"horizontal\":false}},{\"id\":14,\"type\":\"Batch Transform (mtb)\",\"pos\":[-517,562],\"size\":[210,194],\"flags\":{},\"order\":9,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":27,\"slot_index\":0},{\"name\":\"x\",\"type\":\"FLOATS\",\"link\":null},{\"name\":\"y\",\"type\":\"FLOATS\",\"link\":null},{\"name\":\"zoom\",\"type\":\"FLOATS\",\"link\":31},{\"name\":\"angle\",\"type\":\"FLOATS\",\"link\":null},{\"name\":\"shear\",\"type\":\"FLOATS\",\"link\":null}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[37,62,64],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Transform (mtb)\"},\"widgets_values\":[\"edge\",\"#fa96c0\"]},{\"id\":35,\"type\":\"LoadImage\",\"pos\":[-560,920],\"size\":[315,314],\"flags\":{},\"order\":2,\"mode\":0,\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[56],\"shape\":3,\"slot_index\":0},{\"name\":\"MASK\",\"type\":\"MASK\",\"links\":null,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"LoadImage\"},\"widgets_values\":[\"189.png\",\"image\"]},{\"id\":40,\"type\":\"Blur (mtb)\",\"pos\":[-217,1000],\"size\":[315,82],\"flags\":{},\"order\":11,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":62,\"slot_index\":0}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[63],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Blur (mtb)\"},\"widgets_values\":[50,50]},{\"id\":33,\"type\":\"ImageToMask\",\"pos\":[120,997],\"size\":[210,58],\"flags\":{},\"order\":13,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":63,\"slot_index\":0}],\"outputs\":[{\"name\":\"MASK\",\"type\":\"MASK\",\"links\":[57],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"ImageToMask\"},\"widgets_values\":[\"red\"]},{\"id\":37,\"type\":\"Colored Image (mtb)\",\"pos\":[350,920],\"size\":[210,138],\"flags\":{},\"order\":15,\"mode\":0,\"inputs\":[{\"name\":\"foreground_image\",\"type\":\"IMAGE\",\"link\":56,\"slot_index\":0},{\"name\":\"foreground_mask\",\"type\":\"MASK\",\"link\":57,\"slot_index\":1}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[55],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Colored Image (mtb)\"},\"widgets_values\":[\"#1603fc\",512,512]},{\"id\":36,\"type\":\"VHS_VideoCombine\",\"pos\":[584,918],\"size\":[315,314],\"flags\":{},\"order\":17,\"mode\":0,\"inputs\":[{\"name\":\"images\",\"type\":\"IMAGE\",\"link\":55,\"slot_index\":0},{\"name\":\"audio\",\"type\":\"VHS_AUDIO\",\"link\":null},{\"name\":\"batch_manager\",\"type\":\"VHS_BatchManager\",\"link\":null}],\"outputs\":[{\"name\":\"Filenames\",\"type\":\"VHS_FILENAMES\",\"links\":null,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"VHS_VideoCombine\"},\"widgets_values\":{\"frame_rate\":12,\"loop_count\":0,\"filename_prefix\":\"AnimateDiff\",\"format\":\"video/nvenc_hevc-mp4\",\"pix_fmt\":\"yuv420p\",\"bitrate\":10,\"megabit\":true,\"save_metadata\":true,\"pingpong\":false,\"save_output\":false,\"videopreview\":{\"hidden\":false,\"paused\":false,\"params\":{\"filename\":\"AnimateDiff_00009.mp4\",\"subfolder\":\"\",\"type\":\"temp\",\"format\":\"video/nvenc_hevc-mp4\"}}}},{\"id\":20,\"type\":\"Mask To Image (mtb)\",\"pos\":[231,459],\"size\":[210,106],\"flags\":{},\"order\":8,\"mode\":0,\"inputs\":[{\"name\":\"mask\",\"type\":\"MASK\",\"link\":28,\"slot_index\":0}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[29],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Mask To Image (mtb)\"},\"widgets_values\":[\"#00ff00\",\"#000000\"]},{\"id\":16,\"type\":\"ImageToMask\",\"pos\":[-750,191],\"size\":[210,58],\"flags\":{},\"order\":6,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":25}],\"outputs\":[{\"name\":\"MASK\",\"type\":\"MASK\",\"links\":[26,28],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"ImageToMask\"},\"widgets_values\":[\"red\"]},{\"id\":19,\"type\":\"Mask To Image (mtb)\",\"pos\":[-750,446],\"size\":[210,106],\"flags\":{},\"order\":7,\"mode\":0,\"inputs\":[{\"name\":\"mask\",\"type\":\"MASK\",\"link\":26,\"slot_index\":0}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[27],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Mask To Image (mtb)\"},\"widgets_values\":[\"#ff0000\",\"#000000\"]},{\"id\":11,\"type\":\"Batch Shape (mtb)\",\"pos\":[-1039,192],\"size\":[210,334],\"flags\":{},\"order\":3,\"mode\":0,\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[25],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Shape (mtb)\"},\"widgets_values\":[20,\"Tube\",1024,1024,512,\"#ffffff\",\"#000000\",\"#000000\",250,0,0]}],\"links\":[[25,11,0,16,0,\"IMAGE\"],[26,16,0,19,0,\"MASK\"],[27,19,0,14,0,\"IMAGE\"],[28,16,0,20,0,\"MASK\"],[29,20,0,15,0,\"IMAGE\"],[30,13,0,22,0,\"FLOATS\"],[31,22,0,14,3,\"FLOATS\"],[32,21,0,23,0,\"FLOATS\"],[33,23,0,15,3,\"FLOATS\"],[37,14,0,27,0,\"IMAGE\"],[48,15,0,30,1,\"IMAGE\"],[50,30,0,31,0,\"IMAGE\"],[55,37,0,36,0,\"IMAGE\"],[56,35,0,37,0,\"IMAGE\"],[57,33,0,37,1,\"MASK\"],[62,14,0,40,0,\"IMAGE\"],[63,40,0,33,0,\"IMAGE\"],[64,14,0,41,0,\"*\"],[65,41,0,30,0,\"IMAGE\"]],\"groups\":[],\"config\":{},\"extra\":{\"workspace_info\":{\"id\":\"lHUoc3eCvYMplIxkGM68o\"}},\"version\":0.4}\n```", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/generate", "output_node": false}, "Image Premultiply (mtb)": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "invert": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "mask", "invert"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["RGBA"], "name": "Image Premultiply (mtb)", "display_name": "Image Premultiply (mtb)", "description": "# Image Premultiply\n\nPremultiply image with mask\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/image", "output_node": false}, "Image Resize Factor (mtb)": {"input": {"required": {"image": ["IMAGE"], "factor": ["FLOAT", {"default": 2, "min": 0.01, "max": 16.0, "step": 0.01}], "supersample": ["BOOLEAN", {"default": true}], "resampling": [["nearest", "linear", "bilinear", "bicubic", "trilinear", "area", "nearest-exact"], {"default": "nearest"}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "factor", "supersample", "resampling"], "optional": ["mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "Image Resize Factor (mtb)", "display_name": "Image Resize Factor (mtb)", "description": "# Image Resize Factor\n\nExtracted mostly from WAS Node Suite, with a few edits (most notably multiple image support) and less features.\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/image", "output_node": false}, "Save Image Grid (mtb)": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "save_intermediate": ["BOOLEAN", {"default": false}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "save_intermediate"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Save Image Grid (mtb)", "display_name": "Save Image Grid (mtb)", "description": "# Save Image Grid\n\nSave all the images in the input batch as a grid of images.\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/IO", "output_node": true}, "Load Image From Url (mtb)": {"input": {"required": {"url": ["STRING", {"default": "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/Example.jpg/800px-Example.jpg"}]}}, "input_order": {"required": ["url"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Load Image From Url (mtb)", "display_name": "Load Image From Url (mtb)", "description": "# Load image from URL\n\nLoad an image from the given URL\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/IO", "output_node": false}, "Sharpen (mtb)": {"input": {"required": {"image": ["IMAGE"], "sharpen_radius": ["INT", {"default": 1, "min": 1, "max": 31, "step": 1}], "sigma_x": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 10.0, "step": 0.1}], "sigma_y": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 10.0, "step": 0.1}], "alpha": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.1}]}}, "input_order": {"required": ["image", "sharpen_radius", "sigma_x", "sigma_y", "alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Sharpen (mtb)", "display_name": "Sharpen (mtb)", "description": "# Sharpen\nSharpens an image using a Gaussian kernel.\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/image processing", "output_node": false}, "Extract Coordinates From Image (mtb)": {"input": {"required": {"threshold": ["FLOAT"], "max_points": ["INT", {"default": 50, "min": 0}]}, "optional": {"image": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["threshold", "max_points"], "optional": ["image", "mask"]}, "output": ["BATCH_COORDINATES", "IMAGE"], "output_is_list": [false, false], "output_name": ["BATCH_COORDINATES", "IMAGE"], "name": "Extract Coordinates From Image (mtb)", "display_name": "Extract Coordinates From Image (mtb)", "description": "Extract 2D points from a batch of images based on a threshold.", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/coordinates", "output_node": false}, "Coordinates To String (mtb)": {"input": {"required": {"coordinates": ["BATCH_COORDINATES"], "frame": ["INT"]}}, "input_order": {"required": ["coordinates", "frame"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Coordinates To String (mtb)", "display_name": "Coordinates To String (mtb)", "description": "", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/coordinates", "output_node": false}, "Curve (mtb)": {"input": {"required": {"curve": ["FLOAT_CURVE"]}}, "input_order": {"required": ["curve"]}, "output": ["FLOAT_CURVE"], "output_is_list": [false], "output_name": ["FLOAT_CURVE"], "name": "Curve (mtb)", "display_name": "Curve (mtb)", "description": "# Curve\n\n*WIP*\nA basic FLOAT_CURVE input node.\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/curve", "output_node": false}, "Curve To Float (mtb)": {"input": {"required": {"curve": ["FLOAT_CURVE", {"forceInput": true}], "steps": ["INT", {"default": 10, "min": 2}]}}, "input_order": {"required": ["curve", "steps"]}, "output": ["FLOATS", "FLOAT"], "output_is_list": [false, false], "output_name": ["FLOATS", "FLOAT"], "name": "Curve To Float (mtb)", "display_name": "Curve To Float (mtb)", "description": "Convert a FLOAT_CURVE to a FLOAT or FLOATS", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/curve", "output_node": false}, "Model Patch Seamless (mtb)": {"input": {"required": {"model": ["MODEL"], "startStep": ["INT", {"default": 0}], "stopStep": ["INT", {"default": 999}], "tilingX": ["BOOLEAN", {"default": true}], "tilingY": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["model", "startStep", "stopStep", "tilingX", "tilingY"]}, "output": ["MODEL", "MODEL"], "output_is_list": [false, false], "output_name": ["Original Model (passthrough)", "Patched Model"], "name": "Model Patch Seamless (mtb)", "display_name": "Model Patch Seamless (mtb)", "description": "# Model Patch Seamless\n\nThis uses this [hack](https://gitlab.com/-/snippets/2395088) to generate seamless image right at the inference stage.\nResults might vary depending on the model and prompt.\n\nHere is a few output from an extended version of the available [example](https://github.com/melMass/comfy_mtb/wiki/Examples). The main difference is that I use an upscale step before running [deep bump](nodes-deep-bump).\n\n|albedo|\n|-|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/3984907b-617e-49ff-8100-92c91af4459e\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/1194b2b8-eca4-4f75-8a1c-4d8074c08ea6\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/11026b5d-500b-4cfe-8cdc-682cc995dfb1\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/1f5d1671-5208-47ca-b625-478b09eed969\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/cdf3463f-c66c-472c-8ac3-e80af1901852\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/151b44ca-26e2-49d0-91be-cda938c0577a\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/b4280a65-644f-45d8-9fe8-b6148bf66b3c\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/cbfacbbc-2ae2-4cd2-84bc-8849c2115b51\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/8c6eea98-ae90-48d3-9051-de542102166e\"/>|", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/textures", "output_node": false}, "Vae Decode (mtb)": {"input": {"required": {"samples": ["LATENT"], "vae": ["VAE"], "seamless_model": ["BOOLEAN", {"default": false}], "use_tiling_decoder": ["BOOLEAN", {"default": true}], "tile_size": ["INT", {"default": 512, "min": 320, "max": 4096, "step": 64}]}}, "input_order": {"required": ["samples", "vae", "seamless_model", "use_tiling_decoder", "tile_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Vae Decode (mtb)", "display_name": "Vae Decode (mtb)", "description": "# VAE Decode\nThis works exactly as the builtin one but also supports the sd seamless hack, taken from: FlyingFireCo/tiled_ksampler\nthat is use in the `Model Patch Seamless` node.\n", "python_module": "custom_nodes.comfy_mtb", "category": "mtb/decode", "output_node": false}, "CM_BoolToInt": {"input": {"required": {"a": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["a"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "CM_BoolToInt", "display_name": "BoolToInt", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/conversion", "output_node": false}, "CM_IntToBool": {"input": {"required": {"a": ["INT", {"default": 0}]}}, "input_order": {"required": ["a"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "CM_IntToBool", "display_name": "IntToBool", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/conversion", "output_node": false}, "CM_FloatToInt": {"input": {"required": {"a": ["FLOAT", {"default": 0.0, "round": false}]}}, "input_order": {"required": ["a"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "CM_FloatToInt", "display_name": "FloatToInt", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/conversion", "output_node": false}, "CM_IntToFloat": {"input": {"required": {"a": ["INT", {"default": 0}]}}, "input_order": {"required": ["a"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "CM_IntToFloat", "display_name": "IntToFloat", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/conversion", "output_node": false}, "CM_IntToNumber": {"input": {"required": {"a": ["INT", {"default": 0}]}}, "input_order": {"required": ["a"]}, "output": ["NUMBER"], "output_is_list": [false], "output_name": ["NUMBER"], "name": "CM_IntToNumber", "display_name": "IntToNumber", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/conversion", "output_node": false}, "CM_NumberToInt": {"input": {"required": {"a": ["NUMBER", {"default": 0.0}]}}, "input_order": {"required": ["a"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "CM_NumberToInt", "display_name": "NumberToInt", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/conversion", "output_node": false}, "CM_FloatToNumber": {"input": {"required": {"a": ["FLOAT", {"default": 0.0, "round": false}]}}, "input_order": {"required": ["a"]}, "output": ["NUMBER"], "output_is_list": [false], "output_name": ["NUMBER"], "name": "CM_FloatToNumber", "display_name": "FloatToNumber", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/conversion", "output_node": false}, "CM_NumberToFloat": {"input": {"required": {"a": ["NUMBER", {"default": 0.0}]}}, "input_order": {"required": ["a"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "CM_NumberToFloat", "display_name": "NumberToFloat", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/conversion", "output_node": false}, "CM_ComposeVec2": {"input": {"required": {"x": ["FLOAT", {"default": 0.0, "round": false}], "y": ["FLOAT", {"default": 0.0, "round": false}]}}, "input_order": {"required": ["x", "y"]}, "output": ["VEC2"], "output_is_list": [false], "output_name": ["VEC2"], "name": "CM_ComposeVec2", "display_name": "ComposeVec2", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/conversion", "output_node": false}, "CM_ComposeVec3": {"input": {"required": {"x": ["FLOAT", {"default": 0.0}], "y": ["FLOAT", {"default": 0.0}], "z": ["FLOAT", {"default": 0.0}]}}, "input_order": {"required": ["x", "y", "z"]}, "output": ["VEC3"], "output_is_list": [false], "output_name": ["VEC3"], "name": "CM_ComposeVec3", "display_name": "ComposeVec3", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/conversion", "output_node": false}, "CM_ComposeVec4": {"input": {"required": {"x": ["FLOAT", {"default": 0.0}], "y": ["FLOAT", {"default": 0.0}], "z": ["FLOAT", {"default": 0.0}], "w": ["FLOAT", {"default": 0.0}]}}, "input_order": {"required": ["x", "y", "z", "w"]}, "output": ["VEC4"], "output_is_list": [false], "output_name": ["VEC4"], "name": "CM_ComposeVec4", "display_name": "ComposeVec4", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/conversion", "output_node": false}, "CM_BreakoutVec2": {"input": {"required": {"a": ["VEC2", {"default": [0.0, 0.0]}]}}, "input_order": {"required": ["a"]}, "output": ["FLOAT", "FLOAT"], "output_is_list": [false, false], "output_name": ["FLOAT", "FLOAT"], "name": "CM_BreakoutVec2", "display_name": "BreakoutVec2", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/conversion", "output_node": false}, "CM_BreakoutVec3": {"input": {"required": {"a": ["VEC3", {"default": [0.0, 0.0, 0.0]}]}}, "input_order": {"required": ["a"]}, "output": ["FLOAT", "FLOAT", "FLOAT"], "output_is_list": [false, false, false], "output_name": ["FLOAT", "FLOAT", "FLOAT"], "name": "CM_BreakoutVec3", "display_name": "BreakoutVec3", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/conversion", "output_node": false}, "CM_BreakoutVec4": {"input": {"required": {"a": ["VEC4", {"default": [0.0, 0.0, 0.0, 0.0]}]}}, "input_order": {"required": ["a"]}, "output": ["FLOAT", "FLOAT", "FLOAT", "FLOAT"], "output_is_list": [false, false, false, false], "output_name": ["FLOAT", "FLOAT", "FLOAT", "FLOAT"], "name": "CM_BreakoutVec4", "display_name": "BreakoutVec4", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/conversion", "output_node": false}, "CM_BoolUnaryOperation": {"input": {"required": {"op": [["Not"]], "a": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["op", "a"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "CM_BoolUnaryOperation", "display_name": "BoolUnaryOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/bool", "output_node": false}, "CM_BoolBinaryOperation": {"input": {"required": {"op": [["Nor", "Xor", "Nand", "And", "Xnor", "Or", "Eq", "Neq"]], "a": ["BOOLEAN", {"default": false}], "b": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["op", "a", "b"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "CM_BoolBinaryOperation", "display_name": "BoolBinaryOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/bool", "output_node": false}, "CM_IntUnaryOperation": {"input": {"required": {"op": [["Abs", "Neg", "Inc", "Dec", "Sqr", "Cube", "Not", "Factorial"]], "a": ["INT", {"default": 0}]}}, "input_order": {"required": ["op", "a"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "CM_IntUnaryOperation", "display_name": "IntUnaryOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/int", "output_node": false}, "CM_IntUnaryCondition": {"input": {"required": {"op": [["IsZero", "IsNonZero", "IsPositive", "IsNegative", "IsEven", "IsOdd"]], "a": ["INT", {"default": 0}]}}, "input_order": {"required": ["op", "a"]}, "output": ["BOOL"], "output_is_list": [false], "output_name": ["BOOL"], "name": "CM_IntUnaryCondition", "display_name": "IntUnaryCondition", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/int", "output_node": false}, "CM_IntBinaryOperation": {"input": {"required": {"op": [["Add", "Sub", "Mul", "Div", "Mod", "Pow", "And", "Nand", "Or", "Nor", "Xor", "Xnor", "Shl", "Shr", "Max", "Min"]], "a": ["INT", {"default": 0}], "b": ["INT", {"default": 0}]}}, "input_order": {"required": ["op", "a", "b"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "CM_IntBinaryOperation", "display_name": "IntBinaryOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/int", "output_node": false}, "CM_IntBinaryCondition": {"input": {"required": {"op": [["Eq", "Neq", "Gt", "Lt", "Geq", "Leq"]], "a": ["INT", {"default": 0}], "b": ["INT", {"default": 0}]}}, "input_order": {"required": ["op", "a", "b"]}, "output": ["BOOL"], "output_is_list": [false], "output_name": ["BOOL"], "name": "CM_IntBinaryCondition", "display_name": "IntBinaryCondition", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/int", "output_node": false}, "CM_FloatUnaryOperation": {"input": {"required": {"op": [["Neg", "Inc", "Dec", "Abs", "Sqr", "Cube", "Sqrt", "Exp", "Ln", "Log10", "Log2", "Sin", "Cos", "Tan", "Asin", "Acos", "Atan", "Sinh", "Cosh", "Tanh", "Asinh", "Acosh", "Atanh", "Round", "Floor", "Ceil", "Trunc", "Erf", "Erfc", "Gamma", "Radians", "Degrees"]], "a": ["FLOAT", {"default": 0.0, "step": 0.001, "round": false}]}}, "input_order": {"required": ["op", "a"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "CM_FloatUnaryOperation", "display_name": "FloatUnaryOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/float", "output_node": false}, "CM_FloatUnaryCondition": {"input": {"required": {"op": [["IsZero", "IsPositive", "IsNegative", "IsNonZero", "IsPositiveInfinity", "IsNegativeInfinity", "IsNaN", "IsFinite", "IsInfinite", "IsEven", "IsOdd"]], "a": ["FLOAT", {"default": 0.0, "step": 0.001, "round": false}]}}, "input_order": {"required": ["op", "a"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "CM_FloatUnaryCondition", "display_name": "FloatUnaryCondition", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/float", "output_node": false}, "CM_FloatBinaryOperation": {"input": {"required": {"op": [["Add", "Sub", "Mul", "Div", "Mod", "Pow", "FloorDiv", "Max", "Min", "Log", "Atan2"]], "a": ["FLOAT", {"default": 0.0, "step": 0.001, "round": false}], "b": ["FLOAT", {"default": 0.0, "step": 0.001, "round": false}]}}, "input_order": {"required": ["op", "a", "b"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "CM_FloatBinaryOperation", "display_name": "FloatBinaryOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/float", "output_node": false}, "CM_FloatBinaryCondition": {"input": {"required": {"op": [["Eq", "Neq", "Gt", "Gte", "Lt", "Lte"]], "a": ["FLOAT", {"default": 0.0, "step": 0.001, "round": false}], "b": ["FLOAT", {"default": 0.0, "step": 0.001, "round": false}]}}, "input_order": {"required": ["op", "a", "b"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "CM_FloatBinaryCondition", "display_name": "FloatBinaryCondition", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/float", "output_node": false}, "CM_NumberUnaryOperation": {"input": {"required": {"op": [["Neg", "Inc", "Dec", "Abs", "Sqr", "Cube", "Sqrt", "Exp", "Ln", "Log10", "Log2", "Sin", "Cos", "Tan", "Asin", "Acos", "Atan", "Sinh", "Cosh", "Tanh", "Asinh", "Acosh", "Atanh", "Round", "Floor", "Ceil", "Trunc", "Erf", "Erfc", "Gamma", "Radians", "Degrees"]], "a": ["NUMBER", {"default": 0.0}]}}, "input_order": {"required": ["op", "a"]}, "output": ["NUMBER"], "output_is_list": [false], "output_name": ["NUMBER"], "name": "CM_NumberUnaryOperation", "display_name": "NumberUnaryOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/number", "output_node": false}, "CM_NumberUnaryCondition": {"input": {"required": {"op": [["IsZero", "IsPositive", "IsNegative", "IsNonZero", "IsPositiveInfinity", "IsNegativeInfinity", "IsNaN", "IsFinite", "IsInfinite", "IsEven", "IsOdd"]], "a": ["NUMBER", {"default": 0.0}]}}, "input_order": {"required": ["op", "a"]}, "output": ["BOOL"], "output_is_list": [false], "output_name": ["BOOL"], "name": "CM_NumberUnaryCondition", "display_name": "NumberUnaryCondition", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/Number", "output_node": false}, "CM_NumberBinaryOperation": {"input": {"required": {"op": [["Add", "Sub", "Mul", "Div", "Mod", "Pow", "FloorDiv", "Max", "Min", "Log", "Atan2"]], "a": ["NUMBER", {"default": 0.0}], "b": ["NUMBER", {"default": 0.0}]}}, "input_order": {"required": ["op", "a", "b"]}, "output": ["NUMBER"], "output_is_list": [false], "output_name": ["NUMBER"], "name": "CM_NumberBinaryOperation", "display_name": "NumberBinaryOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/number", "output_node": false}, "CM_NumberBinaryCondition": {"input": {"required": {"op": [["Eq", "Neq", "Gt", "Gte", "Lt", "Lte"]], "a": ["NUMBER", {"default": 0.0}], "b": ["NUMBER", {"default": 0.0}]}}, "input_order": {"required": ["op", "a", "b"]}, "output": ["BOOL"], "output_is_list": [false], "output_name": ["BOOL"], "name": "CM_NumberBinaryCondition", "display_name": "NumberBinaryCondition", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/float", "output_node": false}, "CM_Vec2UnaryOperation": {"input": {"required": {"op": [["Neg", "Normalize"]], "a": ["VEC2", {"default": [0.0, 0.0]}]}}, "input_order": {"required": ["op", "a"]}, "output": ["VEC2"], "output_is_list": [false], "output_name": ["VEC2"], "name": "CM_Vec2UnaryOperation", "display_name": "Vec2UnaryOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec2", "output_node": false}, "CM_Vec2UnaryCondition": {"input": {"required": {"op": [["IsZero", "IsNotZero", "IsNormalized", "IsNotNormalized"]], "a": ["VEC2", {"default": [0.0, 0.0]}]}}, "input_order": {"required": ["op", "a"]}, "output": ["BOOL"], "output_is_list": [false], "output_name": ["BOOL"], "name": "CM_Vec2UnaryCondition", "display_name": "Vec2UnaryCondition", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec2", "output_node": false}, "CM_Vec2ToScalarUnaryOperation": {"input": {"required": {"op": [["Norm"]], "a": ["VEC2", {"default": [0.0, 0.0]}]}}, "input_order": {"required": ["op", "a"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "CM_Vec2ToScalarUnaryOperation", "display_name": "Vec2ToScalarUnaryOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec2", "output_node": false}, "CM_Vec2BinaryOperation": {"input": {"required": {"op": [["Add", "Sub", "Cross"]], "a": ["VEC2", {"default": [0.0, 0.0]}], "b": ["VEC2", {"default": [0.0, 0.0]}]}}, "input_order": {"required": ["op", "a", "b"]}, "output": ["VEC2"], "output_is_list": [false], "output_name": ["VEC2"], "name": "CM_Vec2BinaryOperation", "display_name": "Vec2BinaryOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec2", "output_node": false}, "CM_Vec2BinaryCondition": {"input": {"required": {"op": [["Eq", "Neq"]], "a": ["VEC2", {"default": [0.0, 0.0]}], "b": ["VEC2", {"default": [0.0, 0.0]}]}}, "input_order": {"required": ["op", "a", "b"]}, "output": ["BOOL"], "output_is_list": [false], "output_name": ["BOOL"], "name": "CM_Vec2BinaryCondition", "display_name": "Vec2BinaryCondition", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec2", "output_node": false}, "CM_Vec2ToScalarBinaryOperation": {"input": {"required": {"op": [["Dot", "Distance"]], "a": ["VEC2", {"default": [0.0, 0.0]}], "b": ["VEC2", {"default": [0.0, 0.0]}]}}, "input_order": {"required": ["op", "a", "b"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "CM_Vec2ToScalarBinaryOperation", "display_name": "Vec2ToScalarBinaryOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec2", "output_node": false}, "CM_Vec2ScalarOperation": {"input": {"required": {"op": [["Mul", "Div"]], "a": ["VEC2", {"default": [0.0, 0.0]}], "b": ["FLOAT"]}}, "input_order": {"required": ["op", "a", "b"]}, "output": ["VEC2"], "output_is_list": [false], "output_name": ["VEC2"], "name": "CM_Vec2ScalarOperation", "display_name": "Vec2ScalarOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec2", "output_node": false}, "CM_Vec3UnaryOperation": {"input": {"required": {"op": [["Neg", "Normalize"]], "a": ["VEC3", {"default": [0.0, 0.0, 0.0]}]}}, "input_order": {"required": ["op", "a"]}, "output": ["VEC3"], "output_is_list": [false], "output_name": ["VEC3"], "name": "CM_Vec3UnaryOperation", "display_name": "Vec3UnaryOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec3", "output_node": false}, "CM_Vec3UnaryCondition": {"input": {"required": {"op": [["IsZero", "IsNotZero", "IsNormalized", "IsNotNormalized"]], "a": ["VEC3", {"default": [0.0, 0.0, 0.0]}]}}, "input_order": {"required": ["op", "a"]}, "output": ["BOOL"], "output_is_list": [false], "output_name": ["BOOL"], "name": "CM_Vec3UnaryCondition", "display_name": "Vec3UnaryCondition", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec3", "output_node": false}, "CM_Vec3ToScalarUnaryOperation": {"input": {"required": {"op": [["Norm"]], "a": ["VEC3", {"default": [0.0, 0.0, 0.0]}]}}, "input_order": {"required": ["op", "a"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "CM_Vec3ToScalarUnaryOperation", "display_name": "Vec3ToScalarUnaryOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec3", "output_node": false}, "CM_Vec3BinaryOperation": {"input": {"required": {"op": [["Add", "Sub", "Cross"]], "a": ["VEC3", {"default": [0.0, 0.0, 0.0]}], "b": ["VEC3", {"default": [0.0, 0.0, 0.0]}]}}, "input_order": {"required": ["op", "a", "b"]}, "output": ["VEC3"], "output_is_list": [false], "output_name": ["VEC3"], "name": "CM_Vec3BinaryOperation", "display_name": "Vec3BinaryOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec3", "output_node": false}, "CM_Vec3BinaryCondition": {"input": {"required": {"op": [["Eq", "Neq"]], "a": ["VEC3", {"default": [0.0, 0.0, 0.0]}], "b": ["VEC3", {"default": [0.0, 0.0, 0.0]}]}}, "input_order": {"required": ["op", "a", "b"]}, "output": ["BOOL"], "output_is_list": [false], "output_name": ["BOOL"], "name": "CM_Vec3BinaryCondition", "display_name": "Vec3BinaryCondition", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec3", "output_node": false}, "CM_Vec3ToScalarBinaryOperation": {"input": {"required": {"op": [["Dot", "Distance"]], "a": ["VEC3", {"default": [0.0, 0.0, 0.0]}], "b": ["VEC3", {"default": [0.0, 0.0, 0.0]}]}}, "input_order": {"required": ["op", "a", "b"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "CM_Vec3ToScalarBinaryOperation", "display_name": "Vec3ToScalarBinaryOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec3", "output_node": false}, "CM_Vec3ScalarOperation": {"input": {"required": {"op": [["Mul", "Div"]], "a": ["VEC3", {"default": [0.0, 0.0, 0.0]}], "b": ["FLOAT"]}}, "input_order": {"required": ["op", "a", "b"]}, "output": ["VEC3"], "output_is_list": [false], "output_name": ["VEC3"], "name": "CM_Vec3ScalarOperation", "display_name": "Vec3ScalarOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec3", "output_node": false}, "CM_Vec4UnaryOperation": {"input": {"required": {"op": [["Neg", "Normalize"]], "a": ["VEC4", {"default": [0.0, 0.0, 0.0, 0.0]}]}}, "input_order": {"required": ["op", "a"]}, "output": ["VEC4"], "output_is_list": [false], "output_name": ["VEC4"], "name": "CM_Vec4UnaryOperation", "display_name": "Vec4UnaryOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec4", "output_node": false}, "CM_Vec4UnaryCondition": {"input": {"required": {"op": [["IsZero", "IsNotZero", "IsNormalized", "IsNotNormalized"]], "a": ["VEC4", {"default": [0.0, 0.0, 0.0, 0.0]}]}}, "input_order": {"required": ["op", "a"]}, "output": ["BOOL"], "output_is_list": [false], "output_name": ["BOOL"], "name": "CM_Vec4UnaryCondition", "display_name": "Vec4UnaryCondition", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec4", "output_node": false}, "CM_Vec4ToScalarUnaryOperation": {"input": {"required": {"op": [["Norm"]], "a": ["VEC4", {"default": [0.0, 0.0, 0.0, 0.0]}]}}, "input_order": {"required": ["op", "a"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "CM_Vec4ToScalarUnaryOperation", "display_name": "Vec4ToScalarUnaryOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec4", "output_node": false}, "CM_Vec4BinaryOperation": {"input": {"required": {"op": [["Add", "Sub", "Cross"]], "a": ["VEC4", {"default": [0.0, 0.0, 0.0, 0.0]}], "b": ["VEC4", {"default": [0.0, 0.0, 0.0, 0.0]}]}}, "input_order": {"required": ["op", "a", "b"]}, "output": ["VEC4"], "output_is_list": [false], "output_name": ["VEC4"], "name": "CM_Vec4BinaryOperation", "display_name": "Vec4BinaryOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec4", "output_node": false}, "CM_Vec4BinaryCondition": {"input": {"required": {"op": [["Eq", "Neq"]], "a": ["VEC4", {"default": [0.0, 0.0, 0.0, 0.0]}], "b": ["VEC4", {"default": [0.0, 0.0, 0.0, 0.0]}]}}, "input_order": {"required": ["op", "a", "b"]}, "output": ["BOOL"], "output_is_list": [false], "output_name": ["BOOL"], "name": "CM_Vec4BinaryCondition", "display_name": "Vec4BinaryCondition", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec4", "output_node": false}, "CM_Vec4ToScalarBinaryOperation": {"input": {"required": {"op": [["Dot", "Distance"]], "a": ["VEC4", {"default": [0.0, 0.0, 0.0, 0.0]}], "b": ["VEC4", {"default": [0.0, 0.0, 0.0, 0.0]}]}}, "input_order": {"required": ["op", "a", "b"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "CM_Vec4ToScalarBinaryOperation", "display_name": "Vec4ToScalarBinaryOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec4", "output_node": false}, "CM_Vec4ScalarOperation": {"input": {"required": {"op": [["Mul", "Div"]], "a": ["VEC4", {"default": [0.0, 0.0, 0.0, 0.0]}], "b": ["FLOAT"]}}, "input_order": {"required": ["op", "a", "b"]}, "output": ["VEC4"], "output_is_list": [false], "output_name": ["VEC4"], "name": "CM_Vec4ScalarOperation", "display_name": "Vec4ScalarOperation", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/vec4", "output_node": false}, "CM_SDXLResolution": {"input": {"required": {"resolution": [["1024x1024", "1152x896", "896x1152", "1216x832", "832x1216", "1344x768", "768x1344", "1536x640", "640x1536"]]}}, "input_order": {"required": ["resolution"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["width", "height"], "name": "CM_SDXLResolution", "display_name": "SDXLResolution", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/graphics", "output_node": false}, "CM_NearestSDXLResolution": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["width", "height"], "name": "CM_NearestSDXLResolution", "display_name": "NearestSDXLResolution", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/graphics", "output_node": false}, "CM_SDXLExtendedResolution": {"input": {"required": {"resolution": [["512x2048", "512x1984", "512x1920", "512x1856", "576x1792", "576x1728", "576x1664", "640x1600", "640x1536", "704x1472", "704x1408", "704x1344", "768x1344", "768x1280", "832x1216", "832x1152", "896x1152", "896x1088", "960x1088", "960x1024", "1024x1024", "1024x960", "1088x960", "1088x896", "1152x896", "1152x832", "1216x832", "1280x768", "1344x768", "1408x704", "1472x704", "1536x640", "1600x640", "1664x576", "1728x576", "1792x576", "1856x512", "1920x512", "1984x512", "2048x512"]]}}, "input_order": {"required": ["resolution"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["width", "height"], "name": "CM_SDXLExtendedResolution", "display_name": "SDXLExtendedResolution", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/graphics", "output_node": false}, "CM_NearestSDXLExtendedResolution": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["width", "height"], "name": "CM_NearestSDXLExtendedResolution", "display_name": "NearestSDXLExtendedResolution", "description": "", "python_module": "custom_nodes.ComfyMath", "category": "math/graphics", "output_node": false}, "Clarity AI Upscaler": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"prompt": ["STRING", {"multiline": true}], "creativity": ["FLOAT", {"default": 0, "min": -10, "max": 10, "step": 1}], "resemblance": ["FLOAT", {"default": 0, "min": -10, "max": 10, "step": 1}], "dynamic": ["FLOAT", {"default": 0, "min": -10, "max": 10, "step": 1}], "fractality": ["FLOAT", {"default": 0, "min": -10, "max": 10, "step": 1}], "style": [["default", "portrait", "anime"]], "scale_factor": [["2", "4", "6", "8", "10", "12", "14", "16"]], "api_key_override": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["image"], "optional": ["prompt", "creativity", "resemblance", "dynamic", "fractality", "style", "scale_factor", "api_key_override"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Clarity AI Upscaler", "display_name": "Clarity AI Upscaler", "description": "", "python_module": "custom_nodes.ComfyUI-ClarityAI", "category": "Clarity AI", "output_node": false}, "Primitive boolean [Crystools]": {"input": {"required": {"boolean": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["boolean"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["boolean"], "name": "Primitive boolean [Crystools]", "display_name": "\ud83e\ude9b Primitive boolean", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Primitive", "output_node": false}, "Primitive string [Crystools]": {"input": {"required": {"string": ["STRING", {"default": ""}]}}, "input_order": {"required": ["string"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["string"], "name": "Primitive string [Crystools]", "display_name": "\ud83e\ude9b Primitive string", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Primitive", "output_node": false}, "Primitive string multiline [Crystools]": {"input": {"required": {"string": ["STRING", {"multiline": true, "default": ""}]}}, "input_order": {"required": ["string"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["string"], "name": "Primitive string multiline [Crystools]", "display_name": "\ud83e\ude9b Primitive string multiline", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Primitive", "output_node": false}, "Primitive integer [Crystools]": {"input": {"required": {"int": ["INT", {"default": 1, "min": -9223372036854775807, "max": 9223372036854775807, "step": 1}]}}, "input_order": {"required": ["int"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["int"], "name": "Primitive integer [Crystools]", "display_name": "\ud83e\ude9b Primitive integer", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Primitive", "output_node": false}, "Primitive float [Crystools]": {"input": {"required": {"float": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01}]}}, "input_order": {"required": ["float"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["float"], "name": "Primitive float [Crystools]", "display_name": "\ud83e\ude9b Primitive float", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Primitive", "output_node": false}, "Show any [Crystools]": {"input": {"required": {}, "optional": {"any_value": ["*"], "console": ["BOOLEAN", {"default": false}], "display": ["BOOLEAN", {"default": true}], "prefix": ["STRING", {"default": ""}]}, "hidden": {}}, "input_order": {"required": [], "optional": ["any_value", "console", "display", "prefix"], "hidden": []}, "output": [], "output_is_list": [], "output_name": [], "name": "Show any [Crystools]", "display_name": "\ud83e\ude9b Show any value to console/display", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Debugger", "output_node": true}, "Show any to JSON [Crystools]": {"input": {"required": {}, "optional": {"any_value": ["*"]}}, "input_order": {"required": [], "optional": ["any_value"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["string"], "name": "Show any to JSON [Crystools]", "display_name": "\ud83e\ude9b Show any to JSON", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Debugger", "output_node": true}, "List of any [Crystools]": {"input": {"required": {}, "optional": {"any_1": ["*"], "any_2": ["*"], "any_3": ["*"], "any_4": ["*"], "any_5": ["*"], "any_6": ["*"], "any_7": ["*"], "any_8": ["*"]}}, "input_order": {"required": [], "optional": ["any_1", "any_2", "any_3", "any_4", "any_5", "any_6", "any_7", "any_8"]}, "output": [["*"]], "output_is_list": [true], "output_name": ["any_list"], "name": "List of any [Crystools]", "display_name": "\ud83e\ude9b List of any", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/List", "output_node": false}, "List of strings [Crystools]": {"input": {"required": {}, "optional": {"string_1": ["STRING", {"default": ""}], "string_2": ["STRING", {"default": ""}], "string_3": ["STRING", {"default": ""}], "string_4": ["STRING", {"default": ""}], "string_5": ["STRING", {"default": ""}], "string_6": ["STRING", {"default": ""}], "string_7": ["STRING", {"default": ""}], "string_8": ["STRING", {"default": ""}], "delimiter": ["STRING", {"default": " "}]}}, "input_order": {"required": [], "optional": ["string_1", "string_2", "string_3", "string_4", "string_5", "string_6", "string_7", "string_8", "delimiter"]}, "output": ["STRING", "ListString"], "output_is_list": [false, true], "output_name": ["concatenated", "list_string"], "name": "List of strings [Crystools]", "display_name": "\ud83e\ude9b List of strings", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/List", "output_node": false}, "Switch any [Crystools]": {"input": {"required": {"on_true": ["*", {}], "on_false": ["*", {}], "boolean": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["on_true", "on_false", "boolean"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "Switch any [Crystools]", "display_name": "\ud83e\ude9b Switch any", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Switch", "output_node": false}, "Switch latent [Crystools]": {"input": {"required": {"on_true": ["LATENT"], "on_false": ["LATENT"], "boolean": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["on_true", "on_false", "boolean"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "Switch latent [Crystools]", "display_name": "\ud83e\ude9b Switch latent", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Switch", "output_node": false}, "Switch conditioning [Crystools]": {"input": {"required": {"on_true": ["CONDITIONING"], "on_false": ["CONDITIONING"], "boolean": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["on_true", "on_false", "boolean"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["conditioning"], "name": "Switch conditioning [Crystools]", "display_name": "\ud83e\ude9b Switch conditioning", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Switch", "output_node": false}, "Switch image [Crystools]": {"input": {"required": {"on_true": ["IMAGE"], "on_false": ["IMAGE"], "boolean": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["on_true", "on_false", "boolean"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Switch image [Crystools]", "display_name": "\ud83e\ude9b Switch image", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Switch", "output_node": false}, "Switch mask [Crystools]": {"input": {"required": {"on_true": ["MASK"], "on_false": ["MASK"], "boolean": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["on_true", "on_false", "boolean"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "Switch mask [Crystools]", "display_name": "\ud83e\ude9b Switch mask", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Switch", "output_node": false}, "Switch string [Crystools]": {"input": {"required": {"on_true": ["STRING", {"default": ""}], "on_false": ["STRING", {"default": ""}], "boolean": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["on_true", "on_false", "boolean"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["string"], "name": "Switch string [Crystools]", "display_name": "\ud83e\ude9b Switch string", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Switch", "output_node": false}, "Pipe to/edit any [Crystools]": {"input": {"required": {}, "optional": {"CPipeAny": ["CPipeAny"], "any_1": ["*"], "any_2": ["*"], "any_3": ["*"], "any_4": ["*"], "any_5": ["*"], "any_6": ["*"]}}, "input_order": {"required": [], "optional": ["CPipeAny", "any_1", "any_2", "any_3", "any_4", "any_5", "any_6"]}, "output": ["CPipeAny"], "output_is_list": [false], "output_name": ["CPipeAny"], "name": "Pipe to/edit any [Crystools]", "display_name": "\ud83e\ude9b Pipe to/edit any", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Pipe", "output_node": false}, "Pipe from any [Crystools]": {"input": {"required": {"CPipeAny": ["CPipeAny"]}, "optional": {}}, "input_order": {"required": ["CPipeAny"], "optional": []}, "output": ["CPipeAny", "*", "*", "*", "*", "*", "*"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["CPipeAny", "any_1", "any_2", "any_3", "any_4", "any_5", "any_6"], "name": "Pipe from any [Crystools]", "display_name": "\ud83e\ude9b Pipe from any", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Pipe", "output_node": false}, "Load image with metadata [Crystools]": {"input": {"required": {"image": [["00100-3444294236.png", "01115-3441384736-mature ginger guy, laying on field, armpit, sunburnt, blushing, blued eyes, smile, tank top, muscular, facial hair, moustache ,.png", "0c42073e550d6ae9cb7624ad1b2ee53d1d4e8c69_high.webp", "11121_158078841563e50810b30c1.jpg", "1313766545.png", "2024-08-14ComfyUI_00004_.png", "33097901.jpg", "33246906.jpg", "360_F_562816292_d7bYLVGfttt68HKFkOc4f2QKtWUg8Q5n.jpg", "381543ce-3045-4381-9b52-676686caed8f.jpg", "AnimateDiff_00037.mp4", "BGDK748BV7YGRQNF7P3CDK8910 (1).jpeg", "ComfyUI_00074_.png", "ComfyUI_00078_.png", "ComfyUI_00091_.png", "ComfyUI_00219_.png", "ComfyUI_00222_.png", "ComfyUI_00808_.png", "ComfyUI_00809_.png", "ComfyUI_00810_.png", "ComfyUI_00813_.png", "ComfyUI_00815_.png", "ComfyUI_00818_.png", "ComfyUI_00819_.png", "ComfyUI_00842_.png", "ComfyUI_temp_alxcm_00001_.png", "ComfyUI_temp_ayutp_00001_.png", "ComfyUI_temp_bvpdk_00001_.png", "ComfyUI_temp_bvpdk_00004_.png", "ComfyUI_temp_cgbmm_00001_.png", "ComfyUI_temp_chusq_00001_.png", "ComfyUI_temp_doxtg_00002_.png", "ComfyUI_temp_ecxhs_00001_.png", "ComfyUI_temp_ecxhs_00004_.png", "ComfyUI_temp_ecxhs_00006_ (1).png", "ComfyUI_temp_ecxhs_00006_.png", "ComfyUI_temp_ecxhs_00008_.png", "ComfyUI_temp_ecxhs_00010_.png", "ComfyUI_temp_fqjhe_00001_.png", "ComfyUI_temp_fqjhe_00016_.png", "ComfyUI_temp_gxxzz_00001_.png", "ComfyUI_temp_hlvpl_00001_.png", "ComfyUI_temp_ipugi_00131_.png", "ComfyUI_temp_jluvj_00001_.png", "ComfyUI_temp_kteza_00001_.png", "ComfyUI_temp_kubpn_00003_.png", "ComfyUI_temp_lviic_00009_.png", "ComfyUI_temp_lzhyu_00004_.png", "ComfyUI_temp_nmjmf_00001_.png", "ComfyUI_temp_oqypc_00001_.png", "ComfyUI_temp_oqypc_00004_ (1).png", "ComfyUI_temp_oufve_00001_.png", "ComfyUI_temp_pukae_00002_.png", "ComfyUI_temp_qakbs_00001_.png", "ComfyUI_temp_rdanj_00004_.png", "ComfyUI_temp_rqrpi_00001_.png", "ComfyUI_temp_rsiuu_00005_.png", "ComfyUI_temp_rtbjq_00004_.png", "ComfyUI_temp_toyue_00002_.png", "ComfyUI_temp_tqaav_00002_.png", "ComfyUI_temp_txndi_00002_.png", "Guy_Mask_5.png", "Guy_Matcap_5.png", "Guy_Outline_5.png", "H100Test_00015_.png", "H100Test_00016_.png", "H100Test_00034_.png", "IMG_3440.png", "IMG_6129.png", "MAsk.png", "Mario.webp", "MarkuryFLUX_00003_.png", "MarkuryFLUX_00005_.png", "MarkuryFLUX_00022_.png", "MarkuryFLUX_00036_.png", "MarkuryFLUX_00037_.png", "Mask_2 (1).png", "Mask_2.png", "Matcap.png", "Outline.png", "Outline_2.png", "PB-_temp_bxspr_00001_.png", "PNG image.jpeg", "Playbook_00.png", "Playbook_22.png", "Playbook_47.png", "Playbook__00001_ (1) (1).png", "Playbook__00001_ (1).png", "Playbook__00001_ (2).png", "Playbook__00001_.png", "Playbook__00003_ (4).png", "Playbook__00016_.png", "Playbook__00018_.png", "Playbook__00031_.png", "Playbook__00034_.png", "Playbook__00045_.png", "Playbook__00058_.png", "Playbook__00065_.png", "Playbook__00113_.png", "Playbook__00178_.png", "Playbook__00183_.png", "Playbook__00184_.png", "Playbook__00205_.png", "Playbook__00314.mp4", "Playbook__00348_.png", "Playbook__00417_.png", "Playbook__00419_ (1).png", "Playbook__00419_.png", "SDXL-Lightning_00012_.png", "SDXL_ControlNet_Image.png", "archivs_upscalewithflux.png", "beauty (1).png", "beauty (2).png", "beauty (3).png", "beauty (4).png", "beauty-0 (11).png", "beauty-0 (21).png", "beauty-0 (36).png", "beauty-0 (9).png", "beauty-0 - 2024-07-02T105656.553.png", "beauty.png", "ca-times.brightspotcdn.jpg", "canny.png", "canny_res_00003_ (1).png", "canny_res_00003_.png", "canny_res_00014_.png", "canny_res_00038_.png", "canny_res_00040_.png", "dancer-front-depth.png", "dancer-front-mask.png", "dancer-front-outline.png", "depth (1).png", "depth (2).png", "depth (3).png", "depth (4).png", "depth (5).png", "depth-0 (16).png", "depth-0 (18).png", "depth-0 (19).png", "depth-0 (31).png", "depth-0 (38).png", "depth-0 - 2024-07-02T105656.499.png", "depth.png", "depth0000 (1).png", "depth0000 (2).png", "depth0000 (3).png", "depth0000.png", "depth0001.png", "depth0043.png", "download.png", "example.png", "file.txt", "img_BmzB6PyCLHnFfVvV.png", "img_DpgERK4DxUAwLftG.png", "img_QYLbD1uzHC1nFbAE.png", "img_ULjhfQdRpzpEnmug.png", "img_Xipc5yPPxgtt1QGj.png", "img_iBZAGHnJ2Bv3f1XS.png", "inputs_img_DLe7eAeVKcd5aihb copy.png", "inputs_img_DLe7eAeVKcd5aihb.png", "inputs_img_EPMSddrLooFQ1YVD.png", "inputs_img_JLRRUVkofX1vCmjx.png", "inputs_img_Jvze5V927RFFAHX5.png", "inputs_img_KiPSrfifuNwC54ep.png", "inputs_img_UBc9tSV7cFAx87FQ.png", "inputs_img_Uf1LEsrNL4ovoWpz copy.png", "inputs_img_Uf1LEsrNL4ovoWpz.png", "inputs_img_Yhq6WtF5vDhoS4r5.png", "inputs_img_bG6odzGr8EZUPK1u.png", "inputs_img_fp87ttHy7b3hLkDg.png", "inputs_img_pKYznktDTwbYPGcL.png", "inputs_img_qyyvpcueAihTw9YV.png", "istockphoto-1325701162-612x612.jpg", "large-elephant-herd-walking-dust-savuti-botswana-towards-camera-196186738.webp", "manwithsign-depth.png", "manwithsign-mask.png", "manwithsign-outline.png", "mask (1).png", "mask (10).png", "mask (2).png", "mask (3).png", "mask (4).png", "mask (5).png", "mask (6).png", "mask (7).png", "mask (8).png", "mask (9).png", "mask-0 (11).png", "mask-0 (24).png", "mask-0 (28).png", "mask-0 (9).png", "mask-0 - 2024-07-02T105656.507.png", "mask.png", "masks.png", "night vision.jpg", "outline (1).png", "outline (2).png", "outline (3).png", "outline (4).png", "outline-0 (11).png", "outline-0 (31).png", "outline-0 (9).png", "outline-0 - 2024-07-02T105656.503.png", "outline.png", "outline0000 (1).png", "outline0000 (2).png", "outline0000 (3).png", "outline0000.png", "outline0001.png", "outline0043.png", "pasted/image (1).png", "pasted/image (2).png", "pasted/image (3).png", "pasted/image (4).png", "pasted/image (5).png", "pasted/image (6).png", "pasted/image (7).png", "pasted/image.png", "playbook_59b784a6-af19-4b44-9a45-1e98bae3c9e5.png", "playbook_e2a76fa6-15a6-41d2-922a-29dd68bfd3e3.png", "refernece.jpg", "result_14.png", "rgthree.compare._temp_rzpfz_00007_.png", "safari.jpg", "undefined_image (1).png", "walking-depth.png", "walking-mask.png", "walking-outline.png"], {"image_upload": true}]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "MASK", "JSON", "METADATA_RAW"], "output_is_list": [false, false, false, false], "output_name": ["image", "mask", "prompt", "Metadata RAW"], "name": "Load image with metadata [Crystools]", "display_name": "\ud83e\ude9b Load image with metadata", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Image", "output_node": true}, "Get resolution [Crystools]": {"input": {"required": {"image": ["IMAGE"]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["image"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["width", "height"], "name": "Get resolution [Crystools]", "display_name": "\ud83e\ude9b Get resolution", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Image", "output_node": true}, "Preview from image [Crystools]": {"input": {"required": {}, "optional": {"image": ["IMAGE"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": [], "optional": ["image"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["METADATA_RAW"], "output_is_list": [false], "output_name": ["Metadata RAW"], "name": "Preview from image [Crystools]", "display_name": "\ud83e\ude9b Preview from image", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Image", "output_node": true}, "Preview from metadata [Crystools]": {"input": {"required": {}, "optional": {"metadata_raw": ["METADATA_RAW", {"forceInput": true}]}}, "input_order": {"required": [], "optional": ["metadata_raw"]}, "output": ["METADATA_RAW"], "output_is_list": [false], "output_name": ["Metadata RAW"], "name": "Preview from metadata [Crystools]", "display_name": "\ud83e\ude9b Preview from metadata", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Image", "output_node": true}, "Save image with extra metadata [Crystools]": {"input": {"required": {"image": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "with_workflow": ["BOOLEAN", {"default": true}]}, "optional": {"metadata_extra": ["STRING", {"multiline": true, "default": "{\n  \"Title\": \"Image generated by Crystian\",\n  \"Description\": \"More info: https:\\/\\/www.instagram.com\\/crystian.ia\",\n  \"Author\": \"crystian.ia\",\n  \"Software\": \"ComfyUI\",\n  \"Category\": \"StableDiffusion\",\n  \"Rating\": 5,\n  \"UserComment\": \"\",\n  \"Keywords\": [\n    \"\"\n  ],\n  \"Copyrights\": \"\"\n}"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["image", "filename_prefix", "with_workflow"], "optional": ["metadata_extra"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["METADATA_RAW"], "output_is_list": [false], "output_name": ["Metadata RAW"], "name": "Save image with extra metadata [Crystools]", "display_name": "\ud83e\ude9b Save image with extra metadata", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Image", "output_node": true}, "Metadata extractor [Crystools]": {"input": {"required": {"metadata_raw": ["METADATA_RAW", {"forceInput": true}]}, "optional": {}}, "input_order": {"required": ["metadata_raw"], "optional": []}, "output": ["JSON", "JSON", "JSON", "JSON", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["prompt", "workflow", "file info", "raw to JSON", "raw to property", "raw to csv"], "name": "Metadata extractor [Crystools]", "display_name": "\ud83e\ude9b Metadata extractor", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Metadata", "output_node": false}, "Metadata comparator [Crystools]": {"input": {"required": {"metadata_raw_old": ["METADATA_RAW", {"forceInput": true}], "metadata_raw_new": ["METADATA_RAW", {"forceInput": true}], "what": [["Prompt", "Workflow", "Fileinfo"]]}, "optional": {}}, "input_order": {"required": ["metadata_raw_old", "metadata_raw_new", "what"], "optional": []}, "output": ["JSON"], "output_is_list": [false], "output_name": ["diff"], "name": "Metadata comparator [Crystools]", "display_name": "\ud83e\ude9b Metadata comparator", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Metadata", "output_node": true}, "Json comparator [Crystools]": {"input": {"required": {"json_old": ["JSON", {"forceInput": true}], "json_new": ["JSON", {"forceInput": true}]}, "optional": {}}, "input_order": {"required": ["json_old", "json_new"], "optional": []}, "output": ["JSON"], "output_is_list": [false], "output_name": ["json_compared"], "name": "Json comparator [Crystools]", "display_name": "\ud83e\ude9b Json comparator", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Utils", "output_node": true}, "Stats system [Crystools]": {"input": {"required": {"latent": ["LATENT"]}}, "input_order": {"required": ["latent"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "Stats system [Crystools]", "display_name": "\ud83e\ude9b Stats system (powered by WAS)", "description": "", "python_module": "custom_nodes.ComfyUI-Crystools", "category": "crystools \ud83e\ude9b/Utils", "output_node": false}, "CLIPTextEncodeSDXL+": {"input": {"required": {"width": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "height": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "size_cond_factor": ["INT", {"default": 4, "min": 1, "max": 16}], "text": ["STRING", {"multiline": true, "dynamicPrompts": true, "default": ""}], "clip": ["CLIP"]}}, "input_order": {"required": ["width", "height", "size_cond_factor", "text", "clip"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeSDXL+", "display_name": "\ud83d\udd27 SDXL CLIPTextEncode", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/conditioning", "output_node": false}, "ConditioningCombineMultiple+": {"input": {"required": {"conditioning_1": ["CONDITIONING"], "conditioning_2": ["CONDITIONING"]}, "optional": {"conditioning_3": ["CONDITIONING"], "conditioning_4": ["CONDITIONING"], "conditioning_5": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning_1", "conditioning_2"], "optional": ["conditioning_3", "conditioning_4", "conditioning_5"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningCombineMultiple+", "display_name": "\ud83d\udd27 Cond Combine Multiple", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/conditioning", "output_node": false}, "SD3NegativeConditioning+": {"input": {"required": {"conditioning": ["CONDITIONING"], "end": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["conditioning", "end"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "SD3NegativeConditioning+", "display_name": "\ud83d\udd27 SD3 Negative Conditioning", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/conditioning", "output_node": false}, "FluxAttentionSeeker+": {"input": {"required": {"clip": ["CLIP"], "apply_to_query": ["BOOLEAN", {"default": true}], "apply_to_key": ["BOOLEAN", {"default": true}], "apply_to_value": ["BOOLEAN", {"default": true}], "apply_to_out": ["BOOLEAN", {"default": true}], "clip_l_0": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_1": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_2": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_3": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_4": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_5": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_6": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_7": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_8": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_9": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_10": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_11": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_0": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_1": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_2": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_3": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_4": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_5": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_6": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_7": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_8": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_9": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_10": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_11": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_12": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_13": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_14": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_15": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_16": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_17": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_18": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_19": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_20": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_21": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_22": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_23": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}]}}, "input_order": {"required": ["clip", "apply_to_query", "apply_to_key", "apply_to_value", "apply_to_out", "clip_l_0", "clip_l_1", "clip_l_2", "clip_l_3", "clip_l_4", "clip_l_5", "clip_l_6", "clip_l_7", "clip_l_8", "clip_l_9", "clip_l_10", "clip_l_11", "t5xxl_0", "t5xxl_1", "t5xxl_2", "t5xxl_3", "t5xxl_4", "t5xxl_5", "t5xxl_6", "t5xxl_7", "t5xxl_8", "t5xxl_9", "t5xxl_10", "t5xxl_11", "t5xxl_12", "t5xxl_13", "t5xxl_14", "t5xxl_15", "t5xxl_16", "t5xxl_17", "t5xxl_18", "t5xxl_19", "t5xxl_20", "t5xxl_21", "t5xxl_22", "t5xxl_23"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "FluxAttentionSeeker+", "display_name": "\ud83d\udd27 Flux Attention Seeker", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/conditioning", "output_node": false}, "SD3AttentionSeekerLG+": {"input": {"required": {"clip": ["CLIP"], "apply_to_query": ["BOOLEAN", {"default": true}], "apply_to_key": ["BOOLEAN", {"default": true}], "apply_to_value": ["BOOLEAN", {"default": true}], "apply_to_out": ["BOOLEAN", {"default": true}], "clip_l_0": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_1": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_2": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_3": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_4": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_5": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_6": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_7": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_8": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_9": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_10": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_l_11": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_0": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_1": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_2": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_3": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_4": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_5": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_6": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_7": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_8": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_9": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_10": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_11": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_12": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_13": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_14": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_15": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_16": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_17": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_18": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_19": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_20": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_21": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_22": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_23": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_24": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_25": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_26": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_27": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_28": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_29": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_30": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "clip_g_31": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}]}}, "input_order": {"required": ["clip", "apply_to_query", "apply_to_key", "apply_to_value", "apply_to_out", "clip_l_0", "clip_l_1", "clip_l_2", "clip_l_3", "clip_l_4", "clip_l_5", "clip_l_6", "clip_l_7", "clip_l_8", "clip_l_9", "clip_l_10", "clip_l_11", "clip_g_0", "clip_g_1", "clip_g_2", "clip_g_3", "clip_g_4", "clip_g_5", "clip_g_6", "clip_g_7", "clip_g_8", "clip_g_9", "clip_g_10", "clip_g_11", "clip_g_12", "clip_g_13", "clip_g_14", "clip_g_15", "clip_g_16", "clip_g_17", "clip_g_18", "clip_g_19", "clip_g_20", "clip_g_21", "clip_g_22", "clip_g_23", "clip_g_24", "clip_g_25", "clip_g_26", "clip_g_27", "clip_g_28", "clip_g_29", "clip_g_30", "clip_g_31"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "SD3AttentionSeekerLG+", "display_name": "\ud83d\udd27 SD3 Attention Seeker L/G", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/conditioning", "output_node": false}, "SD3AttentionSeekerT5+": {"input": {"required": {"clip": ["CLIP"], "apply_to_query": ["BOOLEAN", {"default": true}], "apply_to_key": ["BOOLEAN", {"default": true}], "apply_to_value": ["BOOLEAN", {"default": true}], "apply_to_out": ["BOOLEAN", {"default": true}], "t5xxl_0": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_1": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_2": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_3": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_4": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_5": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_6": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_7": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_8": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_9": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_10": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_11": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_12": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_13": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_14": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_15": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_16": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_17": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_18": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_19": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_20": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_21": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_22": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}], "t5xxl_23": ["FLOAT", {"display": "slider", "default": 1.0, "min": 0, "max": 5, "step": 0.05}]}}, "input_order": {"required": ["clip", "apply_to_query", "apply_to_key", "apply_to_value", "apply_to_out", "t5xxl_0", "t5xxl_1", "t5xxl_2", "t5xxl_3", "t5xxl_4", "t5xxl_5", "t5xxl_6", "t5xxl_7", "t5xxl_8", "t5xxl_9", "t5xxl_10", "t5xxl_11", "t5xxl_12", "t5xxl_13", "t5xxl_14", "t5xxl_15", "t5xxl_16", "t5xxl_17", "t5xxl_18", "t5xxl_19", "t5xxl_20", "t5xxl_21", "t5xxl_22", "t5xxl_23"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "SD3AttentionSeekerT5+", "display_name": "\ud83d\udd27 SD3 Attention Seeker T5", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/conditioning", "output_node": false}, "FluxBlocksBuster+": {"input": {"required": {"model": ["MODEL"], "blocks": ["STRING", {"default": "## 0 = 1.0\n## 1 = 1.0\n## 2 = 1.0\n## 3 = 1.0\n## 4 = 1.0\n## 5 = 1.0\n## 6 = 1.0\n## 7 = 1.0\n## 8 = 1.0\n## 9 = 1.0\n## 10 = 1.0\n## 11 = 1.0\n## 12 = 1.0\n## 13 = 1.0\n## 14 = 1.0\n## 15 = 1.0\n## 16 = 1.0\n## 17 = 1.0\n## 18 = 1.0\n# 0 = 1.0\n# 1 = 1.0\n# 2 = 1.0\n# 3 = 1.0\n# 4 = 1.0\n# 5 = 1.0\n# 6 = 1.0\n# 7 = 1.0\n# 8 = 1.0\n# 9 = 1.0\n# 10 = 1.0\n# 11 = 1.0\n# 12 = 1.0\n# 13 = 1.0\n# 14 = 1.0\n# 15 = 1.0\n# 16 = 1.0\n# 17 = 1.0\n# 18 = 1.0\n# 19 = 1.0\n# 20 = 1.0\n# 21 = 1.0\n# 22 = 1.0\n# 23 = 1.0\n# 24 = 1.0\n# 25 = 1.0\n# 26 = 1.0\n# 27 = 1.0\n# 28 = 1.0\n# 29 = 1.0\n# 30 = 1.0\n# 31 = 1.0\n# 32 = 1.0\n# 33 = 1.0\n# 34 = 1.0\n# 35 = 1.0\n# 36 = 1.0\n# 37 = 1.0", "multiline": true, "dynamicPrompts": true}]}}, "input_order": {"required": ["model", "blocks"]}, "output": ["MODEL", "STRING"], "output_is_list": [false, false], "output_name": ["MODEL", "patched_blocks"], "name": "FluxBlocksBuster+", "display_name": "\ud83d\udd27 Flux Model Blocks Buster", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/conditioning", "output_node": false}, "ImageEnhanceDifference+": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "exponent": ["FLOAT", {"default": 0.75, "min": 0.0, "max": 1.0, "step": 0.05}]}}, "input_order": {"required": ["image1", "image2", "exponent"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageEnhanceDifference+", "display_name": "\ud83d\udd27 Image Enhance Difference", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image analysis", "output_node": false}, "ImageBatchMultiple+": {"input": {"required": {"image_1": ["IMAGE"], "method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"], {"default": "lanczos"}]}, "optional": {"image_2": ["IMAGE"], "image_3": ["IMAGE"], "image_4": ["IMAGE"], "image_5": ["IMAGE"]}}, "input_order": {"required": ["image_1", "method"], "optional": ["image_2", "image_3", "image_4", "image_5"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBatchMultiple+", "display_name": "\ud83d\udd27 Images Batch Multiple", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image batch", "output_node": false}, "ImageExpandBatch+": {"input": {"required": {"image": ["IMAGE"], "size": ["INT", {"default": 16, "min": 1, "step": 1}], "method": [["expand", "repeat all", "repeat first", "repeat last"]]}}, "input_order": {"required": ["image", "size", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageExpandBatch+", "display_name": "\ud83d\udd27 Image Expand Batch", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image batch", "output_node": false}, "ImageFromBatch+": {"input": {"required": {"image": ["IMAGE"], "start": ["INT", {"default": 0, "min": 0, "step": 1}], "length": ["INT", {"default": -1, "min": -1, "step": 1}]}}, "input_order": {"required": ["image", "start", "length"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFromBatch+", "display_name": "\ud83d\udd27 Image From Batch", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image batch", "output_node": false}, "ImageListToBatch+": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageListToBatch+", "display_name": "\ud83d\udd27 Image List To Batch", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image batch", "output_node": false}, "ImageBatchToList+": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "ImageBatchToList+", "display_name": "\ud83d\udd27 Image Batch To List", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image batch", "output_node": false}, "ImageCompositeFromMaskBatch+": {"input": {"required": {"image_from": ["IMAGE"], "image_to": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["image_from", "image_to", "mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageCompositeFromMaskBatch+", "display_name": "\ud83d\udd27 Image Composite From Mask Batch", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageComposite+": {"input": {"required": {"destination": ["IMAGE"], "source": ["IMAGE"], "x": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}], "y": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}], "offset_x": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}], "offset_y": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["destination", "source", "x", "y", "offset_x", "offset_y"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageComposite+", "display_name": "\ud83d\udd27 Image Composite", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageCrop+": {"input": {"required": {"image": ["IMAGE"], "width": ["INT", {"default": 256, "min": 0, "max": 16384, "step": 8}], "height": ["INT", {"default": 256, "min": 0, "max": 16384, "step": 8}], "position": [["top-left", "top-center", "top-right", "right-center", "bottom-right", "bottom-center", "bottom-left", "left-center", "center"]], "x_offset": ["INT", {"default": 0, "min": -99999, "step": 1}], "y_offset": ["INT", {"default": 0, "min": -99999, "step": 1}]}}, "input_order": {"required": ["image", "width", "height", "position", "x_offset", "y_offset"]}, "output": ["IMAGE", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "x", "y"], "name": "ImageCrop+", "display_name": "\ud83d\udd27 Image Crop", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageFlip+": {"input": {"required": {"image": ["IMAGE"], "axis": [["x", "y", "xy"]]}}, "input_order": {"required": ["image", "axis"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFlip+", "display_name": "\ud83d\udd27 Image Flip", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageRandomTransform+": {"input": {"required": {"image": ["IMAGE"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "repeat": ["INT", {"default": 1, "min": 1, "max": 256, "step": 1}], "variation": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.05}]}}, "input_order": {"required": ["image", "seed", "repeat", "variation"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageRandomTransform+", "display_name": "\ud83d\udd27 Image Random Transform", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageRemoveAlpha+": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageRemoveAlpha+", "display_name": "\ud83d\udd27 Image Remove Alpha", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image utils", "output_node": false}, "ImageRemoveBackground+": {"input": {"required": {"rembg_session": ["REMBG_SESSION"], "image": ["IMAGE"]}}, "input_order": {"required": ["rembg_session", "image"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImageRemoveBackground+", "display_name": "\ud83d\udd27 Image Remove Background", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageResize+": {"input": {"required": {"image": ["IMAGE"], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1}], "interpolation": [["nearest", "bilinear", "bicubic", "area", "nearest-exact", "lanczos"]], "method": [["stretch", "keep proportion", "fill / crop", "pad"]], "condition": [["always", "downscale if bigger", "upscale if smaller", "if bigger area", "if smaller area"]], "multiple_of": ["INT", {"default": 0, "min": 0, "max": 512, "step": 1}]}}, "input_order": {"required": ["image", "width", "height", "interpolation", "method", "condition", "multiple_of"]}, "output": ["IMAGE", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "width", "height"], "name": "ImageResize+", "display_name": "\ud83d\udd27 Image Resize", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageSeamCarving+": {"input": {"required": {"image": ["IMAGE"], "width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "energy": [["backward", "forward"]], "order": [["width-first", "height-first"]]}, "optional": {"keep_mask": ["MASK"], "drop_mask": ["MASK"]}}, "input_order": {"required": ["image", "width", "height", "energy", "order"], "optional": ["keep_mask", "drop_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageSeamCarving+", "display_name": "\ud83d\udd27 Image Seam Carving", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageTile+": {"input": {"required": {"image": ["IMAGE"], "rows": ["INT", {"default": 2, "min": 1, "max": 256, "step": 1}], "cols": ["INT", {"default": 2, "min": 1, "max": 256, "step": 1}], "overlap": ["FLOAT", {"default": 0, "min": 0, "max": 0.5, "step": 0.01}], "overlap_x": ["INT", {"default": 0, "min": 0, "max": 8192, "step": 1}], "overlap_y": ["INT", {"default": 0, "min": 0, "max": 8192, "step": 1}]}}, "input_order": {"required": ["image", "rows", "cols", "overlap", "overlap_x", "overlap_y"]}, "output": ["IMAGE", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["IMAGE", "tile_width", "tile_height", "overlap_x", "overlap_y"], "name": "ImageTile+", "display_name": "\ud83d\udd27 Image Tile", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageUntile+": {"input": {"required": {"tiles": ["IMAGE"], "overlap_x": ["INT", {"default": 0, "min": 0, "max": 8192, "step": 1}], "overlap_y": ["INT", {"default": 0, "min": 0, "max": 8192, "step": 1}], "rows": ["INT", {"default": 2, "min": 1, "max": 256, "step": 1}], "cols": ["INT", {"default": 2, "min": 1, "max": 256, "step": 1}]}}, "input_order": {"required": ["tiles", "overlap_x", "overlap_y", "rows", "cols"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageUntile+", "display_name": "\ud83d\udd27 Image Untile", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image manipulation", "output_node": false}, "RemBGSession+": {"input": {"required": {"model": [["u2net: general purpose", "u2netp: lightweight general purpose", "u2net_human_seg: human segmentation", "u2net_cloth_seg: cloths Parsing", "silueta: very small u2net", "isnet-general-use: general purpose", "isnet-anime: anime illustrations", "sam: general purpose"]], "providers": [["CPU", "CUDA", "ROCM", "DirectML", "OpenVINO", "CoreML", "Tensorrt", "Azure"]]}}, "input_order": {"required": ["model", "providers"]}, "output": ["REMBG_SESSION"], "output_is_list": [false], "output_name": ["REMBG_SESSION"], "name": "RemBGSession+", "display_name": "\ud83d\udd27 RemBG Session", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image manipulation", "output_node": false}, "TransparentBGSession+": {"input": {"required": {"mode": [["base", "fast", "base-nightly"]], "use_jit": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["mode", "use_jit"]}, "output": ["REMBG_SESSION"], "output_is_list": [false], "output_name": ["REMBG_SESSION"], "name": "TransparentBGSession+", "display_name": "\ud83d\udd27 InSPyReNet TransparentBG", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageApplyLUT+": {"input": {"required": {"image": ["IMAGE"], "lut_file": [["put_luts_files_here.txt"]], "gamma_correction": ["BOOLEAN", {"default": true}], "clip_values": ["BOOLEAN", {"default": true}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.1}]}}, "input_order": {"required": ["image", "lut_file", "gamma_correction", "clip_values", "strength"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageApplyLUT+", "display_name": "\ud83d\udd27 Image Apply LUT", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image processing", "output_node": false}, "ImageCASharpening+": {"input": {"required": {"image": ["IMAGE"], "amount": ["FLOAT", {"default": 0.8, "min": 0, "max": 1, "step": 0.05}]}}, "input_order": {"required": ["image", "amount"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageCASharpening+", "display_name": "\ud83d\udd27 Image Contrast Adaptive Sharpening", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image processing", "output_node": false}, "ImageDesaturate+": {"input": {"required": {"image": ["IMAGE"], "factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.05}], "method": [["luminance (Rec.709)", "luminance (Rec.601)", "average", "lightness"]]}}, "input_order": {"required": ["image", "factor", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageDesaturate+", "display_name": "\ud83d\udd27 Image Desaturate", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image processing", "output_node": false}, "PixelOEPixelize+": {"input": {"required": {"image": ["IMAGE"], "downscale_mode": [["contrast", "bicubic", "nearest", "center", "k-centroid"]], "target_size": ["INT", {"default": 128, "min": 0, "max": 16384, "step": 8}], "patch_size": ["INT", {"default": 16, "min": 4, "max": 32, "step": 2}], "thickness": ["INT", {"default": 2, "min": 1, "max": 16, "step": 1}], "color_matching": ["BOOLEAN", {"default": true}], "upscale": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "downscale_mode", "target_size", "patch_size", "thickness", "color_matching", "upscale"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "PixelOEPixelize+", "display_name": "\ud83d\udd27 Pixelize", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image processing", "output_node": false}, "ImagePosterize+": {"input": {"required": {"image": ["IMAGE"], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.05}]}}, "input_order": {"required": ["image", "threshold"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImagePosterize+", "display_name": "\ud83d\udd27 Image Posterize", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image processing", "output_node": false}, "ImageColorMatch+": {"input": {"required": {"image": ["IMAGE"], "reference": ["IMAGE"], "color_space": [["LAB", "YCbCr", "RGB", "LUV", "YUV", "XYZ"]], "factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.05}], "device": [["auto", "cpu", "gpu"]], "batch_size": ["INT", {"default": 0, "min": 0, "max": 1024, "step": 1}]}, "optional": {"reference_mask": ["MASK"]}}, "input_order": {"required": ["image", "reference", "color_space", "factor", "device", "batch_size"], "optional": ["reference_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageColorMatch+", "display_name": "\ud83d\udd27 Image Color Match", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image processing", "output_node": false}, "ImageColorMatchAdobe+": {"input": {"required": {"image": ["IMAGE"], "reference": ["IMAGE"], "color_space": [["RGB", "LAB"]], "luminance_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 0.05}], "color_intensity_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 0.05}], "fade_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.05}], "neutralization_factor": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.05}], "device": [["auto", "cpu", "gpu"]]}, "optional": {"reference_mask": ["MASK"]}}, "input_order": {"required": ["image", "reference", "color_space", "luminance_factor", "color_intensity_factor", "fade_factor", "neutralization_factor", "device"], "optional": ["reference_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageColorMatchAdobe+", "display_name": "\ud83d\udd27 Image Color Match Adobe", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image processing", "output_node": false}, "ImageHistogramMatch+": {"input": {"required": {"image": ["IMAGE"], "reference": ["IMAGE"], "method": [["pytorch", "skimage"]], "factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.05}], "device": [["auto", "cpu", "gpu"]]}}, "input_order": {"required": ["image", "reference", "method", "factor", "device"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageHistogramMatch+", "display_name": "\ud83d\udd27 Image Histogram Match", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image processing", "output_node": false}, "ImageSmartSharpen+": {"input": {"required": {"image": ["IMAGE"], "noise_radius": ["INT", {"default": 7, "min": 1, "max": 25, "step": 1}], "preserve_edges": ["FLOAT", {"default": 0.75, "min": 0.0, "max": 1.0, "step": 0.05}], "sharpen": ["FLOAT", {"default": 5.0, "min": 0.0, "max": 25.0, "step": 0.5}], "ratio": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.1}]}}, "input_order": {"required": ["image", "noise_radius", "preserve_edges", "sharpen", "ratio"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageSmartSharpen+", "display_name": "\ud83d\udd27 Image Smart Sharpen", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image processing", "output_node": false}, "GetImageSize+": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["INT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["width", "height", "count"], "name": "GetImageSize+", "display_name": "\ud83d\udd27 Get Image Size", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image utils", "output_node": false}, "ImageToDevice+": {"input": {"required": {"image": ["IMAGE"], "device": [["auto", "cpu", "gpu"]]}}, "input_order": {"required": ["image", "device"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageToDevice+", "display_name": "\ud83d\udd27 Image To Device", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image utils", "output_node": false}, "ImagePreviewFromLatent+": {"input": {"required": {"latent": ["LATENT"], "vae": ["VAE"], "tile_size": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 64}]}, "optional": {"image": [["none"], {"image_upload": false}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["latent", "vae", "tile_size"], "optional": ["image"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE", "MASK", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["IMAGE", "MASK", "width", "height"], "name": "ImagePreviewFromLatent+", "display_name": "\ud83d\udd27 Image Preview From Latent", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image utils", "output_node": true}, "NoiseFromImage+": {"input": {"required": {"image": ["IMAGE"], "noise_strenght": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "noise_size": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "color_noise": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.01}], "mask_strength": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "mask_scale_diff": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "mask_contrast": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.1}], "saturation": ["FLOAT", {"default": 2.0, "min": 0.0, "max": 100.0, "step": 0.1}], "contrast": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.1}], "blur": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.1}]}, "optional": {"noise_mask": ["IMAGE"]}}, "input_order": {"required": ["image", "noise_strenght", "noise_size", "color_noise", "mask_strength", "mask_scale_diff", "mask_contrast", "saturation", "contrast", "blur"], "optional": ["noise_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "NoiseFromImage+", "display_name": "\ud83d\udd27 Noise From Image", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/image utils", "output_node": false}, "MaskBlur+": {"input": {"required": {"mask": ["MASK"], "amount": ["INT", {"default": 6, "min": 0, "max": 256, "step": 1}], "device": [["auto", "cpu", "gpu"]]}}, "input_order": {"required": ["mask", "amount", "device"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskBlur+", "display_name": "\ud83d\udd27 Mask Blur", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/mask", "output_node": false}, "MaskBoundingBox+": {"input": {"required": {"mask": ["MASK"], "padding": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "blur": ["INT", {"default": 0, "min": 0, "max": 256, "step": 1}]}, "optional": {"image_optional": ["IMAGE"]}}, "input_order": {"required": ["mask", "padding", "blur"], "optional": ["image_optional"]}, "output": ["MASK", "IMAGE", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["MASK", "IMAGE", "x", "y", "width", "height"], "name": "MaskBoundingBox+", "display_name": "\ud83d\udd27 Mask Bounding Box", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/mask", "output_node": false}, "MaskFix+": {"input": {"required": {"mask": ["MASK"], "erode_dilate": ["INT", {"default": 0, "min": -256, "max": 256, "step": 1}], "fill_holes": ["INT", {"default": 0, "min": 0, "max": 128, "step": 1}], "remove_isolated_pixels": ["INT", {"default": 0, "min": 0, "max": 32, "step": 1}], "smooth": ["INT", {"default": 0, "min": 0, "max": 256, "step": 1}], "blur": ["INT", {"default": 0, "min": 0, "max": 256, "step": 1}]}}, "input_order": {"required": ["mask", "erode_dilate", "fill_holes", "remove_isolated_pixels", "smooth", "blur"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskFix+", "display_name": "\ud83d\udd27 Mask Fix", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/mask", "output_node": false}, "MaskFlip+": {"input": {"required": {"mask": ["MASK"], "axis": [["x", "y", "xy"]]}}, "input_order": {"required": ["mask", "axis"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskFlip+", "display_name": "\ud83d\udd27 Mask Flip", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/mask", "output_node": false}, "MaskFromColor+": {"input": {"required": {"image": ["IMAGE"], "red": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "threshold": ["INT", {"default": 0, "min": 0, "max": 127, "step": 1}]}}, "input_order": {"required": ["image", "red", "green", "blue", "threshold"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskFromColor+", "display_name": "\ud83d\udd27 Mask From Color", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/mask", "output_node": false}, "MaskFromList+": {"input": {"required": {"width": ["INT", {"default": 32, "min": 0, "max": 16384, "step": 8}], "height": ["INT", {"default": 32, "min": 0, "max": 16384, "step": 8}]}, "optional": {"values": ["INT,FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0}], "str_values": ["STRING", {"default": "", "multiline": true, "placeholder": "0.0, 0.5, 1.0"}]}}, "input_order": {"required": ["width", "height"], "optional": ["values", "str_values"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskFromList+", "display_name": "\ud83d\udd27 Mask From List", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/mask", "output_node": false}, "MaskFromRGBCMYBW+": {"input": {"required": {"image": ["IMAGE"], "threshold_r": ["FLOAT", {"default": 0.15, "min": 0.0, "max": 1, "step": 0.01}], "threshold_g": ["FLOAT", {"default": 0.15, "min": 0.0, "max": 1, "step": 0.01}], "threshold_b": ["FLOAT", {"default": 0.15, "min": 0.0, "max": 1, "step": 0.01}]}}, "input_order": {"required": ["image", "threshold_r", "threshold_g", "threshold_b"]}, "output": ["MASK", "MASK", "MASK", "MASK", "MASK", "MASK", "MASK", "MASK"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["red", "green", "blue", "cyan", "magenta", "yellow", "black", "white"], "name": "MaskFromRGBCMYBW+", "display_name": "\ud83d\udd27 Mask From RGB/CMY/BW", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/mask", "output_node": false}, "MaskFromSegmentation+": {"input": {"required": {"image": ["IMAGE"], "segments": ["INT", {"default": 6, "min": 1, "max": 16, "step": 1}], "remove_isolated_pixels": ["INT", {"default": 0, "min": 0, "max": 32, "step": 1}], "remove_small_masks": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "fill_holes": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "segments", "remove_isolated_pixels", "remove_small_masks", "fill_holes"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskFromSegmentation+", "display_name": "\ud83d\udd27 Mask From Segmentation", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/mask", "output_node": false}, "MaskPreview+": {"input": {"required": {"mask": ["MASK"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["mask"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "MaskPreview+", "display_name": "\ud83d\udd27 Mask Preview", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/mask", "output_node": true}, "MaskSmooth+": {"input": {"required": {"mask": ["MASK"], "amount": ["INT", {"default": 0, "min": 0, "max": 127, "step": 1}]}}, "input_order": {"required": ["mask", "amount"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskSmooth+", "display_name": "\ud83d\udd27 Mask Smooth", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/mask", "output_node": false}, "TransitionMask+": {"input": {"required": {"width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "frames": ["INT", {"default": 16, "min": 1, "max": 9999, "step": 1}], "start_frame": ["INT", {"default": 0, "min": 0, "step": 1}], "end_frame": ["INT", {"default": 9999, "min": 0, "step": 1}], "transition_type": [["horizontal slide", "vertical slide", "horizontal bar", "vertical bar", "center box", "horizontal door", "vertical door", "circle", "fade"]], "timing_function": [["linear", "in", "out", "in-out"]]}}, "input_order": {"required": ["width", "height", "frames", "start_frame", "end_frame", "transition_type", "timing_function"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "TransitionMask+", "display_name": "\ud83d\udd27 Transition Mask", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/mask", "output_node": false}, "MaskBatch+": {"input": {"required": {"mask1": ["MASK"], "mask2": ["MASK"]}}, "input_order": {"required": ["mask1", "mask2"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskBatch+", "display_name": "\ud83d\udd27 Mask Batch", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/mask batch", "output_node": false}, "MaskExpandBatch+": {"input": {"required": {"mask": ["MASK"], "size": ["INT", {"default": 16, "min": 1, "step": 1}], "method": [["expand", "repeat all", "repeat first", "repeat last"]]}}, "input_order": {"required": ["mask", "size", "method"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskExpandBatch+", "display_name": "\ud83d\udd27 Mask Expand Batch", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/mask batch", "output_node": false}, "MaskFromBatch+": {"input": {"required": {"mask": ["MASK"], "start": ["INT", {"default": 0, "min": 0, "step": 1}], "length": ["INT", {"default": 1, "min": 1, "step": 1}]}}, "input_order": {"required": ["mask", "start", "length"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskFromBatch+", "display_name": "\ud83d\udd27 Mask From Batch", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/mask batch", "output_node": false}, "KSamplerVariationsStochastic+": {"input": {"required": {"model": ["MODEL"], "latent_image": ["LATENT"], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 25, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 7.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "sampler": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "variation_seed": ["INT:seed", {"default": 0, "min": 0, "max": 18446744073709551615}], "variation_strength": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.05, "round": 0.01}], "cfg_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.05, "round": 0.01}]}}, "input_order": {"required": ["model", "latent_image", "noise_seed", "steps", "cfg", "sampler", "scheduler", "positive", "negative", "variation_seed", "variation_strength", "cfg_scale"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "KSamplerVariationsStochastic+", "display_name": "\ud83d\udd27 KSampler Stochastic Variations", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/sampling", "output_node": false}, "KSamplerVariationsWithNoise+": {"input": {"required": {"model": ["MODEL"], "latent_image": ["LATENT"], "main_seed": ["INT:seed", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "variation_strength": ["FLOAT", {"default": 0.17, "min": 0.0, "max": 1.0, "step": 0.01, "round": 0.01}], "variation_seed": ["INT:seed", {"default": 12345, "min": 0, "max": 18446744073709551615}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["model", "latent_image", "main_seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "variation_strength", "variation_seed", "denoise"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "KSamplerVariationsWithNoise+", "display_name": "\ud83d\udd27 KSampler Variations with Noise Injection", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/sampling", "output_node": false}, "InjectLatentNoise+": {"input": {"required": {"latent": ["LATENT"], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "noise_strength": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01, "round": 0.01}], "normalize": [["false", "true"], {"default": "false"}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["latent", "noise_seed", "noise_strength", "normalize"], "optional": ["mask"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "InjectLatentNoise+", "display_name": "\ud83d\udd27 Inject Latent Noise", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/sampling", "output_node": false}, "FluxSamplerParams+": {"input": {"required": {"model": ["MODEL"], "conditioning": ["CONDITIONING"], "latent_image": ["LATENT"], "seed": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "?"}], "sampler": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "euler"}], "scheduler": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "simple"}], "steps": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "20"}], "guidance": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "3.5"}], "max_shift": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": ""}], "base_shift": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": ""}], "denoise": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "1.0"}]}, "optional": {"loras": ["LORA_PARAMS"]}}, "input_order": {"required": ["model", "conditioning", "latent_image", "seed", "sampler", "scheduler", "steps", "guidance", "max_shift", "base_shift", "denoise"], "optional": ["loras"]}, "output": ["LATENT", "SAMPLER_PARAMS"], "output_is_list": [false, false], "output_name": ["latent", "params"], "name": "FluxSamplerParams+", "display_name": "\ud83d\udd27 Flux Sampler Parameters", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/sampling", "output_node": false}, "PlotParameters+": {"input": {"required": {"images": ["IMAGE"], "params": ["SAMPLER_PARAMS"], "order_by": [["none", "time", "seed", "steps", "denoise", "sampler", "scheduler", "guidance", "max_shift", "base_shift", "lora_strength"]], "cols_value": [["none", "time", "seed", "steps", "denoise", "sampler", "scheduler", "guidance", "max_shift", "base_shift", "lora_strength"]], "cols_num": ["INT", {"default": -1, "min": -1, "max": 1024}], "add_prompt": [["false", "true", "excerpt"]], "add_params": [["false", "true", "changes only"], {"default": "true"}]}}, "input_order": {"required": ["images", "params", "order_by", "cols_value", "cols_num", "add_prompt", "add_params"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "PlotParameters+", "display_name": "\ud83d\udd27 Plot Sampler Parameters", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/sampling", "output_node": false}, "TextEncodeForSamplerParams+": {"input": {"required": {"text": ["STRING", {"multiline": true, "dynamicPrompts": true, "default": "Separate prompts with at least three dashes\n---\nLike so"}], "clip": ["CLIP"]}}, "input_order": {"required": ["text", "clip"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "TextEncodeForSamplerParams+", "display_name": "\ud83d\udd27Text Encode for Sampler Params", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/sampling", "output_node": false}, "SamplerSelectHelper+": {"input": {"required": {"euler": ["BOOLEAN", {"default": false}], "euler_cfg_pp": ["BOOLEAN", {"default": false}], "euler_ancestral": ["BOOLEAN", {"default": false}], "euler_ancestral_cfg_pp": ["BOOLEAN", {"default": false}], "heun": ["BOOLEAN", {"default": false}], "heunpp2": ["BOOLEAN", {"default": false}], "dpm_2": ["BOOLEAN", {"default": false}], "dpm_2_ancestral": ["BOOLEAN", {"default": false}], "lms": ["BOOLEAN", {"default": false}], "dpm_fast": ["BOOLEAN", {"default": false}], "dpm_adaptive": ["BOOLEAN", {"default": false}], "dpmpp_2s_ancestral": ["BOOLEAN", {"default": false}], "dpmpp_2s_ancestral_cfg_pp": ["BOOLEAN", {"default": false}], "dpmpp_sde": ["BOOLEAN", {"default": false}], "dpmpp_sde_gpu": ["BOOLEAN", {"default": false}], "dpmpp_2m": ["BOOLEAN", {"default": false}], "dpmpp_2m_cfg_pp": ["BOOLEAN", {"default": false}], "dpmpp_2m_sde": ["BOOLEAN", {"default": false}], "dpmpp_2m_sde_gpu": ["BOOLEAN", {"default": false}], "dpmpp_3m_sde": ["BOOLEAN", {"default": false}], "dpmpp_3m_sde_gpu": ["BOOLEAN", {"default": false}], "ddpm": ["BOOLEAN", {"default": false}], "lcm": ["BOOLEAN", {"default": false}], "ipndm": ["BOOLEAN", {"default": false}], "ipndm_v": ["BOOLEAN", {"default": false}], "deis": ["BOOLEAN", {"default": false}], "ddim": ["BOOLEAN", {"default": false}], "uni_pc": ["BOOLEAN", {"default": false}], "uni_pc_bh2": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "SamplerSelectHelper+", "display_name": "\ud83d\udd27 Sampler Select Helper", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/sampling", "output_node": false}, "SchedulerSelectHelper+": {"input": {"required": {"normal": ["BOOLEAN", {"default": false}], "karras": ["BOOLEAN", {"default": false}], "exponential": ["BOOLEAN", {"default": false}], "sgm_uniform": ["BOOLEAN", {"default": false}], "simple": ["BOOLEAN", {"default": false}], "ddim_uniform": ["BOOLEAN", {"default": false}], "beta": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "SchedulerSelectHelper+", "display_name": "\ud83d\udd27 Scheduler Select Helper", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/sampling", "output_node": false}, "LorasForFluxParams+": {"input": {"required": {"lora_1": [["AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"tooltip": "The name of the LoRA."}], "strength_model_1": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "1.0"}]}}, "input_order": {"required": ["lora_1", "strength_model_1"]}, "output": ["LORA_PARAMS"], "output_is_list": [false], "output_name": ["LORA_PARAMS"], "name": "LorasForFluxParams+", "display_name": "\ud83d\udd27 LoRA for Flux Parameters", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/sampling", "output_node": false}, "ApplyCLIPSeg+": {"input": {"required": {"clip_seg": ["CLIP_SEG"], "image": ["IMAGE"], "prompt": ["STRING", {"multiline": false, "default": ""}], "threshold": ["FLOAT", {"default": 0.4, "min": 0.0, "max": 1.0, "step": 0.05}], "smooth": ["INT", {"default": 9, "min": 0, "max": 32, "step": 1}], "dilate": ["INT", {"default": 0, "min": -32, "max": 32, "step": 1}], "blur": ["INT", {"default": 0, "min": 0, "max": 64, "step": 1}]}}, "input_order": {"required": ["clip_seg", "image", "prompt", "threshold", "smooth", "dilate", "blur"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ApplyCLIPSeg+", "display_name": "\ud83d\udd27 Apply CLIPSeg", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/segmentation", "output_node": false}, "LoadCLIPSegModels+": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["CLIP_SEG"], "output_is_list": [false], "output_name": ["CLIP_SEG"], "name": "LoadCLIPSegModels+", "display_name": "\ud83d\udd27 Load CLIPSeg Models", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/segmentation", "output_node": false}, "DrawText+": {"input": {"required": {"text": ["STRING", {"multiline": true, "dynamicPrompts": true, "default": "Hello, World!"}], "font": [["ShareTechMono-Regular.ttf"]], "size": ["INT", {"default": 56, "min": 1, "max": 9999, "step": 1}], "color": ["STRING", {"multiline": false, "default": "#FFFFFF"}], "background_color": ["STRING", {"multiline": false, "default": "#00000000"}], "shadow_distance": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "shadow_blur": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "shadow_color": ["STRING", {"multiline": false, "default": "#000000"}], "horizontal_align": [["left", "center", "right"]], "vertical_align": [["top", "center", "bottom"]], "offset_x": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}], "offset_y": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}], "direction": [["ltr", "rtl"]]}, "optional": {"img_composite": ["IMAGE"]}}, "input_order": {"required": ["text", "font", "size", "color", "background_color", "shadow_distance", "shadow_blur", "shadow_color", "horizontal_align", "vertical_align", "offset_x", "offset_y", "direction"], "optional": ["img_composite"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "DrawText+", "display_name": "\ud83d\udd27 Draw Text", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/text", "output_node": false}, "BatchCount+": {"input": {"required": {"batch": ["*", {}]}}, "input_order": {"required": ["batch"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "BatchCount+", "display_name": "\ud83d\udd27 Batch Count", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/utilities", "output_node": false}, "ConsoleDebug+": {"input": {"required": {"value": ["*", {}]}, "optional": {"prefix": ["STRING", {"multiline": false, "default": "Value:"}]}}, "input_order": {"required": ["value"], "optional": ["prefix"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ConsoleDebug+", "display_name": "\ud83d\udd27 Console Debug", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/utilities", "output_node": true}, "DebugTensorShape+": {"input": {"required": {"tensor": ["*", {}]}}, "input_order": {"required": ["tensor"]}, "output": [], "output_is_list": [], "output_name": [], "name": "DebugTensorShape+", "display_name": "\ud83d\udd27 Debug Tensor Shape", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/utilities", "output_node": true}, "DisplayAny": {"input": {"required": {"input": ["*", {}], "mode": [["raw value", "tensor shape"]]}}, "input_order": {"required": ["input", "mode"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "DisplayAny", "display_name": "\ud83d\udd27 Display Any", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/utilities", "output_node": true}, "ModelCompile+": {"input": {"required": {"model": ["MODEL"], "fullgraph": ["BOOLEAN", {"default": false}], "dynamic": ["BOOLEAN", {"default": false}], "mode": [["default", "reduce-overhead", "max-autotune", "max-autotune-no-cudagraphs"]]}}, "input_order": {"required": ["model", "fullgraph", "dynamic", "mode"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelCompile+", "display_name": "\ud83d\udd27 Model Compile", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/utilities", "output_node": false}, "RemoveLatentMask+": {"input": {"required": {"samples": ["LATENT"]}}, "input_order": {"required": ["samples"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "RemoveLatentMask+", "display_name": "\ud83d\udd27 Remove Latent Mask", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/utilities", "output_node": false}, "SDXLEmptyLatentSizePicker+": {"input": {"required": {"resolution": [["704x1408 (0.5)", "704x1344 (0.52)", "768x1344 (0.57)", "768x1280 (0.6)", "832x1216 (0.68)", "832x1152 (0.72)", "896x1152 (0.78)", "896x1088 (0.82)", "960x1088 (0.88)", "960x1024 (0.94)", "1024x1024 (1.0)", "1024x960 (1.07)", "1088x960 (1.13)", "1088x896 (1.21)", "1152x896 (1.29)", "1152x832 (1.38)", "1216x832 (1.46)", "1280x768 (1.67)", "1344x768 (1.75)", "1344x704 (1.91)", "1408x704 (2.0)", "1472x704 (2.09)", "1536x640 (2.4)", "1600x640 (2.5)", "1664x576 (2.89)", "1728x576 (3.0)"], {"default": "1024x1024 (1.0)"}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "width_override": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "height_override": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["resolution", "batch_size", "width_override", "height_override"]}, "output": ["LATENT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["LATENT", "width", "height"], "name": "SDXLEmptyLatentSizePicker+", "display_name": "\ud83d\udd27 Empty Latent Size Picker", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/utilities", "output_node": false}, "SimpleComparison+": {"input": {"required": {"a": ["*", {"default": 0}], "b": ["*", {"default": 0}], "comparison": [["==", "!=", "<", "<=", ">", ">="]]}}, "input_order": {"required": ["a", "b", "comparison"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "SimpleComparison+", "display_name": "\ud83d\udd27 Simple Comparison", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/utilities", "output_node": false}, "SimpleCondition+": {"input": {"required": {"evaluate": ["*", {"default": 0}], "on_true": ["*", {"default": 0}]}, "optional": {"on_false": ["*", {"default": null}]}}, "input_order": {"required": ["evaluate", "on_true"], "optional": ["on_false"]}, "output": ["*"], "output_is_list": [false], "output_name": ["result"], "name": "SimpleCondition+", "display_name": "\ud83d\udd27 Simple Condition", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/utilities", "output_node": false}, "SimpleMath+": {"input": {"optional": {"a": ["*", {"default": 0.0}], "b": ["*", {"default": 0.0}], "c": ["*", {"default": 0.0}]}, "required": {"value": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"optional": ["a", "b", "c"], "required": ["value"]}, "output": ["INT", "FLOAT"], "output_is_list": [false, false], "output_name": ["INT", "FLOAT"], "name": "SimpleMath+", "display_name": "\ud83d\udd27 Simple Math", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/utilities", "output_node": false}, "SimpleMathDual+": {"input": {"optional": {"a": ["*", {"default": 0.0}], "b": ["*", {"default": 0.0}], "c": ["*", {"default": 0.0}], "d": ["*", {"default": 0.0}]}, "required": {"value_1": ["STRING", {"multiline": false, "default": ""}], "value_2": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"optional": ["a", "b", "c", "d"], "required": ["value_1", "value_2"]}, "output": ["INT", "FLOAT", "INT", "FLOAT"], "output_is_list": [false, false, false, false], "output_name": ["int_1", "float_1", "int_2", "float_2"], "name": "SimpleMathDual+", "display_name": "\ud83d\udd27 Simple Math Dual", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/utilities", "output_node": false}, "SimpleMathCondition+": {"input": {"optional": {"a": ["*", {"default": 0.0}], "b": ["*", {"default": 0.0}], "c": ["*", {"default": 0.0}]}, "required": {"evaluate": ["*", {"default": 0}], "on_true": ["STRING", {"multiline": false, "default": ""}], "on_false": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"optional": ["a", "b", "c"], "required": ["evaluate", "on_true", "on_false"]}, "output": ["INT", "FLOAT"], "output_is_list": [false, false], "output_name": ["INT", "FLOAT"], "name": "SimpleMathCondition+", "display_name": "\ud83d\udd27 Simple Math Condition", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/utilities", "output_node": false}, "SimpleMathBoolean+": {"input": {"required": {"value": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["value"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "SimpleMathBoolean+", "display_name": "\ud83d\udd27 Simple Math Boolean", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/utilities", "output_node": false}, "SimpleMathFloat+": {"input": {"required": {"value": ["FLOAT", {"default": 0.0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 0.05}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "SimpleMathFloat+", "display_name": "\ud83d\udd27 Simple Math Float", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/utilities", "output_node": false}, "SimpleMathInt+": {"input": {"required": {"value": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 1}]}}, "input_order": {"required": ["value"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "SimpleMathInt+", "display_name": "\ud83d\udd27 Simple Math Int", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/utilities", "output_node": false}, "SimpleMathPercent+": {"input": {"required": {"value": ["FLOAT", {"default": 0.0, "min": 0, "max": 1, "step": 0.05}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "SimpleMathPercent+", "display_name": "\ud83d\udd27 Simple Math Percent", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/utilities", "output_node": false}, "SimpleMathSlider+": {"input": {"required": {"value": ["FLOAT", {"display": "slider", "default": 0.5, "min": 0.0, "max": 1.0, "step": 0.001}], "min": ["FLOAT", {"default": 0.0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 0.001}], "max": ["FLOAT", {"default": 1.0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 0.001}], "rounding": ["INT", {"default": 0, "min": 0, "max": 10, "step": 1}]}}, "input_order": {"required": ["value", "min", "max", "rounding"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "SimpleMathSlider+", "display_name": "\ud83d\udd27 Simple Math Slider", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/utilities", "output_node": false}, "SimpleMathSliderLowRes+": {"input": {"required": {"value": ["INT", {"display": "slider", "default": 5, "min": 0, "max": 10, "step": 1}], "min": ["FLOAT", {"default": 0.0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 0.001}], "max": ["FLOAT", {"default": 1.0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 0.001}], "rounding": ["INT", {"default": 0, "min": 0, "max": 10, "step": 1}]}}, "input_order": {"required": ["value", "min", "max", "rounding"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "SimpleMathSliderLowRes+", "display_name": "\ud83d\udd27 Simple Math Slider low-res", "description": "", "python_module": "custom_nodes.ComfyUI_essentials", "category": "essentials/utilities", "output_node": false}, "LamaRemover": {"input": {"required": {"images": ["IMAGE"], "masks": ["MASK"], "mask_threshold": ["INT", {"default": 250, "min": 0, "max": 255, "step": 1, "display": "slider"}], "gaussblur_radius": ["INT", {"default": 8, "min": 0, "max": 20, "step": 1, "display": "slider"}], "invert_mask": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["images", "masks", "mask_threshold", "gaussblur_radius", "invert_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "LamaRemover", "display_name": "Big lama Remover", "description": "", "python_module": "custom_nodes.comfyui-lama-remover", "category": "LamaRemover", "output_node": false}, "LamaRemoverIMG": {"input": {"required": {"images": ["IMAGE"], "masks": ["IMAGE"], "mask_threshold": ["INT", {"default": 250, "min": 0, "max": 255, "step": 1, "display": "slider"}], "gaussblur_radius": ["INT", {"default": 8, "min": 0, "max": 20, "step": 1, "display": "slider"}], "invert_mask": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["images", "masks", "mask_threshold", "gaussblur_radius", "invert_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "LamaRemoverIMG", "display_name": "Big lama Remover(IMG)", "description": "", "python_module": "custom_nodes.comfyui-lama-remover", "category": "LamaRemover", "output_node": false}, "LayerColor: ColorAdapter": {"input": {"required": {"image": ["IMAGE"], "color_ref_image": ["IMAGE"], "opacity": ["INT", {"default": 75, "min": 0, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "color_ref_image", "opacity"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: ColorAdapter", "display_name": "LayerColor: ColorAdapter", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerStyle: DropShadow V2": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "dissolve", "darken", "multiply", "color burn", "linear burn", "darker color", "lighten", "screen", "color dodge", "linear dodge(add)", "lighter color", "dodge", "overlay", "soft light", "hard light", "vivid light", "linear light", "pin light", "hard mix", "difference", "exclusion", "subtract", "divide", "hue", "saturation", "color", "luminosity", "grain extract", "grain merge"]], "opacity": ["INT", {"default": 50, "min": 0, "max": 100, "step": 1}], "distance_x": ["INT", {"default": 25, "min": -9999, "max": 9999, "step": 1}], "distance_y": ["INT", {"default": 25, "min": -9999, "max": 9999, "step": 1}], "grow": ["INT", {"default": 6, "min": -9999, "max": 9999, "step": 1}], "blur": ["INT", {"default": 18, "min": 0, "max": 100, "step": 1}], "shadow_color": ["STRING", {"default": "#000000"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "distance_x", "distance_y", "grow", "blur", "shadow_color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: DropShadow V2", "display_name": "LayerStyle: DropShadow V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerStyle: Stroke": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "multply", "screen", "add", "subtract", "difference", "darker", "lighter", "color_burn", "color_dodge", "linear_burn", "linear_dodge", "overlay", "soft_light", "hard_light", "vivid_light", "pin_light", "linear_light", "hard_mix"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "stroke_grow": ["INT", {"default": 0, "min": -999, "max": 999, "step": 1}], "stroke_width": ["INT", {"default": 8, "min": 0, "max": 999, "step": 1}], "blur": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "stroke_color": ["STRING", {"default": "#FF0000"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "stroke_grow", "stroke_width", "blur", "stroke_color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: Stroke", "display_name": "LayerStyle: Stroke", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerUtility: GrayValue": {"input": {"required": {"color_value": ["*", {}]}, "optional": {}}, "input_order": {"required": ["color_value"], "optional": []}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["gray(256_level)", "gray(100_level)"], "name": "LayerUtility: GrayValue", "display_name": "LayerUtility: Gray Value", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerFilter: FilmV2": {"input": {"required": {"image": ["IMAGE"], "center_x": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "center_y": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "saturation": ["FLOAT", {"default": 1, "min": 0.01, "max": 3, "step": 0.01}], "vignette_intensity": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "grain_method": [["fastgrain", "filmgrainer"]], "grain_power": ["FLOAT", {"default": 0.15, "min": 0, "max": 1, "step": 0.01}], "grain_scale": ["FLOAT", {"default": 1, "min": 0.1, "max": 10, "step": 0.1}], "grain_sat": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "filmgrainer_shadows": ["FLOAT", {"default": 0.6, "min": 0, "max": 1, "step": 0.01}], "filmgrainer_highs": ["FLOAT", {"default": 0.2, "min": 0, "max": 1, "step": 0.01}], "blur_strength": ["INT", {"default": 90, "min": 0, "max": 256, "step": 1}], "blur_focus_spread": ["FLOAT", {"default": 2.2, "min": 0.1, "max": 8, "step": 0.1}], "focal_depth": ["FLOAT", {"default": 0.9, "min": 0.0, "max": 1, "step": 0.01}]}, "optional": {"depth_map": ["IMAGE"]}}, "input_order": {"required": ["image", "center_x", "center_y", "saturation", "vignette_intensity", "grain_method", "grain_power", "grain_scale", "grain_sat", "filmgrainer_shadows", "filmgrainer_highs", "blur_strength", "blur_focus_spread", "focal_depth"], "optional": ["depth_map"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: FilmV2", "display_name": "LayerFilter: Film V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerUtility: ExtendCanvasV2": {"input": {"required": {"image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "top": ["INT", {"default": 0, "min": -99999, "max": 99999, "step": 1}], "bottom": ["INT", {"default": 0, "min": -99999, "max": 99999, "step": 1}], "left": ["INT", {"default": 0, "min": -99999, "max": 99999, "step": 1}], "right": ["INT", {"default": 0, "min": -99999, "max": 99999, "step": 1}], "color": ["STRING", {"default": "#000000"}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "invert_mask", "top", "bottom", "left", "right", "color"], "optional": ["mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: ExtendCanvasV2", "display_name": "LayerUtility: ExtendCanvas V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerFilter: Film": {"input": {"required": {"image": ["IMAGE"], "center_x": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "center_y": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "saturation": ["FLOAT", {"default": 1, "min": 0.01, "max": 3, "step": 0.01}], "vignette_intensity": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "grain_power": ["FLOAT", {"default": 0.15, "min": 0, "max": 1, "step": 0.01}], "grain_scale": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 10, "step": 0.1}], "grain_sat": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "grain_shadows": ["FLOAT", {"default": 0.6, "min": 0, "max": 1, "step": 0.01}], "grain_highs": ["FLOAT", {"default": 0.2, "min": 0, "max": 1, "step": 0.01}], "blur_strength": ["INT", {"default": 90, "min": 0, "max": 256, "step": 1}], "blur_focus_spread": ["FLOAT", {"default": 2.2, "min": 0.1, "max": 8, "step": 0.1}], "focal_depth": ["FLOAT", {"default": 0.9, "min": 0.0, "max": 1, "step": 0.01}]}, "optional": {"depth_map": ["IMAGE"]}}, "input_order": {"required": ["image", "center_x", "center_y", "saturation", "vignette_intensity", "grain_power", "grain_scale", "grain_sat", "grain_shadows", "grain_highs", "blur_strength", "blur_focus_spread", "focal_depth"], "optional": ["depth_map"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: Film", "display_name": "LayerFilter: Film", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerUtility: ImageChannelMerge": {"input": {"required": {"channel_1": ["IMAGE"], "channel_2": ["IMAGE"], "channel_3": ["IMAGE"], "mode": [["RGBA", "YCbCr", "LAB", "HSV"]]}, "optional": {"channel_4": ["IMAGE"]}}, "input_order": {"required": ["channel_1", "channel_2", "channel_3", "mode"], "optional": ["channel_4"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: ImageChannelMerge", "display_name": "LayerUtility: ImageChannelMerge", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerStyle: OuterGlow": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["screen", "add", "lighter", "normal", "multply", "subtract", "difference", "darker", "color_burn", "color_dodge", "linear_burn", "linear_dodge", "overlay", "soft_light", "hard_light", "vivid_light", "pin_light", "linear_light", "hard_mix"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "brightness": ["INT", {"default": 5, "min": 2, "max": 20, "step": 1}], "glow_range": ["INT", {"default": 48, "min": -9999, "max": 9999, "step": 1}], "blur": ["INT", {"default": 25, "min": 0, "max": 9999, "step": 1}], "light_color": ["STRING", {"default": "#FFBF30"}], "glow_color": ["STRING", {"default": "#FE0000"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "brightness", "glow_range", "blur", "light_color", "glow_color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: OuterGlow", "display_name": "LayerStyle: OuterGlow", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerColor: AutoBrightness": {"input": {"required": {"image": ["IMAGE"], "strength": ["INT", {"default": 75, "min": 0, "max": 100, "step": 1}], "saturation": ["INT", {"default": 8, "min": -255, "max": 255, "step": 1}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "strength", "saturation"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: AutoBrightness", "display_name": "LayerColor: AutoBrightness", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerStyle: DropShadow": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "multply", "screen", "add", "subtract", "difference", "darker", "lighter", "color_burn", "color_dodge", "linear_burn", "linear_dodge", "overlay", "soft_light", "hard_light", "vivid_light", "pin_light", "linear_light", "hard_mix"]], "opacity": ["INT", {"default": 50, "min": 0, "max": 100, "step": 1}], "distance_x": ["INT", {"default": 25, "min": -9999, "max": 9999, "step": 1}], "distance_y": ["INT", {"default": 25, "min": -9999, "max": 9999, "step": 1}], "grow": ["INT", {"default": 6, "min": -9999, "max": 9999, "step": 1}], "blur": ["INT", {"default": 18, "min": 0, "max": 100, "step": 1}], "shadow_color": ["STRING", {"default": "#000000"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "distance_x", "distance_y", "grow", "blur", "shadow_color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: DropShadow", "display_name": "LayerStyle: DropShadow", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerStyle: Stroke V2": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "dissolve", "darken", "multiply", "color burn", "linear burn", "darker color", "lighten", "screen", "color dodge", "linear dodge(add)", "lighter color", "dodge", "overlay", "soft light", "hard light", "vivid light", "linear light", "pin light", "hard mix", "difference", "exclusion", "subtract", "divide", "hue", "saturation", "color", "luminosity", "grain extract", "grain merge"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "stroke_grow": ["INT", {"default": 0, "min": -999, "max": 999, "step": 1}], "stroke_width": ["INT", {"default": 8, "min": 0, "max": 999, "step": 1}], "blur": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "stroke_color": ["STRING", {"default": "#FF0000"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "stroke_grow", "stroke_width", "blur", "stroke_color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: Stroke V2", "display_name": "LayerStyle: Stroke V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerMask: PixelSpread": {"input": {"required": {"image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": false}], "mask_grow": ["INT", {"default": 0, "min": -999, "max": 999, "step": 1}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "invert_mask", "mask_grow"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerMask: PixelSpread", "display_name": "LayerMask: PixelSpread", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: ImageTaggerSave": {"input": {"required": {"image": ["IMAGE"], "tag_text": ["STRING", {"default": "", "forceInput": true}], "custom_path": ["STRING", {"default": ""}], "filename_prefix": ["STRING", {"default": "comfyui"}], "timestamp": [["None", "second", "millisecond"]], "format": [["png", "jpg"]], "quality": ["INT", {"default": 80, "min": 10, "max": 100, "step": 1}], "preview": ["BOOLEAN", {"default": true}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["image", "tag_text", "custom_path", "filename_prefix", "timestamp", "format", "quality", "preview"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "LayerUtility: ImageTaggerSave", "display_name": "LayerUtility: Image Tagger Save", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": true}, "LayerColor: Exposure": {"input": {"required": {"image": ["IMAGE"], "exposure": ["INT", {"default": 20, "min": -100, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "exposure"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: Exposure", "display_name": "LayerColor: Exposure", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerUtility: ImageChannelSplit": {"input": {"required": {"image": ["IMAGE"], "mode": [["RGBA", "YCbCr", "LAB", "HSV"]]}, "optional": {}}, "input_order": {"required": ["image", "mode"], "optional": []}, "output": ["IMAGE", "IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false, false], "output_name": ["channel_1", "channel_2", "channel_3", "channel_4"], "name": "LayerUtility: ImageChannelSplit", "display_name": "LayerUtility: ImageChannelSplit", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerStyle: GradientOverlay V2": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "dissolve", "darken", "multiply", "color burn", "linear burn", "darker color", "lighten", "screen", "color dodge", "linear dodge(add)", "lighter color", "dodge", "overlay", "soft light", "hard light", "vivid light", "linear light", "pin light", "hard mix", "difference", "exclusion", "subtract", "divide", "hue", "saturation", "color", "luminosity", "grain extract", "grain merge"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "start_color": ["STRING", {"default": "#FFBF30"}], "start_alpha": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "end_color": ["STRING", {"default": "#FE0000"}], "end_alpha": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "angle": ["INT", {"default": 0, "min": -180, "max": 180, "step": 1}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "start_color", "start_alpha", "end_color", "end_alpha", "angle"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: GradientOverlay V2", "display_name": "LayerStyle: GradientOverlay V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerStyle: GradientOverlay": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "multply", "screen", "add", "subtract", "difference", "darker", "lighter", "color_burn", "color_dodge", "linear_burn", "linear_dodge", "overlay", "soft_light", "hard_light", "vivid_light", "pin_light", "linear_light", "hard_mix"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "start_color": ["STRING", {"default": "#FFBF30"}], "start_alpha": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "end_color": ["STRING", {"default": "#FE0000"}], "end_alpha": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "angle": ["INT", {"default": 0, "min": -180, "max": 180, "step": 1}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "start_color", "start_alpha", "end_color", "end_alpha", "angle"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: GradientOverlay", "display_name": "LayerStyle: GradientOverlay", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerUtility: LayerImageTransform": {"input": {"required": {"image": ["IMAGE"], "x": ["INT", {"default": 0, "min": -99999, "max": 99999, "step": 1}], "y": ["INT", {"default": 0, "min": -99999, "max": 99999, "step": 1}], "mirror": [["None", "horizontal", "vertical"]], "scale": ["FLOAT", {"default": 1, "min": 0.01, "max": 100, "step": 0.01}], "aspect_ratio": ["FLOAT", {"default": 1, "min": 0.01, "max": 100, "step": 0.01}], "rotate": ["FLOAT", {"default": 0, "min": -999999, "max": 999999, "step": 0.01}], "transform_method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]], "anti_aliasing": ["INT", {"default": 2, "min": 0, "max": 16, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "x", "y", "mirror", "scale", "aspect_ratio", "rotate", "transform_method", "anti_aliasing"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: LayerImageTransform", "display_name": "LayerUtility: LayerImageTransform", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: CreateGradientMask": {"input": {"required": {"width": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "height": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "gradient_side": [["bottom", "top", "left", "right", "center"]], "gradient_scale": ["INT", {"default": 100, "min": 1, "max": 9999, "step": 1}], "gradient_offset": ["INT", {"default": 0, "min": -9999, "max": 9999, "step": 1}], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {"size_as": ["*", {}]}}, "input_order": {"required": ["width", "height", "gradient_side", "gradient_scale", "gradient_offset", "opacity"], "optional": ["size_as"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: CreateGradientMask", "display_name": "LayerMask: CreateGradientMask", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: HLFrequencyDetailRestore": {"input": {"required": {"image": ["IMAGE"], "detail_image": ["IMAGE"], "keep_high_freq": ["INT", {"default": 64, "min": 0, "max": 1023}], "erase_low_freq": ["INT", {"default": 32, "min": 0, "max": 1023}], "mask_blur": ["INT", {"default": 16, "min": 0, "max": 1023}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "detail_image", "keep_high_freq", "erase_low_freq", "mask_blur"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: HLFrequencyDetailRestore", "display_name": "LayerUtility: H/L Frequency Detail Restore", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: BiRefNetUltra": {"input": {"required": {"image": ["IMAGE"], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}, "optional": {}}, "input_order": {"required": ["image", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: BiRefNetUltra", "display_name": "LayerMask: BiRefNetUltra", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: XY to Percent": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "x": ["INT", {"default": 0, "min": -99999, "max": 99999, "step": 1}], "y": ["INT", {"default": 0, "min": -99999, "max": 99999, "step": 1}]}, "optional": {}}, "input_order": {"required": ["background_image", "layer_image", "x", "y"], "optional": []}, "output": ["FLOAT", "FLOAT"], "output_is_list": [false, false], "output_name": ["x_percent", "y_percent"], "name": "LayerUtility: XY to Percent", "display_name": "LayerUtility: XY to Percent", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerMask: RemBgUltra": {"input": {"required": {"image": ["IMAGE"], "detail_range": ["INT", {"default": 8, "min": 1, "max": 256, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01}], "process_detail": ["BOOLEAN", {"default": true}]}, "optional": {}}, "input_order": {"required": ["image", "detail_range", "black_point", "white_point", "process_detail"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: RemBgUltra", "display_name": "LayerMask: RemBgUltra", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: TextJoin": {"input": {"required": {"text_1": ["STRING", {"multiline": false, "forceInput": true}]}, "optional": {"text_2": ["STRING", {"multiline": false, "forceInput": true}], "text_3": ["STRING", {"multiline": false, "forceInput": true}], "text_4": ["STRING", {"multiline": false, "forceInput": true}]}}, "input_order": {"required": ["text_1"], "optional": ["text_2", "text_3", "text_4"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "LayerUtility: TextJoin", "display_name": "LayerUtility: TextJoin", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: TextJoinV2": {"input": {"required": {"text_1": ["STRING", {"multiline": false, "forceInput": true}], "delimiter": ["STRING", {"default": ",", "multiline": false}]}, "optional": {"text_2": ["STRING", {"multiline": false, "forceInput": true}], "text_3": ["STRING", {"multiline": false, "forceInput": true}], "text_4": ["STRING", {"multiline": false, "forceInput": true}]}}, "input_order": {"required": ["text_1", "delimiter"], "optional": ["text_2", "text_3", "text_4"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "LayerUtility: TextJoinV2", "display_name": "LayerUtility: TextJoinV2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: ImageShift": {"input": {"required": {"image": ["IMAGE"], "shift_x": ["INT", {"default": 256, "min": -9999, "max": 9999, "step": 1}], "shift_y": ["INT", {"default": 256, "min": -9999, "max": 9999, "step": 1}], "cyclic": ["BOOLEAN", {"default": true}], "background_color": ["STRING", {"default": "#000000"}], "border_mask_width": ["INT", {"default": 20, "min": 0, "max": 999, "step": 1}], "border_mask_blur": ["INT", {"default": 12, "min": 0, "max": 999, "step": 1}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "shift_x", "shift_y", "cyclic", "background_color", "border_mask_width", "border_mask_blur"], "optional": ["mask"]}, "output": ["IMAGE", "MASK", "MASK"], "output_is_list": [false, false, false], "output_name": ["image", "mask", "border_mask"], "name": "LayerUtility: ImageShift", "display_name": "LayerUtility: ImageShift", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: GradientImage V2": {"input": {"required": {"size": [["custom", "1024 x 1024", "768 x 512", "512 x 768", "1280 x 720", "720 x 1280", "1344 x 768", "768 x 1344", "1536 x 640", "640 x 1536"]], "custom_width": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "custom_height": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "angle": ["INT", {"default": 0, "min": -360, "max": 360, "step": 1}], "start_color": ["STRING", {"default": "#FFFFFF"}], "end_color": ["STRING", {"default": "#000000"}]}, "optional": {"size_as": ["*", {}]}}, "input_order": {"required": ["size", "custom_width", "custom_height", "angle", "start_color", "end_color"], "optional": ["size_as"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: GradientImage V2", "display_name": "LayerUtility: GradientImage V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: MaskPreview": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": [], "output_is_list": [], "output_name": [], "name": "LayerMask: MaskPreview", "display_name": "LayerMask: MaskPreview", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": true}, "LayerUtility: PhiPrompt": {"input": {"required": {"model": [["auto", "Phi-3.5-mini-instruct", "Phi-3.5-vision-instruct"]], "device": [["cuda", "cpu"]], "dtype": [["fp16", "bf16", "fp32"]], "cache_model": ["BOOLEAN", {"default": false}], "system_prompt": ["STRING", {"default": "You are a helpful AI assistant.", "multiline": false}], "user_prompt": ["STRING", {"default": "Describe this image", "multiline": true}], "do_sample": ["BOOLEAN", {"default": true}], "temperature": ["FLOAT", {"default": 0.5, "min": 0.01, "max": 1, "step": 0.01}], "max_new_tokens": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 1}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["model", "device", "dtype", "cache_model", "system_prompt", "user_prompt", "do_sample", "temperature", "max_new_tokens"], "optional": ["image"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "LayerUtility: PhiPrompt", "display_name": "LayerUtility: Phi Prompt", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: GetImageSize": {"input": {"required": {"image": ["IMAGE"]}, "optional": {}}, "input_order": {"required": ["image"], "optional": []}, "output": ["INT", "INT", "BOX"], "output_is_list": [false, false, false], "output_name": ["width", "height", "original_size"], "name": "LayerUtility: GetImageSize", "display_name": "LayerUtility: GetImageSize", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: LaMa": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "lama_model": [["lama", "ldm", "zits", "mat", "fcf", "manga", "spread"]], "device": [["cuda", "cpu"]], "invert_mask": ["BOOLEAN", {"default": false}], "mask_grow": ["INT", {"default": 25, "min": -255, "max": 255, "step": 1}], "mask_blur": ["INT", {"default": 8, "min": -255, "max": 255, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "mask", "lama_model", "device", "invert_mask", "mask_grow", "mask_blur"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: LaMa", "display_name": "LayerUtility: LaMa", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerColor: Gamma": {"input": {"required": {"image": ["IMAGE"], "gamma": ["FLOAT", {"default": 1, "min": 0.1, "max": 10, "step": 0.01}]}, "optional": {}}, "input_order": {"required": ["image", "gamma"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: Gamma", "display_name": "LayerColor: Gamma", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerUtility: RGB Value": {"input": {"required": {"color_value": ["*", {}]}, "optional": {}}, "input_order": {"required": ["color_value"], "optional": []}, "output": ["INT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["R", "G", "B"], "name": "LayerUtility: RGB Value", "display_name": "LayerUtility: RGB Value", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: GetColorToneV2": {"input": {"required": {"image": ["IMAGE"], "mode": [["main_color", "average"]], "color_of": [["mask", "entire", "background", "subject"]], "remove_bkgd_method": [["none", "BiRefNet", "RMBG 1.4"]], "invert_mask": ["BOOLEAN", {"default": false}], "mask_grow": ["INT", {"default": 0, "min": -999, "max": 999, "step": 1}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "mode", "color_of", "remove_bkgd_method", "invert_mask", "mask_grow"], "optional": ["mask"]}, "output": ["IMAGE", "STRING", "LIST", "MASK"], "output_is_list": [false, false, false, false], "output_name": ["image", "color_in_hex", "HSV color in list", "mask"], "name": "LayerUtility: GetColorToneV2", "display_name": "LayerUtility: GetColorTone V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: GetMainColors": {"input": {"required": {"image": ["IMAGE"], "k_means_algorithm": [["lloyd", "elkan"]]}, "optional": {}}, "input_order": {"required": ["image", "k_means_algorithm"], "optional": []}, "output": ["IMAGE", "STRING", "STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["preview_image", "color_1", "color_2", "color_3", "color_4", "color_5"], "name": "LayerUtility: GetMainColors", "display_name": "LayerUtility: Get Main Colors", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerColor: YUV": {"input": {"required": {"image": ["IMAGE"], "Y": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "U": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "V": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "Y", "U", "V"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: YUV", "display_name": "LayerColor: YUV", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerUtility: TextImage V2": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "Text"}], "font_file": [["Alibaba-PuHuiTi-Heavy.ttf"]], "spacing": ["INT", {"default": 0, "min": -9999, "max": 9999, "step": 1}], "leading": ["INT", {"default": 0, "min": -9999, "max": 9999, "step": 1}], "horizontal_border": ["FLOAT", {"default": 5, "min": -100, "max": 100, "step": 0.1}], "vertical_border": ["FLOAT", {"default": 5, "min": -100, "max": 100, "step": 0.1}], "scale": ["FLOAT", {"default": 80, "min": 0.1, "max": 999, "step": 0.01}], "variation_range": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "variation_seed": ["INT", {"default": 1731013901, "min": 0, "max": 999999999999, "step": 1}], "layout": [["horizontal", "vertical"]], "width": ["INT", {"default": 512, "min": 4, "max": 999999, "step": 1}], "height": ["INT", {"default": 512, "min": 4, "max": 999999, "step": 1}], "text_color": ["STRING", {"default": "#FFA000"}], "background_color": ["STRING", {"default": "#FFFFFF"}]}, "optional": {"size_as": ["*", {}]}}, "input_order": {"required": ["text", "font_file", "spacing", "leading", "horizontal_border", "vertical_border", "scale", "variation_range", "variation_seed", "layout", "width", "height", "text_color", "background_color"], "optional": ["size_as"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: TextImage V2", "display_name": "LayerUtility: TextImage V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: BatchSelector": {"input": {"required": {"select": ["STRING", {"default": "0,"}]}, "optional": {"images": ["IMAGE"], "masks": ["MASK"]}}, "input_order": {"required": ["select"], "optional": ["images", "masks"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: BatchSelector", "display_name": "LayerUtility: Batch Selector", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": false}, "LayerUtility: PromptEmbellish": {"input": {"required": {"api": [["gemini-1.5-flash", "gemini-pro-vision"]], "token_limit": ["INT", {"default": 40, "min": 2, "max": 1024, "step": 1}], "describe": ["STRING", {"default": "", "multiline": true}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["api", "token_limit", "describe"], "optional": ["image"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "LayerUtility: PromptEmbellish", "display_name": "LayerUtility: PromptEmbellish", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Prompt", "output_node": false}, "LayerMask: MaskGrain": {"input": {"required": {"mask": ["MASK"], "grain": ["INT", {"default": 6, "min": 0, "max": 127, "step": 1}], "invert_mask": ["BOOLEAN", {"default": false}]}, "optional": {}}, "input_order": {"required": ["mask", "grain", "invert_mask"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: MaskGrain", "display_name": "LayerMask: Mask Grain", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerFilter: MotionBlur": {"input": {"required": {"image": ["IMAGE"], "angle": ["INT", {"default": 0, "min": -90, "max": 90, "step": 1}], "blur": ["INT", {"default": 20, "min": 1, "max": 999, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "angle", "blur"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: MotionBlur", "display_name": "LayerFilter: MotionBlur", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerUtility: SD3NegativeConditioning": {"input": {"required": {"conditioning": ["CONDITIONING"], "zero_out_start": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["conditioning", "zero_out_start"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "LayerUtility: SD3NegativeConditioning", "display_name": "LayerUtility: SD3 Negative Conditioning", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": false}, "LayerUtility: ColorPicker": {"input": {"required": {"color": ["COLOR", {"default": "#FFFFFF"}], "mode": [["HEX", "DEC"]]}, "optional": {}}, "input_order": {"required": ["color", "mode"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["value"], "name": "LayerUtility: ColorPicker", "display_name": "LayerUtility: ColorPicker", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: ImageBlend V2": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "dissolve", "darken", "multiply", "color burn", "linear burn", "darker color", "lighten", "screen", "color dodge", "linear dodge(add)", "lighter color", "dodge", "overlay", "soft light", "hard light", "vivid light", "linear light", "pin light", "hard mix", "difference", "exclusion", "subtract", "divide", "hue", "saturation", "color", "luminosity", "grain extract", "grain merge"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: ImageBlend V2", "display_name": "LayerUtility: ImageBlend V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: ImageAutoCrop V2": {"input": {"required": {"image": ["IMAGE"], "fill_background": ["BOOLEAN", {"default": true}], "background_color": ["STRING", {"default": "#FFFFFF"}], "aspect_ratio": [["1:1", "3:2", "4:3", "16:9", "2:3", "3:4", "9:16", "custom", "detect_mask", "original"]], "proportional_width": ["INT", {"default": 1, "min": 1, "max": 999, "step": 1}], "proportional_height": ["INT", {"default": 1, "min": 1, "max": 999, "step": 1}], "scale_to_side": [["None", "longest", "shortest", "width", "height"]], "scale_to_length": ["INT", {"default": 1024, "min": 4, "max": 999999, "step": 1}], "detect": [["min_bounding_rect", "max_inscribed_rect", "mask_area"]], "border_reserve": ["INT", {"default": 100, "min": -9999, "max": 9999, "step": 1}], "ultra_detail_range": ["INT", {"default": 0, "min": 0, "max": 256, "step": 1}], "matting_method": [["RMBG 1.4", "SegmentAnything"]], "sam_model": [["sam_vit_h (2.56GB)", "sam_vit_l (1.25GB)", "sam_vit_b (375MB)", "sam_hq_vit_h (2.57GB)", "sam_hq_vit_l (1.25GB)", "sam_hq_vit_b (379MB)", "mobile_sam(39MB)"]], "grounding_dino_model": [["GroundingDINO_SwinT_OGC (694MB)", "GroundingDINO_SwinB (938MB)"]], "sam_threshold": ["FLOAT", {"default": 0.3, "min": 0, "max": 1.0, "step": 0.01}], "sam_prompt": ["STRING", {"default": "subject"}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "fill_background", "background_color", "aspect_ratio", "proportional_width", "proportional_height", "scale_to_side", "scale_to_length", "detect", "border_reserve", "ultra_detail_range", "matting_method", "sam_model", "grounding_dino_model", "sam_threshold", "sam_prompt"], "optional": ["mask"]}, "output": ["IMAGE", "IMAGE", "MASK"], "output_is_list": [false, false, false], "output_name": ["cropped_image", "box_preview", "cropped_mask"], "name": "LayerUtility: ImageAutoCrop V2", "display_name": "LayerUtility: ImageAutoCrop V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: SegmentAnythingUltra V2": {"input": {"required": {"image": ["IMAGE"], "sam_model": [["sam_vit_h (2.56GB)", "sam_vit_l (1.25GB)", "sam_vit_b (375MB)", "sam_hq_vit_h (2.57GB)", "sam_hq_vit_l (1.25GB)", "sam_hq_vit_b (379MB)", "mobile_sam(39MB)"]], "grounding_dino_model": [["GroundingDINO_SwinT_OGC (694MB)", "GroundingDINO_SwinB (938MB)"]], "threshold": ["FLOAT", {"default": 0.3, "min": 0, "max": 1.0, "step": 0.01}], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.15, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "prompt": ["STRING", {"default": "subject"}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}, "optional": {}}, "input_order": {"required": ["image", "sam_model", "grounding_dino_model", "threshold", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "prompt", "device", "max_megapixels"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: SegmentAnythingUltra V2", "display_name": "LayerMask: SegmentAnythingUltra V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: YoloV8Detect": {"input": {"required": {"image": ["IMAGE"], "yolo_model": [[]], "mask_merge": [["all", "1", "2", "3", "4", "5", "6", "7", "8", "9"]]}, "optional": {}}, "input_order": {"required": ["image", "yolo_model", "mask_merge"], "optional": []}, "output": ["MASK", "IMAGE", "MASK"], "output_is_list": [false, false, false], "output_name": ["mask", "yolo_plot_image", "yolo_masks"], "name": "LayerMask: YoloV8Detect", "display_name": "LayerMask: YoloV8 Detect", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerStyle: OuterGlow V2": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["screen", "linear dodge(add)", "color dodge", "lighten", "dodge", "hard light", "linear light", "normal", "dissolve", "darken", "multiply", "color burn", "linear burn", "darker color", "lighter color", "overlay", "soft light", "vivid light", "pin light", "hard mix", "difference", "exclusion", "subtract", "divide", "hue", "saturation", "color", "luminosity", "grain extract", "grain merge"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "brightness": ["INT", {"default": 5, "min": 2, "max": 20, "step": 1}], "glow_range": ["INT", {"default": 48, "min": -9999, "max": 9999, "step": 1}], "blur": ["INT", {"default": 25, "min": 0, "max": 9999, "step": 1}], "light_color": ["STRING", {"default": "#FFBF30"}], "glow_color": ["STRING", {"default": "#FE0000"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "brightness", "glow_range", "blur", "light_color", "glow_color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: OuterGlow V2", "display_name": "LayerStyle: OuterGlow V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerUtility: CheckMask": {"input": {"required": {"mask": ["MASK"], "white_point": ["INT", {"default": 1, "min": 1, "max": 254, "step": 1}], "area_percent": ["INT", {"default": 1, "min": 1, "max": 99, "step": 1}]}, "optional": {}}, "input_order": {"required": ["mask", "white_point", "area_percent"], "optional": []}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["bool"], "name": "LayerUtility: CheckMask", "display_name": "LayerUtility: Check Mask", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: HumanPartsUltra": {"input": {"required": {"image": ["IMAGE"], "face": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8138)", "label_off": "disabled(\u8138)"}], "hair": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5934\u53d1)", "label_off": "disabled(\u5934\u53d1)"}], "glasses": ["BOOLEAN", {"default": false, "label_on": "enabled(\u773c\u955c)", "label_off": "disabled(\u773c\u955c)"}], "top_clothes": ["BOOLEAN", {"default": false, "label_on": "enabled(\u4e0a\u88c5)", "label_off": "disabled(\u4e0a\u88c5)"}], "bottom_clothes": ["BOOLEAN", {"default": false, "label_on": "enabled(\u4e0b\u88c5)", "label_off": "disabled(\u4e0b\u88c5)"}], "torso_skin": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8eaf\u5e72)", "label_off": "disabled(\u8eaf\u5e72)"}], "left_arm": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5de6\u81c2)", "label_off": "disabled(\u5de6\u81c2)"}], "right_arm": ["BOOLEAN", {"default": false, "label_on": "enabled(\u53f3\u81c2)", "label_off": "disabled(\u53f3\u81c2)"}], "left_leg": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5de6\u817f)", "label_off": "disabled(\u5de6\u817f)"}], "right_leg": ["BOOLEAN", {"default": false, "label_on": "enabled(\u53f3\u817f)", "label_off": "disabled(\u53f3\u817f)"}], "left_foot": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5de6\u811a)", "label_off": "disabled(\u5de6\u811a)"}], "right_foot": ["BOOLEAN", {"default": false, "label_on": "enabled(\u53f3\u811a)", "label_off": "disabled(\u53f3\u811a)"}], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 8, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}}, "input_order": {"required": ["image", "face", "hair", "glasses", "top_clothes", "bottom_clothes", "torso_skin", "left_arm", "right_arm", "left_leg", "right_leg", "left_foot", "right_foot", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: HumanPartsUltra", "display_name": "LayerMask: Human Parts Ultra", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: PersonMaskUltra": {"input": {"required": {"images": ["IMAGE"], "face": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "hair": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "body": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "clothes": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "accessories": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "background": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "confidence": ["FLOAT", {"default": 0.4, "min": 0.05, "max": 0.95, "step": 0.01}], "detail_range": ["INT", {"default": 16, "min": 1, "max": 256, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01}], "process_detail": ["BOOLEAN", {"default": true}]}, "optional": {}}, "input_order": {"required": ["images", "face", "hair", "body", "clothes", "accessories", "background", "confidence", "detail_range", "black_point", "white_point", "process_detail"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: PersonMaskUltra", "display_name": "LayerMask: PersonMaskUltra", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: PurgeVRAM": {"input": {"required": {"anything": ["*", {}], "purge_cache": ["BOOLEAN", {"default": true}], "purge_models": ["BOOLEAN", {"default": true}]}, "optional": {}}, "input_order": {"required": ["anything", "purge_cache", "purge_models"], "optional": []}, "output": [], "output_is_list": [], "output_name": [], "name": "LayerUtility: PurgeVRAM", "display_name": "LayerUtility: Purge VRAM", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": true}, "LayerMask: EVFSAMUltra": {"input": {"required": {"image": ["IMAGE"], "model": [["evf-sam2", "evf-sam"]], "precision": [["fp16", "bf16", "fp32"]], "load_in_bit": [["full", "8", "4"]], "prompt": ["STRING", {"default": "subject"}], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 4, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}}, "input_order": {"required": ["image", "model", "precision", "load_in_bit", "prompt", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: EVFSAMUltra", "display_name": "LayerMask: EVF-SAM Ultra", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: ImageReel": {"input": {"required": {"image1": ["IMAGE"], "image1_text": ["STRING", {"multiline": false, "default": "image1"}], "image2_text": ["STRING", {"multiline": false, "default": "image2"}], "image3_text": ["STRING", {"multiline": false, "default": "image3"}], "image4_text": ["STRING", {"multiline": false, "default": "image4"}], "reel_height": ["INT", {"default": 512, "min": 64, "max": 2048}], "border": ["INT", {"default": 32, "min": 8, "max": 512}]}, "optional": {"image2": ["IMAGE"], "image3": ["IMAGE"], "image4": ["IMAGE"]}}, "input_order": {"required": ["image1", "image1_text", "image2_text", "image3_text", "image4_text", "reel_height", "border"], "optional": ["image2", "image3", "image4"]}, "output": ["Reel"], "output_is_list": [false], "output_name": ["reel"], "name": "LayerUtility: ImageReel", "display_name": "LayerUtility: Image Reel", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: ImageReelComposit": {"input": {"required": {"reel_1": ["Reel"], "font_file": [["Alibaba-PuHuiTi-Heavy.ttf"]], "font_size": ["INT", {"default": 40, "min": 4, "max": 1024}], "border": ["INT", {"default": 32, "min": 8, "max": 512}], "color_theme": [["light", "dark"]]}, "optional": {"reel_2": ["Reel"], "reel_3": ["Reel"], "reel_4": ["Reel"]}}, "input_order": {"required": ["reel_1", "font_file", "font_size", "border", "color_theme"], "optional": ["reel_2", "reel_3", "reel_4"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image1"], "name": "LayerUtility: ImageReelComposit", "display_name": "LayerUtility: Image Reel Composit", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerStyle: Gradient Map": {"input": {"required": {"image": ["IMAGE"], "start_color": ["STRING", {"default": "#015A52"}], "mid_color": ["STRING", {"default": "#02AF9F"}], "end_color": ["STRING", {"default": "#7FFFEC"}], "mid_point": ["FLOAT", {"default": 0.6, "min": 0.0, "max": 1.0, "step": 0.01}], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["image", "start_color", "mid_color", "end_color", "mid_point", "opacity"], "optional": ["layer_mask"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["image", "gradient"], "name": "LayerStyle: Gradient Map", "display_name": "LayerStyle: Gradient Map", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerMask: MaskGradient": {"input": {"required": {"mask": ["MASK"], "invert_mask": ["BOOLEAN", {"default": true}], "gradient_side": [["top", "bottom", "left", "right"]], "gradient_scale": ["INT", {"default": 100, "min": 1, "max": 9999, "step": 1}], "gradient_offset": ["INT", {"default": 0, "min": -9999, "max": 9999, "step": 1}], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["mask", "invert_mask", "gradient_side", "gradient_scale", "gradient_offset", "opacity"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: MaskGradient", "display_name": "LayerMask: MaskGradient", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerColor: LAB": {"input": {"required": {"image": ["IMAGE"], "L": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "A": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "B": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "L", "A", "B"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: LAB", "display_name": "LayerColor: LAB", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerUtility: ImageAutoCrop": {"input": {"required": {"image": ["IMAGE"], "background_color": ["STRING", {"default": "#FFFFFF"}], "aspect_ratio": [["1:1", "3:2", "4:3", "16:9", "2:3", "3:4", "9:16", "custom", "detect_mask"]], "proportional_width": ["INT", {"default": 2, "min": 1, "max": 999, "step": 1}], "proportional_height": ["INT", {"default": 1, "min": 1, "max": 999, "step": 1}], "scale_to_longest_side": ["BOOLEAN", {"default": true}], "longest_side": ["INT", {"default": 1024, "min": 4, "max": 999999, "step": 1}], "detect": [["min_bounding_rect", "max_inscribed_rect", "mask_area"]], "border_reserve": ["INT", {"default": 100, "min": -9999, "max": 9999, "step": 1}], "ultra_detail_range": ["INT", {"default": 0, "min": 0, "max": 256, "step": 1}], "matting_method": [["RMBG 1.4", "SegmentAnything"]], "sam_model": [["sam_vit_h (2.56GB)", "sam_vit_l (1.25GB)", "sam_vit_b (375MB)", "sam_hq_vit_h (2.57GB)", "sam_hq_vit_l (1.25GB)", "sam_hq_vit_b (379MB)", "mobile_sam(39MB)"]], "grounding_dino_model": [["GroundingDINO_SwinT_OGC (694MB)", "GroundingDINO_SwinB (938MB)"]], "sam_threshold": ["FLOAT", {"default": 0.3, "min": 0, "max": 1.0, "step": 0.01}], "sam_prompt": ["STRING", {"default": "subject"}]}, "optional": {}}, "input_order": {"required": ["image", "background_color", "aspect_ratio", "proportional_width", "proportional_height", "scale_to_longest_side", "longest_side", "detect", "border_reserve", "ultra_detail_range", "matting_method", "sam_model", "grounding_dino_model", "sam_threshold", "sam_prompt"], "optional": []}, "output": ["IMAGE", "IMAGE", "MASK"], "output_is_list": [false, false, false], "output_name": ["cropped_image", "box_preview", "cropped_mask"], "name": "LayerUtility: ImageAutoCrop", "display_name": "LayerUtility: ImageAutoCrop", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: SimpleTextImage": {"input": {"required": {"text": ["STRING", {"default": "text", "multiline": true}], "font_file": [["Alibaba-PuHuiTi-Heavy.ttf"]], "align": [["center", "left", "right"]], "char_per_line": ["INT", {"default": 80, "min": 1, "max": 8096, "step": 1}], "leading": ["INT", {"default": 8, "min": 0, "max": 8096, "step": 1}], "font_size": ["INT", {"default": 72, "min": 1, "max": 2500, "step": 1}], "text_color": ["STRING", {"default": "#FFFFFF"}], "stroke_width": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "stroke_color": ["STRING", {"default": "#FF8000"}], "x_offset": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "y_offset": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "width": ["INT", {"default": 512, "min": 1, "max": 8096, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 8096, "step": 1}]}, "optional": {"size_as": ["*", {}]}}, "input_order": {"required": ["text", "font_file", "align", "char_per_line", "leading", "font_size", "text_color", "stroke_width", "stroke_color", "x_offset", "y_offset", "width", "height"], "optional": ["size_as"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: SimpleTextImage", "display_name": "LayerUtility: SimpleTextImage", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: QWenImage2Prompt": {"input": {"required": {"image": ["IMAGE"], "question": ["STRING", {"multiline": false, "default": "describe this image"}]}}, "input_order": {"required": ["image", "question"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "LayerUtility: QWenImage2Prompt", "display_name": "LayerUtility: QWenImage2Prompt", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Prompt", "output_node": false}, "LayerMask: MaskMotionBlur": {"input": {"required": {"mask": ["MASK"], "invert_mask": ["BOOLEAN", {"default": true}], "blur": ["INT", {"default": 20, "min": 1, "max": 9999, "step": 1}], "angle": ["FLOAT", {"default": 0, "min": -360, "max": 360, "step": 0.1}]}, "optional": {}}, "input_order": {"required": ["mask", "invert_mask", "blur", "angle"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: MaskMotionBlur", "display_name": "LayerMask: MaskMotionBlur", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: LlamaVision": {"input": {"required": {"image": ["IMAGE"], "model": [["Llama-3.2-11B-Vision-Instruct-nf4"]], "system_prompt": ["STRING", {"default": "You are a helpful AI assistant.", "multiline": true}], "user_prompt": ["STRING", {"default": "Describe this image in natural language.", "multiline": true}], "max_new_tokens": ["INT", {"default": 256, "min": 1, "max": 4096}], "do_sample": ["BOOLEAN", {"default": true}], "temperature": ["FLOAT", {"default": 0.3, "min": 0.0, "step": 0.1}], "top_p": ["FLOAT", {"default": 0.9, "min": 0.0, "max": 1.0, "step": 0.1}], "top_k": ["INT", {"default": 40, "min": 1}], "stop_strings": ["STRING", {"default": "<|eot_id|>"}], "seed": ["INT", {"default": 0, "min": 0, "max": 4294967295}], "include_prompt_in_output": ["BOOLEAN", {"default": false}], "cache_model": ["BOOLEAN", {"default": false}]}, "optional": {}}, "input_order": {"required": ["image", "model", "system_prompt", "user_prompt", "max_new_tokens", "do_sample", "temperature", "top_p", "top_k", "stop_strings", "seed", "include_prompt_in_output", "cache_model"], "optional": []}, "output": ["STRING"], "output_is_list": [true], "output_name": ["text"], "name": "LayerUtility: LlamaVision", "display_name": "LayerUtility: Llama Vision", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerColor: ColorTemperature": {"input": {"required": {"image": ["IMAGE"], "temperature": ["FLOAT", {"default": 0, "min": -100, "max": 100, "step": 1}]}}, "input_order": {"required": ["image", "temperature"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: ColorTemperature", "display_name": "LayerColor: ColorTemperature", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerUtility: CropByMask": {"input": {"required": {"image": ["IMAGE"], "mask_for_crop": ["MASK"], "invert_mask": ["BOOLEAN", {"default": false}], "detect": [["min_bounding_rect", "max_inscribed_rect", "mask_area"]], "top_reserve": ["INT", {"default": 20, "min": -9999, "max": 9999, "step": 1}], "bottom_reserve": ["INT", {"default": 20, "min": -9999, "max": 9999, "step": 1}], "left_reserve": ["INT", {"default": 20, "min": -9999, "max": 9999, "step": 1}], "right_reserve": ["INT", {"default": 20, "min": -9999, "max": 9999, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "mask_for_crop", "invert_mask", "detect", "top_reserve", "bottom_reserve", "left_reserve", "right_reserve"], "optional": []}, "output": ["IMAGE", "MASK", "BOX", "IMAGE"], "output_is_list": [false, false, false, false], "output_name": ["croped_image", "croped_mask", "crop_box", "box_preview"], "name": "LayerUtility: CropByMask", "display_name": "LayerUtility: CropByMask", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerFilter: LightLeak": {"input": {"required": {"image": ["IMAGE"], "light": [["random", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32"]], "corner": [["left_top", "right_top", "left_bottom", "right_bottom"]], "hue": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "saturation": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "light", "corner", "hue", "saturation", "opacity"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: LightLeak", "display_name": "LayerFilter: LightLeak", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerFilter: AddGrain": {"input": {"required": {"image": ["IMAGE"], "grain_power": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "grain_scale": ["FLOAT", {"default": 1, "min": 0.1, "max": 10, "step": 0.1}], "grain_sat": ["FLOAT", {"default": 1, "min": 0, "max": 1, "step": 0.01}]}, "optional": {}}, "input_order": {"required": ["image", "grain_power", "grain_scale", "grain_sat"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: AddGrain", "display_name": "LayerFilter: Add Grain", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerMask: SegformerB2ClothesUltra": {"input": {"required": {"image": ["IMAGE"], "face": ["BOOLEAN", {"default": false}], "hair": ["BOOLEAN", {"default": false}], "hat": ["BOOLEAN", {"default": false}], "sunglass": ["BOOLEAN", {"default": false}], "left_arm": ["BOOLEAN", {"default": false}], "right_arm": ["BOOLEAN", {"default": false}], "left_leg": ["BOOLEAN", {"default": false}], "right_leg": ["BOOLEAN", {"default": false}], "upper_clothes": ["BOOLEAN", {"default": false}], "skirt": ["BOOLEAN", {"default": false}], "pants": ["BOOLEAN", {"default": false}], "dress": ["BOOLEAN", {"default": false}], "belt": ["BOOLEAN", {"default": false}], "shoe": ["BOOLEAN", {"default": false}], "bag": ["BOOLEAN", {"default": false}], "scarf": ["BOOLEAN", {"default": false}], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 12, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.15, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}}, "input_order": {"required": ["image", "face", "hair", "hat", "sunglass", "left_arm", "right_arm", "left_leg", "right_leg", "upper_clothes", "skirt", "pants", "dress", "belt", "shoe", "bag", "scarf", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: SegformerB2ClothesUltra", "display_name": "LayerMask: Segformer B2 Clothes Ultra", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: SegformerUltraV2": {"input": {"required": {"image": ["IMAGE"], "segformer_pipeline": ["SegPipeline"], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 8, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}}, "input_order": {"required": ["image", "segformer_pipeline", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: SegformerUltraV2", "display_name": "LayerMask: Segformer Ultra V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: SegformerClothesPipelineLoader": {"input": {"required": {"model": [["segformer_b3_clothes", "segformer_b2_clothes"]], "face": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8138)", "label_off": "disabled(\u8138)"}], "hair": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5934\u53d1)", "label_off": "disabled(\u5934\u53d1)"}], "hat": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5e3d\u5b50)", "label_off": "disabled(\u5e3d\u5b50)"}], "sunglass": ["BOOLEAN", {"default": false, "label_on": "enabled(\u58a8\u955c)", "label_off": "disabled(\u58a8\u955c)"}], "left_arm": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5de6\u81c2)", "label_off": "disabled(\u5de6\u81c2)"}], "right_arm": ["BOOLEAN", {"default": false, "label_on": "enabled(\u53f3\u81c2)", "label_off": "disabled(\u53f3\u81c2)"}], "left_leg": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5de6\u817f)", "label_off": "disabled(\u5de6\u817f)"}], "right_leg": ["BOOLEAN", {"default": false, "label_on": "enabled(\u53f3\u817f)", "label_off": "disabled(\u53f3\u817f)"}], "left_shoe": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5de6\u978b)", "label_off": "disabled(\u5de6\u978b)"}], "right_shoe": ["BOOLEAN", {"default": false, "label_on": "enabled(\u53f3\u978b)", "label_off": "disabled(\u53f3\u978b)"}], "upper_clothes": ["BOOLEAN", {"default": false, "label_on": "enabled(\u4e0a\u8863)", "label_off": "disabled(\u4e0a\u8863)"}], "skirt": ["BOOLEAN", {"default": false, "label_on": "enabled(\u77ed\u88d9)", "label_off": "disabled(\u77ed\u88d9)"}], "pants": ["BOOLEAN", {"default": false, "label_on": "enabled(\u88e4\u5b50)", "label_off": "disabled(\u88e4\u5b50)"}], "dress": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8fde\u8863\u88d9)", "label_off": "disabled(\u8fde\u8863\u88d9)"}], "belt": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8170\u5e26)", "label_off": "disabled(\u8170\u5e26)"}], "bag": ["BOOLEAN", {"default": false, "label_on": "enabled(\u80cc\u5305)", "label_off": "disabled(\u80cc\u5305)"}], "scarf": ["BOOLEAN", {"default": false, "label_on": "enabled(\u56f4\u5dfe)", "label_off": "disabled(\u56f4\u5dfe)"}]}}, "input_order": {"required": ["model", "face", "hair", "hat", "sunglass", "left_arm", "right_arm", "left_leg", "right_leg", "left_shoe", "right_shoe", "upper_clothes", "skirt", "pants", "dress", "belt", "bag", "scarf"]}, "output": ["SegPipeline"], "output_is_list": [false], "output_name": ["segformer_pipeline"], "name": "LayerMask: SegformerClothesPipelineLoader", "display_name": "LayerMask: Segformer Clothes Pipeline", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: SegformerFashionPipelineLoader": {"input": {"required": {"model": [["segformer_b3_fashion"]], "shirt": ["BOOLEAN", {"default": false, "label_on": "enabled(\u886c\u886b\u3001\u7f69\u886b)", "label_off": "disabled(\u886c\u886b\u3001\u7f69\u886b)"}], "top": ["BOOLEAN", {"default": false, "label_on": "enabled(\u4e0a\u8863\u3001t\u6064)", "label_off": "disabled(\u4e0a\u8863\u3001t\u6064)"}], "sweater": ["BOOLEAN", {"default": false, "label_on": "enabled(\u6bdb\u8863)", "label_off": "disabled(\u6bdb\u8863)"}], "cardigan": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5f00\u895f\u6bdb\u886b)", "label_off": "disabled(\u5f00\u895f\u6bdb\u886b)"}], "jacket": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5939\u514b)", "label_off": "disabled(\u5939\u514b)"}], "vest": ["BOOLEAN", {"default": false, "label_on": "enabled(\u80cc\u5fc3)", "label_off": "disabled(\u80cc\u5fc3)"}], "pants": ["BOOLEAN", {"default": false, "label_on": "enabled(\u88e4\u5b50)", "label_off": "disabled(\u88e4\u5b50)"}], "shorts": ["BOOLEAN", {"default": false, "label_on": "enabled(\u77ed\u88e4)", "label_off": "disabled(\u77ed\u88e4)"}], "skirt": ["BOOLEAN", {"default": false, "label_on": "enabled(\u88d9\u5b50)", "label_off": "disabled(\u88d9\u5b50)"}], "coat": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5916\u5957)", "label_off": "disabled(\u5916\u5957)"}], "dress": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8fde\u8863\u88d9)", "label_off": "disabled(\u8fde\u8863\u88d9)"}], "jumpsuit": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8fde\u8eab\u88e4)", "label_off": "disabled(\u8fde\u8eab\u88e4)"}], "cape": ["BOOLEAN", {"default": false, "label_on": "enabled(\u6597\u7bf7)", "label_off": "disabled(\u6597\u7bf7)"}], "glasses": ["BOOLEAN", {"default": false, "label_on": "enabled(\u773c\u955c)", "label_off": "disabled(\u773c\u955c)"}], "hat": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5e3d\u5b50)", "label_off": "disabled(\u5e3d\u5b50)"}], "hairaccessory": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5934\u5e26)", "label_off": "disabled(\u5934\u5e26)"}], "tie": ["BOOLEAN", {"default": false, "label_on": "enabled(\u9886\u5e26)", "label_off": "disabled(\u9886\u5e26)"}], "glove": ["BOOLEAN", {"default": false, "label_on": "enabled(\u624b\u5957)", "label_off": "disabled(\u624b\u5957)"}], "watch": ["BOOLEAN", {"default": false, "label_on": "enabled(\u624b\u8868)", "label_off": "disabled(\u624b\u8868)"}], "belt": ["BOOLEAN", {"default": false, "label_on": "enabled(\u76ae\u5e26)", "label_off": "disabled(\u76ae\u5e26)"}], "legwarmer": ["BOOLEAN", {"default": false, "label_on": "enabled(\u817f\u5957)", "label_off": "disabled(\u817f\u5957)"}], "tights": ["BOOLEAN", {"default": false, "label_on": "enabled(\u88e4\u889c)", "label_off": "disabled(\u88e4\u889c)"}], "sock": ["BOOLEAN", {"default": false, "label_on": "enabled(\u889c\u5b50)", "label_off": "disabled(\u889c\u5b50)"}], "shoe": ["BOOLEAN", {"default": false, "label_on": "enabled(\u978b\u5b50)", "label_off": "disabled(\u978b\u5b50)"}], "bagwallet": ["BOOLEAN", {"default": false, "label_on": "enabled(\u624b\u5305)", "label_off": "disabled(\u624b\u5305)"}], "scarf": ["BOOLEAN", {"default": false, "label_on": "enabled(\u56f4\u5dfe)", "label_off": "disabled(\u56f4\u5dfe)"}], "umbrella": ["BOOLEAN", {"default": false, "label_on": "enabled(\u96e8\u4f1e)", "label_off": "disabled(\u96e8\u4f1e)"}], "hood": ["BOOLEAN", {"default": false, "label_on": "enabled(\u515c\u5e3d)", "label_off": "disabled(\u515c\u5e3d)"}], "collar": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8863\u9886)", "label_off": "disabled(\u8863\u9886)"}], "lapel": ["BOOLEAN", {"default": false, "label_on": "enabled(\u7ffb\u9886)", "label_off": "disabled(\u7ffb\u9886)"}], "epaulette": ["BOOLEAN", {"default": false, "label_on": "enabled(\u80a9\u7ae0)", "label_off": "disabled(\u80a9\u7ae0)"}], "sleeve": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8896\u5b50)", "label_off": "disabled(\u8896\u5b50)"}], "pocket": ["BOOLEAN", {"default": false, "label_on": "enabled(\u53e3\u888b)", "label_off": "disabled(\u53e3\u888b)"}], "neckline": ["BOOLEAN", {"default": false, "label_on": "enabled(\u9886\u53e3)", "label_off": "disabled(\u9886\u53e3)"}], "buckle": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5e26\u6263)", "label_off": "disabled(\u5e26\u6263)"}], "zipper": ["BOOLEAN", {"default": false, "label_on": "enabled(\u62c9\u94fe)", "label_off": "disabled(\u62c9\u94fe)"}], "applique": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8d34\u82b1)", "label_off": "disabled(\u8d34\u82b1)"}], "bead": ["BOOLEAN", {"default": false, "label_on": "enabled(\u73e0\u5b50)", "label_off": "disabled(\u73e0\u5b50)"}], "bow": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8774\u8776\u7ed3)", "label_off": "disabled(\u8774\u8776\u7ed3)"}], "flower": ["BOOLEAN", {"default": false, "label_on": "enabled(\u82b1)", "label_off": "disabled(\u82b1)"}], "fringe": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5218\u6d77)", "label_off": "disabled(\u5218\u6d77)"}], "ribbon": ["BOOLEAN", {"default": false, "label_on": "enabled(\u4e1d\u5e26)", "label_off": "disabled(\u4e1d\u5e26)"}], "rivet": ["BOOLEAN", {"default": false, "label_on": "enabled(\u94c6\u9489)", "label_off": "disabled(\u94c6\u9489)"}], "ruffle": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8936\u9970)", "label_off": "disabled(\u8936\u9970)"}], "sequin": ["BOOLEAN", {"default": false, "label_on": "enabled(\u4eae\u7247)", "label_off": "disabled(\u4eae\u7247)"}], "tassel": ["BOOLEAN", {"default": false, "label_on": "enabled(\u6d41\u82cf)", "label_off": "disabled(\u6d41\u82cf)"}]}}, "input_order": {"required": ["model", "shirt", "top", "sweater", "cardigan", "jacket", "vest", "pants", "shorts", "skirt", "coat", "dress", "jumpsuit", "cape", "glasses", "hat", "hairaccessory", "tie", "glove", "watch", "belt", "legwarmer", "tights", "sock", "shoe", "bagwallet", "scarf", "umbrella", "hood", "collar", "lapel", "epaulette", "sleeve", "pocket", "neckline", "buckle", "zipper", "applique", "bead", "bow", "flower", "fringe", "ribbon", "rivet", "ruffle", "sequin", "tassel"]}, "output": ["SegPipeline"], "output_is_list": [false], "output_name": ["segformer_pipeline"], "name": "LayerMask: SegformerFashionPipelineLoader", "display_name": "LayerMask: Segformer Fashion Pipeline", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerFilter: Sharp & Soft": {"input": {"required": {"images": ["IMAGE"], "enhance": [["very sharp", "sharp", "soft", "very soft", "None"]]}, "optional": {}}, "input_order": {"required": ["images", "enhance"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: Sharp & Soft", "display_name": "LayerFilter: Sharp & Soft", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerMask: MediapipeFacialSegment": {"input": {"required": {"image": ["IMAGE"], "left_eye": ["BOOLEAN", {"default": true}], "left_eyebrow": ["BOOLEAN", {"default": true}], "right_eye": ["BOOLEAN", {"default": true}], "right_eyebrow": ["BOOLEAN", {"default": true}], "lips": ["BOOLEAN", {"default": true}], "tooth": ["BOOLEAN", {"default": true}]}, "optional": {}}, "input_order": {"required": ["image", "left_eye", "left_eyebrow", "right_eye", "right_eyebrow", "lips", "tooth"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: MediapipeFacialSegment", "display_name": "LayerMask: Mediapipe Facial Segment", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: HSV Value": {"input": {"required": {"color_value": ["*", {}]}, "optional": {}}, "input_order": {"required": ["color_value"], "optional": []}, "output": ["INT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["H", "S", "V"], "name": "LayerUtility: HSV Value", "display_name": "LayerUtility: HSV Value", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: CropByMask V2": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "invert_mask": ["BOOLEAN", {"default": false}], "detect": [["mask_area", "min_bounding_rect", "max_inscribed_rect"]], "top_reserve": ["INT", {"default": 20, "min": -9999, "max": 9999, "step": 1}], "bottom_reserve": ["INT", {"default": 20, "min": -9999, "max": 9999, "step": 1}], "left_reserve": ["INT", {"default": 20, "min": -9999, "max": 9999, "step": 1}], "right_reserve": ["INT", {"default": 20, "min": -9999, "max": 9999, "step": 1}], "round_to_multiple": [["8", "16", "32", "64", "128", "256", "512", "None"]]}, "optional": {"crop_box": ["BOX"]}}, "input_order": {"required": ["image", "mask", "invert_mask", "detect", "top_reserve", "bottom_reserve", "left_reserve", "right_reserve", "round_to_multiple"], "optional": ["crop_box"]}, "output": ["IMAGE", "MASK", "BOX", "IMAGE"], "output_is_list": [false, false, false, false], "output_name": ["croped_image", "croped_mask", "crop_box", "box_preview"], "name": "LayerUtility: CropByMask V2", "display_name": "LayerUtility: CropByMask V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: TransparentBackgroundUltra": {"input": {"required": {"image": ["IMAGE"], "model": [[]], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}, "optional": {}}, "input_order": {"required": ["image", "model", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: TransparentBackgroundUltra", "display_name": "LayerMask: Transparent Background Ultra", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerStyle: ColorOverlay V2": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "dissolve", "darken", "multiply", "color burn", "linear burn", "darker color", "lighten", "screen", "color dodge", "linear dodge(add)", "lighter color", "dodge", "overlay", "soft light", "hard light", "vivid light", "linear light", "pin light", "hard mix", "difference", "exclusion", "subtract", "divide", "hue", "saturation", "color", "luminosity", "grain extract", "grain merge"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "color": ["STRING", {"default": "#FFBF30"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: ColorOverlay V2", "display_name": "LayerStyle: ColorOverlay V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerUtility: ImageBlendAdvance V2": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "dissolve", "darken", "multiply", "color burn", "linear burn", "darker color", "lighten", "screen", "color dodge", "linear dodge(add)", "lighter color", "dodge", "overlay", "soft light", "hard light", "vivid light", "linear light", "pin light", "hard mix", "difference", "exclusion", "subtract", "divide", "hue", "saturation", "color", "luminosity", "grain extract", "grain merge"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "x_percent": ["FLOAT", {"default": 50, "min": -999, "max": 999, "step": 0.01}], "y_percent": ["FLOAT", {"default": 50, "min": -999, "max": 999, "step": 0.01}], "mirror": [["None", "horizontal", "vertical"]], "scale": ["FLOAT", {"default": 1, "min": 0.01, "max": 100, "step": 0.01}], "aspect_ratio": ["FLOAT", {"default": 1, "min": 0.01, "max": 100, "step": 0.01}], "rotate": ["FLOAT", {"default": 0, "min": -999999, "max": 999999, "step": 0.01}], "transform_method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]], "anti_aliasing": ["INT", {"default": 0, "min": 0, "max": 16, "step": 1}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "x_percent", "y_percent", "mirror", "scale", "aspect_ratio", "rotate", "transform_method", "anti_aliasing"], "optional": ["layer_mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: ImageBlendAdvance V2", "display_name": "LayerUtility: ImageBlendAdvance V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: ExtendCanvas": {"input": {"required": {"image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "top": ["INT", {"default": 0, "min": 0, "max": 99999, "step": 1}], "bottom": ["INT", {"default": 0, "min": 0, "max": 99999, "step": 1}], "left": ["INT", {"default": 0, "min": 0, "max": 99999, "step": 1}], "right": ["INT", {"default": 0, "min": 0, "max": 99999, "step": 1}], "color": ["COLOR", {"default": "#000000"}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "invert_mask", "top", "bottom", "left", "right", "color"], "optional": ["mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: ExtendCanvas", "display_name": "LayerUtility: ExtendCanvas", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: PersonMaskUltra V2": {"input": {"required": {"images": ["IMAGE"], "face": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "hair": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "body": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "clothes": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "accessories": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "background": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "confidence": ["FLOAT", {"default": 0.4, "min": 0.05, "max": 0.95, "step": 0.01}], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}, "optional": {}}, "input_order": {"required": ["images", "face", "hair", "body", "clothes", "accessories", "background", "confidence", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: PersonMaskUltra V2", "display_name": "LayerMask: PersonMaskUltra V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: ImageScaleRestore V2": {"input": {"required": {"image": ["IMAGE"], "scale": ["FLOAT", {"default": 1, "min": 0.01, "max": 100, "step": 0.01}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]], "scale_by": [["by_scale", "longest", "shortest", "width", "height", "total_pixel(kilo pixel)"]], "scale_by_length": ["INT", {"default": 1024, "min": 4, "max": 99999999, "step": 1}]}, "optional": {"mask": ["MASK"], "original_size": ["BOX"]}}, "input_order": {"required": ["image", "scale", "method", "scale_by", "scale_by_length"], "optional": ["mask", "original_size"]}, "output": ["IMAGE", "MASK", "BOX", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["image", "mask", "original_size", "width", "height"], "name": "LayerUtility: ImageScaleRestore V2", "display_name": "LayerUtility: ImageScaleRestore V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: SAM2Ultra": {"input": {"required": {"image": ["IMAGE"], "bboxes": ["BBOXES"], "sam2_model": [[]], "precision": [["fp16", "bf16", "fp32"]], "bbox_select": [["all", "first", "by_index"]], "select_index": ["STRING", {"default": "0,"}], "cache_model": ["BOOLEAN", {"default": false}], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 4, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.15, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}, "optional": {}}, "input_order": {"required": ["image", "bboxes", "sam2_model", "precision", "bbox_select", "select_index", "cache_model", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: SAM2Ultra", "display_name": "LayerMask: SAM2 Ultra", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: SAM2VideoUltra": {"input": {"required": {"image": ["IMAGE"], "sam2_model": [[]], "precision": [["fp16", "bf16"]], "cache_model": ["BOOLEAN", {"default": false}], "individual_objects": ["BOOLEAN", {"default": false}], "mask_preview_color": ["STRING", {"default": "#FF0080"}], "detail_method": [["VITMatte"]], "detail_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 4, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.15, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda"]], "max_megapixels": ["FLOAT", {"default": 0.5, "min": 0.1, "max": 10, "step": 0.1}]}, "optional": {"bboxes": ["BBOXES"], "first_frame_mask": ["MASK"], "pre_mask": ["MASK"]}}, "input_order": {"required": ["image", "sam2_model", "precision", "cache_model", "individual_objects", "mask_preview_color", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"], "optional": ["bboxes", "first_frame_mask", "pre_mask"]}, "output": ["MASK", "IMAGE"], "output_is_list": [false, false], "output_name": ["mask", "preview"], "name": "LayerMask: SAM2VideoUltra", "display_name": "LayerMask: SAM2 Video Ultra", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: MaskByDifferent": {"input": {"required": {"image_1": ["IMAGE"], "image_2": ["IMAGE"], "gain": ["FLOAT", {"default": 1.5, "min": 0.1, "max": 100, "step": 0.1}], "fix_gap": ["INT", {"default": 4, "min": 0, "max": 32, "step": 1}], "fix_threshold": ["FLOAT", {"default": 0.75, "min": 0.01, "max": 0.99, "step": 0.01}], "main_subject_detect": ["BOOLEAN", {"default": false}]}, "optional": {}}, "input_order": {"required": ["image_1", "image_2", "gain", "fix_gap", "fix_threshold", "main_subject_detect"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: MaskByDifferent", "display_name": "LayerMask: MaskByDifferent", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: MaskStroke": {"input": {"required": {"mask": ["MASK"], "invert_mask": ["BOOLEAN", {"default": true}], "stroke_grow": ["INT", {"default": 0, "min": -999, "max": 999, "step": 1}], "stroke_width": ["INT", {"default": 20, "min": 0, "max": 999, "step": 1}], "blur": ["INT", {"default": 6, "min": 0, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["mask", "invert_mask", "stroke_grow", "stroke_width", "blur"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: MaskStroke", "display_name": "LayerMask: MaskStroke", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: BiRefNetUltraV2": {"input": {"required": {"image": ["IMAGE"], "birefnet_model": ["BIREFNET_MODEL"], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 4, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 2, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": false}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}, "optional": {}}, "input_order": {"required": ["image", "birefnet_model", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: BiRefNetUltraV2", "display_name": "LayerMask: BiRefNet Ultra V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: LoadBiRefNetModel": {"input": {"required": {"model": [[]]}}, "input_order": {"required": ["model"]}, "output": ["BIREFNET_MODEL"], "output_is_list": [false], "output_name": ["birefnet_model"], "name": "LayerMask: LoadBiRefNetModel", "display_name": "LayerMask: Load BiRefNet Model", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerFilter: GaussianBlur": {"input": {"required": {"image": ["IMAGE"], "blur": ["INT", {"default": 20, "min": 1, "max": 999, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "blur"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: GaussianBlur", "display_name": "LayerFilter: GaussianBlur", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerFilter: GaussianBlurV2": {"input": {"required": {"image": ["IMAGE"], "blur": ["FLOAT", {"default": 20, "min": 0, "max": 1000, "step": 0.05}]}, "optional": {}}, "input_order": {"required": ["image", "blur"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: GaussianBlurV2", "display_name": "LayerFilter: Gaussian Blur V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerUtility: ImageRewardFilter": {"input": {"required": {"images": ["IMAGE"], "prompt": ["STRING", {"multiline": false}], "output_num": ["INT", {"default": 3, "min": 1, "max": 999999, "step": 1}]}, "optional": {}}, "input_order": {"required": ["images", "prompt", "output_num"], "optional": []}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["images", "obsolete_images"], "name": "LayerUtility: ImageRewardFilter", "display_name": "LayerUtility: ImageRewardFilter", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: Shadow & Highlight Mask": {"input": {"required": {"image": ["IMAGE"], "shadow_level_offset": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1}], "shadow_range": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 0.99, "step": 0.01}], "highlight_level_offset": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1}], "highlight_range": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 0.99, "step": 0.01}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "shadow_level_offset", "shadow_range", "highlight_level_offset", "highlight_range"], "optional": ["mask"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["shadow_mask", "highlight_mask"], "name": "LayerMask: Shadow & Highlight Mask", "display_name": "LayerMask: Shadow & Highlight Mask", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: ShadowHighlightMaskV2": {"input": {"required": {"image": ["IMAGE"], "shadow_level_offset": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1}], "shadow_range": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 0.99, "step": 0.01}], "highlight_level_offset": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1}], "highlight_range": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 0.99, "step": 0.01}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "shadow_level_offset", "shadow_range", "highlight_level_offset", "highlight_range"], "optional": ["mask"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["shadow_mask", "highlight_mask"], "name": "LayerMask: ShadowHighlightMaskV2", "display_name": "LayerMask: Shadow Highlight Mask V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerColor: LUT Apply": {"input": {"required": {"image": ["IMAGE"], "LUT": [["BlueArchitecture.cube"]], "color_space": [["linear", "log"]], "strength": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "LUT", "color_space", "strength"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: LUT Apply", "display_name": "LayerColor: LUT Apply", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerUtility: PromptTagger": {"input": {"required": {"image": ["IMAGE"], "api": [["gemini-1.5-flash", "gemini-pro-vision"]], "token_limit": ["INT", {"default": 80, "min": 2, "max": 1024, "step": 1}], "exclude_word": ["STRING", {"default": ""}], "replace_with_word": ["STRING", {"default": ""}]}, "optional": {}}, "input_order": {"required": ["image", "api", "token_limit", "exclude_word", "replace_with_word"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "LayerUtility: PromptTagger", "display_name": "LayerUtility: PromptTagger", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Prompt", "output_node": false}, "LayerUtility: RestoreCropBox": {"input": {"required": {"background_image": ["IMAGE"], "croped_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": false}], "crop_box": ["BOX"]}, "optional": {"croped_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "croped_image", "invert_mask", "crop_box"], "optional": ["croped_mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: RestoreCropBox", "display_name": "LayerUtility: RestoreCropBox", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: MaskEdgeUltraDetail": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "method": [["PyMatting", "OpenCV-GuidedFilter"]], "mask_grow": ["INT", {"default": 0, "min": -999, "max": 999, "step": 1}], "fix_gap": ["INT", {"default": 0, "min": 0, "max": 32, "step": 1}], "fix_threshold": ["FLOAT", {"default": 0.75, "min": 0.01, "max": 0.99, "step": 0.01}], "detail_range": ["INT", {"default": 12, "min": 1, "max": 256, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01}]}, "optional": {}}, "input_order": {"required": ["image", "mask", "method", "mask_grow", "fix_gap", "fix_threshold", "detail_range", "black_point", "white_point"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: MaskEdgeUltraDetail", "display_name": "LayerMask: MaskEdgeUltraDetail", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: GetColorTone": {"input": {"required": {"image": ["IMAGE"], "mode": [["main_color", "average"]]}, "optional": {}}, "input_order": {"required": ["image", "mode"], "optional": []}, "output": ["STRING", "LIST"], "output_is_list": [false, false], "output_name": ["RGB color in HEX", "HSV color in list"], "name": "LayerUtility: GetColorTone", "display_name": "LayerUtility: GetColorTone", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerColor: AutoAdjust": {"input": {"required": {"image": ["IMAGE"], "strength": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "brightness": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "contrast": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "saturation": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "red": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "green": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "blue": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "strength", "brightness", "contrast", "saturation", "red", "green", "blue"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: AutoAdjust", "display_name": "LayerColor: AutoAdjust", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerUtility: PrintInfo": {"input": {"required": {"anything": ["*", {}]}}, "input_order": {"required": ["anything"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "LayerUtility: PrintInfo", "display_name": "LayerUtility: PrintInfo", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": true}, "LayerUtility: ColorName": {"input": {"required": {"color": ["STRING", {"default": "#000000", "forceInput": true}], "palette": [["xkcd", "css3", "html4"]]}, "optional": {}}, "input_order": {"required": ["color", "palette"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["color_name"], "name": "LayerUtility: ColorName", "display_name": "LayerUtility: Color Name", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerMask: BBoxJoin": {"input": {"required": {"bboxes_1": ["BBOXES"]}, "optional": {"bboxes_2": ["BBOXES"], "bboxes_3": ["BBOXES"], "bboxes_4": ["BBOXES"]}}, "input_order": {"required": ["bboxes_1"], "optional": ["bboxes_2", "bboxes_3", "bboxes_4"]}, "output": ["BBOXES"], "output_is_list": [false], "output_name": ["bboxes"], "name": "LayerMask: BBoxJoin", "display_name": "LayerMask: BBox Join", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: DrawBBoxMask": {"input": {"required": {"image": ["IMAGE"], "bboxes": ["BBOXES"], "grow_top": ["FLOAT", {"default": 0, "min": -10, "max": 10, "step": 0.01}], "grow_bottom": ["FLOAT", {"default": 0, "min": -10, "max": 10, "step": 0.01}], "grow_left": ["FLOAT", {"default": 0, "min": -10, "max": 10, "step": 0.01}], "grow_right": ["FLOAT", {"default": 0, "min": -10, "max": 10, "step": 0.01}]}, "optional": {}}, "input_order": {"required": ["image", "bboxes", "grow_top", "grow_bottom", "grow_left", "grow_right"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: DrawBBoxMask", "display_name": "LayerMask: Draw BBox Mask", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: ObjectDetectorFL2": {"input": {"required": {"image": ["IMAGE"], "prompt": ["STRING", {"default": "subject"}], "florence2_model": ["FLORENCE2"], "sort_method": [["left_to_right", "top_to_bottom", "big_to_small", "confidence"]], "bbox_select": [["all", "first", "by_index"]], "select_index": ["STRING", {"default": "0,"}]}, "optional": {}}, "input_order": {"required": ["image", "prompt", "florence2_model", "sort_method", "bbox_select", "select_index"], "optional": []}, "output": ["BBOXES", "IMAGE"], "output_is_list": [false, false], "output_name": ["bboxes", "preview"], "name": "LayerMask: ObjectDetectorFL2", "display_name": "LayerMask: Object Detector Florence2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: ObjectDetectorMask": {"input": {"required": {"object_mask": ["MASK"], "sort_method": [["left_to_right", "top_to_bottom", "big_to_small", "confidence"]], "bbox_select": [["all", "first", "by_index"]], "select_index": ["STRING", {"default": "0,"}]}, "optional": {}}, "input_order": {"required": ["object_mask", "sort_method", "bbox_select", "select_index"], "optional": []}, "output": ["BBOXES", "IMAGE"], "output_is_list": [false, false], "output_name": ["bboxes", "preview"], "name": "LayerMask: ObjectDetectorMask", "display_name": "LayerMask: Object Detector Mask", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: ObjectDetectorYOLO8": {"input": {"required": {"image": ["IMAGE"], "yolo_model": [[]], "sort_method": [["left_to_right", "top_to_bottom", "big_to_small", "confidence"]], "bbox_select": [["all", "first", "by_index"]], "select_index": ["STRING", {"default": "0,"}]}, "optional": {}}, "input_order": {"required": ["image", "yolo_model", "sort_method", "bbox_select", "select_index"], "optional": []}, "output": ["BBOXES", "IMAGE"], "output_is_list": [false, false], "output_name": ["bboxes", "preview"], "name": "LayerMask: ObjectDetectorYOLO8", "display_name": "LayerMask: Object Detector YOLO8", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: ObjectDetectorYOLOWorld": {"input": {"required": {"image": ["IMAGE"], "yolo_world_model": [["yolo_world/v2-x", "yolo_world/v2-l", "yolo_world/v2-m", "yolo_world/v2-s", "yolo_world/l", "yolo_world/m", "yolo_world/s"]], "confidence_threshold": ["FLOAT", {"default": 0.05, "min": 0, "max": 1, "step": 0.01}], "nms_iou_threshold": ["FLOAT", {"default": 0.3, "min": 0, "max": 1, "step": 0.01}], "prompt": ["STRING", {"default": "subject"}], "sort_method": [["left_to_right", "top_to_bottom", "big_to_small", "confidence"]], "bbox_select": [["all", "first", "by_index"]], "select_index": ["STRING", {"default": "0,"}]}, "optional": {}}, "input_order": {"required": ["image", "yolo_world_model", "confidence_threshold", "nms_iou_threshold", "prompt", "sort_method", "bbox_select", "select_index"], "optional": []}, "output": ["BBOXES", "IMAGE"], "output_is_list": [false, false], "output_name": ["bboxes", "preview"], "name": "LayerMask: ObjectDetectorYOLOWorld", "display_name": "LayerMask: Object Detector YOLO World", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: ImageRemoveAlpha": {"input": {"required": {"RGBA_image": ["IMAGE"], "fill_background": ["BOOLEAN", {"default": false}], "background_color": ["STRING", {"default": "#000000"}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["RGBA_image", "fill_background", "background_color"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["RGB_image"], "name": "LayerUtility: ImageRemoveAlpha", "display_name": "LayerUtility: ImageRemoveAlpha", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: MaskGrow": {"input": {"required": {"mask": ["MASK"], "invert_mask": ["BOOLEAN", {"default": true}], "grow": ["INT", {"default": 4, "min": -999, "max": 999, "step": 1}], "blur": ["INT", {"default": 4, "min": 0, "max": 999, "step": 1}]}, "optional": {}}, "input_order": {"required": ["mask", "invert_mask", "grow", "blur"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: MaskGrow", "display_name": "LayerMask: MaskGrow", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: SaveImagePlus": {"input": {"required": {"images": ["IMAGE"], "custom_path": ["STRING", {"default": ""}], "filename_prefix": ["STRING", {"default": "comfyui"}], "timestamp": [["None", "second", "millisecond"]], "format": [["png", "jpg"]], "quality": ["INT", {"default": 80, "min": 10, "max": 100, "step": 1}], "meta_data": ["BOOLEAN", {"default": false}], "blind_watermark": ["STRING", {"default": ""}], "save_workflow_as_json": ["BOOLEAN", {"default": false}], "preview": ["BOOLEAN", {"default": true}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "custom_path", "filename_prefix", "timestamp", "format", "quality", "meta_data", "blind_watermark", "save_workflow_as_json", "preview"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "LayerUtility: SaveImagePlus", "display_name": "LayerUtility: SaveImage Plus", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": true}, "LayerStyle: InnerShadow": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "multply", "screen", "add", "subtract", "difference", "darker", "lighter", "color_burn", "color_dodge", "linear_burn", "linear_dodge", "overlay", "soft_light", "hard_light", "vivid_light", "pin_light", "linear_light", "hard_mix"]], "opacity": ["INT", {"default": 50, "min": 0, "max": 100, "step": 1}], "distance_x": ["INT", {"default": 5, "min": -9999, "max": 9999, "step": 1}], "distance_y": ["INT", {"default": 5, "min": -9999, "max": 9999, "step": 1}], "grow": ["INT", {"default": 2, "min": -9999, "max": 9999, "step": 1}], "blur": ["INT", {"default": 15, "min": 0, "max": 100, "step": 1}], "shadow_color": ["STRING", {"default": "#000000"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "distance_x", "distance_y", "grow", "blur", "shadow_color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: InnerShadow", "display_name": "LayerStyle: InnerShadow", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerUtility: TextImage": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "Text"}], "font_file": [["Alibaba-PuHuiTi-Heavy.ttf"]], "spacing": ["INT", {"default": 0, "min": -9999, "max": 9999, "step": 1}], "leading": ["INT", {"default": 0, "min": -9999, "max": 9999, "step": 1}], "horizontal_border": ["FLOAT", {"default": 5, "min": -100, "max": 100, "step": 0.1}], "vertical_border": ["FLOAT", {"default": 5, "min": -100, "max": 100, "step": 0.1}], "scale": ["FLOAT", {"default": 80, "min": 0.1, "max": 999, "step": 0.01}], "variation_range": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "variation_seed": ["INT", {"default": 1731013901, "min": 0, "max": 999999999999, "step": 1}], "layout": [["horizontal", "vertical"]], "width": ["INT", {"default": 512, "min": 4, "max": 999999, "step": 1}], "height": ["INT", {"default": 512, "min": 4, "max": 999999, "step": 1}], "text_color": ["STRING", {"default": "#FFA000"}], "background_color": ["STRING", {"default": "#FFFFFF"}]}, "optional": {"size_as": ["*", {}]}}, "input_order": {"required": ["text", "font_file", "spacing", "leading", "horizontal_border", "vertical_border", "scale", "variation_range", "variation_seed", "layout", "width", "height", "text_color", "background_color"], "optional": ["size_as"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: TextImage", "display_name": "LayerUtility: TextImage", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: ImageOpacity": {"input": {"required": {"image": ["IMAGE"], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "invert_mask": ["BOOLEAN", {"default": true}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "opacity", "invert_mask"], "optional": ["mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: ImageOpacity", "display_name": "LayerUtility: ImageOpacity", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: ImageScaleByAspectRatio": {"input": {"required": {"aspect_ratio": [["original", "custom", "1:1", "3:2", "4:3", "16:9", "2:3", "3:4", "9:16"]], "proportional_width": ["INT", {"default": 2, "min": 1, "max": 999, "step": 1}], "proportional_height": ["INT", {"default": 1, "min": 1, "max": 999, "step": 1}], "fit": [["letterbox", "crop", "fill"]], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]], "round_to_multiple": [["8", "16", "32", "64", "128", "256", "512", "None"]], "scale_to_longest_side": ["BOOLEAN", {"default": false}], "longest_side": ["INT", {"default": 1024, "min": 4, "max": 999999, "step": 1}]}, "optional": {"image": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["aspect_ratio", "proportional_width", "proportional_height", "fit", "method", "round_to_multiple", "scale_to_longest_side", "longest_side"], "optional": ["image", "mask"]}, "output": ["IMAGE", "MASK", "BOX", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["image", "mask", "original_size", "width", "height"], "name": "LayerUtility: ImageScaleByAspectRatio", "display_name": "LayerUtility: ImageScaleByAspectRatio", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerColor: Brightness & Contrast": {"input": {"required": {"image": ["IMAGE"], "brightness": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "contrast": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "saturation": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}]}, "optional": {}}, "input_order": {"required": ["image", "brightness", "contrast", "saturation"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: Brightness & Contrast", "display_name": "LayerColor: Brightness & Contrast", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerColor: BrightnessContrastV2": {"input": {"required": {"image": ["IMAGE"], "brightness": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "contrast": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "saturation": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}]}, "optional": {}}, "input_order": {"required": ["image", "brightness", "contrast", "saturation"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: BrightnessContrastV2", "display_name": "LayerColor: Brightness Contrast V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerUtility: LoadPSD": {"input": {"required": {"image": [[], {"image_upload": true}], "file_path": ["STRING", {"default": ""}], "include_hidden_layer": ["BOOLEAN", {"default": false}], "find_layer_by": [["layer_index", "layer_name"]], "layer_index": ["INT", {"default": 0, "min": -1, "max": 999, "step": 1}], "layer_name": ["STRING", {"default": ""}]}, "optional": {}}, "input_order": {"required": ["image", "file_path", "include_hidden_layer", "find_layer_by", "layer_index", "layer_name"], "optional": []}, "output": ["IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["flat_image", "layer_image", "all_layers"], "name": "LayerUtility: LoadPSD", "display_name": "LayerUtility: Load PSD", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": false}, "LayerMask: MaskEdgeUltraDetail V2": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "mask_grow": ["INT", {"default": 0, "min": 0, "max": 256, "step": 1}], "fix_gap": ["INT", {"default": 0, "min": 0, "max": 32, "step": 1}], "fix_threshold": ["FLOAT", {"default": 0.75, "min": 0.01, "max": 0.99, "step": 0.01}], "edge_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "edte_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}, "optional": {}}, "input_order": {"required": ["image", "mask", "method", "mask_grow", "fix_gap", "fix_threshold", "edge_erode", "edte_dilate", "black_point", "white_point", "device", "max_megapixels"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: MaskEdgeUltraDetail V2", "display_name": "LayerMask: MaskEdgeUltraDetail V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: ImageHub": {"input": {"required": {"output": ["INT", {"default": 1, "min": 1, "max": 9, "step": 1}], "random_output": ["BOOLEAN", {"default": false}]}, "optional": {"input1_image": ["IMAGE"], "input1_mask": ["MASK"], "input2_image": ["IMAGE"], "input2_mask": ["MASK"], "input3_image": ["IMAGE"], "input3_mask": ["MASK"], "input4_image": ["IMAGE"], "input4_mask": ["MASK"], "input5_image": ["IMAGE"], "input5_mask": ["MASK"], "input6_image": ["IMAGE"], "input6_mask": ["MASK"], "input7_image": ["IMAGE"], "input7_mask": ["MASK"], "input8_image": ["IMAGE"], "input8_mask": ["MASK"], "input9_image": ["IMAGE"], "input9_mask": ["MASK"]}}, "input_order": {"required": ["output", "random_output"], "optional": ["input1_image", "input1_mask", "input2_image", "input2_mask", "input3_image", "input3_mask", "input4_image", "input4_mask", "input5_image", "input5_mask", "input6_image", "input6_mask", "input7_image", "input7_mask", "input8_image", "input8_mask", "input9_image", "input9_mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: ImageHub", "display_name": "LayerUtility: ImageHub", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: QueueStop": {"input": {"required": {"any": ["*"], "mode": [["stop", "continue"]], "stop": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["any", "mode", "stop"]}, "output": ["*"], "output_is_list": [false], "output_name": ["any"], "name": "LayerUtility: QueueStop", "display_name": "LayerUtility: Queue Stop", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": false}, "LayerUtility: SwitchCase": {"input": {"required": {"switch_condition": ["STRING", {"default": "", "multiline": false}], "case_1": ["STRING", {"default": "", "multiline": false}], "case_2": ["STRING", {"default": "", "multiline": false}], "case_3": ["STRING", {"default": "", "multiline": false}], "input_default": ["*"]}, "optional": {"input_1": ["*"], "input_2": ["*"], "input_3": ["*"]}}, "input_order": {"required": ["switch_condition", "case_1", "case_2", "case_3", "input_default"], "optional": ["input_1", "input_2", "input_3"]}, "output": ["*"], "output_is_list": [false], "output_name": ["?"], "name": "LayerUtility: SwitchCase", "display_name": "LayerUtility: Switch Case", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: If ": {"input": {"required": {"if_condition": ["*"], "when_TRUE": ["*"], "when_FALSE": ["*"]}}, "input_order": {"required": ["if_condition", "when_TRUE", "when_FALSE"]}, "output": ["*"], "output_is_list": [false], "output_name": ["?"], "name": "LayerUtility: If ", "display_name": "LayerUtility: If", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: StringCondition": {"input": {"required": {"text": ["STRING", {"multiline": false}], "condition": [["include", "exclude"]], "sub_string": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["text", "condition", "sub_string"]}, "output": ["BOOLEAN", "STRING"], "output_is_list": [false, false], "output_name": ["output", "string"], "name": "LayerUtility: StringCondition", "display_name": "LayerUtility: String Condition", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: BooleanOperator": {"input": {"required": {"a": ["*"], "b": ["*"], "operator": [["==", "!=", ">", "<", ">=", "<=", "and", "or", "xor", "not(a)", "min", "max"]]}}, "input_order": {"required": ["a", "b", "operator"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["output"], "name": "LayerUtility: BooleanOperator", "display_name": "LayerUtility: Boolean Operator", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: NumberCalculator": {"input": {"required": {"a": ["*", {}], "b": ["*", {}], "operator": [["+", "-", "*", "/", "**", "//", "%", "nth_root", "min", "max"]]}}, "input_order": {"required": ["a", "b", "operator"]}, "output": ["INT", "FLOAT"], "output_is_list": [false, false], "output_name": ["int", "float"], "name": "LayerUtility: NumberCalculator", "display_name": "LayerUtility: Number Calculator", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: BooleanOperatorV2": {"input": {"required": {"a_value": ["STRING", {"default": "", "multiline": false}], "b_value": ["STRING", {"default": "", "multiline": false}], "operator": [["==", "!=", ">", "<", ">=", "<=", "and", "or", "xor", "not(a)", "min", "max"]]}, "optional": {"a": ["*"], "b": ["*"]}}, "input_order": {"required": ["a_value", "b_value", "operator"], "optional": ["a", "b"]}, "output": ["BOOLEAN", "STRING"], "output_is_list": [false, false], "output_name": ["output", "string"], "name": "LayerUtility: BooleanOperatorV2", "display_name": "LayerUtility: Boolean Operator V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: NumberCalculatorV2": {"input": {"required": {"a_value": ["STRING", {"default": "", "multiline": false}], "b_value": ["STRING", {"default": "", "multiline": false}], "operator": [["+", "-", "*", "/", "**", "//", "%", "nth_root", "min", "max"]]}, "optional": {"a": ["*"], "b": ["*"]}}, "input_order": {"required": ["a_value", "b_value", "operator"], "optional": ["a", "b"]}, "output": ["INT", "FLOAT", "STRING"], "output_is_list": [false, false, false], "output_name": ["int", "float", "string"], "name": "LayerUtility: NumberCalculatorV2", "display_name": "LayerUtility: Number Calculator V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: TextBox": {"input": {"required": {"text": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "LayerUtility: TextBox", "display_name": "LayerUtility: TextBox", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: String": {"input": {"required": {"string": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["string"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["string"], "name": "LayerUtility: String", "display_name": "LayerUtility: String", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: Integer": {"input": {"required": {"int_value": ["INT", {"default": 0, "min": -99999999999999999999, "max": 99999999999999999999, "step": 1}]}}, "input_order": {"required": ["int_value"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["int", "string"], "name": "LayerUtility: Integer", "display_name": "LayerUtility: Integer", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: Float": {"input": {"required": {"float_value": ["FLOAT", {"default": 0, "min": -99999999999999999999, "max": 99999999999999999999, "step": 1e-05}]}}, "input_order": {"required": ["float_value"]}, "output": ["FLOAT", "STRING"], "output_is_list": [false, false], "output_name": ["float", "string"], "name": "LayerUtility: Float", "display_name": "LayerUtility: Float", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: Boolean": {"input": {"required": {"bool_value": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["bool_value"]}, "output": ["BOOLEAN", "STRING"], "output_is_list": [false, false], "output_name": ["boolean", "string"], "name": "LayerUtility: Boolean", "display_name": "LayerUtility: Boolean", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: Seed": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 99999999999999999999, "step": 1}]}}, "input_order": {"required": ["seed"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["seed"], "name": "LayerUtility: Seed", "display_name": "LayerUtility: Seed", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: CreateQRCode": {"input": {"required": {"size": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "border": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}], "text": ["STRING", {"default": "", "multiline": true}]}, "optional": {}}, "input_order": {"required": ["size", "border", "text"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: CreateQRCode", "display_name": "LayerUtility: Create QRCode", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": false}, "LayerUtility: DecodeQRCode": {"input": {"required": {"image": ["IMAGE"], "pre_blur": ["INT", {"default": 2, "min": 0, "max": 16, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "pre_blur"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["string"], "name": "LayerUtility: DecodeQRCode", "display_name": "LayerUtility: Decode QRCode", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": false}, "LayerColor: AutoAdjustV2": {"input": {"required": {"image": ["IMAGE"], "strength": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "brightness": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "contrast": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "saturation": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "red": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "green": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "blue": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "mode": [["RGB", "lum + sat", "mono", "luminance", "saturation"]]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "strength", "brightness", "contrast", "saturation", "red", "green", "blue", "mode"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: AutoAdjustV2", "display_name": "LayerColor: AutoAdjust V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerFilter: WaterColor": {"input": {"required": {"image": ["IMAGE"], "line_density": ["INT", {"default": 50, "min": 1, "max": 100, "step": 1}], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "line_density", "opacity"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: WaterColor", "display_name": "LayerFilter: WaterColor", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerColor: Levels": {"input": {"required": {"image": ["IMAGE"], "channel": [["RGB", "red", "green", "blue"]], "black_point": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1, "display": "slider"}], "white_point": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1, "display": "slider"}], "gray_point": ["FLOAT", {"default": 1, "min": 0.01, "max": 9.99, "step": 0.01}], "output_black_point": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "output_white_point": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "channel", "black_point", "white_point", "gray_point", "output_black_point", "output_white_point"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: Levels", "display_name": "LayerColor: Levels", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerStyle: InnerGlow": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["screen", "add", "lighter", "normal", "multply", "subtract", "difference", "darker", "color_burn", "color_dodge", "linear_burn", "linear_dodge", "overlay", "soft_light", "hard_light", "vivid_light", "pin_light", "linear_light", "hard_mix"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "brightness": ["INT", {"default": 5, "min": 2, "max": 20, "step": 1}], "glow_range": ["INT", {"default": 48, "min": -9999, "max": 9999, "step": 1}], "blur": ["INT", {"default": 25, "min": 0, "max": 9999, "step": 1}], "light_color": ["STRING", {"default": "#FFBF30"}], "glow_color": ["STRING", {"default": "#FE0000"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "brightness", "glow_range", "blur", "light_color", "glow_color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: InnerGlow", "display_name": "LayerStyle: InnerGlow", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerMask: BlendIf Mask": {"input": {"required": {"image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_if": [["gray", "red", "green", "blue"]], "black_point": ["INT", {"default": 0, "min": 0, "max": 254, "step": 1, "display": "slider"}], "black_range": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "white_point": ["INT", {"default": 255, "min": 1, "max": 255, "step": 1, "display": "slider"}], "white_range": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "invert_mask", "blend_if", "black_point", "black_range", "white_point", "white_range"], "optional": ["mask"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: BlendIf Mask", "display_name": "LayerMask: BlendIf Mask", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: ImageAutoCrop V3": {"input": {"required": {"image": ["IMAGE"], "aspect_ratio": [["1:1", "3:2", "4:3", "16:9", "2:3", "3:4", "9:16", "custom", "original"]], "proportional_width": ["INT", {"default": 1, "min": 1, "max": 99999999, "step": 1}], "proportional_height": ["INT", {"default": 1, "min": 1, "max": 99999999, "step": 1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]], "scale_to_side": [["None", "longest", "shortest", "width", "height", "total_pixel(kilo pixel)"]], "scale_to_length": ["INT", {"default": 1024, "min": 4, "max": 999999, "step": 1}], "round_to_multiple": [["8", "16", "32", "64", "128", "256", "512", "None"]]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "aspect_ratio", "proportional_width", "proportional_height", "method", "scale_to_side", "scale_to_length", "round_to_multiple"], "optional": ["mask"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["cropped_image", "box_preview"], "name": "LayerUtility: ImageAutoCrop V3", "display_name": "LayerUtility: ImageAutoCrop V3", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerColor: RGB": {"input": {"required": {"image": ["IMAGE"], "R": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "G": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "B": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "R", "G", "B"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: RGB", "display_name": "LayerColor: RGB", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerUtility: ImageMaskScaleAs": {"input": {"required": {"scale_as": ["*", {}], "fit": [["letterbox", "crop", "fill"]], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}, "optional": {"image": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["scale_as", "fit", "method"], "optional": ["image", "mask"]}, "output": ["IMAGE", "MASK", "BOX", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["image", "mask", "original_size", "widht", "height"], "name": "LayerUtility: ImageMaskScaleAs", "display_name": "LayerUtility: ImageMaskScaleAs", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: ImageToMask": {"input": {"required": {"image": ["IMAGE"], "channel": [["L(LAB)", "A(Lab)", "B(Lab)", "R(RGB)", "G(RGB)", "B(RGB)", "alpha", "Y(YUV)", "U(YUV)", "V(YUV)", "H(HSV)", "S(HSV", "V(HSV)"]], "black_point": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1, "display": "slider"}], "white_point": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1, "display": "slider"}], "gray_point": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 9.99, "step": 0.01}], "invert_output_mask": ["BOOLEAN", {"default": false}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "channel", "black_point", "white_point", "gray_point", "invert_output_mask"], "optional": ["mask"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: ImageToMask", "display_name": "LayerMask: Image To Mask", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: ImageCombineAlpha": {"input": {"required": {"RGB_image": ["IMAGE"], "mask": ["MASK"]}, "optional": {}}, "input_order": {"required": ["RGB_image", "mask"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["RGBA_image"], "name": "LayerUtility: ImageCombineAlpha", "display_name": "LayerUtility: ImageCombineAlpha", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerFilter: SoftLight": {"input": {"required": {"image": ["IMAGE"], "soft": ["FLOAT", {"default": 1, "min": 0.2, "max": 10, "step": 0.01}], "threshold": ["INT", {"default": -10, "min": -255, "max": 255, "step": 1}], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "soft", "threshold", "opacity"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: SoftLight", "display_name": "LayerFilter: SoftLight", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerUtility: JoyCaption2": {"input": {"required": {"image": ["IMAGE"], "llm_model": [["Orenguteng/Llama-3.1-8B-Lexi-Uncensored-V2", "unsloth/Meta-Llama-3.1-8B-Instruct"]], "device": [["cuda"]], "dtype": [["nf4", "bf16"]], "vlm_lora": [["text_model", "none"]], "caption_type": [["Descriptive", "Descriptive (Informal)", "Training Prompt", "MidJourney", "Booru tag list", "Booru-like tag list", "Art Critic", "Product Listing", "Social Media Post"]], "caption_length": [["any", "very short", "short", "medium-length", "long", "very long", "20", "30", "40", "50", "60", "70", "80", "90", "100", "110", "120", "130", "140", "150", "160", "170", "180", "190", "200", "210", "220", "230", "240", "250", "260"]], "user_prompt": ["STRING", {"default": "", "multiline": false}], "max_new_tokens": ["INT", {"default": 300, "min": 8, "max": 4096, "step": 1}], "top_p": ["FLOAT", {"default": 0.9, "min": 0, "max": 1, "step": 0.01}], "temperature": ["FLOAT", {"default": 0.6, "min": 0, "max": 1, "step": 0.01}], "cache_model": ["BOOLEAN", {"default": false}]}, "optional": {"extra_options": ["JoyCaption2ExtraOption"]}}, "input_order": {"required": ["image", "llm_model", "device", "dtype", "vlm_lora", "caption_type", "caption_length", "user_prompt", "max_new_tokens", "top_p", "temperature", "cache_model"], "optional": ["extra_options"]}, "output": ["STRING"], "output_is_list": [true], "output_name": ["text"], "name": "LayerUtility: JoyCaption2", "display_name": "LayerUtility: JoyCaption2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: JoyCaption2ExtraOptions": {"input": {"required": {"refer_character_name": ["BOOLEAN", {"default": false}], "exclude_people_info": ["BOOLEAN", {"default": false}], "include_lighting": ["BOOLEAN", {"default": false}], "include_camera_angle": ["BOOLEAN", {"default": false}], "include_watermark": ["BOOLEAN", {"default": false}], "include_JPEG_artifacts": ["BOOLEAN", {"default": false}], "include_exif": ["BOOLEAN", {"default": false}], "exclude_sexual": ["BOOLEAN", {"default": false}], "exclude_image_resolution": ["BOOLEAN", {"default": false}], "include_aesthetic_quality": ["BOOLEAN", {"default": false}], "include_composition_style": ["BOOLEAN", {"default": false}], "exclude_text": ["BOOLEAN", {"default": false}], "specify_depth_field": ["BOOLEAN", {"default": false}], "specify_lighting_sources": ["BOOLEAN", {"default": false}], "do_not_use_ambiguous_language": ["BOOLEAN", {"default": false}], "include_nsfw": ["BOOLEAN", {"default": false}], "only_describe_most_important_elements": ["BOOLEAN", {"default": false}], "character_name": ["STRING", {"default": "Huluwa", "multiline": false}]}, "optional": {}}, "input_order": {"required": ["refer_character_name", "exclude_people_info", "include_lighting", "include_camera_angle", "include_watermark", "include_JPEG_artifacts", "include_exif", "exclude_sexual", "exclude_image_resolution", "include_aesthetic_quality", "include_composition_style", "exclude_text", "specify_depth_field", "specify_lighting_sources", "do_not_use_ambiguous_language", "include_nsfw", "only_describe_most_important_elements", "character_name"], "optional": []}, "output": ["JoyCaption2ExtraOption"], "output_is_list": [false], "output_name": ["extra_option"], "name": "LayerUtility: JoyCaption2ExtraOptions", "display_name": "LayerUtility: JoyCaption2 Extra Options", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerFilter: ChannelShake": {"input": {"required": {"image": ["IMAGE"], "distance": ["INT", {"default": 20, "min": 1, "max": 999, "step": 1}], "angle": ["FLOAT", {"default": 40, "min": -360, "max": 360, "step": 0.1}], "mode": [["RGB", "RBG", "BGR", "BRG", "GBR", "GRB"]]}, "optional": {}}, "input_order": {"required": ["image", "distance", "angle", "mode"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: ChannelShake", "display_name": "LayerFilter: ChannelShake", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerUtility: VQAPrompt": {"input": {"required": {"image": ["IMAGE"], "vqa_model": ["VQA_MODEL"], "question": ["STRING", {"default": "{age number} years old {ethnicity} {gender}, weared {garment color} {garment}, {eye color} eyes, {hair style} {hair color} hair, {background} background.", "multiline": true, "dynamicPrompts": false}]}, "optional": {}}, "input_order": {"required": ["image", "vqa_model", "question"], "optional": []}, "output": ["STRING"], "output_is_list": [true], "output_name": ["text"], "name": "LayerUtility: VQAPrompt", "display_name": "LayerUtility: VQA Prompt", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: LoadVQAModel": {"input": {"required": {"model": [["blip-vqa-base", "blip-vqa-capfilt-large"]], "precision": [["fp16", "fp32"]], "device": [["cuda", "cpu"]]}}, "input_order": {"required": ["model", "precision", "device"]}, "output": ["VQA_MODEL"], "output_is_list": [false], "output_name": ["vqa_model"], "name": "LayerUtility: LoadVQAModel", "display_name": "LayerUtility: Load VQA Model", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerStyle: ColorOverlay": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "multply", "screen", "add", "subtract", "difference", "darker", "lighter", "color_burn", "color_dodge", "linear_burn", "linear_dodge", "overlay", "soft_light", "hard_light", "vivid_light", "pin_light", "linear_light", "hard_mix"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "color": ["STRING", {"default": "#FFBF30"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: ColorOverlay", "display_name": "LayerStyle: ColorOverlay", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerUtility: ImageBlendAdvance": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "multply", "screen", "add", "subtract", "difference", "darker", "lighter", "color_burn", "color_dodge", "linear_burn", "linear_dodge", "overlay", "soft_light", "hard_light", "vivid_light", "pin_light", "linear_light", "hard_mix"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "x_percent": ["FLOAT", {"default": 50, "min": -999, "max": 999, "step": 0.01}], "y_percent": ["FLOAT", {"default": 50, "min": -999, "max": 999, "step": 0.01}], "mirror": [["None", "horizontal", "vertical"]], "scale": ["FLOAT", {"default": 1, "min": 0.01, "max": 100, "step": 0.01}], "aspect_ratio": ["FLOAT", {"default": 1, "min": 0.01, "max": 100, "step": 0.01}], "rotate": ["FLOAT", {"default": 0, "min": -999999, "max": 999999, "step": 0.01}], "transform_method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]], "anti_aliasing": ["INT", {"default": 0, "min": 0, "max": 16, "step": 1}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "x_percent", "y_percent", "mirror", "scale", "aspect_ratio", "rotate", "transform_method", "anti_aliasing"], "optional": ["layer_mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: ImageBlendAdvance", "display_name": "LayerUtility: ImageBlendAdvance", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: MaskByColor": {"input": {"required": {"image": ["IMAGE"], "color": ["COLOR", {"default": "#FFFFFF"}], "color_in_HEX": ["STRING", {"default": ""}], "threshold": ["INT", {"default": 50, "min": 0, "max": 100, "step": 1}], "fix_gap": ["INT", {"default": 2, "min": 0, "max": 32, "step": 1}], "fix_threshold": ["FLOAT", {"default": 0.75, "min": 0.01, "max": 0.99, "step": 0.01}], "invert_mask": ["BOOLEAN", {"default": false}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "color", "color_in_HEX", "threshold", "fix_gap", "fix_threshold", "invert_mask"], "optional": ["mask"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: MaskByColor", "display_name": "LayerMask: Mask by Color", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerColor: HSV": {"input": {"required": {"image": ["IMAGE"], "H": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "S": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "V": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "H", "S", "V"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: HSV", "display_name": "LayerColor: HSV", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerUtility: GradientImage": {"input": {"required": {"width": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "height": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "angle": ["INT", {"default": 0, "min": -360, "max": 360, "step": 1}], "start_color": ["STRING", {"default": "#FFFFFF"}], "end_color": ["STRING", {"default": "#000000"}]}, "optional": {}}, "input_order": {"required": ["width", "height", "angle", "start_color", "end_color"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: GradientImage", "display_name": "LayerUtility: GradientImage", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: ColorImage": {"input": {"required": {"width": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "height": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "color": ["STRING", {"default": "#000000"}]}, "optional": {}}, "input_order": {"required": ["width", "height", "color"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: ColorImage", "display_name": "LayerUtility: ColorImage", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerStyle: InnerGlow V2": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["screen", "linear dodge(add)", "color dodge", "lighten", "dodge", "hard light", "linear light", "normal", "dissolve", "darken", "multiply", "color burn", "linear burn", "darker color", "lighter color", "overlay", "soft light", "vivid light", "pin light", "hard mix", "difference", "exclusion", "subtract", "divide", "hue", "saturation", "color", "luminosity", "grain extract", "grain merge"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "brightness": ["INT", {"default": 5, "min": 2, "max": 20, "step": 1}], "glow_range": ["INT", {"default": 48, "min": -9999, "max": 9999, "step": 1}], "blur": ["INT", {"default": 25, "min": 0, "max": 9999, "step": 1}], "light_color": ["STRING", {"default": "#FFBF30"}], "glow_color": ["STRING", {"default": "#FE0000"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "brightness", "glow_range", "blur", "light_color", "glow_color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: InnerGlow V2", "display_name": "LayerStyle: InnerGlow V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerUtility: AddBlindWaterMark": {"input": {"required": {"image": ["IMAGE"], "watermark_image": ["IMAGE"]}, "optional": {}}, "input_order": {"required": ["image", "watermark_image"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: AddBlindWaterMark", "display_name": "LayerUtility: Add BlindWaterMark", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": false}, "LayerUtility: ShowBlindWaterMark": {"input": {"required": {"image": ["IMAGE"]}, "optional": {}}, "input_order": {"required": ["image"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["watermark_image"], "name": "LayerUtility: ShowBlindWaterMark", "display_name": "LayerUtility: Show BlindWaterMark", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": false}, "LayerMask: SegmentAnythingUltra": {"input": {"required": {"image": ["IMAGE"], "sam_model": [["sam_vit_h (2.56GB)", "sam_vit_l (1.25GB)", "sam_vit_b (375MB)", "sam_hq_vit_h (2.57GB)", "sam_hq_vit_l (1.25GB)", "sam_hq_vit_b (379MB)", "mobile_sam(39MB)"]], "grounding_dino_model": [["GroundingDINO_SwinT_OGC (694MB)", "GroundingDINO_SwinB (938MB)"]], "threshold": ["FLOAT", {"default": 0.3, "min": 0, "max": 1.0, "step": 0.01}], "detail_range": ["INT", {"default": 16, "min": 1, "max": 256, "step": 1}], "black_point": ["FLOAT", {"default": 0.15, "min": 0.01, "max": 0.98, "step": 0.01}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01}], "process_detail": ["BOOLEAN", {"default": true}], "prompt": ["STRING", {"default": "subject"}]}, "optional": {}}, "input_order": {"required": ["image", "sam_model", "grounding_dino_model", "threshold", "detail_range", "black_point", "white_point", "process_detail", "prompt"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: SegmentAnythingUltra", "display_name": "LayerMask: SegmentAnythingUltra", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: CheckMaskV2": {"input": {"required": {"mask": ["MASK"], "method": [["simple", "detect_percent"]], "white_point": ["INT", {"default": 1, "min": 1, "max": 254, "step": 1}], "area_percent": ["FLOAT", {"default": 0.01, "min": 0, "max": 100, "step": 0.01}]}, "optional": {}}, "input_order": {"required": ["mask", "method", "white_point", "area_percent"], "optional": []}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["bool"], "name": "LayerUtility: CheckMaskV2", "display_name": "LayerUtility: Check Mask V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerFilter: SkinBeauty": {"input": {"required": {"image": ["IMAGE"], "smooth": ["INT", {"default": 20, "min": 1, "max": 64, "step": 1}], "threshold": ["INT", {"default": -10, "min": -255, "max": 255, "step": 1}], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "smooth", "threshold", "opacity"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "beauty_mask"], "name": "LayerFilter: SkinBeauty", "display_name": "LayerFilter: SkinBeauty", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerMask: Florence2Ultra": {"input": {"required": {"florence2_model": ["FLORENCE2"], "image": ["IMAGE"], "task": [["referring expression segmentation", "region to segmentation", "open vocabulary detection"], {"default": "referring expression segmentation"}], "text_input": ["STRING", {"default": "subject"}], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}}, "input_order": {"required": ["florence2_model", "image", "task", "text_input", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: Florence2Ultra", "display_name": "LayerMask: Florence2 Ultra", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: LoadFlorence2Model": {"input": {"required": {"version": [["base", "base-ft", "large", "large-ft", "DocVQA", "SD3-Captioner", "base-PromptGen", "CogFlorence-2-Large-Freeze", "CogFlorence-2.1-Large", "base-PromptGen-v1.5", "large-PromptGen-v1.5"], {"default": "base"}]}}, "input_order": {"required": ["version"]}, "output": ["FLORENCE2"], "output_is_list": [false], "output_name": ["florence2_model"], "name": "LayerMask: LoadFlorence2Model", "display_name": "LayerMask: Load Florence2 Model", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: Florence2Image2Prompt": {"input": {"required": {"florence2_model": ["FLORENCE2"], "image": ["IMAGE"], "task": [["caption", "detailed caption", "more detailed caption", "description", "generate tags(PromptGen 1.5)", "mixed caption(PromptGen 1.5)", "object detection", "dense region caption", "region proposal", "region proposal (mask)", "caption to phrase grounding", "open vocabulary detection", "region to category", "region to description", "OCR", "OCR with region"], {"default": "more detailed caption"}], "text_input": ["STRING", {"default": ""}], "max_new_tokens": ["INT", {"default": 1024, "step": 1}], "num_beams": ["INT", {"default": 3, "min": 1, "step": 1}], "do_sample": ["BOOLEAN", {"default": false}], "fill_mask": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["florence2_model", "image", "task", "text_input", "max_new_tokens", "num_beams", "do_sample", "fill_mask"]}, "output": ["STRING", "IMAGE"], "output_is_list": [false, false], "output_name": ["text", "preview_image"], "name": "LayerUtility: Florence2Image2Prompt", "display_name": "LayerUtility: Florence2 Image2Prompt", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Prompt", "output_node": false}, "LayerUtility: ImageScaleRestore": {"input": {"required": {"image": ["IMAGE"], "scale": ["FLOAT", {"default": 1, "min": 0.01, "max": 100, "step": 0.01}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]], "scale_by_longest_side": ["BOOLEAN", {"default": false}], "longest_side": ["INT", {"default": 1024, "min": 4, "max": 999999, "step": 1}]}, "optional": {"mask": ["MASK"], "original_size": ["BOX"]}}, "input_order": {"required": ["image", "scale", "method", "scale_by_longest_side", "longest_side"], "optional": ["mask", "original_size"]}, "output": ["IMAGE", "MASK", "BOX", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["image", "mask", "original_size", "width", "height"], "name": "LayerUtility: ImageScaleRestore", "display_name": "LayerUtility: ImageScaleRestore", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: CropBoxResolve": {"input": {"required": {"crop_box": ["BOX"]}, "optional": {}}, "input_order": {"required": ["crop_box"], "optional": []}, "output": ["INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["x", "y", "width", "height"], "name": "LayerUtility: CropBoxResolve", "display_name": "LayerUtility: CropBoxResolve", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: LayerMaskTransform": {"input": {"required": {"mask": ["MASK"], "x": ["INT", {"default": 0, "min": -99999, "max": 99999, "step": 1}], "y": ["INT", {"default": 0, "min": -99999, "max": 99999, "step": 1}], "mirror": [["None", "horizontal", "vertical"]], "scale": ["FLOAT", {"default": 1, "min": 0.01, "max": 100, "step": 0.01}], "aspect_ratio": ["FLOAT", {"default": 1, "min": 0.01, "max": 100, "step": 0.01}], "rotate": ["FLOAT", {"default": 0, "min": -999999, "max": 999999, "step": 0.01}], "transform_method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]], "anti_aliasing": ["INT", {"default": 2, "min": 0, "max": 16, "step": 1}]}, "optional": {}}, "input_order": {"required": ["mask", "x", "y", "mirror", "scale", "aspect_ratio", "rotate", "transform_method", "anti_aliasing"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerUtility: LayerMaskTransform", "display_name": "LayerUtility: LayerMaskTransform", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: MaskBoxDetect": {"input": {"required": {"mask": ["MASK"], "detect": [["min_bounding_rect", "max_inscribed_rect", "mask_area"]], "x_adjust": ["INT", {"default": 0, "min": -9999, "max": 9999, "step": 1}], "y_adjust": ["INT", {"default": 0, "min": -9999, "max": 9999, "step": 1}], "scale_adjust": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 100, "step": 0.01}]}, "optional": {}}, "input_order": {"required": ["mask", "detect", "x_adjust", "y_adjust", "scale_adjust"], "optional": []}, "output": ["IMAGE", "FLOAT", "FLOAT", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["box_preview", "x_percent", "y_percent", "width", "height", "x", "y"], "name": "LayerMask: MaskBoxDetect", "display_name": "LayerMask: MaskBoxDetect", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerFilter: HDREffects": {"input": {"required": {"image": ["IMAGE", {"default": null}], "hdr_intensity": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 5.0, "step": 0.01}], "shadow_intensity": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "highlight_intensity": ["FLOAT", {"default": 0.75, "min": 0.0, "max": 1.0, "step": 0.01}], "gamma_intensity": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "contrast": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.01}], "enhance_color": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "hdr_intensity", "shadow_intensity", "highlight_intensity", "gamma_intensity", "contrast", "enhance_color"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: HDREffects", "display_name": "LayerFilter: HDR Effects", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerUtility: ImageScaleByAspectRatio V2": {"input": {"required": {"aspect_ratio": [["original", "custom", "1:1", "3:2", "4:3", "16:9", "2:3", "3:4", "9:16"]], "proportional_width": ["INT", {"default": 1, "min": 1, "max": 100000000.0, "step": 1}], "proportional_height": ["INT", {"default": 1, "min": 1, "max": 100000000.0, "step": 1}], "fit": [["letterbox", "crop", "fill"]], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]], "round_to_multiple": [["8", "16", "32", "64", "128", "256", "512", "None"]], "scale_to_side": [["None", "longest", "shortest", "width", "height", "total_pixel(kilo pixel)"]], "scale_to_length": ["INT", {"default": 1024, "min": 4, "max": 100000000.0, "step": 1}], "background_color": ["STRING", {"default": "#000000"}]}, "optional": {"image": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["aspect_ratio", "proportional_width", "proportional_height", "fit", "method", "round_to_multiple", "scale_to_side", "scale_to_length", "background_color"], "optional": ["image", "mask"]}, "output": ["IMAGE", "MASK", "BOX", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["image", "mask", "original_size", "width", "height"], "name": "LayerUtility: ImageScaleByAspectRatio V2", "display_name": "LayerUtility: ImageScaleByAspectRatio V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: MaskEdgeShrink": {"input": {"required": {"mask": ["MASK"], "invert_mask": ["BOOLEAN", {"default": true}], "shrink_level": ["INT", {"default": 4, "min": 0, "max": 16, "step": 1}], "soft": ["INT", {"default": 6, "min": 0, "max": 64, "step": 1}], "edge_shrink": ["INT", {"default": 1, "min": 0, "max": 999, "step": 1}], "edge_reserve": ["INT", {"default": 25, "min": 0, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["mask", "invert_mask", "shrink_level", "soft", "edge_shrink", "edge_reserve"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: MaskEdgeShrink", "display_name": "LayerMask: MaskEdgeShrink", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: ColorImage V2": {"input": {"required": {"size": [["custom", "1024 x 1024", "768 x 512", "512 x 768", "1280 x 720", "720 x 1280", "1344 x 768", "768 x 1344", "1536 x 640", "640 x 1536"]], "custom_width": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "custom_height": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "color": ["STRING", {"default": "#000000"}]}, "optional": {"size_as": ["*", {}]}}, "input_order": {"required": ["size", "custom_width", "custom_height", "color"], "optional": ["size_as"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: ColorImage V2", "display_name": "LayerUtility: ColorImage V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerColor: Color of Shadow & Highlight": {"input": {"required": {"image": ["IMAGE"], "shadow_brightness": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "shadow_saturation": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "shadow_hue": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "shadow_level_offset": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1}], "shadow_range": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 0.99, "step": 0.01}], "highlight_brightness": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "highlight_saturation": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "highlight_hue": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "highlight_level_offset": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1}], "highlight_range": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 0.99, "step": 0.01}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "shadow_brightness", "shadow_saturation", "shadow_hue", "shadow_level_offset", "shadow_range", "highlight_brightness", "highlight_saturation", "highlight_hue", "highlight_level_offset", "highlight_range"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: Color of Shadow & Highlight", "display_name": "LayerColor: Color of Shadow & Highlight", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerColor: ColorofShadowHighlightV2": {"input": {"required": {"image": ["IMAGE"], "shadow_brightness": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "shadow_saturation": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "shadow_hue": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "shadow_level_offset": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1}], "shadow_range": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 0.99, "step": 0.01}], "highlight_brightness": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "highlight_saturation": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "highlight_hue": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "highlight_level_offset": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1}], "highlight_range": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 0.99, "step": 0.01}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "shadow_brightness", "shadow_saturation", "shadow_hue", "shadow_level_offset", "shadow_range", "highlight_brightness", "highlight_saturation", "highlight_hue", "highlight_level_offset", "highlight_range"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: ColorofShadowHighlightV2", "display_name": "LayerColor: Colorof Shadow Highlight V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerUtility: ImageBlend": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "multply", "screen", "add", "subtract", "difference", "darker", "lighter", "color_burn", "color_dodge", "linear_burn", "linear_dodge", "overlay", "soft_light", "hard_light", "vivid_light", "pin_light", "linear_light", "hard_mix"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: ImageBlend", "display_name": "LayerUtility: ImageBlend", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: RmBgUltra V2": {"input": {"required": {"image": ["IMAGE"], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}, "optional": {}}, "input_order": {"required": ["image", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: RmBgUltra V2", "display_name": "LayerMask: RmBgUltra V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerStyle: InnerShadow V2": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "dissolve", "darken", "multiply", "color burn", "linear burn", "darker color", "lighten", "screen", "color dodge", "linear dodge(add)", "lighter color", "dodge", "overlay", "soft light", "hard light", "vivid light", "linear light", "pin light", "hard mix", "difference", "exclusion", "subtract", "divide", "hue", "saturation", "color", "luminosity", "grain extract", "grain merge"]], "opacity": ["INT", {"default": 50, "min": 0, "max": 100, "step": 1}], "distance_x": ["INT", {"default": 5, "min": -9999, "max": 9999, "step": 1}], "distance_y": ["INT", {"default": 5, "min": -9999, "max": 9999, "step": 1}], "grow": ["INT", {"default": 2, "min": -9999, "max": 9999, "step": 1}], "blur": ["INT", {"default": 15, "min": 0, "max": 100, "step": 1}], "shadow_color": ["STRING", {"default": "#000000"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "distance_x", "distance_y", "grow", "blur", "shadow_color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: InnerShadow V2", "display_name": "LayerStyle: InnerShadow V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerUtility: UserPromptGeneratorTxt2ImgPrompt": {"input": {"required": {"template": [["SD txt2img prompt"]], "describe": ["STRING", {"default": "1 girl", "multiline": true}], "limit_words": ["INT", {"default": 200, "min": 2, "max": 999, "step": 1}]}, "optional": {}}, "input_order": {"required": ["template", "describe", "limit_words"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["user_prompt"], "name": "LayerUtility: UserPromptGeneratorTxt2ImgPrompt", "display_name": "LayerUtility: UserPrompt Generator Txt2Img", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Prompt", "output_node": false}, "LayerUtility: UserPromptGeneratorTxt2ImgPromptWithReference": {"input": {"required": {"template": [["SD txt2img prompt"]], "reference_text": ["STRING", {"multiline": false, "forceInput": true}], "describe": ["STRING", {"default": "1 girl", "multiline": true}], "limit_words": ["INT", {"default": 200, "min": 2, "max": 999, "step": 1}]}, "optional": {}}, "input_order": {"required": ["template", "reference_text", "describe", "limit_words"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["user_prompt"], "name": "LayerUtility: UserPromptGeneratorTxt2ImgPromptWithReference", "display_name": "LayerUtility: UserPrompt Generator Txt2Img with Reference", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Prompt", "output_node": false}, "LayerUtility: UserPromptGeneratorReplaceWord": {"input": {"required": {"orig_prompt": ["STRING", {"forceInput": true}], "template": [["prompt replace word"]], "exclude_word": ["STRING", {"default": ""}], "replace_with_word": ["STRING", {"default": ""}]}, "optional": {}}, "input_order": {"required": ["orig_prompt", "template", "exclude_word", "replace_with_word"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["user_prompt"], "name": "LayerUtility: UserPromptGeneratorReplaceWord", "display_name": "LayerUtility: UserPrompt Generator Replace Word", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Prompt", "output_node": false}, "LayerColor: ColorBalance": {"input": {"required": {"image": ["IMAGE"], "cyan_red": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.001}], "magenta_green": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.001}], "yellow_blue": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.001}]}, "optional": {}}, "input_order": {"required": ["image", "cyan_red", "magenta_green", "yellow_blue"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: ColorBalance", "display_name": "LayerColor: ColorBalance", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerFilter: ColorMap": {"input": {"required": {"image": ["IMAGE"], "color_map": [["autumn", "bone", "jet", "winter", "rainbow", "ocean", "summer", "sprint", "cool", "HSV", "pink", "hot", "parula", "magma", "inferno", "plasma", "viridis", "cividis", "twilight", "twilight_shifted", "turbo", "deepgreen"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "color_map", "opacity"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: ColorMap", "display_name": "LayerFilter: ColorMap", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerUtility: RandomGenerator": {"input": {"required": {"min_value": ["FLOAT", {"default": 0, "min": -100000000000000.0, "max": 100000000000000.0, "step": 0.01}], "max_value": ["FLOAT", {"default": 10, "min": -100000000000000.0, "max": 100000000000000.0, "step": 0.01}], "float_decimal_places": ["INT", {"default": 1, "min": 1, "max": 14, "step": 1}], "fix_seed": ["BOOLEAN", {"default": false}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["min_value", "max_value", "float_decimal_places", "fix_seed"], "optional": ["image"]}, "output": ["INT", "FLOAT", "BOOLEAN"], "output_is_list": [false, false, false], "output_name": ["int", "float", "bool"], "name": "LayerUtility: RandomGenerator", "display_name": "LayerUtility: Random Generator", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: RandomGeneratorV2": {"input": {"required": {"min_value": ["FLOAT", {"default": 0, "min": -100000000000000.0, "max": 100000000000000.0, "step": 0.01}], "max_value": ["FLOAT", {"default": 10, "min": -100000000000000.0, "max": 100000000000000.0, "step": 0.01}], "least": ["FLOAT", {"default": 0, "min": 0, "max": 100000000000000.0, "step": 0.01}], "float_decimal_places": ["INT", {"default": 1, "min": 1, "max": 14, "step": 1}], "seed": ["INT", {"default": 0, "min": 0, "max": 100000000000000.0, "step": 1}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["min_value", "max_value", "least", "float_decimal_places", "seed"], "optional": ["image"]}, "output": ["INT", "FLOAT", "BOOLEAN"], "output_is_list": [false, false, false], "output_name": ["int", "float", "bool"], "name": "LayerUtility: RandomGeneratorV2", "display_name": "LayerUtility: Random Generator V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerMask: MaskInvert": {"input": {"required": {"mask": ["MASK"]}, "optional": {}}, "input_order": {"required": ["mask"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: MaskInvert", "display_name": "LayerMask: MaskInvert", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "Lora Loader (JPS)": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "switch": [["Off", "On"]], "lora_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.1}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.1}]}}, "input_order": {"required": ["model", "clip", "switch", "lora_name", "strength_model", "strength_clip"]}, "output": ["MODEL", "CLIP"], "output_is_list": [false, false], "output_name": ["MODEL", "CLIP"], "name": "Lora Loader (JPS)", "display_name": "Lora Loader (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/IO", "output_node": false}, "SDXL Resolutions (JPS)": {"input": {"required": {"resolution": [["square - 1024x1024 (1:1)", "landscape - 1152x896 (4:3)", "landscape - 1216x832 (3:2)", "landscape - 1344x768 (16:9)", "landscape - 1536x640 (21:9)", "portrait - 896x1152 (3:4)", "portrait - 832x1216 (2:3)", "portrait - 768x1344 (9:16)", "portrait - 640x1536 (9:21)"]]}}, "input_order": {"required": ["resolution"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["width", "height"], "name": "SDXL Resolutions (JPS)", "display_name": "SDXL Resolutions (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Settings", "output_node": false}, "SDXL Basic Settings (JPS)": {"input": {"required": {"resolution": [["Use Image Resolution", "square - 1024x1024 (1:1)", "landscape - 1152x896 (4:3)", "landscape - 1216x832 (3:2)", "landscape - 1344x768 (16:9)", "landscape - 1536x640 (21:9)", "portrait - 896x1152 (3:4)", "portrait - 832x1216 (2:3)", "portrait - 768x1344 (9:16)", "portrait - 640x1536 (9:21)"]], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "steps_total": ["INT", {"default": 60, "min": 20, "max": 250, "step": 5}], "base_percentage": ["INT", {"default": 80, "min": 5, "max": 100, "step": 5}], "cfg": ["FLOAT", {"default": 6.5, "min": 1, "max": 20, "step": 0.1}], "cfg_rescale": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.05}], "cfg_refiner": ["FLOAT", {"default": 6.5, "min": 0, "max": 20, "step": 0.1}], "ascore_refiner": ["FLOAT", {"default": 6, "min": 1, "max": 10, "step": 0.5}], "res_factor": ["INT", {"default": 4, "min": 1, "max": 8, "step": 1}], "clip_skip": ["INT", {"default": -2, "min": -24, "max": -1}], "filename": ["STRING", {"default": "JPS"}]}}, "input_order": {"required": ["resolution", "sampler_name", "scheduler", "steps_total", "base_percentage", "cfg", "cfg_rescale", "cfg_refiner", "ascore_refiner", "res_factor", "clip_skip", "filename"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["sdxl_basic_settings"], "name": "SDXL Basic Settings (JPS)", "display_name": "SDXL Basic Settings (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Settings", "output_node": false}, "SDXL Settings (JPS)": {"input": {"required": {"resolution": [["Use Image Resolution", "square - 1024x1024 (1:1)", "landscape - 1152x896 (4:3)", "landscape - 1216x832 (3:2)", "landscape - 1344x768 (16:9)", "landscape - 1536x640 (21:9)", "portrait - 896x1152 (3:4)", "portrait - 832x1216 (2:3)", "portrait - 768x1344 (9:16)", "portrait - 640x1536 (9:21)"]], "res_factor": ["INT", {"default": 4, "min": 1, "max": 8, "step": 1}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "steps": ["INT", {"default": 60, "min": 20, "max": 250, "step": 5}], "cfg": ["FLOAT", {"default": 6.5, "min": 1, "max": 20, "step": 0.1}], "cfg_rescale": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.05}], "clip_skip": ["INT", {"default": -2, "min": -24, "max": -1}], "filename": ["STRING", {"default": "JPS"}]}}, "input_order": {"required": ["resolution", "res_factor", "sampler_name", "scheduler", "steps", "cfg", "cfg_rescale", "clip_skip", "filename"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["sdxl_settings"], "name": "SDXL Settings (JPS)", "display_name": "SDXL Settings (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Settings", "output_node": false}, "Generation TXT IMG Settings (JPS)": {"input": {"required": {"mode": [["Txt2Img", "Img2Img"]], "img_percentage": ["INT", {"default": 50, "min": 0, "max": 100, "step": 5}]}}, "input_order": {"required": ["mode", "img_percentage"]}, "output": ["INT", "FLOAT"], "output_is_list": [false, false], "output_name": ["gen_mode", "img_strength"], "name": "Generation TXT IMG Settings (JPS)", "display_name": "Generation TXT IMG Settings (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Settings", "output_node": false}, "Crop Image Settings (JPS)": {"input": {"required": {"source_crop_pos": [["center", "top", "bottom", "left", "right"]], "source_crop_offset": ["INT", {"default": 0, "min": -2048, "max": 2048, "step": 1, "display": "number"}], "support_crop_pos": [["center", "top", "bottom", "left", "right"]], "support_crop_offset": ["INT", {"default": 0, "min": -2048, "max": 2048, "step": 1, "display": "number"}], "crop_intpol": [["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"]]}}, "input_order": {"required": ["source_crop_pos", "source_crop_offset", "support_crop_pos", "support_crop_offset", "crop_intpol"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["cropimage_settings"], "name": "Crop Image Settings (JPS)", "display_name": "Crop Image Settings (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Settings", "output_node": false}, "ImageToImage Settings (JPS)": {"input": {"required": {"img2img_strength": ["INT", {"default": 50, "min": 0, "max": 100, "step": 1}], "inpaint_strength": ["INT", {"default": 100, "min": 2, "max": 100, "step": 1}], "inpaint_grow_mask": ["INT", {"default": 20, "min": 0, "max": 200, "step": 2}], "unsampler_strength": ["INT", {"default": 30, "min": 0, "max": 100, "step": 1}], "unsampler_cfg": ["FLOAT", {"default": 1, "min": 1, "max": 10, "step": 0.1}], "unsampler_sampler": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "unsampler_scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]]}}, "input_order": {"required": ["img2img_strength", "inpaint_strength", "inpaint_grow_mask", "unsampler_strength", "unsampler_cfg", "unsampler_sampler", "unsampler_scheduler"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["img2img_settings"], "name": "ImageToImage Settings (JPS)", "display_name": "ImageToImage Settings (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Settings", "output_node": false}, "CtrlNet CannyEdge Settings (JPS)": {"input": {"required": {"cannyedge_from": [["Source Image", "Support Image", "Support Direct"]], "cannyedge_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.1}], "cannyedge_start": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.05}], "cannyedge_end": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.05}], "cannyedge_low": ["INT", {"default": 100, "min": 0, "max": 255, "step": 1}], "cannyedge_high": ["INT", {"default": 200, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["cannyedge_from", "cannyedge_strength", "cannyedge_start", "cannyedge_end", "cannyedge_low", "cannyedge_high"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["cannyedge_settings"], "name": "CtrlNet CannyEdge Settings (JPS)", "display_name": "CtrlNet CannyEdge Settings (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Settings", "output_node": false}, "CtrlNet ZoeDepth Settings (JPS)": {"input": {"required": {"zoe_from": [["Source Image", "Support Image", "Support Direct"]], "zoe_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.1}], "zoe_start": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.05}], "zoe_end": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.05}]}}, "input_order": {"required": ["zoe_from", "zoe_strength", "zoe_start", "zoe_end"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["zoedepth_settings"], "name": "CtrlNet ZoeDepth Settings (JPS)", "display_name": "CtrlNet ZoeDepth Settings (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Settings", "output_node": false}, "CtrlNet MiDaS Settings (JPS)": {"input": {"required": {"midas_from": [["Source Image", "Support Image", "Support Direct"]], "midas_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.1}], "midas_start": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.05}], "midas_end": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.05}], "midas_a": ["FLOAT", {"default": 6.28, "min": 0.0, "max": 15.71, "step": 0.05}], "midas_bg": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.05}]}}, "input_order": {"required": ["midas_from", "midas_strength", "midas_start", "midas_end", "midas_a", "midas_bg"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["midas_settings"], "name": "CtrlNet MiDaS Settings (JPS)", "display_name": "CtrlNet MiDaS Settings (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Settings", "output_node": false}, "CtrlNet OpenPose Settings (JPS)": {"input": {"required": {"openpose_from": [["Source Image", "Support Image", "Support Direct"]], "openpose_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.1}], "openpose_start": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.05}], "openpose_end": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.05}], "openpose_body": [["enable", "disable"]], "openpose_face": [["enable", "disable"]], "openpose_hand": [["enable", "disable"]]}}, "input_order": {"required": ["openpose_from", "openpose_strength", "openpose_start", "openpose_end", "openpose_body", "openpose_face", "openpose_hand"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["openpose_settings"], "name": "CtrlNet OpenPose Settings (JPS)", "display_name": "CtrlNet OpenPose Settings (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Settings", "output_node": false}, "Revision Settings (JPS)": {"input": {"required": {"rev1_strength": ["FLOAT", {"default": 1, "min": 0, "max": 10, "step": 0.1}], "rev2_strength": ["FLOAT", {"default": 1, "min": 0, "max": 10, "step": 0.1}], "rev1_noiseaug": ["FLOAT", {"default": 0, "min": 0, "max": 1, "step": 0.1}], "rev2_noiseaug": ["FLOAT", {"default": 0, "min": 0, "max": 1, "step": 0.1}], "rev1_crop": [["center", "top", "bottom", "left", "right"]], "rev1_offset": ["INT", {"default": 0, "min": -2048, "max": 2048, "step": 1, "display": "number"}], "rev2_crop": [["center", "top", "bottom", "left", "right"]], "rev2_offset": ["INT", {"default": 0, "min": -2048, "max": 2048, "step": 1, "display": "number"}], "crop_intpol": [["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"]], "crop_res": ["INT", {"default": 224, "min": 224, "max": 1792, "step": 224, "display": "number"}]}}, "input_order": {"required": ["rev1_strength", "rev2_strength", "rev1_noiseaug", "rev2_noiseaug", "rev1_crop", "rev1_offset", "rev2_crop", "rev2_offset", "crop_intpol", "crop_res"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["revision_settings"], "name": "Revision Settings (JPS)", "display_name": "Revision Settings (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Settings", "output_node": false}, "IP Adapter Settings (JPS)": {"input": {"required": {"ipa_weight": ["FLOAT", {"default": 0.5, "min": 0, "max": 3, "step": 0.01}], "ipa_wtype": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle"]], "ipa_noise": ["FLOAT", {"default": 0.0, "min": 0, "max": 1, "step": 0.05}], "ipa_start": ["FLOAT", {"default": 0.0, "min": 0, "max": 1, "step": 0.05}], "ipa_stop": ["FLOAT", {"default": 1.0, "min": 0, "max": 1, "step": 0.05}], "ipa_crop": [["center", "top", "bottom", "left", "right"]], "ipa_zoom": ["FLOAT", {"default": 1, "min": 1, "max": 5, "step": 0.1, "display": "number"}], "ipa_offset_x": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1, "display": "number"}], "ipa_offset_y": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1, "display": "number"}], "ipa_mask": [["No Mask", "Mask Editor", "Mask Editor (inverted)", "Red from Image", "Green from Image", "Blue from Image"]], "crop_intpol": [["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"]], "sharpening": ["FLOAT", {"default": 0.0, "min": 0, "max": 1, "step": 0.05, "display": "number"}], "ipa_model": [["SDXL ViT-H", "SDXL Plus ViT-H", "SDXL Plus Face ViT-H"]]}}, "input_order": {"required": ["ipa_weight", "ipa_wtype", "ipa_noise", "ipa_start", "ipa_stop", "ipa_crop", "ipa_zoom", "ipa_offset_x", "ipa_offset_y", "ipa_mask", "crop_intpol", "sharpening", "ipa_model"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["ip_adapter_single_settings"], "name": "IP Adapter Settings (JPS)", "display_name": "IP Adapter Settings (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Settings", "output_node": false}, "IP Adapter Tiled Settings (JPS)": {"input": {"required": {"ipa_model": [["SDXL ViT-H", "SDXL Plus ViT-H", "SDXL Plus Face ViT-H"]], "ipa_wtype": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle"]], "ipa_weight": ["FLOAT", {"default": 0.5, "min": 0, "max": 3, "step": 0.01}], "ipa_noise": ["FLOAT", {"default": 0.0, "min": 0, "max": 1, "step": 0.05}], "ipa_start": ["FLOAT", {"default": 0.0, "min": 0, "max": 1, "step": 0.05}], "ipa_end": ["FLOAT", {"default": 1.0, "min": 0, "max": 1, "step": 0.05}], "tile_short": ["INT", {"default": 2, "min": 1, "max": 5, "step": 1, "display": "number"}], "tile_weight": ["FLOAT", {"default": 0.55, "min": 0, "max": 1, "step": 0.05}], "zoom": ["INT", {"default": 100, "min": 1, "max": 500, "step": 1}], "offset_w": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1, "display": "number"}], "offset_h": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1, "display": "number"}], "prepare_type": [["Target AR + Target Res", "Target AR + Tile Res", "Tile AR + Target Res", "Source AR + Source Res", "Source AR + Tile Res", "Tile AR + Source Res", "Square AR + Target Res", "Square AR + Tile Res", "Direct Source"]], "prepare_intpol": [["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"]], "prepare_sharpening": ["FLOAT", {"default": 0.0, "min": 0, "max": 1, "step": 0.05, "display": "number"}]}}, "input_order": {"required": ["ipa_model", "ipa_wtype", "ipa_weight", "ipa_noise", "ipa_start", "ipa_end", "tile_short", "tile_weight", "zoom", "offset_w", "offset_h", "prepare_type", "prepare_intpol", "prepare_sharpening"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["ip_adapter_tiled_settings"], "name": "IP Adapter Tiled Settings (JPS)", "display_name": "IP Adapter Tiled Settings (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Settings", "output_node": false}, "InstantID Settings (JPS)": {"input": {"required": {"ip_weight": ["FLOAT", {"default": 0.8, "min": 0, "max": 1, "step": 0.01}], "cn_strength": ["FLOAT", {"default": 0.65, "min": 0, "max": 10, "step": 0.01}], "noise": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.1}], "start": ["FLOAT", {"default": 0.0, "min": 0, "max": 1, "step": 0.05}], "end": ["FLOAT", {"default": 1.0, "min": 0, "max": 1, "step": 0.05}]}}, "input_order": {"required": ["ip_weight", "cn_strength", "noise", "start", "end"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["instantid_settings"], "name": "InstantID Settings (JPS)", "display_name": "InstantID Settings (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Settings", "output_node": false}, "Image Prepare Settings (JPS)": {"input": {"required": {"offset_width": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1, "display": "number"}], "offset_height": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1, "display": "number"}], "crop_left": ["INT", {"default": 0, "min": 0, "max": 90, "step": 1, "display": "number"}], "crop_right": ["INT", {"default": 0, "min": 0, "max": 90, "step": 1, "display": "number"}], "crop_top": ["INT", {"default": 0, "min": 0, "max": 90, "step": 1, "display": "number"}], "crop_bottom": ["INT", {"default": 0, "min": 0, "max": 90, "step": 1, "display": "number"}], "padding_left": ["INT", {"default": 0, "min": 0, "max": 500, "step": 1, "display": "number"}], "padding_right": ["INT", {"default": 0, "min": 0, "max": 500, "step": 1, "display": "number"}], "padding_top": ["INT", {"default": 0, "min": 0, "max": 500, "step": 1, "display": "number"}], "padding_bottom": ["INT", {"default": 0, "min": 0, "max": 500, "step": 1, "display": "number"}], "interpolation": [["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"]], "sharpening": ["FLOAT", {"default": 0.0, "min": 0, "max": 1, "step": 0.05, "display": "number"}]}}, "input_order": {"required": ["offset_width", "offset_height", "crop_left", "crop_right", "crop_top", "crop_bottom", "padding_left", "padding_right", "padding_top", "padding_bottom", "interpolation", "sharpening"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["imageprepare_settings"], "name": "Image Prepare Settings (JPS)", "display_name": "Image Prepare Settings (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Settings", "output_node": false}, "InstantID Source Prepare Settings (JPS)": {"input": {"required": {"resize_to": [["Resize to Target", "Keep Size"]], "offset_width": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1, "display": "number"}], "offset_height": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1, "display": "number"}], "crop_left": ["INT", {"default": 0, "min": 0, "max": 90, "step": 1, "display": "number"}], "crop_right": ["INT", {"default": 0, "min": 0, "max": 90, "step": 1, "display": "number"}], "crop_top": ["INT", {"default": 0, "min": 0, "max": 90, "step": 1, "display": "number"}], "crop_bottom": ["INT", {"default": 0, "min": 0, "max": 90, "step": 1, "display": "number"}], "interpolation": [["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"]], "sharpening": ["FLOAT", {"default": 0.0, "min": 0, "max": 1, "step": 0.05, "display": "number"}], "flip": [["No", "X-Axis", "Y-Axis"]]}}, "input_order": {"required": ["resize_to", "offset_width", "offset_height", "crop_left", "crop_right", "crop_top", "crop_bottom", "interpolation", "sharpening", "flip"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["imageprepare_settings"], "name": "InstantID Source Prepare Settings (JPS)", "display_name": "InstantID Source Prepare Settings (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Settings", "output_node": false}, "InstantID Pose Prepare Settings (JPS)": {"input": {"required": {"resize_to": [["Resize to Target", "Resize to Source", "Keep Size"]], "offset_width": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1, "display": "number"}], "offset_height": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1, "display": "number"}], "crop_left": ["INT", {"default": 0, "min": 0, "max": 90, "step": 1, "display": "number"}], "crop_right": ["INT", {"default": 0, "min": 0, "max": 90, "step": 1, "display": "number"}], "crop_top": ["INT", {"default": 0, "min": 0, "max": 90, "step": 1, "display": "number"}], "crop_bottom": ["INT", {"default": 0, "min": 0, "max": 90, "step": 1, "display": "number"}], "padding_left": ["INT", {"default": 0, "min": 0, "max": 500, "step": 1, "display": "number"}], "padding_right": ["INT", {"default": 0, "min": 0, "max": 500, "step": 1, "display": "number"}], "padding_top": ["INT", {"default": 0, "min": 0, "max": 500, "step": 1, "display": "number"}], "padding_bottom": ["INT", {"default": 0, "min": 0, "max": 500, "step": 1, "display": "number"}], "interpolation": [["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"]], "sharpening": ["FLOAT", {"default": 0.0, "min": 0, "max": 1, "step": 0.05, "display": "number"}], "flip": [["No", "X-Axis", "Y-Axis"]]}}, "input_order": {"required": ["resize_to", "offset_width", "offset_height", "crop_left", "crop_right", "crop_top", "crop_bottom", "padding_left", "padding_right", "padding_top", "padding_bottom", "interpolation", "sharpening", "flip"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["imageprepare_settings"], "name": "InstantID Pose Prepare Settings (JPS)", "display_name": "InstantID Pose Prepare Settings (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Settings", "output_node": false}, "InstantID Mask Prepare Settings (JPS)": {"input": {"required": {"mask_type": [["No Mask", "Mask Editor", "Mask Editor (inverted)", "Red from Image", "Green from Image", "Blue from Image"]], "resize_to": [["Resize to Target", "Resize to Source", "Keep Size"]], "resize_type": [["Crop", "Stretch"]], "offset_width": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1, "display": "number"}], "offset_height": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1, "display": "number"}], "crop_left": ["INT", {"default": 0, "min": 0, "max": 90, "step": 1, "display": "number"}], "crop_right": ["INT", {"default": 0, "min": 0, "max": 90, "step": 1, "display": "number"}], "crop_top": ["INT", {"default": 0, "min": 0, "max": 90, "step": 1, "display": "number"}], "crop_bottom": ["INT", {"default": 0, "min": 0, "max": 90, "step": 1, "display": "number"}], "padding_left": ["INT", {"default": 0, "min": 0, "max": 500, "step": 1, "display": "number"}], "padding_right": ["INT", {"default": 0, "min": 0, "max": 500, "step": 1, "display": "number"}], "padding_top": ["INT", {"default": 0, "min": 0, "max": 500, "step": 1, "display": "number"}], "padding_bottom": ["INT", {"default": 0, "min": 0, "max": 500, "step": 1, "display": "number"}], "interpolation": [["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"]], "sharpening": ["FLOAT", {"default": 0.0, "min": 0, "max": 1, "step": 0.05, "display": "number"}]}}, "input_order": {"required": ["mask_type", "resize_to", "resize_type", "offset_width", "offset_height", "crop_left", "crop_right", "crop_top", "crop_bottom", "padding_left", "padding_right", "padding_top", "padding_bottom", "interpolation", "sharpening"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["imageprepare_settings"], "name": "InstantID Mask Prepare Settings (JPS)", "display_name": "InstantID Mask Prepare Settings (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Settings", "output_node": false}, "Sampler Scheduler Settings (JPS)": {"input": {"required": {"sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]]}}, "input_order": {"required": ["sampler_name", "scheduler"]}, "output": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"], ["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "output_is_list": [false, false], "output_name": ["sampler_name", "scheduler"], "name": "Sampler Scheduler Settings (JPS)", "display_name": "Sampler Scheduler Settings (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Settings", "output_node": false}, "Integer Switch (JPS)": {"input": {"required": {"select": ["INT", {}]}, "optional": {"int_1": ["INT", {}], "int_2": ["INT", {}], "int_3": ["INT", {}], "int_4": ["INT", {}], "int_5": ["INT", {}]}}, "input_order": {"required": ["select"], "optional": ["int_1", "int_2", "int_3", "int_4", "int_5"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["int_out"], "name": "Integer Switch (JPS)", "display_name": "Integer Switch (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Switches", "output_node": false}, "Image Switch (JPS)": {"input": {"required": {"select": ["INT", {}]}, "optional": {"img_1": ["IMAGE"], "img_2": ["IMAGE"], "img_3": ["IMAGE"], "img_4": ["IMAGE"], "img_5": ["IMAGE"]}}, "input_order": {"required": ["select"], "optional": ["img_1", "img_2", "img_3", "img_4", "img_5"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["img_out"], "name": "Image Switch (JPS)", "display_name": "Image Switch (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Switches", "output_node": false}, "Latent Switch (JPS)": {"input": {"required": {"select": ["INT", {}]}, "optional": {"latent_1": ["LATENT"], "latent_2": ["LATENT"], "latent_3": ["LATENT"], "latent_4": ["LATENT"], "latent_5": ["LATENT"]}}, "input_order": {"required": ["select"], "optional": ["latent_1", "latent_2", "latent_3", "latent_4", "latent_5"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent_out"], "name": "Latent Switch (JPS)", "display_name": "Latent Switch (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Switches", "output_node": false}, "Conditioning Switch (JPS)": {"input": {"required": {"select": ["INT", {}]}, "optional": {"con_1": ["CONDITIONING"], "con_2": ["CONDITIONING"], "con_3": ["CONDITIONING"], "con_4": ["CONDITIONING"], "con_5": ["CONDITIONING"]}}, "input_order": {"required": ["select"], "optional": ["con_1", "con_2", "con_3", "con_4", "con_5"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["con_out"], "name": "Conditioning Switch (JPS)", "display_name": "Conditioning Switch (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Switches", "output_node": false}, "Model Switch (JPS)": {"input": {"required": {"select": ["INT", {}]}, "optional": {"model_1": ["MODEL"], "model_2": ["MODEL"], "model_3": ["MODEL"], "model_4": ["MODEL"], "model_5": ["MODEL"]}}, "input_order": {"required": ["select"], "optional": ["model_1", "model_2", "model_3", "model_4", "model_5"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model_out"], "name": "Model Switch (JPS)", "display_name": "Model Switch (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Switches", "output_node": false}, "IPA Switch (JPS)": {"input": {"required": {"select": ["INT", {}]}, "optional": {"ipa_1": ["IPADAPTER"], "ipa_2": ["IPADAPTER"], "ipa_3": ["IPADAPTER"], "ipa_4": ["IPADAPTER"], "ipa_5": ["IPADAPTER"]}}, "input_order": {"required": ["select"], "optional": ["ipa_1", "ipa_2", "ipa_3", "ipa_4", "ipa_5"]}, "output": ["IPADAPTER"], "output_is_list": [false], "output_name": ["IPA_out"], "name": "IPA Switch (JPS)", "display_name": "IPA Switch (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Switches", "output_node": false}, "VAE Switch (JPS)": {"input": {"required": {"select": ["INT", {}]}, "optional": {"vae_1": ["VAE"], "vae_2": ["VAE"], "vae_3": ["VAE"], "vae_4": ["VAE"], "vae_5": ["VAE"]}}, "input_order": {"required": ["select"], "optional": ["vae_1", "vae_2", "vae_3", "vae_4", "vae_5"]}, "output": ["VAE"], "output_is_list": [false], "output_name": ["vae_out"], "name": "VAE Switch (JPS)", "display_name": "VAE Switch (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Switches", "output_node": false}, "Mask Switch (JPS)": {"input": {"required": {"select": ["INT", {}]}, "optional": {"mask_1": ["MASK"], "mask_2": ["MASK"], "mask_3": ["MASK"], "mask_4": ["MASK"], "mask_5": ["MASK"]}}, "input_order": {"required": ["select"], "optional": ["mask_1", "mask_2", "mask_3", "mask_4", "mask_5"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask_out"], "name": "Mask Switch (JPS)", "display_name": "Mask Switch (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Switches", "output_node": false}, "ControlNet Switch (JPS)": {"input": {"required": {"select": ["INT", {}]}, "optional": {"ctrlnet_1": ["CONTROL_NET"], "ctrlnet_2": ["CONTROL_NET"], "ctrlnet_3": ["CONTROL_NET"], "ctrlnet_4": ["CONTROL_NET"], "ctrlnet_5": ["CONTROL_NET"]}}, "input_order": {"required": ["select"], "optional": ["ctrlnet_1", "ctrlnet_2", "ctrlnet_3", "ctrlnet_4", "ctrlnet_5"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["ctrlnet_out"], "name": "ControlNet Switch (JPS)", "display_name": "ControlNet Switch (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Switches", "output_node": false}, "Disable Enable Switch (JPS)": {"input": {"required": {"select": ["INT", {"default": 1, "min": 1, "max": 9, "step": 1}], "compare": ["INT", {"default": 1, "min": 1, "max": 9, "step": 1}], "match": [["Set to Disable", "Set to Enable"]]}}, "input_order": {"required": ["select", "compare", "match"]}, "output": [["disable", "enable"]], "output_is_list": [false], "output_name": ["disable_enable"], "name": "Disable Enable Switch (JPS)", "display_name": "Disable Enable Switch (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Switches", "output_node": false}, "Enable Disable Switch (JPS)": {"input": {"required": {"select": ["INT", {"default": 1, "min": 1, "max": 9, "step": 1}], "compare": ["INT", {"default": 1, "min": 1, "max": 9, "step": 1}], "match": [["Set to Enable", "Set to Disable"]]}}, "input_order": {"required": ["select", "compare", "match"]}, "output": [["enable", "disable"]], "output_is_list": [false], "output_name": ["enable_disable"], "name": "Enable Disable Switch (JPS)", "display_name": "Enable Disable Switch (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Switches", "output_node": false}, "SDXL Basic Settings Pipe (JPS)": {"input": {"required": {"sdxl_basic_settings": ["BASIC_PIPE"]}}, "input_order": {"required": ["sdxl_basic_settings"]}, "output": ["INT", "INT", "INT", ["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"], ["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"], "INT", "INT", "FLOAT", "FLOAT", "FLOAT", "FLOAT", "INT", "INT", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["image_res", "width", "height", "sampler_name", "scheduler", "steps_total", "step_split", "cfg", "cfg_rescale", "cfg_refiner", "ascore_refiner", "res_factor", "clip_skip", "filename"], "name": "SDXL Basic Settings Pipe (JPS)", "display_name": "SDXL Basic Settings Pipe (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Pipes", "output_node": false}, "SDXL Settings Pipe (JPS)": {"input": {"required": {"sdxl_settings": ["BASIC_PIPE"]}}, "input_order": {"required": ["sdxl_settings"]}, "output": ["INT", "INT", "INT", "INT", ["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"], ["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"], "INT", "FLOAT", "FLOAT", "INT", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false], "output_name": ["image_res", "width", "height", "res_factor", "sampler_name", "scheduler", "steps", "cfg", "cfg_rescale", "clip_skip", "filename"], "name": "SDXL Settings Pipe (JPS)", "display_name": "SDXL Settings Pipe (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Pipes", "output_node": false}, "Crop Image Pipe (JPS)": {"input": {"required": {"cropimage_settings": ["BASIC_PIPE"]}}, "input_order": {"required": ["cropimage_settings"]}, "output": [["center", "top", "bottom", "left", "right"], "INT", ["center", "top", "bottom", "left", "right"], "INT", ["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"]], "output_is_list": [false, false, false, false, false], "output_name": ["source_crop_pos", "source_crop_offset", "support_crop_pos", "support_crop_offset", "crop_intpol"], "name": "Crop Image Pipe (JPS)", "display_name": "Crop Image Pipe (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Pipes", "output_node": false}, "ImageToImage Pipe (JPS)": {"input": {"required": {"img2img_settings": ["BASIC_PIPE"]}}, "input_order": {"required": ["img2img_settings"]}, "output": ["FLOAT", "FLOAT", "INT", "FLOAT", "FLOAT", ["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"], ["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["img2img_strength", "inpaint_strength", "inpaint_grow_mask", "unsampler_strength", "unsampler_cfg", "unsampler_sampler", "unsampler_scheduler"], "name": "ImageToImage Pipe (JPS)", "display_name": "ImageToImage Pipe (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Pipes", "output_node": false}, "CtrlNet CannyEdge Pipe (JPS)": {"input": {"required": {"cannyedge_settings": ["BASIC_PIPE"]}}, "input_order": {"required": ["cannyedge_settings"]}, "output": ["INT", "FLOAT", "FLOAT", "FLOAT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["cannyedge_source", "cannyedge_strength", "cannyedge_start", "cannyedge_end", "cannyedge_low", "cannyedge_high"], "name": "CtrlNet CannyEdge Pipe (JPS)", "display_name": "CtrlNet CannyEdge Pipe (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Pipes", "output_node": false}, "CtrlNet ZoeDepth Pipe (JPS)": {"input": {"required": {"zoedepth_settings": ["BASIC_PIPE"]}}, "input_order": {"required": ["zoedepth_settings"]}, "output": ["INT", "FLOAT", "FLOAT", "FLOAT"], "output_is_list": [false, false, false, false], "output_name": ["zoe_source", "zoe_strength", "zoe_start", "zoe_end"], "name": "CtrlNet ZoeDepth Pipe (JPS)", "display_name": "CtrlNet ZoeDepth Pipe (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Pipes", "output_node": false}, "CtrlNet MiDaS Pipe (JPS)": {"input": {"required": {"midas_settings": ["BASIC_PIPE"]}}, "input_order": {"required": ["midas_settings"]}, "output": ["INT", "FLOAT", "FLOAT", "FLOAT", "FLOAT", "FLOAT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["midas_source", "midas_strength", "midas_start", "midas_end", "midas_a", "midas_bg"], "name": "CtrlNet MiDaS Pipe (JPS)", "display_name": "CtrlNet MiDaS Pipe (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Pipes", "output_node": false}, "CtrlNet OpenPose Pipe (JPS)": {"input": {"required": {"openpose_settings": ["BASIC_PIPE"]}}, "input_order": {"required": ["openpose_settings"]}, "output": ["INT", "FLOAT", "FLOAT", "FLOAT", ["enable", "disable"], ["enable", "disable"], ["enable", "disable"]], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["openpose_source", "openpose_strength", "openpose_start", "openpose_end", "openpose_body", "openpose_face", "openpose_hand"], "name": "CtrlNet OpenPose Pipe (JPS)", "display_name": "CtrlNet OpenPose Pipe (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Pipes", "output_node": false}, "IP Adapter Settings Pipe (JPS)": {"input": {"required": {"ip_adapter_settings": ["BASIC_PIPE"]}}, "input_order": {"required": ["ip_adapter_settings"]}, "output": ["FLOAT", ["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle"], "FLOAT", "FLOAT", "FLOAT", ["center", "top", "bottom", "left", "right"], "FLOAT", "INT", "INT", "INT", ["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"], "FLOAT", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["ipa_weight", "ipa_wtype", "ipa_noise", "ipa_start", "ipa_stop", "ipa_crop", "ipa_zoom", "ipa_offset_x", "ipa_offset_y", "ipa_mask", "crop_intpol", "sharpening", "ipa_model"], "name": "IP Adapter Settings Pipe (JPS)", "display_name": "IP Adapter Settings Pipe (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Pipes", "output_node": false}, "IP Adapter Tiled Settings Pipe (JPS)": {"input": {"required": {"ip_adapter_settings": ["BASIC_PIPE"]}}, "input_order": {"required": ["ip_adapter_settings"]}, "output": ["INT", ["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle"], "FLOAT", "FLOAT", "FLOAT", "FLOAT", "INT", "FLOAT", "INT", "INT", "INT", "INT", ["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"], "FLOAT"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["ipa_model", "ipa_wtype", "ipa_weight", "ipa_noise", "ipa_start", "ipa_end", "tile_short", "tile_weight", "zoom", "offset_w", "offset_h", "prepare_type", "prepare_intpol", "prepare_sharpening"], "name": "IP Adapter Tiled Settings Pipe (JPS)", "display_name": "IP Adapter Tiled Settings Pipe (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Pipes", "output_node": false}, "InstantID Pipe (JPS)": {"input": {"required": {"instantid_settings": ["BASIC_PIPE"]}}, "input_order": {"required": ["instantid_settings"]}, "output": ["FLOAT", "FLOAT", "FLOAT", "FLOAT", "FLOAT"], "output_is_list": [false, false, false, false, false], "output_name": ["ip_weight", "cn_strength", "noise", "start", "end"], "name": "InstantID Pipe (JPS)", "display_name": "InstantID Pipe (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Pipes", "output_node": false}, "Image Prepare Pipe (JPS)": {"input": {"required": {"imageprepare_settings": ["BASIC_PIPE"]}}, "input_order": {"required": ["imageprepare_settings"]}, "output": ["INT", "INT", "INT", "INT", "INT", "INT", "INT", "INT", "INT", "INT", ["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"], "FLOAT"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["offset_width", "offset_height", "crop_left", "crop_right", "crop_top", "crop_bottom", "padding_left", "padding_right", "padding_top", "padding_bottom", "interpolation", "sharpening"], "name": "Image Prepare Pipe (JPS)", "display_name": "Image Prepare Pipe (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Pipes", "output_node": false}, "InstantID Source Prepare Pipe (JPS)": {"input": {"required": {"imageprepare_settings": ["BASIC_PIPE"]}}, "input_order": {"required": ["imageprepare_settings"]}, "output": ["INT", "INT", "INT", "INT", "INT", "INT", "INT", ["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"], "FLOAT", ["No", "X-Axis", "Y-Axis"]], "output_is_list": [false, false, false, false, false, false, false, false, false, false], "output_name": ["resize_to", "offset_width", "offset_height", "crop_left", "crop_right", "crop_top", "crop_bottom", "interpolation", "sharpening", "flip"], "name": "InstantID Source Prepare Pipe (JPS)", "display_name": "InstantID Source Prepare Pipe (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Pipes", "output_node": false}, "InstantID Pose Prepare Pipe (JPS)": {"input": {"required": {"imageprepare_settings": ["BASIC_PIPE"]}}, "input_order": {"required": ["imageprepare_settings"]}, "output": ["INT", "INT", "INT", "INT", "INT", "INT", "INT", "INT", "INT", "INT", "INT", ["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"], "FLOAT", ["No", "X-Axis", "Y-Axis"]], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["resize_to", "offset_width", "offset_height", "crop_left", "crop_right", "crop_top", "crop_bottom", "padding_left", "padding_right", "padding_top", "padding_bottom", "interpolation", "sharpening", "flip"], "name": "InstantID Pose Prepare Pipe (JPS)", "display_name": "InstantID Pose Prepare Pipe (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Pipes", "output_node": false}, "InstantID Mask Prepare Pipe (JPS)": {"input": {"required": {"imageprepare_settings": ["BASIC_PIPE"]}}, "input_order": {"required": ["imageprepare_settings"]}, "output": ["INT", "INT", ["Crop", "Stretch"], "INT", "INT", "INT", "INT", "INT", "INT", "INT", "INT", "INT", "INT", ["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"], "FLOAT"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["mask_type", "resize_to", "resize_type", "offset_width", "offset_height", "crop_left", "crop_right", "crop_top", "crop_bottom", "padding_left", "padding_right", "padding_top", "padding_bottom", "interpolation", "sharpening"], "name": "InstantID Mask Prepare Pipe (JPS)", "display_name": "InstantID Mask Prepare Pipe (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Pipes", "output_node": false}, "Revision Settings Pipe (JPS)": {"input": {"required": {"revision_settings": ["BASIC_PIPE"]}}, "input_order": {"required": ["revision_settings"]}, "output": ["INT", ["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"], ["center", "top", "bottom", "left", "right"], "INT", ["center", "top", "bottom", "left", "right"], "INT", "FLOAT", "FLOAT", "FLOAT", "FLOAT"], "output_is_list": [false, false, false, false, false, false, false, false, false, false], "output_name": ["crop_res", "crop_intpol", "rev1_crop", "rev1_offset", "rev2_crop", "rev2_offset", "rev1_strength", "rev2_strength", "rev1_noiseaug", "rev2_noiseaug"], "name": "Revision Settings Pipe (JPS)", "display_name": "Revision Settings Pipe (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Pipes", "output_node": false}, "SDXL Fundamentals MultiPipe (JPS)": {"input": {"required": {}, "optional": {"vae": ["VAE"], "model_base": ["MODEL"], "model_refiner": ["MODEL"], "clip_base": ["CLIP"], "clip_refiner": ["CLIP"], "pos_base": ["CONDITIONING"], "neg_base": ["CONDITIONING"], "pos_refiner": ["CONDITIONING"], "neg_refiner": ["CONDITIONING"], "seed": ["INT", {}]}}, "input_order": {"required": [], "optional": ["vae", "model_base", "model_refiner", "clip_base", "clip_refiner", "pos_base", "neg_base", "pos_refiner", "neg_refiner", "seed"]}, "output": ["VAE", "MODEL", "MODEL", "CLIP", "CLIP", "CONDITIONING", "CONDITIONING", "CONDITIONING", "CONDITIONING", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false, false], "output_name": ["vae", "model_base", "model_refiner", "clip_base", "clip_refiner", "pos_base", "neg_base", "pos_refiner", "neg_refiner", "seed"], "name": "SDXL Fundamentals MultiPipe (JPS)", "display_name": "SDXL Fundamentals MultiPipe (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Pipes", "output_node": false}, "Images Masks MultiPipe (JPS)": {"input": {"required": {}, "optional": {"generation_img": ["IMAGE"], "generation_mask": ["MASK"], "ipa1_img": ["IMAGE"], "ipa2_img": ["IMAGE"], "ipa1_mask": ["MASK"], "ipa2_mask": ["MASK"], "revision1_img": ["IMAGE"], "revision2_img": ["IMAGE"], "inpaint_model": ["MODEL"]}}, "input_order": {"required": [], "optional": ["generation_img", "generation_mask", "ipa1_img", "ipa2_img", "ipa1_mask", "ipa2_mask", "revision1_img", "revision2_img", "inpaint_model"]}, "output": ["IMAGE", "MASK", "IMAGE", "IMAGE", "MASK", "MASK", "IMAGE", "IMAGE", "MODEL"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["generation_img", "generation_mask", "ipa1_img", "ipa2_img", "ipa1_mask", "ipa2_mask", "revision1_img", "revision2_img", "inpaint_model"], "name": "Images Masks MultiPipe (JPS)", "display_name": "Images Masks MultiPipe (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Pipes", "output_node": false}, "SDXL Recommended Resolution Calc (JPS)": {"input": {"required": {"target_width": ["INT", {"default": 1024, "min": 0, "max": 8192, "step": 2}], "target_height": ["INT", {"default": 1024, "min": 0, "max": 8192, "step": 2}]}}, "input_order": {"required": ["target_width", "target_height"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["SDXL_width", "SDXL_height"], "name": "SDXL Recommended Resolution Calc (JPS)", "display_name": "SDXL Recommended Resolution Calc (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Math", "output_node": false}, "Resolution Multiply (JPS)": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 256, "max": 8192, "step": 16}], "height": ["INT", {"default": 1024, "min": 256, "max": 8192, "step": 16}], "factor": ["INT", {"default": 2, "min": 1, "max": 8, "step": 1}]}}, "input_order": {"required": ["width", "height", "factor"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["width_resized", "height_resized"], "name": "Resolution Multiply (JPS)", "display_name": "Resolution Multiply (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Math", "output_node": false}, "Largest Int (JPS)": {"input": {"required": {"int_a": ["INT", {"default": 1}], "int_b": ["INT", {"default": 1}]}}, "input_order": {"required": ["int_a", "int_b"]}, "output": ["INT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["larger_int", "smaller_int", "is_a_larger"], "name": "Largest Int (JPS)", "display_name": "Largest Int (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Math", "output_node": false}, "Multiply Int Int (JPS)": {"input": {"required": {"int_a": ["INT", {"default": 1}], "int_b": ["INT", {"default": 1}]}}, "input_order": {"required": ["int_a", "int_b"]}, "output": ["INT", "FLOAT"], "output_is_list": [false, false], "output_name": ["int_multiply", "float_multiply"], "name": "Multiply Int Int (JPS)", "display_name": "Multiply Int Int (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Math", "output_node": false}, "Multiply Int Float (JPS)": {"input": {"required": {"int_a": ["INT", {"default": 1}], "float_b": ["FLOAT", {"default": 1}]}}, "input_order": {"required": ["int_a", "float_b"]}, "output": ["INT", "FLOAT"], "output_is_list": [false, false], "output_name": ["int_multiply", "float_multiply"], "name": "Multiply Int Float (JPS)", "display_name": "Multiply Int Float (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Math", "output_node": false}, "Multiply Float Float (JPS)": {"input": {"required": {"float_a": ["FLOAT", {"default": 1}], "float_b": ["FLOAT", {"default": 1}]}}, "input_order": {"required": ["float_a", "float_b"]}, "output": ["INT", "FLOAT"], "output_is_list": [false, false], "output_name": ["int_multiply", "float_multiply"], "name": "Multiply Float Float (JPS)", "display_name": "Multiply Float Float (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Math", "output_node": false}, "Substract Int Int (JPS)": {"input": {"required": {"int_a": ["INT", {"default": 1}], "int_b": ["INT", {"default": 1}]}}, "input_order": {"required": ["int_a", "int_b"]}, "output": ["INT", "FLOAT"], "output_is_list": [false, false], "output_name": ["int_substract", "float_substract"], "name": "Substract Int Int (JPS)", "display_name": "Substract Int Int (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Math", "output_node": false}, "Text Concatenate (JPS)": {"input": {"required": {"delimiter": [["none", "space", "comma"]]}, "optional": {"text1": ["STRING", {"forceInput": true}], "text2": ["STRING", {"forceInput": true}], "text3": ["STRING", {"forceInput": true}], "text4": ["STRING", {"forceInput": true}], "text5": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["delimiter"], "optional": ["text1", "text2", "text3", "text4", "text5"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "Text Concatenate (JPS)", "display_name": "Text Concatenate (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Text", "output_node": false}, "Get Date Time String (JPS)": {"input": {"required": {"style": [["%Y%m%d%H%M%S", "%Y%m%d%H%M", "%Y%m%d", "%Y-%m-%d-%H_%M_%S", "%Y-%m-%d-%H_%M", "%Y-%m-%d", "%Y-%m-%d %H_%M_%S", "%Y-%m-%d %H_%M", "%Y-%m-%d", "%H%M", "%H%M%S", "%H_%M", "%H_%M_%S"]]}}, "input_order": {"required": ["style"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["time_format"], "name": "Get Date Time String (JPS)", "display_name": "Get Date Time String (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Text", "output_node": false}, "Get Image Size (JPS)": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["width", "height"], "name": "Get Image Size (JPS)", "display_name": "Get Image Size (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Image", "output_node": false}, "Crop Image Square (JPS)": {"input": {"required": {"image": ["IMAGE"], "crop_position": [["center", "top", "bottom", "left", "right"]], "offset_x": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1, "display": "number"}], "offset_y": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1, "display": "number"}], "zoom": ["FLOAT", {"default": 1, "min": 1, "max": 5, "step": 0.1, "display": "number"}], "interpolation": [["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"]], "target_rez": ["INT", {"default": 0, "min": 0, "step": 8, "display": "number"}], "sharpening": ["FLOAT", {"default": 0.0, "min": 0, "max": 1, "step": 0.05}]}}, "input_order": {"required": ["image", "crop_position", "offset_x", "offset_y", "zoom", "interpolation", "target_rez", "sharpening"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Crop Image Square (JPS)", "display_name": "Crop Image Square (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Image", "output_node": false}, "Crop Image TargetSize (JPS)": {"input": {"required": {"image": ["IMAGE"], "target_w": ["INT", {"default": 0, "min": 0, "step": 8, "display": "number"}], "target_h": ["INT", {"default": 0, "min": 0, "step": 8, "display": "number"}], "crop_position": [["center", "top", "bottom", "left", "right"]], "offset": ["INT", {"default": 0, "min": -2048, "max": 2048, "step": 1, "display": "number"}], "interpolation": [["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"]], "sharpening": ["FLOAT", {"default": 0.0, "min": 0, "max": 1, "step": 0.05}]}}, "input_order": {"required": ["image", "target_w", "target_h", "crop_position", "offset", "interpolation", "sharpening"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Crop Image TargetSize (JPS)", "display_name": "Crop Image TargetSize (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Image", "output_node": false}, "Prepare Image (JPS)": {"input": {"required": {"image": ["IMAGE"], "target_w": ["INT", {"default": 1024, "min": 0, "step": 8, "display": "number"}], "target_h": ["INT", {"default": 1024, "min": 0, "step": 8, "display": "number"}], "crop_w_percent": ["INT", {"default": 100, "min": 10, "max": 100, "step": 1, "display": "number"}], "crop_h_percent": ["INT", {"default": 100, "min": 10, "max": 100, "step": 1, "display": "number"}], "offset_w": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1, "display": "number"}], "offset_h": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1, "display": "number"}], "interpolation": [["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"]], "sharpening": ["FLOAT", {"default": 0.0, "min": 0, "max": 1, "step": 0.05}]}}, "input_order": {"required": ["image", "target_w", "target_h", "crop_w_percent", "crop_h_percent", "offset_w", "offset_h", "interpolation", "sharpening"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Prepare Image (JPS)", "display_name": "Prepare Image (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Image", "output_node": false}, "Prepare Image Plus (JPS)": {"input": {"required": {"image": ["IMAGE"], "target_w": ["INT", {"default": 1024, "min": 0, "step": 8, "display": "number"}], "target_h": ["INT", {"default": 1024, "min": 0, "step": 8, "display": "number"}], "offset_w": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1, "display": "number"}], "offset_h": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1, "display": "number"}], "crop_left": ["INT", {"default": 0, "min": 0, "max": 90, "step": 1, "display": "number"}], "crop_right": ["INT", {"default": 0, "min": 0, "max": 90, "step": 1, "display": "number"}], "crop_top": ["INT", {"default": 0, "min": 0, "max": 90, "step": 1, "display": "number"}], "crop_bottom": ["INT", {"default": 0, "min": 0, "max": 90, "step": 1, "display": "number"}], "padding_left": ["INT", {"default": 0, "min": 0, "max": 500, "step": 1, "display": "number"}], "padding_right": ["INT", {"default": 0, "min": 0, "max": 500, "step": 1, "display": "number"}], "padding_top": ["INT", {"default": 0, "min": 0, "max": 500, "step": 1, "display": "number"}], "padding_bottom": ["INT", {"default": 0, "min": 0, "max": 500, "step": 1, "display": "number"}], "interpolation": [["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"]], "sharpening": ["FLOAT", {"default": 0.0, "min": 0, "max": 1, "step": 0.05}], "resize_type": [["Crop", "Stretch"]], "flip": [["No", "X-Axis", "Y-Axis"]]}}, "input_order": {"required": ["image", "target_w", "target_h", "offset_w", "offset_h", "crop_left", "crop_right", "crop_top", "crop_bottom", "padding_left", "padding_right", "padding_top", "padding_bottom", "interpolation", "sharpening", "resize_type", "flip"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Prepare Image Plus (JPS)", "display_name": "Prepare Image Plus (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Image", "output_node": false}, "Prepare Image Tiled IPA (JPS)": {"input": {"required": {"image": ["IMAGE"], "target_w": ["INT", {"default": 0, "min": 0, "step": 8, "display": "number"}], "target_h": ["INT", {"default": 0, "min": 0, "step": 8, "display": "number"}], "zoom": ["INT", {"default": 1.0, "min": 1, "max": 500, "step": 1}], "offset_w": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1, "display": "number"}], "offset_h": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1, "display": "number"}], "interpolation": [["lanczos", "nearest", "bilinear", "bicubic", "area", "nearest-exact"]], "sharpening": ["FLOAT", {"default": 0.0, "min": 0, "max": 1, "step": 0.05}], "tile_short": ["INT", {"default": 2.0, "min": 1, "max": 5, "step": 1}], "prepare_type": ["INT", {"default": 1, "min": 1, "max": 9, "step": 1}]}}, "input_order": {"required": ["image", "target_w", "target_h", "zoom", "offset_w", "offset_h", "interpolation", "sharpening", "tile_short", "prepare_type"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Prepare Image Tiled IPA (JPS)", "display_name": "Prepare Image Tiled IPA (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Image", "output_node": false}, "SDXL Prompt Styler (JPS)": {"input": {"required": {"text_positive_g": ["STRING", {"default": "", "multiline": true, "dynamicPrompts": true}], "text_positive_l": ["STRING", {"default": "", "multiline": true, "dynamicPrompts": true}], "text_negative": ["STRING", {"default": "", "multiline": true, "dynamicPrompts": true}], "artist": [["Lois van Baarle", "Anne Bachelier", "Shigeru Ban", "Clive Barker", "Carl Barks", "Matthew Barney", "Paul Barson", "Bo Bartlett", "Xu Beihong", "Thomas Hart Benton", "Stan Berenstain", "John Berkey", "Ruth Bernhard", "Butcher Billy", "Rachel Bingaman", "Anna Bocek", "Franck Bohbot", "Chesley Bonestell", "Aleksi Briclot", "Margaret Brundage", "Christopher Bucklow", "Charles E Burchfield", "Alejandro Burdisio", "Tim Burton", "James Lee Byars", "Bob Byerley", "none", "Mike Dargas", "Craig Davison", "Gabriel Dawe", "Wim Delvoye", "Aron Demetz", "George Digalakis", "Evgeni Dinev", "Anna Dittmann", "Tom Dixon", "Dima Dmitriev", "Terry Dodson", "Anita Dongre", "Stanley Donwood", "Tim Doyle", "Alberto Dros", "Jessica Drossin", "TJ Drysdale", "Mac Duggal", "Chris Dunn", "Jessica Durrant", "Chad Dutson", "Ryan Dyar", "Chris Dyer", "Camilla d'Errico", "Philip Lorca diCorcia", "Clyde Caldwell", "Al Capp", "Larry Carlson", "Keith Carter", "Hussein Chalayan", "Tom Chambers", "Katia Chausheva", "Howard Chaykin", "Bo Chen", "Carey Chen", "Hsiao Ron Cheng", "Michael Cheval", "Cliff Chiang", "Doug Chiang", "Judy Chicago", "Dale Chihuly", "Peter Chilelli", "Giorgio de Chirico", "Michael Cho", "Michael Cinco", "Amanda Clark", "Becky Cloonan", "Daniel Clowes", "Gregory Colbert", "Eddie Colla", "Darwyn Cooke", "Nigel Cooke", "Nicholas Alan Cope", "Peter Coulson", "Guido Crepax", "PJ Crook", "Etam Cru", "Robert Crumb", "Eyvind Earle", "Lori Earley", "Michael Eastman", "Tristan Eaton", "Janet Echelman", "Harold Edgerton", "Jason Edmiston", "Les Edwards", "Bob Eggleton", "Fritz Eichenberg", "Will Eisner", "Olafur Eliasson", "Christine Ellger", "Peter Elson", "Gil Elvgren", "Ron Embleton", "Ed Emshwiller", "Daria Endresen", "Ron English", "MC Escher", "Norman Ackroyd", "Reem Acra", "Neal Adams", "Ansel Adams", "Josh Adamski", "Marc Adamus", "Alena Aenami", "David Aja", "Miles Aldridge", "Pablo Amaringo", "Wes Anderson", "Esao Andrews", "Miss Aniela", "Martin Ansin", "Sergio Aragone\u0301s", "Diane Arbus", "Mark Arian", "Peter Arno", "Daniel Arsham", "Miki Asai", "Ruth Asawa", "Clemens Ascher"]], "movie": [["none", "2001 - A Space Odyssey", "300", "A.I.", "Akira", "Am\u00e9lie", "Avatar", "Black Swan", "Blade Runner 2049", "Blue Velvet", "Brazil", "The Cell", "Dark City", "Django Unchained", "Dune (2021)", "Ex Machina", "Eyes Wide Shut", "The Fall", "The Fountain", "Gattaca", "The Grand Budapest Hotel", "Hero", "Inception", "In the Mood for Love", "Kill Bill", "Life of Pi", "The Lord of the Rings", "Mad Max - Fury Road", "The Matrix", "Melancholia", "Metropolis", "Moulin Rouge", "Neon Demon", "Parasite", "Sin City", "Spider-Man - Into the Spider-Verse", "Spirited Away", "Tron Legacy", "V for Vendetta", "What Dreams May Come"]], "style": [["sai-3d-model", "sai-analog film", "sai-anime", "sai-cinematic", "sai-comic book", "sai-craft clay", "sai-digital art", "sai-enhance", "sai-fantasy art", "sai-isometric", "sai-line art", "sai-lowpoly", "sai-neonpunk", "sai-origami", "sai-photographic", "sai-pixel art", "sai-texture", "none", "Dystopian", "Film Noir", "Gothic", "Horror", "Hyperrealism", "Manga", "Neon Noir", "Paper Mache", "Papercut Shadow Box", "Papercut Stacked", "Silhouette", "Techwear Fashion"]], "fooocus_enhance": [["OFF", "ON"]], "fooocus_negative": [["OFF", "ON"]], "universal_negative": [["OFF", "ON"]]}}, "input_order": {"required": ["text_positive_g", "text_positive_l", "text_negative", "artist", "movie", "style", "fooocus_enhance", "fooocus_negative", "universal_negative"]}, "output": ["STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["text_positive_g", "text_positive_l", "text_positive", "text_negative"], "name": "SDXL Prompt Styler (JPS)", "display_name": "SDXL Prompt Styler (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Style", "output_node": false}, "SDXL Prompt Handling (JPS)": {"input": {"required": {"handling": [["Copy to Both if Empty", "Use Positive_G + Positive_L", "Copy Positive_G to Both", "Copy Positive_L to Both", "Ignore Positive_G Input", "Ignore Positive_L Input", "Combine Positive_G + Positive_L", "Combine Positive_L + Positive_G"]], "pos_g": ["STRING", {"default": ""}], "pos_l": ["STRING", {"default": ""}]}}, "input_order": {"required": ["handling", "pos_g", "pos_l"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["pos_g", "pos_l"], "name": "SDXL Prompt Handling (JPS)", "display_name": "SDXL Prompt Handling (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Text", "output_node": false}, "SDXL Prompt Handling Plus (JPS)": {"input": {"required": {"handling": [["Copy to Both if Empty", "Use Positive_G + Positive_L", "Copy Positive_G to Both", "Copy Positive_L to Both", "Ignore Positive_G Input", "Ignore Positive_L Input", "Combine Positive_G + Positive_L", "Combine Positive_L + Positive_G"]], "pos_g": ["STRING", {"multiline": true, "placeholder": "Prompt Text pos_g", "dynamicPrompts": true}], "pos_l": ["STRING", {"multiline": true, "placeholder": "Prompt Text pos_l", "dynamicPrompts": true}]}}, "input_order": {"required": ["handling", "pos_g", "pos_l"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["pos_g", "pos_l"], "name": "SDXL Prompt Handling Plus (JPS)", "display_name": "SDXL Prompt Handling Plus (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Text", "output_node": false}, "Text Prompt (JPS)": {"input": {"required": {"text": ["STRING", {"multiline": true, "placeholder": "Prompt Text", "dynamicPrompts": true}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "Text Prompt (JPS)", "display_name": "Text Prompt (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Text", "output_node": false}, "Text Prompt Combo (JPS)": {"input": {"required": {"pos": ["STRING", {"multiline": true, "placeholder": "Prompt Text Positive", "dynamicPrompts": true}], "neg": ["STRING", {"multiline": true, "placeholder": "Prompt Text Negative", "dynamicPrompts": true}]}}, "input_order": {"required": ["pos", "neg"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["pos", "neg"], "name": "Text Prompt Combo (JPS)", "display_name": "Text Prompt Combo (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Text", "output_node": false}, "Save Images Plus (JPS)": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["dummy_out"], "name": "Save Images Plus (JPS)", "display_name": "Save Images Plus (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/IO", "output_node": true}, "CLIPTextEncode SDXL Plus (JPS)": {"input": {"required": {"width": ["INT", {"default": 1024.0, "min": 0, "max": 12288}], "height": ["INT", {"default": 1024.0, "min": 0, "max": 12288}], "res_factor": ["INT", {"default": 4, "min": 1, "max": 8}], "text_pos": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": true}], "text_neg": ["STRING", {"multiline": true, "default": "", "dynamicPrompts": true}], "clip": ["CLIP"]}}, "input_order": {"required": ["width", "height", "res_factor", "text_pos", "text_neg", "clip"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["cond_pos", "cond_neg"], "name": "CLIPTextEncode SDXL Plus (JPS)", "display_name": "CLIPTextEncode SDXL Plus (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Conditioning", "output_node": false}, "Time Seed (JPS)": {"input": {"required": {"fixed_seed": ["INT", {"default": 0, "min": 0, "max": 99999999999, "step": 1}]}}, "input_order": {"required": ["fixed_seed"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["seed"], "name": "Time Seed (JPS)", "display_name": "Time Seed (JPS)", "description": "", "python_module": "custom_nodes.ComfyUI_JPS-Nodes", "category": "JPS Nodes/Text", "output_node": false}, "UltimateSDUpscale": {"input": {"required": {"image": ["IMAGE"], "model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "upscale_by": ["FLOAT", {"default": 2, "min": 0.05, "max": 4, "step": 0.05}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "step": 1}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "denoise": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.01}], "upscale_model": ["UPSCALE_MODEL"], "mode_type": [["Linear", "Chess", "None"]], "tile_width": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 8}], "tile_height": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 8}], "mask_blur": ["INT", {"default": 8, "min": 0, "max": 64, "step": 1}], "tile_padding": ["INT", {"default": 32, "min": 0, "max": 8192, "step": 8}], "seam_fix_mode": [["None", "Band Pass", "Half Tile", "Half Tile + Intersections"]], "seam_fix_denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "seam_fix_width": ["INT", {"default": 64, "min": 0, "max": 8192, "step": 8}], "seam_fix_mask_blur": ["INT", {"default": 8, "min": 0, "max": 64, "step": 1}], "seam_fix_padding": ["INT", {"default": 16, "min": 0, "max": 8192, "step": 8}], "force_uniform_tiles": ["BOOLEAN", {"default": true}], "tiled_decode": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "model", "positive", "negative", "vae", "upscale_by", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "upscale_model", "mode_type", "tile_width", "tile_height", "mask_blur", "tile_padding", "seam_fix_mode", "seam_fix_denoise", "seam_fix_width", "seam_fix_mask_blur", "seam_fix_padding", "force_uniform_tiles", "tiled_decode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "UltimateSDUpscale", "display_name": "Ultimate SD Upscale", "description": "", "python_module": "custom_nodes.ComfyUI_UltimateSDUpscale", "category": "image/upscaling", "output_node": false}, "UltimateSDUpscaleNoUpscale": {"input": {"required": {"upscaled_image": ["IMAGE"], "model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "step": 1}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "denoise": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.01}], "mode_type": [["Linear", "Chess", "None"]], "tile_width": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 8}], "tile_height": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 8}], "mask_blur": ["INT", {"default": 8, "min": 0, "max": 64, "step": 1}], "tile_padding": ["INT", {"default": 32, "min": 0, "max": 8192, "step": 8}], "seam_fix_mode": [["None", "Band Pass", "Half Tile", "Half Tile + Intersections"]], "seam_fix_denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "seam_fix_width": ["INT", {"default": 64, "min": 0, "max": 8192, "step": 8}], "seam_fix_mask_blur": ["INT", {"default": 8, "min": 0, "max": 64, "step": 1}], "seam_fix_padding": ["INT", {"default": 16, "min": 0, "max": 8192, "step": 8}], "force_uniform_tiles": ["BOOLEAN", {"default": true}], "tiled_decode": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["upscaled_image", "model", "positive", "negative", "vae", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "mode_type", "tile_width", "tile_height", "mask_blur", "tile_padding", "seam_fix_mode", "seam_fix_denoise", "seam_fix_width", "seam_fix_mask_blur", "seam_fix_padding", "force_uniform_tiles", "tiled_decode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "UltimateSDUpscaleNoUpscale", "display_name": "Ultimate SD Upscale (No Upscale)", "description": "", "python_module": "custom_nodes.ComfyUI_UltimateSDUpscale", "category": "image/upscaling", "output_node": false}, "UltimateSDUpscaleCustomSample": {"input": {"required": {"image": ["IMAGE"], "model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "upscale_by": ["FLOAT", {"default": 2, "min": 0.05, "max": 4, "step": 0.05}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "step": 1}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "denoise": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.01}], "mode_type": [["Linear", "Chess", "None"]], "tile_width": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 8}], "tile_height": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 8}], "mask_blur": ["INT", {"default": 8, "min": 0, "max": 64, "step": 1}], "tile_padding": ["INT", {"default": 32, "min": 0, "max": 8192, "step": 8}], "seam_fix_mode": [["None", "Band Pass", "Half Tile", "Half Tile + Intersections"]], "seam_fix_denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "seam_fix_width": ["INT", {"default": 64, "min": 0, "max": 8192, "step": 8}], "seam_fix_mask_blur": ["INT", {"default": 8, "min": 0, "max": 64, "step": 1}], "seam_fix_padding": ["INT", {"default": 16, "min": 0, "max": 8192, "step": 8}], "force_uniform_tiles": ["BOOLEAN", {"default": true}], "tiled_decode": ["BOOLEAN", {"default": false}]}, "optional": {"upscale_model": ["UPSCALE_MODEL"], "custom_sampler": ["SAMPLER"], "custom_sigmas": ["SIGMAS"]}}, "input_order": {"required": ["image", "model", "positive", "negative", "vae", "upscale_by", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "mode_type", "tile_width", "tile_height", "mask_blur", "tile_padding", "seam_fix_mode", "seam_fix_denoise", "seam_fix_width", "seam_fix_mask_blur", "seam_fix_padding", "force_uniform_tiles", "tiled_decode"], "optional": ["upscale_model", "custom_sampler", "custom_sigmas"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "UltimateSDUpscaleCustomSample", "display_name": "Ultimate SD Upscale (Custom Sample)", "description": "", "python_module": "custom_nodes.ComfyUI_UltimateSDUpscale", "category": "image/upscaling", "output_node": false}, "Int": {"input": {"required": {"Number": ["STRING", {}]}}, "input_order": {"required": ["Number"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "Int", "display_name": "Int", "description": "", "python_module": "custom_nodes.ComfyLiterals", "category": "Literals", "output_node": false}, "Float": {"input": {"required": {"Number": ["STRING", {}]}}, "input_order": {"required": ["Number"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "Float", "display_name": "Float", "description": "", "python_module": "custom_nodes.ComfyLiterals", "category": "Literals", "output_node": false}, "String": {"input": {"required": {"String": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["String"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "String", "display_name": "String", "description": "", "python_module": "custom_nodes.ComfyLiterals", "category": "Literals", "output_node": false}, "KepStringLiteral": {"input": {"required": {"String": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["String"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "KepStringLiteral", "display_name": "String", "description": "", "python_module": "custom_nodes.ComfyLiterals", "category": "Literals", "output_node": false}, "Operation": {"input": {"required": {"A Type": [["Int", "Float"]], "B Type": [["Int", "Float"]], "Operation": [["A+B", "A-B", "A*B", "A/B"]]}, "optional": {"A - Int": ["INT", {"forceInput": true}], "A - Float": ["FLOAT", {"forceInput": true}], "B - Int": ["INT", {"forceInput": true}], "B - Float": ["FLOAT", {"forceInput": true}]}}, "input_order": {"required": ["A Type", "B Type", "Operation"], "optional": ["A - Int", "A - Float", "B - Int", "B - Float"]}, "output": ["INT", "FLOAT"], "output_is_list": [false, false], "output_name": ["INT", "FLOAT"], "name": "Operation", "display_name": "Operation", "description": "", "python_module": "custom_nodes.ComfyLiterals", "category": "Literals", "output_node": false}, "Checkpoint": {"input": {"required": {"literal": ["STRING", {"multiline": true, "default": "CRM.pth\nSUPIR-v0F.ckpt\nSUPIR-v0Q.ckpt\ndisneyPixarCartoon_A.safetensors\ndisneyPixarCartoon_v10.safetensors\ndreamshaperXL_alpha2Xl10.safetensors\ndreamshaper_8.safetensors\ndynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors\nepicrealism_naturalSinRC1VAE.safetensors\nfenrisxlFlux_fenrisxlV18THLSDXL.safetensors\nflat2DAnimerge_v45Sharp.safetensors\nflux1-dev.safetensors\njuggernautXL_juggXIByRundiffusion.safetensors\njuggernautXL_v9Rdphoto2Lightning.safetensors\njuggernaut_reborn.safetensors\nphotonLCM_v10.safetensors\nphoton_v1.safetensors\nrealisticVisionV60B1_v51HyperVAE.safetensors\nrealvisxlV50_v50LightningBakedvae.safetensors\nsdXL_v10VAEFix.safetensors\nturbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors\nwildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"}]}}, "input_order": {"required": ["literal"]}, "output": ["*"], "output_is_list": [true], "output_name": ["Selected Checkpoints"], "name": "Checkpoint", "display_name": "Checkpoint", "description": "", "python_module": "custom_nodes.ComfyLiterals", "category": "List Stuff", "output_node": false}, "Lora": {"input": {"required": {"literal": ["STRING", {"multiline": true, "default": "AnimateLCM_sd15_t2v_lora.safetensors\nBending_Illustartion-000007.safetensors\nBending_Illustartion-000010.safetensors\nBending_Illustartion-000014.safetensors\nCPA.safetensors\nKodak Motion Picture Film Style v5_2.safetensors\nLego_XL_v2.1.safetensors\nPixarXL.safetensors\nRW_PS1v1.safetensors\nRW_pixelart_XL_v1.safetensors\nRetro_Comic_Flux_v1_renderartist.safetensors\nSDXL-Lightning/sdxl_lightning_2step_lora.safetensors\nVivid Midjourney mimic - XL SDXL v2.0.safetensors\nadd_detail.safetensors\nanime_lora_comfy_converted.safetensors\ndisney_lora_comfy_converted.safetensors\nflux_realism_lora.safetensors\nflux_spirited_away.safetensors\nfurry_lora.safetensors\nhouse_architecture_Exterior_SDlife_Chiasedamme.safetensors\nlcm/SD1.5/pytorch_lora_weights.safetensors\nlegody-v10.safetensors\nmoonies&glorpies_lora.safetensors\nmoonies_lora.safetensors\nmore_details.safetensors\npieter.safetensors\nps1_style_SDXL_v2.safetensors\nsdxl_lightning_4step_lora.safetensors\nv3_sd15_adapter.ckpt\nxl_more_art-full_v1.safetensors\nzavy-cntrst-sdxl.safetensors\nzyd232_Ink_Style_Flux1D_v1_1.safetensors"}]}}, "input_order": {"required": ["literal"]}, "output": ["*"], "output_is_list": [true], "output_name": ["Selected Loras"], "name": "Lora", "display_name": "Lora", "description": "", "python_module": "custom_nodes.ComfyLiterals", "category": "List Stuff", "output_node": false}, "Mask By Text": {"input": {"required": {"image": ["IMAGE"], "prompt": ["STRING", {"multiline": true}], "negative_prompt": ["STRING", {"multiline": true}], "precision": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "normalize": [["no", "yes"]]}}, "input_order": {"required": ["image", "prompt", "negative_prompt", "precision", "normalize"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["thresholded_mask", "raw_mask"], "name": "Mask By Text", "display_name": "Mask By Text", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "Mask Morphology": {"input": {"required": {"image": ["IMAGE"], "distance": ["INT", {"default": 5, "min": 0, "max": 128, "step": 1}], "op": [["dilate", "erode", "open", "close"]]}}, "input_order": {"required": ["image", "distance", "op"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Mask Morphology", "display_name": "Mask Morphology", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "Combine Masks": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "op": [["union (max)", "intersection (min)", "difference", "multiply", "multiply_alpha", "add", "greater_or_equal", "greater"]], "clamp_result": [["yes", "no"]], "round_result": [["no", "yes"]]}}, "input_order": {"required": ["image1", "image2", "op", "clamp_result", "round_result"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Combine Masks", "display_name": "Combine Masks", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "Unary Mask Op": {"input": {"required": {"image": ["IMAGE"], "op": [["invert", "average", "round", "clamp", "abs"]]}}, "input_order": {"required": ["image", "op"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Unary Mask Op", "display_name": "Unary Mask Op", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "Unary Image Op": {"input": {"required": {"image": ["IMAGE"], "op": [["invert", "average", "round", "clamp", "abs"]]}}, "input_order": {"required": ["image", "op"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Unary Image Op", "display_name": "Unary Image Op", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "Blur": {"input": {"required": {"image": ["IMAGE"], "radius": ["INT", {"default": 10, "min": 0, "max": 48, "step": 1}], "sigma_factor": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 3.0, "step": 0.01}]}}, "input_order": {"required": ["image", "radius", "sigma_factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Blur", "display_name": "Blur", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "Image To Mask": {"input": {"required": {"image": ["IMAGE"], "method": [["intensity", "alpha"]]}}, "input_order": {"required": ["image", "method"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "Image To Mask", "display_name": "Image To Mask", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "Mix Images By Mask": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "mask": ["IMAGE"]}}, "input_order": {"required": ["image1", "image2", "mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Mix Images By Mask", "display_name": "Mix Images By Mask", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "Mix Color By Mask": {"input": {"required": {"image": ["IMAGE"], "r": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "g": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "b": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "mask": ["IMAGE"]}}, "input_order": {"required": ["image", "r", "g", "b", "mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Mix Color By Mask", "display_name": "Mix Color By Mask", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "Mask To Region": {"input": {"required": {"mask": ["IMAGE"], "padding": ["INT", {"default": 0, "min": 0, "max": 1048576, "step": 1}], "constraints": [["keep_ratio", "keep_ratio_divisible", "multiple_of", "ignore"]], "constraint_x": ["INT", {"default": 64, "min": 2, "max": 1048576, "step": 1}], "constraint_y": ["INT", {"default": 64, "min": 2, "max": 1048576, "step": 1}], "min_width": ["INT", {"default": 0, "min": 0, "max": 1048576, "step": 1}], "min_height": ["INT", {"default": 0, "min": 0, "max": 1048576, "step": 1}], "batch_behavior": [["match_ratio", "match_size"]]}}, "input_order": {"required": ["mask", "padding", "constraints", "constraint_x", "constraint_y", "min_width", "min_height", "batch_behavior"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Mask To Region", "display_name": "Mask To Region", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "Cut By Mask": {"input": {"required": {"image": ["IMAGE"], "mask": ["IMAGE"], "force_resize_width": ["INT", {"default": 0, "min": 0, "max": 1048576, "step": 1}], "force_resize_height": ["INT", {"default": 0, "min": 0, "max": 1048576, "step": 1}]}, "optional": {"mask_mapping_optional": ["MASK_MAPPING"]}}, "input_order": {"required": ["image", "mask", "force_resize_width", "force_resize_height"], "optional": ["mask_mapping_optional"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Cut By Mask", "display_name": "Cut By Mask", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "Paste By Mask": {"input": {"required": {"image_base": ["IMAGE"], "image_to_paste": ["IMAGE"], "mask": ["IMAGE"], "resize_behavior": [["resize", "keep_ratio_fill", "keep_ratio_fit", "source_size", "source_size_unmasked"]]}, "optional": {"mask_mapping_optional": ["MASK_MAPPING"]}}, "input_order": {"required": ["image_base", "image_to_paste", "mask", "resize_behavior"], "optional": ["mask_mapping_optional"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Paste By Mask", "display_name": "Paste By Mask", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "Get Image Size": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["width", "height"], "name": "Get Image Size", "display_name": "Get Image Size", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "Change Channel Count": {"input": {"required": {"image": ["IMAGE"], "kind": [["mask", "RGB", "RGBA"]]}}, "input_order": {"required": ["image", "kind"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Change Channel Count", "display_name": "Change Channel Count", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "Constant Mask": {"input": {"required": {"value": ["FLOAT", {"default": 0.0, "min": -8.0, "max": 8.0, "step": 0.01}], "explicit_height": ["INT", {"default": 0, "min": 0, "max": 1048576, "step": 1}], "explicit_width": ["INT", {"default": 0, "min": 0, "max": 1048576, "step": 1}]}, "optional": {"copy_image_size": ["IMAGE"]}}, "input_order": {"required": ["value", "explicit_height", "explicit_width"], "optional": ["copy_image_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Constant Mask", "display_name": "Constant Mask", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "Prune By Mask": {"input": {"required": {"image": ["IMAGE"], "mask": ["IMAGE"]}}, "input_order": {"required": ["image", "mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Prune By Mask", "display_name": "Prune By Mask", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "Separate Mask Components": {"input": {"required": {"mask": ["IMAGE"]}}, "input_order": {"required": ["mask"]}, "output": ["IMAGE", "MASK_MAPPING"], "output_is_list": [false, false], "output_name": ["mask", "mask_mappings"], "name": "Separate Mask Components", "display_name": "Separate Mask Components", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "Create Rect Mask": {"input": {"required": {"mode": [["percent", "pixels"]], "origin": [["topleft", "bottomleft", "topright", "bottomright"]], "x": ["FLOAT", {"default": 0, "min": 0, "max": 1048576, "step": 1}], "y": ["FLOAT", {"default": 0, "min": 0, "max": 1048576, "step": 1}], "width": ["FLOAT", {"default": 50, "min": 0, "max": 1048576, "step": 1}], "height": ["FLOAT", {"default": 50, "min": 0, "max": 1048576, "step": 1}], "image_width": ["INT", {"default": 512, "min": 64, "max": 1048576, "step": 64}], "image_height": ["INT", {"default": 512, "min": 64, "max": 1048576, "step": 64}]}, "optional": {"copy_image_size": ["IMAGE"]}}, "input_order": {"required": ["mode", "origin", "x", "y", "width", "height", "image_width", "image_height"], "optional": ["copy_image_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Create Rect Mask", "display_name": "Create Rect Mask", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "Make Image Batch": {"input": {"required": {"image1": ["IMAGE"]}, "optional": {"image2": ["IMAGE"], "image3": ["IMAGE"], "image4": ["IMAGE"], "image5": ["IMAGE"], "image6": ["IMAGE"]}}, "input_order": {"required": ["image1"], "optional": ["image2", "image3", "image4", "image5", "image6"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Make Image Batch", "display_name": "Make Image Batch", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "Create QR Code": {"input": {"required": {"text": ["STRING", {"multiline": true}], "size": ["INT", {"default": 512, "min": 64, "max": 4096, "step": 64}], "qr_version": ["INT", {"default": 1, "min": 1, "max": 40, "step": 1}], "error_correction": [["L", "M", "Q", "H"], {"default": "H"}], "box_size": ["INT", {"default": 10, "min": 1, "max": 100, "step": 1}], "border": ["INT", {"default": 4, "min": 0, "max": 100, "step": 1}]}}, "input_order": {"required": ["text", "size", "qr_version", "error_correction", "box_size", "border"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Create QR Code", "display_name": "Create QR Code", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "Convert Color Space": {"input": {"required": {"in_space": [["RGB", "HSV", "HSL"]], "out_space": [["RGB", "HSV", "HSL"]], "image": ["IMAGE"]}}, "input_order": {"required": ["in_space", "out_space", "image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Convert Color Space", "display_name": "Convert Color Space", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "MasqueradeIncrementer": {"input": {"required": {"seed": ["INT", {"default": 0, "min": -1, "max": 18446744073709551615, "step": 1}], "max_value": ["INT", {"default": 1, "min": 1, "max": 18446744073709551615, "step": 1}]}}, "input_order": {"required": ["seed", "max_value"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "MasqueradeIncrementer", "display_name": "Incrementer", "description": "", "python_module": "custom_nodes.masquerade-nodes-comfyui", "category": "Masquerade Nodes", "output_node": false}, "SAMLoader": {"input": {"required": {"model_name": [["sam_vit_b_01ec64.pth", "sam_vit_h_4b8939.pth", "sam_vit_l_0b3195.pth", "ESAM"], {"tooltip": "The detection accuracy varies depending on the SAM model. ESAM can only be used if ComfyUI-YoloWorld-EfficientSAM is installed."}], "device_mode": [["AUTO", "Prefer GPU", "CPU"], {"tooltip": "AUTO: Only applicable when a GPU is available. It temporarily loads the SAM_MODEL into VRAM only when the detection function is used.\nPrefer GPU: Tries to keep the SAM_MODEL on the GPU whenever possible. This can be used when there is sufficient VRAM available.\nCPU: Always loads only on the CPU."}]}}, "input_order": {"required": ["model_name", "device_mode"]}, "output": ["SAM_MODEL"], "output_is_list": [false], "output_name": ["SAM_MODEL"], "name": "SAMLoader", "display_name": "SAMLoader (Impact)", "description": "Load the SAM (Segment Anything) model. This can be used in places that utilize SAM detection functionality, such as SAMDetector or SimpleDetector.\nThe SAM detection functionality in Impact Pack must use the SAM_MODEL loaded through this node.", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack", "output_node": false}, "CLIPSegDetectorProvider": {"input": {"required": {"text": ["STRING", {"multiline": false, "tooltip": "Enter the targets to be detected, separated by commas"}], "blur": ["FLOAT", {"min": 0, "max": 15, "step": 0.1, "default": 7, "tooltip": "Blurs the detected mask"}], "threshold": ["FLOAT", {"min": 0, "max": 1, "step": 0.05, "default": 0.4, "tooltip": "Detects only areas that are certain above the threshold."}], "dilation_factor": ["INT", {"min": 0, "max": 10, "step": 1, "default": 4, "tooltip": "Dilates the detected mask."}]}}, "input_order": {"required": ["text", "blur", "threshold", "dilation_factor"]}, "output": ["BBOX_DETECTOR"], "output_is_list": [false], "output_name": ["BBOX_DETECTOR"], "name": "CLIPSegDetectorProvider", "display_name": "CLIPSegDetectorProvider", "description": "Provides a detection function using CLIPSeg, which generates masks based on text prompts.\nTo use this node, the CLIPSeg custom node must be installed.", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ONNXDetectorProvider": {"input": {"required": {"model_name": [["isnet-general-use.onnx"]]}}, "input_order": {"required": ["model_name"]}, "output": ["BBOX_DETECTOR"], "output_is_list": [false], "output_name": ["BBOX_DETECTOR"], "name": "ONNXDetectorProvider", "display_name": "ONNXDetectorProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack", "output_node": false}, "BitwiseAndMaskForEach": {"input": {"required": {"base_segs": ["SEGS"], "mask_segs": ["SEGS"]}}, "input_order": {"required": ["base_segs", "mask_segs"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "BitwiseAndMaskForEach", "display_name": "Pixelwise(SEGS & SEGS)", "description": "Retains only the overlapping areas between the masks included in base_segs and the mask regions of mask_segs. SEGS with no overlapping mask areas are filtered out.", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Operation", "output_node": false}, "SubtractMaskForEach": {"input": {"required": {"base_segs": ["SEGS"], "mask_segs": ["SEGS"]}}, "input_order": {"required": ["base_segs", "mask_segs"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "SubtractMaskForEach", "display_name": "Pixelwise(SEGS - SEGS)", "description": "Removes only the overlapping areas between the masks included in base_segs and the mask regions of mask_segs. SEGS with no overlapping mask areas are filtered out.", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Operation", "output_node": false}, "DetailerForEach": {"input": {"required": {"image": ["IMAGE"], "segs": ["SEGS"], "model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "guide_size": ["FLOAT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "noise_mask": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "force_inpaint": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "cycle": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"detailer_hook": ["DETAILER_HOOK"], "inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["image", "segs", "model", "clip", "vae", "guide_size", "guide_size_for", "max_size", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "denoise", "feather", "noise_mask", "force_inpaint", "wildcard", "cycle"], "optional": ["detailer_hook", "inpaint_model", "noise_mask_feather", "scheduler_func_opt"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "DetailerForEach", "display_name": "Detailer (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detailer", "output_node": false}, "DetailerForEachDebug": {"input": {"required": {"image": ["IMAGE"], "segs": ["SEGS"], "model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "guide_size": ["FLOAT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "noise_mask": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "force_inpaint": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "cycle": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"detailer_hook": ["DETAILER_HOOK"], "inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["image", "segs", "model", "clip", "vae", "guide_size", "guide_size_for", "max_size", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "denoise", "feather", "noise_mask", "force_inpaint", "wildcard", "cycle"], "optional": ["detailer_hook", "inpaint_model", "noise_mask_feather", "scheduler_func_opt"]}, "output": ["IMAGE", "IMAGE", "IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, true, true, true, true], "output_name": ["image", "cropped", "cropped_refined", "cropped_refined_alpha", "cnet_images"], "name": "DetailerForEachDebug", "display_name": "DetailerDebug (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detailer", "output_node": false}, "DetailerForEachPipe": {"input": {"required": {"image": ["IMAGE"], "segs": ["SEGS"], "guide_size": ["FLOAT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "noise_mask": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "force_inpaint": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "basic_pipe": ["BASIC_PIPE"], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "refiner_ratio": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0}], "cycle": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"detailer_hook": ["DETAILER_HOOK"], "refiner_basic_pipe_opt": ["BASIC_PIPE"], "inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["image", "segs", "guide_size", "guide_size_for", "max_size", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "feather", "noise_mask", "force_inpaint", "basic_pipe", "wildcard", "refiner_ratio", "cycle"], "optional": ["detailer_hook", "refiner_basic_pipe_opt", "inpaint_model", "noise_mask_feather", "scheduler_func_opt"]}, "output": ["IMAGE", "SEGS", "BASIC_PIPE", "IMAGE"], "output_is_list": [false, false, false, true], "output_name": ["image", "segs", "basic_pipe", "cnet_images"], "name": "DetailerForEachPipe", "display_name": "Detailer (SEGS/pipe)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detailer", "output_node": false}, "DetailerForEachDebugPipe": {"input": {"required": {"image": ["IMAGE"], "segs": ["SEGS"], "guide_size": ["FLOAT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "noise_mask": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "force_inpaint": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "basic_pipe": ["BASIC_PIPE"], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "refiner_ratio": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0}], "cycle": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"detailer_hook": ["DETAILER_HOOK"], "refiner_basic_pipe_opt": ["BASIC_PIPE"], "inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["image", "segs", "guide_size", "guide_size_for", "max_size", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "feather", "noise_mask", "force_inpaint", "basic_pipe", "wildcard", "refiner_ratio", "cycle"], "optional": ["detailer_hook", "refiner_basic_pipe_opt", "inpaint_model", "noise_mask_feather", "scheduler_func_opt"]}, "output": ["IMAGE", "SEGS", "BASIC_PIPE", "IMAGE", "IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false, true, true, true, true], "output_name": ["image", "segs", "basic_pipe", "cropped", "cropped_refined", "cropped_refined_alpha", "cnet_images"], "name": "DetailerForEachDebugPipe", "display_name": "DetailerDebug (SEGS/pipe)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detailer", "output_node": false}, "DetailerForEachPipeForAnimateDiff": {"input": {"required": {"image_frames": ["IMAGE"], "segs": ["SEGS"], "guide_size": ["FLOAT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "basic_pipe": ["BASIC_PIPE"], "refiner_ratio": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0}]}, "optional": {"detailer_hook": ["DETAILER_HOOK"], "refiner_basic_pipe_opt": ["BASIC_PIPE"], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["image_frames", "segs", "guide_size", "guide_size_for", "max_size", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "feather", "basic_pipe", "refiner_ratio"], "optional": ["detailer_hook", "refiner_basic_pipe_opt", "noise_mask_feather", "scheduler_func_opt"]}, "output": ["IMAGE", "SEGS", "BASIC_PIPE", "IMAGE"], "output_is_list": [false, false, false, true], "output_name": ["image", "segs", "basic_pipe", "cnet_images"], "name": "DetailerForEachPipeForAnimateDiff", "display_name": "Detailer For AnimateDiff (SEGS/pipe)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detailer", "output_node": false}, "SAMDetectorCombined": {"input": {"required": {"sam_model": ["SAM_MODEL", {"tooltip": "Segment Anything Model for Silhouette Detection.\nBe sure to use the SAM_MODEL loaded through the SAMLoader (Impact) node as input."}], "segs": ["SEGS", {"tooltip": "This is the segment information detected by the detector.\nIt refines the Mask through the SAM (Segment Anything) detector for all areas pointed to by SEGS, and combines all Masks to return as a single Mask."}], "image": ["IMAGE", {"tooltip": "It is assumed that segs contains only the information about the detected areas, and does not include the image. SAM (Segment Anything) operates by referencing this image."}], "detection_hint": [["center-1", "horizontal-2", "vertical-2", "rect-4", "diamond-4", "mask-area", "mask-points", "mask-point-bbox", "none"], {"tooltip": "It is recommended to use only center-1.\nWhen refining the mask of SEGS with the SAM (Segment Anything) model, center-1 uses only the rectangular area of SEGS and a single point at the exact center as hints.\nOther options were added during the experimental stage and do not work well."}], "dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1, "tooltip": "Set the value to dilate the result mask. If the value is negative, it erodes the mask."}], "threshold": ["FLOAT", {"default": 0.93, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "Set the sensitivity threshold for the mask detected by SAM (Segment Anything). A higher value generates a more specific mask with a narrower range. For example, when pointing to a person's area, it might detect clothes, which is a narrower range, instead of the entire person."}], "bbox_expansion": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1, "tooltip": "When performing SAM (Segment Anything) detection within the SEGS area, the rectangular area of SEGS is expanded and used as a hint."}], "mask_hint_threshold": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "When detection_hint is mask-area, the mask of SEGS is used as a point hint for SAM (Segment Anything).\nIn this case, only the areas of the mask with brightness values equal to or greater than mask_hint_threshold are used as hints."}], "mask_hint_use_negative": [["False", "Small", "Outter"], {"tooltip": "When detecting with SAM (Segment Anything), negative hints are applied as follows:\nSmall: When the SEGS is smaller than 10 pixels in size\nOuter: Sampling the image area outside the SEGS region at regular intervals"}]}}, "input_order": {"required": ["sam_model", "segs", "image", "detection_hint", "dilation", "threshold", "bbox_expansion", "mask_hint_threshold", "mask_hint_use_negative"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "SAMDetectorCombined", "display_name": "SAMDetector (combined)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detector", "output_node": false}, "SAMDetectorSegmented": {"input": {"required": {"sam_model": ["SAM_MODEL", {"tooltip": "Segment Anything Model for Silhouette Detection.\nBe sure to use the SAM_MODEL loaded through the SAMLoader (Impact) node as input."}], "segs": ["SEGS", {"tooltip": "This is the segment information detected by the detector.\nFor the SEGS region, the masks detected by SAM (Segment Anything) are created as a unified mask and a batch of individual masks."}], "image": ["IMAGE", {"tooltip": "It is assumed that segs contains only the information about the detected areas, and does not include the image. SAM (Segment Anything) operates by referencing this image."}], "detection_hint": [["center-1", "horizontal-2", "vertical-2", "rect-4", "diamond-4", "mask-area", "mask-points", "mask-point-bbox", "none"], {"tooltip": "It is recommended to use only center-1.\nWhen refining the mask of SEGS with the SAM (Segment Anything) model, center-1 uses only the rectangular area of SEGS and a single point at the exact center as hints.\nOther options were added during the experimental stage and do not work well."}], "dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1, "tooltip": "Set the value to dilate the result mask. If the value is negative, it erodes the mask."}], "threshold": ["FLOAT", {"default": 0.93, "min": 0.0, "max": 1.0, "step": 0.01}], "bbox_expansion": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1, "tooltip": "When performing SAM (Segment Anything) detection within the SEGS area, the rectangular area of SEGS is expanded and used as a hint."}], "mask_hint_threshold": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "When detection_hint is mask-area, the mask of SEGS is used as a point hint for SAM (Segment Anything).\nIn this case, only the areas of the mask with brightness values equal to or greater than mask_hint_threshold are used as hints."}], "mask_hint_use_negative": [["False", "Small", "Outter"], {"tooltip": "When detecting with SAM (Segment Anything), negative hints are applied as follows:\nSmall: When the SEGS is smaller than 10 pixels in size\nOuter: Sampling the image area outside the SEGS region at regular intervals"}]}}, "input_order": {"required": ["sam_model", "segs", "image", "detection_hint", "dilation", "threshold", "bbox_expansion", "mask_hint_threshold", "mask_hint_use_negative"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["combined_mask", "batch_masks"], "name": "SAMDetectorSegmented", "display_name": "SAMDetector (segmented)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detector", "output_node": false}, "FaceDetailer": {"input": {"required": {"image": ["IMAGE"], "model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "guide_size": ["FLOAT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "noise_mask": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "force_inpaint": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "bbox_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "bbox_dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}], "bbox_crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 10, "step": 0.1}], "sam_detection_hint": [["center-1", "horizontal-2", "vertical-2", "rect-4", "diamond-4", "mask-area", "mask-points", "mask-point-bbox", "none"]], "sam_dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "sam_threshold": ["FLOAT", {"default": 0.93, "min": 0.0, "max": 1.0, "step": 0.01}], "sam_bbox_expansion": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1}], "sam_mask_hint_threshold": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01}], "sam_mask_hint_use_negative": [["False", "Small", "Outter"]], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "bbox_detector": ["BBOX_DETECTOR"], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "cycle": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"sam_model_opt": ["SAM_MODEL"], "segm_detector_opt": ["SEGM_DETECTOR"], "detailer_hook": ["DETAILER_HOOK"], "inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["image", "model", "clip", "vae", "guide_size", "guide_size_for", "max_size", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "denoise", "feather", "noise_mask", "force_inpaint", "bbox_threshold", "bbox_dilation", "bbox_crop_factor", "sam_detection_hint", "sam_dilation", "sam_threshold", "sam_bbox_expansion", "sam_mask_hint_threshold", "sam_mask_hint_use_negative", "drop_size", "bbox_detector", "wildcard", "cycle"], "optional": ["sam_model_opt", "segm_detector_opt", "detailer_hook", "inpaint_model", "noise_mask_feather", "scheduler_func_opt"]}, "output": ["IMAGE", "IMAGE", "IMAGE", "MASK", "DETAILER_PIPE", "IMAGE"], "output_is_list": [false, true, true, false, false, true], "output_name": ["image", "cropped_refined", "cropped_enhanced_alpha", "mask", "detailer_pipe", "cnet_images"], "name": "FaceDetailer", "display_name": "FaceDetailer", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Simple", "output_node": false}, "FaceDetailerPipe": {"input": {"required": {"image": ["IMAGE"], "detailer_pipe": ["DETAILER_PIPE"], "guide_size": ["FLOAT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "noise_mask": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "force_inpaint": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "bbox_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "bbox_dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}], "bbox_crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 10, "step": 0.1}], "sam_detection_hint": [["center-1", "horizontal-2", "vertical-2", "rect-4", "diamond-4", "mask-area", "mask-points", "mask-point-bbox", "none"]], "sam_dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "sam_threshold": ["FLOAT", {"default": 0.93, "min": 0.0, "max": 1.0, "step": 0.01}], "sam_bbox_expansion": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1}], "sam_mask_hint_threshold": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01}], "sam_mask_hint_use_negative": [["False", "Small", "Outter"]], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "refiner_ratio": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0}], "cycle": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["image", "detailer_pipe", "guide_size", "guide_size_for", "max_size", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "feather", "noise_mask", "force_inpaint", "bbox_threshold", "bbox_dilation", "bbox_crop_factor", "sam_detection_hint", "sam_dilation", "sam_threshold", "sam_bbox_expansion", "sam_mask_hint_threshold", "sam_mask_hint_use_negative", "drop_size", "refiner_ratio", "cycle"], "optional": ["inpaint_model", "noise_mask_feather", "scheduler_func_opt"]}, "output": ["IMAGE", "IMAGE", "IMAGE", "MASK", "DETAILER_PIPE", "IMAGE"], "output_is_list": [false, true, true, false, false, true], "output_name": ["image", "cropped_refined", "cropped_enhanced_alpha", "mask", "detailer_pipe", "cnet_images"], "name": "FaceDetailerPipe", "display_name": "FaceDetailer (pipe)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Simple", "output_node": false}, "MaskDetailerPipe": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "basic_pipe": ["BASIC_PIPE"], "guide_size": ["FLOAT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "mask bbox", "label_off": "crop region"}], "max_size": ["FLOAT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "mask_mode": ["BOOLEAN", {"default": true, "label_on": "masked only", "label_off": "whole"}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 10, "step": 0.1}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "refiner_ratio": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 100}], "cycle": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"refiner_basic_pipe_opt": ["BASIC_PIPE"], "detailer_hook": ["DETAILER_HOOK"], "inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}], "bbox_fill": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "contour_fill": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["image", "mask", "basic_pipe", "guide_size", "guide_size_for", "max_size", "mask_mode", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "feather", "crop_factor", "drop_size", "refiner_ratio", "batch_size", "cycle"], "optional": ["refiner_basic_pipe_opt", "detailer_hook", "inpaint_model", "noise_mask_feather", "bbox_fill", "contour_fill", "scheduler_func_opt"]}, "output": ["IMAGE", "IMAGE", "IMAGE", "BASIC_PIPE", "BASIC_PIPE"], "output_is_list": [false, true, true, false, false], "output_name": ["image", "cropped_refined", "cropped_enhanced_alpha", "basic_pipe", "refiner_basic_pipe_opt"], "name": "MaskDetailerPipe", "display_name": "MaskDetailer (pipe)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detailer", "output_node": false}, "ToDetailerPipe": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "bbox_detector": ["BBOX_DETECTOR"], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "Select to add LoRA": [["Select the LoRA to add to the text", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text"]]}, "optional": {"sam_model_opt": ["SAM_MODEL"], "segm_detector_opt": ["SEGM_DETECTOR"], "detailer_hook": ["DETAILER_HOOK"]}}, "input_order": {"required": ["model", "clip", "vae", "positive", "negative", "bbox_detector", "wildcard", "Select to add LoRA", "Select to add Wildcard"], "optional": ["sam_model_opt", "segm_detector_opt", "detailer_hook"]}, "output": ["DETAILER_PIPE"], "output_is_list": [false], "output_name": ["detailer_pipe"], "name": "ToDetailerPipe", "display_name": "ToDetailerPipe", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Pipe", "output_node": false}, "ToDetailerPipeSDXL": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "refiner_model": ["MODEL"], "refiner_clip": ["CLIP"], "refiner_positive": ["CONDITIONING"], "refiner_negative": ["CONDITIONING"], "bbox_detector": ["BBOX_DETECTOR"], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "Select to add LoRA": [["Select the LoRA to add to the text", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text"]]}, "optional": {"sam_model_opt": ["SAM_MODEL"], "segm_detector_opt": ["SEGM_DETECTOR"], "detailer_hook": ["DETAILER_HOOK"]}}, "input_order": {"required": ["model", "clip", "vae", "positive", "negative", "refiner_model", "refiner_clip", "refiner_positive", "refiner_negative", "bbox_detector", "wildcard", "Select to add LoRA", "Select to add Wildcard"], "optional": ["sam_model_opt", "segm_detector_opt", "detailer_hook"]}, "output": ["DETAILER_PIPE"], "output_is_list": [false], "output_name": ["detailer_pipe"], "name": "ToDetailerPipeSDXL", "display_name": "ToDetailerPipeSDXL", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Pipe", "output_node": false}, "FromDetailerPipe": {"input": {"required": {"detailer_pipe": ["DETAILER_PIPE"]}}, "input_order": {"required": ["detailer_pipe"]}, "output": ["MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "BBOX_DETECTOR", "SAM_MODEL", "SEGM_DETECTOR", "DETAILER_HOOK"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["model", "clip", "vae", "positive", "negative", "bbox_detector", "sam_model_opt", "segm_detector_opt", "detailer_hook"], "name": "FromDetailerPipe", "display_name": "FromDetailerPipe", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Pipe", "output_node": false}, "FromDetailerPipe_v2": {"input": {"required": {"detailer_pipe": ["DETAILER_PIPE"]}}, "input_order": {"required": ["detailer_pipe"]}, "output": ["DETAILER_PIPE", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "BBOX_DETECTOR", "SAM_MODEL", "SEGM_DETECTOR", "DETAILER_HOOK"], "output_is_list": [false, false, false, false, false, false, false, false, false, false], "output_name": ["detailer_pipe", "model", "clip", "vae", "positive", "negative", "bbox_detector", "sam_model_opt", "segm_detector_opt", "detailer_hook"], "name": "FromDetailerPipe_v2", "display_name": "FromDetailerPipe_v2", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Pipe", "output_node": false}, "FromDetailerPipeSDXL": {"input": {"required": {"detailer_pipe": ["DETAILER_PIPE"]}}, "input_order": {"required": ["detailer_pipe"]}, "output": ["DETAILER_PIPE", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "BBOX_DETECTOR", "SAM_MODEL", "SEGM_DETECTOR", "DETAILER_HOOK", "MODEL", "CLIP", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["detailer_pipe", "model", "clip", "vae", "positive", "negative", "bbox_detector", "sam_model_opt", "segm_detector_opt", "detailer_hook", "refiner_model", "refiner_clip", "refiner_positive", "refiner_negative"], "name": "FromDetailerPipeSDXL", "display_name": "FromDetailer (SDXL/pipe)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Pipe", "output_node": false}, "AnyPipeToBasic": {"input": {"required": {"any_pipe": ["*"]}}, "input_order": {"required": ["any_pipe"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["basic_pipe"], "name": "AnyPipeToBasic", "display_name": "Any PIPE -> BasicPipe", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Pipe", "output_node": false}, "ToBasicPipe": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"]}}, "input_order": {"required": ["model", "clip", "vae", "positive", "negative"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["basic_pipe"], "name": "ToBasicPipe", "display_name": "ToBasicPipe", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Pipe", "output_node": false}, "FromBasicPipe": {"input": {"required": {"basic_pipe": ["BASIC_PIPE"]}}, "input_order": {"required": ["basic_pipe"]}, "output": ["MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false, false, false], "output_name": ["model", "clip", "vae", "positive", "negative"], "name": "FromBasicPipe", "display_name": "FromBasicPipe", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Pipe", "output_node": false}, "FromBasicPipe_v2": {"input": {"required": {"basic_pipe": ["BASIC_PIPE"]}}, "input_order": {"required": ["basic_pipe"]}, "output": ["BASIC_PIPE", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["basic_pipe", "model", "clip", "vae", "positive", "negative"], "name": "FromBasicPipe_v2", "display_name": "FromBasicPipe_v2", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Pipe", "output_node": false}, "BasicPipeToDetailerPipe": {"input": {"required": {"basic_pipe": ["BASIC_PIPE"], "bbox_detector": ["BBOX_DETECTOR"], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "Select to add LoRA": [["Select the LoRA to add to the text", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text"]]}, "optional": {"sam_model_opt": ["SAM_MODEL"], "segm_detector_opt": ["SEGM_DETECTOR"], "detailer_hook": ["DETAILER_HOOK"]}}, "input_order": {"required": ["basic_pipe", "bbox_detector", "wildcard", "Select to add LoRA", "Select to add Wildcard"], "optional": ["sam_model_opt", "segm_detector_opt", "detailer_hook"]}, "output": ["DETAILER_PIPE"], "output_is_list": [false], "output_name": ["detailer_pipe"], "name": "BasicPipeToDetailerPipe", "display_name": "BasicPipe -> DetailerPipe", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Pipe", "output_node": false}, "BasicPipeToDetailerPipeSDXL": {"input": {"required": {"base_basic_pipe": ["BASIC_PIPE"], "refiner_basic_pipe": ["BASIC_PIPE"], "bbox_detector": ["BBOX_DETECTOR"], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "Select to add LoRA": [["Select the LoRA to add to the text", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text"]]}, "optional": {"sam_model_opt": ["SAM_MODEL"], "segm_detector_opt": ["SEGM_DETECTOR"], "detailer_hook": ["DETAILER_HOOK"]}}, "input_order": {"required": ["base_basic_pipe", "refiner_basic_pipe", "bbox_detector", "wildcard", "Select to add LoRA", "Select to add Wildcard"], "optional": ["sam_model_opt", "segm_detector_opt", "detailer_hook"]}, "output": ["DETAILER_PIPE"], "output_is_list": [false], "output_name": ["detailer_pipe"], "name": "BasicPipeToDetailerPipeSDXL", "display_name": "BasicPipe -> DetailerPipe (SDXL)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Pipe", "output_node": false}, "DetailerPipeToBasicPipe": {"input": {"required": {"detailer_pipe": ["DETAILER_PIPE"]}}, "input_order": {"required": ["detailer_pipe"]}, "output": ["BASIC_PIPE", "BASIC_PIPE"], "output_is_list": [false, false], "output_name": ["base_basic_pipe", "refiner_basic_pipe"], "name": "DetailerPipeToBasicPipe", "display_name": "DetailerPipe -> BasicPipe", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Pipe", "output_node": false}, "EditBasicPipe": {"input": {"required": {"basic_pipe": ["BASIC_PIPE"]}, "optional": {"model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"]}}, "input_order": {"required": ["basic_pipe"], "optional": ["model", "clip", "vae", "positive", "negative"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["basic_pipe"], "name": "EditBasicPipe", "display_name": "Edit BasicPipe", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Pipe", "output_node": false}, "EditDetailerPipe": {"input": {"required": {"detailer_pipe": ["DETAILER_PIPE"], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "Select to add LoRA": [["Select the LoRA to add to the text", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text"]]}, "optional": {"model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "bbox_detector": ["BBOX_DETECTOR"], "sam_model": ["SAM_MODEL"], "segm_detector": ["SEGM_DETECTOR"], "detailer_hook": ["DETAILER_HOOK"]}}, "input_order": {"required": ["detailer_pipe", "wildcard", "Select to add LoRA", "Select to add Wildcard"], "optional": ["model", "clip", "vae", "positive", "negative", "bbox_detector", "sam_model", "segm_detector", "detailer_hook"]}, "output": ["DETAILER_PIPE"], "output_is_list": [false], "output_name": ["detailer_pipe"], "name": "EditDetailerPipe", "display_name": "Edit DetailerPipe", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Pipe", "output_node": false}, "EditDetailerPipeSDXL": {"input": {"required": {"detailer_pipe": ["DETAILER_PIPE"], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "Select to add LoRA": [["Select the LoRA to add to the text", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text"]]}, "optional": {"model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "refiner_model": ["MODEL"], "refiner_clip": ["CLIP"], "refiner_positive": ["CONDITIONING"], "refiner_negative": ["CONDITIONING"], "bbox_detector": ["BBOX_DETECTOR"], "sam_model": ["SAM_MODEL"], "segm_detector": ["SEGM_DETECTOR"], "detailer_hook": ["DETAILER_HOOK"]}}, "input_order": {"required": ["detailer_pipe", "wildcard", "Select to add LoRA", "Select to add Wildcard"], "optional": ["model", "clip", "vae", "positive", "negative", "refiner_model", "refiner_clip", "refiner_positive", "refiner_negative", "bbox_detector", "sam_model", "segm_detector", "detailer_hook"]}, "output": ["DETAILER_PIPE"], "output_is_list": [false], "output_name": ["detailer_pipe"], "name": "EditDetailerPipeSDXL", "display_name": "Edit DetailerPipe (SDXL)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Pipe", "output_node": false}, "LatentPixelScale": {"input": {"required": {"samples": ["LATENT"], "scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]], "scale_factor": ["FLOAT", {"default": 1.5, "min": 0.1, "max": 10000, "step": 0.1}], "vae": ["VAE"], "use_tiled_vae": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}]}, "optional": {"upscale_model_opt": ["UPSCALE_MODEL"]}}, "input_order": {"required": ["samples", "scale_method", "scale_factor", "vae", "use_tiled_vae"], "optional": ["upscale_model_opt"]}, "output": ["LATENT", "IMAGE"], "output_is_list": [false, false], "output_name": ["LATENT", "IMAGE"], "name": "LatentPixelScale", "display_name": "Latent Scale (on Pixel Space)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Upscale", "output_node": false}, "PixelKSampleUpscalerProvider": {"input": {"required": {"scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]], "model": ["MODEL"], "vae": ["VAE"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "use_tiled_vae": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "tile_size": ["INT", {"default": 512, "min": 320, "max": 4096, "step": 64}]}, "optional": {"upscale_model_opt": ["UPSCALE_MODEL"], "pk_hook_opt": ["PK_HOOK"], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["scale_method", "model", "vae", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "denoise", "use_tiled_vae", "tile_size"], "optional": ["upscale_model_opt", "pk_hook_opt", "scheduler_func_opt"]}, "output": ["UPSCALER"], "output_is_list": [false], "output_name": ["UPSCALER"], "name": "PixelKSampleUpscalerProvider", "display_name": "PixelKSampleUpscalerProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Upscale", "output_node": false}, "PixelKSampleUpscalerProviderPipe": {"input": {"required": {"scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "use_tiled_vae": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "basic_pipe": ["BASIC_PIPE"], "tile_size": ["INT", {"default": 512, "min": 320, "max": 4096, "step": 64}]}, "optional": {"upscale_model_opt": ["UPSCALE_MODEL"], "pk_hook_opt": ["PK_HOOK"], "scheduler_func_opt": ["SCHEDULER_FUNC"], "tile_cnet_opt": ["CONTROL_NET"], "tile_cnet_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["scale_method", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "use_tiled_vae", "basic_pipe", "tile_size"], "optional": ["upscale_model_opt", "pk_hook_opt", "scheduler_func_opt", "tile_cnet_opt", "tile_cnet_strength"]}, "output": ["UPSCALER"], "output_is_list": [false], "output_name": ["UPSCALER"], "name": "PixelKSampleUpscalerProviderPipe", "display_name": "PixelKSampleUpscalerProviderPipe", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Upscale", "output_node": false}, "IterativeLatentUpscale": {"input": {"required": {"samples": ["LATENT"], "upscale_factor": ["FLOAT", {"default": 1.5, "min": 1, "max": 10000, "step": 0.1}], "steps": ["INT", {"default": 3, "min": 1, "max": 10000, "step": 1}], "temp_prefix": ["STRING", {"default": ""}], "upscaler": ["UPSCALER"], "step_mode": [["simple", "geometric"], {"default": "simple"}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["samples", "upscale_factor", "steps", "temp_prefix", "upscaler", "step_mode"], "hidden": ["unique_id"]}, "output": ["LATENT", "VAE"], "output_is_list": [false, false], "output_name": ["latent", "vae"], "name": "IterativeLatentUpscale", "display_name": "Iterative Upscale (Latent/on Pixel Space)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Upscale", "output_node": false}, "IterativeImageUpscale": {"input": {"required": {"pixels": ["IMAGE"], "upscale_factor": ["FLOAT", {"default": 1.5, "min": 1, "max": 10000, "step": 0.1}], "steps": ["INT", {"default": 3, "min": 1, "max": 10000, "step": 1}], "temp_prefix": ["STRING", {"default": ""}], "upscaler": ["UPSCALER"], "vae": ["VAE"], "step_mode": [["simple", "geometric"], {"default": "simple"}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pixels", "upscale_factor", "steps", "temp_prefix", "upscaler", "vae", "step_mode"], "hidden": ["unique_id"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "IterativeImageUpscale", "display_name": "Iterative Upscale (Image)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Upscale", "output_node": false}, "PixelTiledKSampleUpscalerProvider": {"input": {"required": {"scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]], "model": ["MODEL"], "vae": ["VAE"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "tile_width": ["INT", {"default": 512, "min": 320, "max": 16384, "step": 64}], "tile_height": ["INT", {"default": 512, "min": 320, "max": 16384, "step": 64}], "tiling_strategy": [["random", "padded", "simple"]]}, "optional": {"upscale_model_opt": ["UPSCALE_MODEL"], "pk_hook_opt": ["PK_HOOK"], "tile_cnet_opt": ["CONTROL_NET"], "tile_cnet_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["scale_method", "model", "vae", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "denoise", "tile_width", "tile_height", "tiling_strategy"], "optional": ["upscale_model_opt", "pk_hook_opt", "tile_cnet_opt", "tile_cnet_strength"]}, "output": ["UPSCALER"], "output_is_list": [false], "output_name": ["UPSCALER"], "name": "PixelTiledKSampleUpscalerProvider", "display_name": "PixelTiledKSampleUpscalerProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Upscale", "output_node": false}, "PixelTiledKSampleUpscalerProviderPipe": {"input": {"required": {"scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "tile_width": ["INT", {"default": 512, "min": 320, "max": 16384, "step": 64}], "tile_height": ["INT", {"default": 512, "min": 320, "max": 16384, "step": 64}], "tiling_strategy": [["random", "padded", "simple"]], "basic_pipe": ["BASIC_PIPE"]}, "optional": {"upscale_model_opt": ["UPSCALE_MODEL"], "pk_hook_opt": ["PK_HOOK"], "tile_cnet_opt": ["CONTROL_NET"], "tile_cnet_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["scale_method", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "tile_width", "tile_height", "tiling_strategy", "basic_pipe"], "optional": ["upscale_model_opt", "pk_hook_opt", "tile_cnet_opt", "tile_cnet_strength"]}, "output": ["UPSCALER"], "output_is_list": [false], "output_name": ["UPSCALER"], "name": "PixelTiledKSampleUpscalerProviderPipe", "display_name": "PixelTiledKSampleUpscalerProviderPipe", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Upscale", "output_node": false}, "TwoSamplersForMaskUpscalerProvider": {"input": {"required": {"scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]], "full_sample_schedule": [["none", "interleave1", "interleave2", "interleave3", "last1", "last2", "interleave1+last1", "interleave2+last1", "interleave3+last1"]], "use_tiled_vae": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "base_sampler": ["KSAMPLER"], "mask_sampler": ["KSAMPLER"], "mask": ["MASK"], "vae": ["VAE"], "tile_size": ["INT", {"default": 512, "min": 320, "max": 4096, "step": 64}]}, "optional": {"full_sampler_opt": ["KSAMPLER"], "upscale_model_opt": ["UPSCALE_MODEL"], "pk_hook_base_opt": ["PK_HOOK"], "pk_hook_mask_opt": ["PK_HOOK"], "pk_hook_full_opt": ["PK_HOOK"]}}, "input_order": {"required": ["scale_method", "full_sample_schedule", "use_tiled_vae", "base_sampler", "mask_sampler", "mask", "vae", "tile_size"], "optional": ["full_sampler_opt", "upscale_model_opt", "pk_hook_base_opt", "pk_hook_mask_opt", "pk_hook_full_opt"]}, "output": ["UPSCALER"], "output_is_list": [false], "output_name": ["UPSCALER"], "name": "TwoSamplersForMaskUpscalerProvider", "display_name": "TwoSamplersForMask Upscaler Provider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Upscale", "output_node": false}, "TwoSamplersForMaskUpscalerProviderPipe": {"input": {"required": {"scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]], "full_sample_schedule": [["none", "interleave1", "interleave2", "interleave3", "last1", "last2", "interleave1+last1", "interleave2+last1", "interleave3+last1"]], "use_tiled_vae": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "base_sampler": ["KSAMPLER"], "mask_sampler": ["KSAMPLER"], "mask": ["MASK"], "basic_pipe": ["BASIC_PIPE"], "tile_size": ["INT", {"default": 512, "min": 320, "max": 4096, "step": 64}]}, "optional": {"full_sampler_opt": ["KSAMPLER"], "upscale_model_opt": ["UPSCALE_MODEL"], "pk_hook_base_opt": ["PK_HOOK"], "pk_hook_mask_opt": ["PK_HOOK"], "pk_hook_full_opt": ["PK_HOOK"]}}, "input_order": {"required": ["scale_method", "full_sample_schedule", "use_tiled_vae", "base_sampler", "mask_sampler", "mask", "basic_pipe", "tile_size"], "optional": ["full_sampler_opt", "upscale_model_opt", "pk_hook_base_opt", "pk_hook_mask_opt", "pk_hook_full_opt"]}, "output": ["UPSCALER"], "output_is_list": [false], "output_name": ["UPSCALER"], "name": "TwoSamplersForMaskUpscalerProviderPipe", "display_name": "TwoSamplersForMask Upscaler Provider (pipe)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Upscale", "output_node": false}, "PixelKSampleHookCombine": {"input": {"required": {"hook1": ["PK_HOOK"], "hook2": ["PK_HOOK"]}}, "input_order": {"required": ["hook1", "hook2"]}, "output": ["PK_HOOK"], "output_is_list": [false], "output_name": ["PK_HOOK"], "name": "PixelKSampleHookCombine", "display_name": "PixelKSampleHookCombine", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Upscale", "output_node": false}, "DenoiseScheduleHookProvider": {"input": {"required": {"schedule_for_iteration": [["simple"]], "target_denoise": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["schedule_for_iteration", "target_denoise"]}, "output": ["PK_HOOK"], "output_is_list": [false], "output_name": ["PK_HOOK"], "name": "DenoiseScheduleHookProvider", "display_name": "DenoiseScheduleHookProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Upscale", "output_node": false}, "StepsScheduleHookProvider": {"input": {"required": {"schedule_for_iteration": [["simple"]], "target_steps": ["INT", {"default": 20, "min": 1, "max": 10000}]}}, "input_order": {"required": ["schedule_for_iteration", "target_steps"]}, "output": ["PK_HOOK"], "output_is_list": [false], "output_name": ["PK_HOOK"], "name": "StepsScheduleHookProvider", "display_name": "StepsScheduleHookProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Upscale", "output_node": false}, "CfgScheduleHookProvider": {"input": {"required": {"schedule_for_iteration": [["simple"]], "target_cfg": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 100.0}]}}, "input_order": {"required": ["schedule_for_iteration", "target_cfg"]}, "output": ["PK_HOOK"], "output_is_list": [false], "output_name": ["PK_HOOK"], "name": "CfgScheduleHookProvider", "display_name": "CfgScheduleHookProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Upscale", "output_node": false}, "NoiseInjectionHookProvider": {"input": {"required": {"schedule_for_iteration": [["simple"]], "source": [["CPU", "GPU"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "start_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 200.0, "step": 0.01}], "end_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 200.0, "step": 0.01}]}}, "input_order": {"required": ["schedule_for_iteration", "source", "seed", "start_strength", "end_strength"]}, "output": ["PK_HOOK"], "output_is_list": [false], "output_name": ["PK_HOOK"], "name": "NoiseInjectionHookProvider", "display_name": "NoiseInjectionHookProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Upscale", "output_node": false}, "UnsamplerHookProvider": {"input": {"required": {"model": ["MODEL"], "steps": ["INT", {"default": 25, "min": 1, "max": 10000}], "start_end_at_step": ["INT", {"default": 21, "min": 0, "max": 10000}], "end_end_at_step": ["INT", {"default": 24, "min": 0, "max": 10000}], "cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "normalize": [["disable", "enable"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "schedule_for_iteration": [["simple"]]}}, "input_order": {"required": ["model", "steps", "start_end_at_step", "end_end_at_step", "cfg", "sampler_name", "scheduler", "normalize", "positive", "negative", "schedule_for_iteration"]}, "output": ["PK_HOOK"], "output_is_list": [false], "output_name": ["PK_HOOK"], "name": "UnsamplerHookProvider", "display_name": "UnsamplerHookProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Upscale", "output_node": false}, "CoreMLDetailerHookProvider": {"input": {"required": {"mode": [["512x512", "768x768", "512x768", "768x512"]]}}, "input_order": {"required": ["mode"]}, "output": ["DETAILER_HOOK"], "output_is_list": [false], "output_name": ["DETAILER_HOOK"], "name": "CoreMLDetailerHookProvider", "display_name": "CoreMLDetailerHookProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detailer", "output_node": false}, "PreviewDetailerHookProvider": {"input": {"required": {"quality": ["INT", {"default": 95, "min": 20, "max": 100}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["quality"], "hidden": ["unique_id"]}, "output": ["DETAILER_HOOK", "UPSCALER_HOOK"], "output_is_list": [false, false], "output_name": ["DETAILER_HOOK", "UPSCALER_HOOK"], "name": "PreviewDetailerHookProvider", "display_name": "PreviewDetailerHookProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "DetailerHookCombine": {"input": {"required": {"hook1": ["DETAILER_HOOK"], "hook2": ["DETAILER_HOOK"]}}, "input_order": {"required": ["hook1", "hook2"]}, "output": ["DETAILER_HOOK"], "output_is_list": [false], "output_name": ["DETAILER_HOOK"], "name": "DetailerHookCombine", "display_name": "DetailerHookCombine", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Upscale", "output_node": false}, "NoiseInjectionDetailerHookProvider": {"input": {"required": {"schedule_for_cycle": [["skip_start", "from_start"]], "source": [["CPU", "GPU"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "start_strength": ["FLOAT", {"default": 2.0, "min": 0.0, "max": 200.0, "step": 0.01}], "end_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 200.0, "step": 0.01}]}}, "input_order": {"required": ["schedule_for_cycle", "source", "seed", "start_strength", "end_strength"]}, "output": ["DETAILER_HOOK"], "output_is_list": [false], "output_name": ["DETAILER_HOOK"], "name": "NoiseInjectionDetailerHookProvider", "display_name": "NoiseInjectionDetailerHookProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detailer", "output_node": false}, "UnsamplerDetailerHookProvider": {"input": {"required": {"model": ["MODEL"], "steps": ["INT", {"default": 25, "min": 1, "max": 10000}], "start_end_at_step": ["INT", {"default": 21, "min": 0, "max": 10000}], "end_end_at_step": ["INT", {"default": 24, "min": 0, "max": 10000}], "cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "normalize": [["disable", "enable"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "schedule_for_cycle": [["skip_start", "from_start"]]}}, "input_order": {"required": ["model", "steps", "start_end_at_step", "end_end_at_step", "cfg", "sampler_name", "scheduler", "normalize", "positive", "negative", "schedule_for_cycle"]}, "output": ["DETAILER_HOOK"], "output_is_list": [false], "output_name": ["DETAILER_HOOK"], "name": "UnsamplerDetailerHookProvider", "display_name": "UnsamplerDetailerHookProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detailer", "output_node": false}, "DenoiseSchedulerDetailerHookProvider": {"input": {"required": {"schedule_for_cycle": [["simple"]], "target_denoise": ["FLOAT", {"default": 0.3, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["schedule_for_cycle", "target_denoise"]}, "output": ["DETAILER_HOOK"], "output_is_list": [false], "output_name": ["DETAILER_HOOK"], "name": "DenoiseSchedulerDetailerHookProvider", "display_name": "DenoiseSchedulerDetailerHookProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detailer", "output_node": false}, "SEGSOrderedFilterDetailerHookProvider": {"input": {"required": {"target": [["area(=w*h)", "width", "height", "x1", "y1", "x2", "y2"]], "order": ["BOOLEAN", {"default": true, "label_on": "descending", "label_off": "ascending"}], "take_start": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "take_count": ["INT", {"default": 1, "min": 0, "max": 9223372036854775807, "step": 1}]}}, "input_order": {"required": ["target", "order", "take_start", "take_count"]}, "output": ["DETAILER_HOOK"], "output_is_list": [false], "output_name": ["DETAILER_HOOK"], "name": "SEGSOrderedFilterDetailerHookProvider", "display_name": "SEGSOrderedFilterDetailerHookProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "SEGSRangeFilterDetailerHookProvider": {"input": {"required": {"target": [["area(=w*h)", "width", "height", "x1", "y1", "x2", "y2", "length_percent"]], "mode": ["BOOLEAN", {"default": true, "label_on": "inside", "label_off": "outside"}], "min_value": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "max_value": ["INT", {"default": 67108864, "min": 0, "max": 9223372036854775807, "step": 1}]}}, "input_order": {"required": ["target", "mode", "min_value", "max_value"]}, "output": ["DETAILER_HOOK"], "output_is_list": [false], "output_name": ["DETAILER_HOOK"], "name": "SEGSRangeFilterDetailerHookProvider", "display_name": "SEGSRangeFilterDetailerHookProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "SEGSLabelFilterDetailerHookProvider": {"input": {"required": {"segs": ["SEGS"], "preset": [["all", "hand", "face", "mouth", "eyes", "eyebrows", "pupils", "left_eyebrow", "left_eye", "left_pupil", "right_eyebrow", "right_eye", "right_pupil", "short_sleeved_shirt", "long_sleeved_shirt", "short_sleeved_outwear", "long_sleeved_outwear", "vest", "sling", "shorts", "trousers", "skirt", "short_sleeved_dress", "long_sleeved_dress", "vest_dress", "sling_dress", "person", "bicycle", "car", "motorcycle", "airplane", "bus", "train", "truck", "boat", "traffic light", "fire hydrant", "stop sign", "parking meter", "bench", "bird", "cat", "dog", "horse", "sheep", "cow", "elephant", "bear", "zebra", "giraffe", "backpack", "umbrella", "handbag", "tie", "suitcase", "frisbee", "skis", "snowboard", "sports ball", "kite", "baseball bat", "baseball glove", "skateboard", "surfboard", "tennis racket", "bottle", "wine glass", "cup", "fork", "knife", "spoon", "bowl", "banana", "apple", "sandwich", "orange", "broccoli", "carrot", "hot dog", "pizza", "donut", "cake", "chair", "couch", "potted plant", "bed", "dining table", "toilet", "tv", "laptop", "mouse", "remote", "keyboard", "cell phone", "microwave", "oven", "toaster", "sink", "refrigerator", "book", "clock", "vase", "scissors", "teddy bear", "hair drier", "toothbrush"]], "labels": ["STRING", {"multiline": true, "placeholder": "List the types of segments to be allowed, separated by commas"}]}}, "input_order": {"required": ["segs", "preset", "labels"]}, "output": ["DETAILER_HOOK"], "output_is_list": [false], "output_name": ["DETAILER_HOOK"], "name": "SEGSLabelFilterDetailerHookProvider", "display_name": "SEGSLabelFilterDetailerHookProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "VariationNoiseDetailerHookProvider": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["seed", "strength"]}, "output": ["DETAILER_HOOK"], "output_is_list": [false], "output_name": ["DETAILER_HOOK"], "name": "VariationNoiseDetailerHookProvider", "display_name": "VariationNoiseDetailerHookProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detailer", "output_node": false}, "BitwiseAndMask": {"input": {"required": {"mask1": ["MASK"], "mask2": ["MASK"]}}, "input_order": {"required": ["mask1", "mask2"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "BitwiseAndMask", "display_name": "Pixelwise(MASK & MASK)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Operation", "output_node": false}, "SubtractMask": {"input": {"required": {"mask1": ["MASK"], "mask2": ["MASK"]}}, "input_order": {"required": ["mask1", "mask2"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "SubtractMask", "display_name": "Pixelwise(MASK - MASK)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Operation", "output_node": false}, "AddMask": {"input": {"required": {"mask1": ["MASK"], "mask2": ["MASK"]}}, "input_order": {"required": ["mask1", "mask2"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "AddMask", "display_name": "Pixelwise(MASK + MASK)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Operation", "output_node": false}, "ImpactSegsAndMask": {"input": {"required": {"segs": ["SEGS"], "mask": ["MASK"]}}, "input_order": {"required": ["segs", "mask"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactSegsAndMask", "display_name": "Pixelwise(SEGS & MASK)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Operation", "output_node": false}, "ImpactSegsAndMaskForEach": {"input": {"required": {"segs": ["SEGS"], "masks": ["MASK"]}}, "input_order": {"required": ["segs", "masks"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactSegsAndMaskForEach", "display_name": "Pixelwise(SEGS & MASKS ForEach)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Operation", "output_node": false}, "EmptySegs": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "EmptySegs", "display_name": "EmptySegs", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactFlattenMask": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ImpactFlattenMask", "display_name": "Flatten Mask Batch", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Operation", "output_node": false}, "MediaPipeFaceMeshToSEGS": {"input": {"required": {"image": ["IMAGE"], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 100, "step": 0.1}], "bbox_fill": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "crop_min_size": ["INT", {"min": 10, "max": 16384, "step": 1, "default": 50}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 1}], "dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "face": ["BOOLEAN", {"default": true, "label_on": "Enabled", "label_off": "Disabled"}], "mouth": ["BOOLEAN", {"default": false, "label_on": "Enabled", "label_off": "Disabled"}], "left_eyebrow": ["BOOLEAN", {"default": false, "label_on": "Enabled", "label_off": "Disabled"}], "left_eye": ["BOOLEAN", {"default": false, "label_on": "Enabled", "label_off": "Disabled"}], "left_pupil": ["BOOLEAN", {"default": false, "label_on": "Enabled", "label_off": "Disabled"}], "right_eyebrow": ["BOOLEAN", {"default": false, "label_on": "Enabled", "label_off": "Disabled"}], "right_eye": ["BOOLEAN", {"default": false, "label_on": "Enabled", "label_off": "Disabled"}], "right_pupil": ["BOOLEAN", {"default": false, "label_on": "Enabled", "label_off": "Disabled"}]}}, "input_order": {"required": ["image", "crop_factor", "bbox_fill", "crop_min_size", "drop_size", "dilation", "face", "mouth", "left_eyebrow", "left_eye", "left_pupil", "right_eyebrow", "right_eye", "right_pupil"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "MediaPipeFaceMeshToSEGS", "display_name": "MediaPipe FaceMesh to SEGS", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Operation", "output_node": false}, "MaskToSEGS": {"input": {"required": {"mask": ["MASK"], "combined": ["BOOLEAN", {"default": false, "label_on": "True", "label_off": "False"}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 100, "step": 0.1}], "bbox_fill": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "contour_fill": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}]}}, "input_order": {"required": ["mask", "combined", "crop_factor", "bbox_fill", "drop_size", "contour_fill"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "MaskToSEGS", "display_name": "MASK to SEGS", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Operation", "output_node": false}, "MaskToSEGS_for_AnimateDiff": {"input": {"required": {"mask": ["MASK"], "combined": ["BOOLEAN", {"default": false, "label_on": "True", "label_off": "False"}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 100, "step": 0.1}], "bbox_fill": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "contour_fill": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}]}}, "input_order": {"required": ["mask", "combined", "crop_factor", "bbox_fill", "drop_size", "contour_fill"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "MaskToSEGS_for_AnimateDiff", "display_name": "MASK to SEGS for AnimateDiff", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Operation", "output_node": false}, "ToBinaryMask": {"input": {"required": {"mask": ["MASK"], "threshold": ["INT", {"default": 20, "min": 1, "max": 255}]}}, "input_order": {"required": ["mask", "threshold"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ToBinaryMask", "display_name": "ToBinaryMask", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Operation", "output_node": false}, "MasksToMaskList": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["MASK"], "output_is_list": [true], "output_name": ["MASK"], "name": "MasksToMaskList", "display_name": "Mask Batch to Mask List", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Operation", "output_node": false}, "MaskListToMaskBatch": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskListToMaskBatch", "display_name": "Mask List to Mask Batch", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Operation", "output_node": false}, "ImageListToImageBatch": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageListToImageBatch", "display_name": "Image List to Image Batch", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Operation", "output_node": false}, "SetDefaultImageForSEGS": {"input": {"required": {"segs": ["SEGS"], "image": ["IMAGE"], "override": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["segs", "image", "override"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "SetDefaultImageForSEGS", "display_name": "Set Default Image for SEGS", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "RemoveImageFromSEGS": {"input": {"required": {"segs": ["SEGS"]}}, "input_order": {"required": ["segs"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "RemoveImageFromSEGS", "display_name": "Remove Image from SEGS", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "BboxDetectorSEGS": {"input": {"required": {"bbox_detector": ["BBOX_DETECTOR"], "image": ["IMAGE"], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 100, "step": 0.1}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "labels": ["STRING", {"multiline": true, "default": "all", "placeholder": "List the types of segments to be allowed, separated by commas"}]}, "optional": {"detailer_hook": ["DETAILER_HOOK"]}}, "input_order": {"required": ["bbox_detector", "image", "threshold", "dilation", "crop_factor", "drop_size", "labels"], "optional": ["detailer_hook"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "BboxDetectorSEGS", "display_name": "BBOX Detector (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detector", "output_node": false}, "SegmDetectorSEGS": {"input": {"required": {"segm_detector": ["SEGM_DETECTOR"], "image": ["IMAGE"], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 100, "step": 0.1}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "labels": ["STRING", {"multiline": true, "default": "all", "placeholder": "List the types of segments to be allowed, separated by commas"}]}, "optional": {"detailer_hook": ["DETAILER_HOOK"]}}, "input_order": {"required": ["segm_detector", "image", "threshold", "dilation", "crop_factor", "drop_size", "labels"], "optional": ["detailer_hook"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "SegmDetectorSEGS", "display_name": "SEGM Detector (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detector", "output_node": false}, "ONNXDetectorSEGS": {"input": {"required": {"bbox_detector": ["BBOX_DETECTOR"], "image": ["IMAGE"], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 100, "step": 0.1}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "labels": ["STRING", {"multiline": true, "default": "all", "placeholder": "List the types of segments to be allowed, separated by commas"}]}, "optional": {"detailer_hook": ["DETAILER_HOOK"]}}, "input_order": {"required": ["bbox_detector", "image", "threshold", "dilation", "crop_factor", "drop_size", "labels"], "optional": ["detailer_hook"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ONNXDetectorSEGS", "display_name": "ONNX Detector (SEGS/legacy) - use BBOXDetector", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detector", "output_node": false}, "ImpactSimpleDetectorSEGS_for_AD": {"input": {"required": {"bbox_detector": ["BBOX_DETECTOR"], "image_frames": ["IMAGE"], "bbox_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "bbox_dilation": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 100, "step": 0.1}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "sub_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "sub_dilation": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "sub_bbox_expansion": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1}], "sam_mask_hint_threshold": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"masking_mode": [["Pivot SEGS", "Combine neighboring frames", "Don't combine"]], "segs_pivot": [["Combined mask", "1st frame mask"]], "sam_model_opt": ["SAM_MODEL", {"tooltip": "[OPTIONAL]\nSegment Anything Model for Silhouette Detection.\nBe sure to use the SAM_MODEL loaded through the SAMLoader (Impact) node as input.\nGiven this input, it refines the rectangular areas detected by BBOX_DETECTOR into silhouette shapes through SAM.\nsam_model_opt takes priority over segm_detector_opt."}], "segm_detector_opt": ["SEGM_DETECTOR"]}}, "input_order": {"required": ["bbox_detector", "image_frames", "bbox_threshold", "bbox_dilation", "crop_factor", "drop_size", "sub_threshold", "sub_dilation", "sub_bbox_expansion", "sam_mask_hint_threshold"], "optional": ["masking_mode", "segs_pivot", "sam_model_opt", "segm_detector_opt"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactSimpleDetectorSEGS_for_AD", "display_name": "Simple Detector for AnimateDiff (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detector", "output_node": false}, "ImpactSimpleDetectorSEGS": {"input": {"required": {"bbox_detector": ["BBOX_DETECTOR"], "image": ["IMAGE"], "bbox_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "bbox_dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 100, "step": 0.1}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "sub_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "sub_dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "sub_bbox_expansion": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1}], "sam_mask_hint_threshold": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"post_dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "sam_model_opt": ["SAM_MODEL", {"tooltip": "[OPTIONAL]\nSegment Anything Model for Silhouette Detection.\nBe sure to use the SAM_MODEL loaded through the SAMLoader (Impact) node as input.\nGiven this input, it refines the rectangular areas detected by BBOX_DETECTOR into silhouette shapes through SAM.\nsam_model_opt takes priority over segm_detector_opt."}], "segm_detector_opt": ["SEGM_DETECTOR"]}}, "input_order": {"required": ["bbox_detector", "image", "bbox_threshold", "bbox_dilation", "crop_factor", "drop_size", "sub_threshold", "sub_dilation", "sub_bbox_expansion", "sam_mask_hint_threshold"], "optional": ["post_dilation", "sam_model_opt", "segm_detector_opt"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactSimpleDetectorSEGS", "display_name": "Simple Detector (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detector", "output_node": false}, "ImpactSimpleDetectorSEGSPipe": {"input": {"required": {"detailer_pipe": ["DETAILER_PIPE"], "image": ["IMAGE"], "bbox_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "bbox_dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 100, "step": 0.1}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "sub_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "sub_dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "sub_bbox_expansion": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1}], "sam_mask_hint_threshold": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"post_dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}]}}, "input_order": {"required": ["detailer_pipe", "image", "bbox_threshold", "bbox_dilation", "crop_factor", "drop_size", "sub_threshold", "sub_dilation", "sub_bbox_expansion", "sam_mask_hint_threshold"], "optional": ["post_dilation"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactSimpleDetectorSEGSPipe", "display_name": "Simple Detector (SEGS/pipe)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detector", "output_node": false}, "ImpactControlNetApplySEGS": {"input": {"required": {"segs": ["SEGS"], "control_net": ["CONTROL_NET"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}, "optional": {"segs_preprocessor": ["SEGS_PREPROCESSOR"], "control_image": ["IMAGE"]}}, "input_order": {"required": ["segs", "control_net", "strength"], "optional": ["segs_preprocessor", "control_image"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactControlNetApplySEGS", "display_name": "ControlNetApply (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactControlNetApplyAdvancedSEGS": {"input": {"required": {"segs": ["SEGS"], "control_net": ["CONTROL_NET"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"segs_preprocessor": ["SEGS_PREPROCESSOR"], "control_image": ["IMAGE"]}}, "input_order": {"required": ["segs", "control_net", "strength", "start_percent", "end_percent"], "optional": ["segs_preprocessor", "control_image"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactControlNetApplyAdvancedSEGS", "display_name": "ControlNetApplyAdvanced (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactControlNetClearSEGS": {"input": {"required": {"segs": ["SEGS"]}}, "input_order": {"required": ["segs"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactControlNetClearSEGS", "display_name": "ImpactControlNetClearSEGS", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactIPAdapterApplySEGS": {"input": {"required": {"segs": ["SEGS"], "ipadapter_pipe": ["IPADAPTER_PIPE"], "weight": ["FLOAT", {"default": 0.7, "min": -1, "max": 3, "step": 0.05}], "noise": ["FLOAT", {"default": 0.4, "min": 0.0, "max": 1.0, "step": 0.01}], "weight_type": [["original", "linear", "channel penalty"], {"default": "channel penalty"}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 0.9, "min": 0.0, "max": 1.0, "step": 0.001}], "unfold_batch": ["BOOLEAN", {"default": false}], "faceid_v2": ["BOOLEAN", {"default": false}], "weight_v2": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "context_crop_factor": ["FLOAT", {"default": 1.2, "min": 1.0, "max": 100, "step": 0.1}], "reference_image": ["IMAGE"]}, "optional": {"combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "neg_image": ["IMAGE"]}}, "input_order": {"required": ["segs", "ipadapter_pipe", "weight", "noise", "weight_type", "start_at", "end_at", "unfold_batch", "faceid_v2", "weight_v2", "context_crop_factor", "reference_image"], "optional": ["combine_embeds", "neg_image"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactIPAdapterApplySEGS", "display_name": "IPAdapterApply (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactDecomposeSEGS": {"input": {"required": {"segs": ["SEGS"]}}, "input_order": {"required": ["segs"]}, "output": ["SEGS_HEADER", "SEG_ELT"], "output_is_list": [false, true], "output_name": ["SEGS_HEADER", "SEG_ELT"], "name": "ImpactDecomposeSEGS", "display_name": "Decompose (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactAssembleSEGS": {"input": {"required": {"seg_header": ["SEGS_HEADER"], "seg_elt": ["SEG_ELT"]}}, "input_order": {"required": ["seg_header", "seg_elt"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactAssembleSEGS", "display_name": "Assemble (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactFrom_SEG_ELT": {"input": {"required": {"seg_elt": ["SEG_ELT"]}}, "input_order": {"required": ["seg_elt"]}, "output": ["SEG_ELT", "IMAGE", "MASK", "SEG_ELT_crop_region", "SEG_ELT_bbox", "SEG_ELT_control_net_wrapper", "FLOAT", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["seg_elt", "cropped_image", "cropped_mask", "crop_region", "bbox", "control_net_wrapper", "confidence", "label"], "name": "ImpactFrom_SEG_ELT", "display_name": "From SEG_ELT", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactEdit_SEG_ELT": {"input": {"required": {"seg_elt": ["SEG_ELT"]}, "optional": {"cropped_image_opt": ["IMAGE"], "cropped_mask_opt": ["MASK"], "crop_region_opt": ["SEG_ELT_crop_region"], "bbox_opt": ["SEG_ELT_bbox"], "control_net_wrapper_opt": ["SEG_ELT_control_net_wrapper"], "confidence_opt": ["FLOAT", {"min": 0, "max": 1.0, "step": 0.1, "forceInput": true}], "label_opt": ["STRING", {"multiline": false, "forceInput": true}]}}, "input_order": {"required": ["seg_elt"], "optional": ["cropped_image_opt", "cropped_mask_opt", "crop_region_opt", "bbox_opt", "control_net_wrapper_opt", "confidence_opt", "label_opt"]}, "output": ["SEG_ELT"], "output_is_list": [false], "output_name": ["SEG_ELT"], "name": "ImpactEdit_SEG_ELT", "display_name": "Edit SEG_ELT", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactDilate_Mask_SEG_ELT": {"input": {"required": {"seg_elt": ["SEG_ELT"], "dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}]}}, "input_order": {"required": ["seg_elt", "dilation"]}, "output": ["SEG_ELT"], "output_is_list": [false], "output_name": ["SEG_ELT"], "name": "ImpactDilate_Mask_SEG_ELT", "display_name": "Dilate Mask (SEG_ELT)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactDilateMask": {"input": {"required": {"mask": ["MASK"], "dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}]}}, "input_order": {"required": ["mask", "dilation"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ImpactDilateMask", "display_name": "Dilate Mask", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactGaussianBlurMask": {"input": {"required": {"mask": ["MASK"], "kernel_size": ["INT", {"default": 10, "min": 0, "max": 100, "step": 1}], "sigma": ["FLOAT", {"default": 10.0, "min": 0.1, "max": 100.0, "step": 0.1}]}}, "input_order": {"required": ["mask", "kernel_size", "sigma"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ImpactGaussianBlurMask", "display_name": "Gaussian Blur Mask", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactDilateMaskInSEGS": {"input": {"required": {"segs": ["SEGS"], "dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}]}}, "input_order": {"required": ["segs", "dilation"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactDilateMaskInSEGS", "display_name": "Dilate Mask (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactGaussianBlurMaskInSEGS": {"input": {"required": {"segs": ["SEGS"], "kernel_size": ["INT", {"default": 10, "min": 0, "max": 100, "step": 1}], "sigma": ["FLOAT", {"default": 10.0, "min": 0.1, "max": 100.0, "step": 0.1}]}}, "input_order": {"required": ["segs", "kernel_size", "sigma"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactGaussianBlurMaskInSEGS", "display_name": "Gaussian Blur Mask (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactScaleBy_BBOX_SEG_ELT": {"input": {"required": {"seg": ["SEG_ELT"], "scale_by": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 8.0, "step": 0.01}]}}, "input_order": {"required": ["seg", "scale_by"]}, "output": ["SEG_ELT"], "output_is_list": [false], "output_name": ["SEG_ELT"], "name": "ImpactScaleBy_BBOX_SEG_ELT", "display_name": "ScaleBy BBOX (SEG_ELT)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactFrom_SEG_ELT_bbox": {"input": {"required": {"bbox": ["SEG_ELT_bbox"]}}, "input_order": {"required": ["bbox"]}, "output": ["INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["left", "top", "right", "bottom"], "name": "ImpactFrom_SEG_ELT_bbox", "display_name": "From SEG_ELT bbox", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactFrom_SEG_ELT_crop_region": {"input": {"required": {"crop_region": ["SEG_ELT_crop_region"]}}, "input_order": {"required": ["crop_region"]}, "output": ["INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["left", "top", "right", "bottom"], "name": "ImpactFrom_SEG_ELT_crop_region", "display_name": "From SEG_ELT crop_region", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactCount_Elts_in_SEGS": {"input": {"required": {"segs": ["SEGS"]}}, "input_order": {"required": ["segs"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "ImpactCount_Elts_in_SEGS", "display_name": "Count Elts in SEGS", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "BboxDetectorCombined_v2": {"input": {"required": {"bbox_detector": ["BBOX_DETECTOR"], "image": ["IMAGE"], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "dilation": ["INT", {"default": 4, "min": -512, "max": 512, "step": 1}]}}, "input_order": {"required": ["bbox_detector", "image", "threshold", "dilation"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "BboxDetectorCombined_v2", "display_name": "BBOX Detector (combined)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detector", "output_node": false}, "SegmDetectorCombined_v2": {"input": {"required": {"segm_detector": ["SEGM_DETECTOR"], "image": ["IMAGE"], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}]}}, "input_order": {"required": ["segm_detector", "image", "threshold", "dilation"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "SegmDetectorCombined_v2", "display_name": "SEGM Detector (combined)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detector", "output_node": false}, "SegsToCombinedMask": {"input": {"required": {"segs": ["SEGS"]}}, "input_order": {"required": ["segs"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "SegsToCombinedMask", "display_name": "SEGS to MASK (combined)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Operation", "output_node": false}, "KSamplerProvider": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "Random seed to use for generating CPU noise for sampling."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "tooltip": "total sampling steps"}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "tooltip": "classifier free guidance value"}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"], {"tooltip": "sampler"}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"], {"tooltip": "noise schedule"}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The amount of noise to remove. This amount is the noise added at the start, and the higher it is, the more the input latent will be modified before being returned."}], "basic_pipe": ["BASIC_PIPE", {"tooltip": "basic_pipe input for sampling"}]}, "optional": {"scheduler_func_opt": ["SCHEDULER_FUNC", {"tooltip": "[OPTIONAL] Noise schedule generation function. If this is set, the scheduler widget will be ignored."}]}}, "input_order": {"required": ["seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "basic_pipe"], "optional": ["scheduler_func_opt"]}, "output": ["KSAMPLER"], "output_is_list": [false], "output_name": ["KSAMPLER"], "name": "KSamplerProvider", "display_name": "KSamplerProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Sampler", "output_node": false, "output_tooltips": ["sampler wrapper. (Can be used when generating a regional_prompt.)"]}, "TwoSamplersForMask": {"input": {"required": {"latent_image": ["LATENT", {"tooltip": "input latent image"}], "base_sampler": ["KSAMPLER", {"tooltip": "Sampler to apply to the region outside the mask."}], "mask_sampler": ["KSAMPLER", {"tooltip": "Sampler to apply to the masked region."}], "mask": ["MASK", {"tooltip": "region mask"}]}}, "input_order": {"required": ["latent_image", "base_sampler", "mask_sampler", "mask"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "TwoSamplersForMask", "display_name": "TwoSamplersForMask", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Sampler", "output_node": false, "output_tooltips": ["result latent"]}, "TiledKSamplerProvider": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "Random seed to use for generating CPU noise for sampling."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "tooltip": "total sampling steps"}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "tooltip": "classifier free guidance value"}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"], {"tooltip": "sampler"}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"], {"tooltip": "noise schedule"}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The amount of noise to remove. This amount is the noise added at the start, and the higher it is, the more the input latent will be modified before being returned."}], "tile_width": ["INT", {"default": 512, "min": 320, "max": 16384, "step": 64, "tooltip": "Sets the width of the tile to be used in TiledKSampler."}], "tile_height": ["INT", {"default": 512, "min": 320, "max": 16384, "step": 64, "tooltip": "Sets the height of the tile to be used in TiledKSampler."}], "tiling_strategy": [["random", "padded", "simple"], {"tooltip": "Sets the tiling strategy for TiledKSampler."}], "basic_pipe": ["BASIC_PIPE", {"tooltip": "basic_pipe input for sampling"}]}}, "input_order": {"required": ["seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "tile_width", "tile_height", "tiling_strategy", "basic_pipe"]}, "output": ["KSAMPLER"], "output_is_list": [false], "output_name": ["KSAMPLER"], "name": "TiledKSamplerProvider", "display_name": "TiledKSamplerProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Sampler", "output_node": false, "output_tooltips": ["sampler wrapper. (Can be used when generating a regional_prompt.)"]}, "KSamplerAdvancedProvider": {"input": {"required": {"cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "toolip": "classifier free guidance value"}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"], {"toolip": "sampler"}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"], {"toolip": "noise schedule"}], "sigma_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01, "toolip": "Multiplier of noise schedule"}], "basic_pipe": ["BASIC_PIPE", {"toolip": "basic_pipe input for sampling"}]}, "optional": {"sampler_opt": ["SAMPLER", {"toolip": "[OPTIONAL] Uses the passed sampler instead of internal impact_sampler."}], "scheduler_func_opt": ["SCHEDULER_FUNC", {"toolip": "[OPTIONAL] Noise schedule generation function. If this is set, the scheduler widget will be ignored."}]}}, "input_order": {"required": ["cfg", "sampler_name", "scheduler", "sigma_factor", "basic_pipe"], "optional": ["sampler_opt", "scheduler_func_opt"]}, "output": ["KSAMPLER_ADVANCED"], "output_is_list": [false], "output_name": ["KSAMPLER_ADVANCED"], "name": "KSamplerAdvancedProvider", "display_name": "KSamplerAdvancedProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Sampler", "output_node": false, "output_tooltips": ["sampler wrapper. (Can be used when generating a regional_prompt.)"]}, "TwoAdvancedSamplersForMask": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "Random seed to use for generating CPU noise for sampling."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "tooltip": "total sampling steps"}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The amount of noise to remove. This amount is the noise added at the start, and the higher it is, the more the input latent will be modified before being returned."}], "samples": ["LATENT", {"tooltip": "input latent image"}], "base_sampler": ["KSAMPLER_ADVANCED", {"tooltip": "Sampler to apply to the region outside the mask."}], "mask_sampler": ["KSAMPLER_ADVANCED", {"tooltip": "Sampler to apply to the masked region."}], "mask": ["MASK", {"tooltip": "region mask"}], "overlap_factor": ["INT", {"default": 10, "min": 0, "max": 10000, "tooltip": "To smooth the seams of the region boundaries, expand the mask by the overlap_factor amount to overlap with other regions."}]}}, "input_order": {"required": ["seed", "steps", "denoise", "samples", "base_sampler", "mask_sampler", "mask", "overlap_factor"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "TwoAdvancedSamplersForMask", "display_name": "TwoAdvancedSamplersForMask", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Sampler", "output_node": false, "output_tooltips": ["result latent"]}, "ImpactNegativeConditioningPlaceholder": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ImpactNegativeConditioningPlaceholder", "display_name": "Negative Cond Placeholder", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/sampling", "output_node": false, "output_tooltips": ["This is a Placeholder for the FLUX model that does not use Negative Conditioning."]}, "PreviewBridge": {"input": {"required": {"images": ["IMAGE"], "image": ["STRING", {"default": ""}]}, "optional": {"block": ["BOOLEAN", {"default": false, "label_on": "if_empty_mask", "label_off": "never", "tooltip": "is_empty_mask: If the mask is empty, the execution is stopped.\nnever: The execution is never stopped."}]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "image"], "optional": ["block"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "PreviewBridge", "display_name": "Preview Bridge (Image)", "description": "This is a feature that allows you to edit and send a Mask over a image.\nIf the block is set to 'is_empty_mask', the execution is stopped when the mask is empty.", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": true}, "PreviewBridgeLatent": {"input": {"required": {"latent": ["LATENT"], "image": ["STRING", {"default": ""}], "preview_method": [["Latent2RGB-FLUX.1", "Latent2RGB-SDXL", "Latent2RGB-SD15", "Latent2RGB-SD3", "Latent2RGB-SD-X4", "Latent2RGB-Playground-2.5", "Latent2RGB-SC-Prior", "Latent2RGB-SC-B", "TAEF1", "TAESDXL", "TAESD15", "TAESD3"]]}, "optional": {"vae_opt": ["VAE"], "block": ["BOOLEAN", {"default": false, "label_on": "if_empty_mask", "label_off": "never", "tooltip": "is_empty_mask: If the mask is empty, the execution is stopped.\nnever: The execution is never stopped. Instead, it returns a white mask."}]}, "hidden": {"unique_id": "UNIQUE_ID", "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["latent", "image", "preview_method"], "optional": ["vae_opt", "block"], "hidden": ["unique_id", "prompt", "extra_pnginfo"]}, "output": ["LATENT", "MASK"], "output_is_list": [false, false], "output_name": ["LATENT", "MASK"], "name": "PreviewBridgeLatent", "display_name": "Preview Bridge (Latent)", "description": "This is a feature that allows you to edit and send a Mask over a latent image.\nIf the block is set to 'is_empty_mask', the execution is stopped when the mask is empty.", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": true}, "ImageSender": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ImgSender"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "link_id"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ImageSender", "display_name": "Image Sender", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": true}, "ImageReceiver": {"input": {"required": {"image": [["00100-3444294236.png", "01115-3441384736-mature ginger guy, laying on field, armpit, sunburnt, blushing, blued eyes, smile, tank top, muscular, facial hair, moustache ,.png", "0c42073e550d6ae9cb7624ad1b2ee53d1d4e8c69_high.webp", "11121_158078841563e50810b30c1.jpg", "1313766545.png", "2024-08-14ComfyUI_00004_.png", "33097901.jpg", "33246906.jpg", "360_F_562816292_d7bYLVGfttt68HKFkOc4f2QKtWUg8Q5n.jpg", "381543ce-3045-4381-9b52-676686caed8f.jpg", "AnimateDiff_00037.mp4", "BGDK748BV7YGRQNF7P3CDK8910 (1).jpeg", "ComfyUI_00074_.png", "ComfyUI_00078_.png", "ComfyUI_00091_.png", "ComfyUI_00219_.png", "ComfyUI_00222_.png", "ComfyUI_00808_.png", "ComfyUI_00809_.png", "ComfyUI_00810_.png", "ComfyUI_00813_.png", "ComfyUI_00815_.png", "ComfyUI_00818_.png", "ComfyUI_00819_.png", "ComfyUI_00842_.png", "ComfyUI_temp_alxcm_00001_.png", "ComfyUI_temp_ayutp_00001_.png", "ComfyUI_temp_bvpdk_00001_.png", "ComfyUI_temp_bvpdk_00004_.png", "ComfyUI_temp_cgbmm_00001_.png", "ComfyUI_temp_chusq_00001_.png", "ComfyUI_temp_doxtg_00002_.png", "ComfyUI_temp_ecxhs_00001_.png", "ComfyUI_temp_ecxhs_00004_.png", "ComfyUI_temp_ecxhs_00006_ (1).png", "ComfyUI_temp_ecxhs_00006_.png", "ComfyUI_temp_ecxhs_00008_.png", "ComfyUI_temp_ecxhs_00010_.png", "ComfyUI_temp_fqjhe_00001_.png", "ComfyUI_temp_fqjhe_00016_.png", "ComfyUI_temp_gxxzz_00001_.png", "ComfyUI_temp_hlvpl_00001_.png", "ComfyUI_temp_ipugi_00131_.png", "ComfyUI_temp_jluvj_00001_.png", "ComfyUI_temp_kteza_00001_.png", "ComfyUI_temp_kubpn_00003_.png", "ComfyUI_temp_lviic_00009_.png", "ComfyUI_temp_lzhyu_00004_.png", "ComfyUI_temp_nmjmf_00001_.png", "ComfyUI_temp_oqypc_00001_.png", "ComfyUI_temp_oqypc_00004_ (1).png", "ComfyUI_temp_oufve_00001_.png", "ComfyUI_temp_pukae_00002_.png", "ComfyUI_temp_qakbs_00001_.png", "ComfyUI_temp_rdanj_00004_.png", "ComfyUI_temp_rqrpi_00001_.png", "ComfyUI_temp_rsiuu_00005_.png", "ComfyUI_temp_rtbjq_00004_.png", "ComfyUI_temp_toyue_00002_.png", "ComfyUI_temp_tqaav_00002_.png", "ComfyUI_temp_txndi_00002_.png", "Guy_Mask_5.png", "Guy_Matcap_5.png", "Guy_Outline_5.png", "H100Test_00015_.png", "H100Test_00016_.png", "H100Test_00034_.png", "IMG_3440.png", "IMG_6129.png", "MAsk.png", "Mario.webp", "MarkuryFLUX_00003_.png", "MarkuryFLUX_00005_.png", "MarkuryFLUX_00022_.png", "MarkuryFLUX_00036_.png", "MarkuryFLUX_00037_.png", "Mask_2 (1).png", "Mask_2.png", "Matcap.png", "Outline.png", "Outline_2.png", "PB-_temp_bxspr_00001_.png", "PNG image.jpeg", "Playbook_00.png", "Playbook_22.png", "Playbook_47.png", "Playbook__00001_ (1) (1).png", "Playbook__00001_ (1).png", "Playbook__00001_ (2).png", "Playbook__00001_.png", "Playbook__00003_ (4).png", "Playbook__00016_.png", "Playbook__00018_.png", "Playbook__00031_.png", "Playbook__00034_.png", "Playbook__00045_.png", "Playbook__00058_.png", "Playbook__00065_.png", "Playbook__00113_.png", "Playbook__00178_.png", "Playbook__00183_.png", "Playbook__00184_.png", "Playbook__00205_.png", "Playbook__00314.mp4", "Playbook__00348_.png", "Playbook__00417_.png", "Playbook__00419_ (1).png", "Playbook__00419_.png", "SDXL-Lightning_00012_.png", "SDXL_ControlNet_Image.png", "archivs_upscalewithflux.png", "beauty (1).png", "beauty (2).png", "beauty (3).png", "beauty (4).png", "beauty-0 (11).png", "beauty-0 (21).png", "beauty-0 (36).png", "beauty-0 (9).png", "beauty-0 - 2024-07-02T105656.553.png", "beauty.png", "ca-times.brightspotcdn.jpg", "canny.png", "canny_res_00003_ (1).png", "canny_res_00003_.png", "canny_res_00014_.png", "canny_res_00038_.png", "canny_res_00040_.png", "dancer-front-depth.png", "dancer-front-mask.png", "dancer-front-outline.png", "depth (1).png", "depth (2).png", "depth (3).png", "depth (4).png", "depth (5).png", "depth-0 (16).png", "depth-0 (18).png", "depth-0 (19).png", "depth-0 (31).png", "depth-0 (38).png", "depth-0 - 2024-07-02T105656.499.png", "depth.png", "depth0000 (1).png", "depth0000 (2).png", "depth0000 (3).png", "depth0000.png", "depth0001.png", "depth0043.png", "download.png", "example.png", "file.txt", "img_BmzB6PyCLHnFfVvV.png", "img_DpgERK4DxUAwLftG.png", "img_QYLbD1uzHC1nFbAE.png", "img_ULjhfQdRpzpEnmug.png", "img_Xipc5yPPxgtt1QGj.png", "img_iBZAGHnJ2Bv3f1XS.png", "inputs_img_DLe7eAeVKcd5aihb copy.png", "inputs_img_DLe7eAeVKcd5aihb.png", "inputs_img_EPMSddrLooFQ1YVD.png", "inputs_img_JLRRUVkofX1vCmjx.png", "inputs_img_Jvze5V927RFFAHX5.png", "inputs_img_KiPSrfifuNwC54ep.png", "inputs_img_UBc9tSV7cFAx87FQ.png", "inputs_img_Uf1LEsrNL4ovoWpz copy.png", "inputs_img_Uf1LEsrNL4ovoWpz.png", "inputs_img_Yhq6WtF5vDhoS4r5.png", "inputs_img_bG6odzGr8EZUPK1u.png", "inputs_img_fp87ttHy7b3hLkDg.png", "inputs_img_pKYznktDTwbYPGcL.png", "inputs_img_qyyvpcueAihTw9YV.png", "istockphoto-1325701162-612x612.jpg", "large-elephant-herd-walking-dust-savuti-botswana-towards-camera-196186738.webp", "manwithsign-depth.png", "manwithsign-mask.png", "manwithsign-outline.png", "mask (1).png", "mask (10).png", "mask (2).png", "mask (3).png", "mask (4).png", "mask (5).png", "mask (6).png", "mask (7).png", "mask (8).png", "mask (9).png", "mask-0 (11).png", "mask-0 (24).png", "mask-0 (28).png", "mask-0 (9).png", "mask-0 - 2024-07-02T105656.507.png", "mask.png", "masks.png", "night vision.jpg", "outline (1).png", "outline (2).png", "outline (3).png", "outline (4).png", "outline-0 (11).png", "outline-0 (31).png", "outline-0 (9).png", "outline-0 - 2024-07-02T105656.503.png", "outline.png", "outline0000 (1).png", "outline0000 (2).png", "outline0000 (3).png", "outline0000.png", "outline0001.png", "outline0043.png", "playbook_59b784a6-af19-4b44-9a45-1e98bae3c9e5.png", "playbook_e2a76fa6-15a6-41d2-922a-29dd68bfd3e3.png", "refernece.jpg", "result_14.png", "rgthree.compare._temp_rzpfz_00007_.png", "safari.jpg", "undefined_image (1).png", "walking-depth.png", "walking-mask.png", "walking-outline.png"]], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_to_workflow": ["BOOLEAN", {"default": false}], "image_data": ["STRING", {"multiline": false}], "trigger_always": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}]}}, "input_order": {"required": ["image", "link_id", "save_to_workflow", "image_data", "trigger_always"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImageReceiver", "display_name": "Image Receiver", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "LatentSender": {"input": {"required": {"samples": ["LATENT"], "filename_prefix": ["STRING", {"default": "latents/LatentSender"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "preview_method": [["Latent2RGB-SDXL", "Latent2RGB-SD15", "TAESDXL", "TAESD15"]]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["samples", "filename_prefix", "link_id", "preview_method"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "LatentSender", "display_name": "LatentSender", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": true}, "LatentReceiver": {"input": {"required": {"latent": [[]], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "trigger_always": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}]}}, "input_order": {"required": ["latent", "link_id", "trigger_always"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentReceiver", "display_name": "LatentReceiver", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImageMaskSwitch": {"input": {"required": {"select": ["INT", {"default": 1, "min": 1, "max": 4, "step": 1}], "images1": ["IMAGE"]}, "optional": {"mask1_opt": ["MASK"], "images2_opt": ["IMAGE"], "mask2_opt": ["MASK"], "images3_opt": ["IMAGE"], "mask3_opt": ["MASK"], "images4_opt": ["IMAGE"], "mask4_opt": ["MASK"]}}, "input_order": {"required": ["select", "images1"], "optional": ["mask1_opt", "images2_opt", "mask2_opt", "images3_opt", "mask3_opt", "images4_opt", "mask4_opt"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImageMaskSwitch", "display_name": "Switch (images, mask)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": true}, "LatentSwitch": {"input": {"required": {"select": ["INT", {"default": 1, "min": 1, "max": 999999, "step": 1, "tooltip": "The input number you want to output among the inputs"}], "sel_mode": ["BOOLEAN", {"default": false, "label_on": "select_on_prompt", "label_off": "select_on_execution", "forceInput": false, "tooltip": "In the case of 'select_on_execution', the selection is dynamically determined at the time of workflow execution. 'select_on_prompt' is an option that exists for older versions of ComfyUI, and it makes the decision before the workflow execution."}]}, "optional": {"input1": ["*", {"lazy": true, "tooltip": "Any input. When connected, one more input slot is added."}]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["select", "sel_mode"], "optional": ["input1"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["*", "STRING", "INT"], "output_is_list": [false, false, false], "output_name": ["selected_value", "selected_label", "selected_index"], "name": "LatentSwitch", "display_name": "Switch (latent/legacy)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false, "output_tooltips": ["Output is generated only from the input chosen by the 'select' value.", "Slot label of the selected input slot", "Outputs the select value as is"]}, "SEGSSwitch": {"input": {"required": {"select": ["INT", {"default": 1, "min": 1, "max": 999999, "step": 1, "tooltip": "The input number you want to output among the inputs"}], "sel_mode": ["BOOLEAN", {"default": false, "label_on": "select_on_prompt", "label_off": "select_on_execution", "forceInput": false, "tooltip": "In the case of 'select_on_execution', the selection is dynamically determined at the time of workflow execution. 'select_on_prompt' is an option that exists for older versions of ComfyUI, and it makes the decision before the workflow execution."}]}, "optional": {"input1": ["*", {"lazy": true, "tooltip": "Any input. When connected, one more input slot is added."}]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["select", "sel_mode"], "optional": ["input1"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["*", "STRING", "INT"], "output_is_list": [false, false, false], "output_name": ["selected_value", "selected_label", "selected_index"], "name": "SEGSSwitch", "display_name": "Switch (SEGS/legacy)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false, "output_tooltips": ["Output is generated only from the input chosen by the 'select' value.", "Slot label of the selected input slot", "Outputs the select value as is"]}, "ImpactSwitch": {"input": {"required": {"select": ["INT", {"default": 1, "min": 1, "max": 999999, "step": 1, "tooltip": "The input number you want to output among the inputs"}], "sel_mode": ["BOOLEAN", {"default": false, "label_on": "select_on_prompt", "label_off": "select_on_execution", "forceInput": false, "tooltip": "In the case of 'select_on_execution', the selection is dynamically determined at the time of workflow execution. 'select_on_prompt' is an option that exists for older versions of ComfyUI, and it makes the decision before the workflow execution."}]}, "optional": {"input1": ["*", {"lazy": true, "tooltip": "Any input. When connected, one more input slot is added."}]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["select", "sel_mode"], "optional": ["input1"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["*", "STRING", "INT"], "output_is_list": [false, false, false], "output_name": ["selected_value", "selected_label", "selected_index"], "name": "ImpactSwitch", "display_name": "Switch (Any)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false, "output_tooltips": ["Output is generated only from the input chosen by the 'select' value.", "Slot label of the selected input slot", "Outputs the select value as is"]}, "ImpactInversedSwitch": {"input": {"required": {"select": ["INT", {"default": 1, "min": 1, "max": 999999, "step": 1, "tooltip": "The output number you want to send from the input"}], "input": ["*", {"tooltip": "Any input. When connected, one more input slot is added."}]}, "optional": {"sel_mode": ["BOOLEAN", {"default": false, "label_on": "select_on_prompt", "label_off": "select_on_execution", "forceInput": false, "tooltip": "In the case of 'select_on_execution', the selection is dynamically determined at the time of workflow execution. 'select_on_prompt' is an option that exists for older versions of ComfyUI, and it makes the decision before the workflow execution."}]}, "hidden": {"prompt": "PROMPT", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["select", "input"], "optional": ["sel_mode"], "hidden": ["prompt", "unique_id"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "ImpactInversedSwitch", "display_name": "Inversed Switch (Any)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false, "output_tooltips": ["Output occurs only from the output selected by the 'select' value.\nWhen slots are connected, additional slots are created."]}, "ImpactWildcardProcessor": {"input": {"required": {"wildcard_text": ["STRING", {"multiline": true, "dynamicPrompts": false}], "populated_text": ["STRING", {"multiline": true, "dynamicPrompts": false}], "mode": ["BOOLEAN", {"default": true, "label_on": "Populate", "label_off": "Fixed"}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "Select to add Wildcard": [["Select the Wildcard to add to the text"]]}}, "input_order": {"required": ["wildcard_text", "populated_text", "mode", "seed", "Select to add Wildcard"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "ImpactWildcardProcessor", "display_name": "ImpactWildcardProcessor", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Prompt", "output_node": false}, "ImpactWildcardEncode": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "wildcard_text": ["STRING", {"multiline": true, "dynamicPrompts": false}], "populated_text": ["STRING", {"multiline": true, "dynamicPrompts": false}], "mode": ["BOOLEAN", {"default": true, "label_on": "Populate", "label_off": "Fixed"}], "Select to add LoRA": [["Select the LoRA to add to the text", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["model", "clip", "wildcard_text", "populated_text", "mode", "Select to add LoRA", "Select to add Wildcard", "seed"]}, "output": ["MODEL", "CLIP", "CONDITIONING", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["model", "clip", "conditioning", "populated_text"], "name": "ImpactWildcardEncode", "display_name": "ImpactWildcardEncode", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Prompt", "output_node": false}, "SEGSUpscaler": {"input": {"required": {"image": ["IMAGE"], "segs": ["SEGS"], "model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "rescale_factor": ["FLOAT", {"default": 2, "min": 0.01, "max": 100.0, "step": 0.01}], "resampling_method": [["lanczos", "nearest", "bilinear", "bicubic"]], "supersample": [["true", "false"]], "rounding_modulus": ["INT", {"default": 8, "min": 8, "max": 1024, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}]}, "optional": {"upscale_model_opt": ["UPSCALE_MODEL"], "upscaler_hook_opt": ["UPSCALER_HOOK"], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["image", "segs", "model", "clip", "vae", "rescale_factor", "resampling_method", "supersample", "rounding_modulus", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "denoise", "feather", "inpaint_model", "noise_mask_feather"], "optional": ["upscale_model_opt", "upscaler_hook_opt", "scheduler_func_opt"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "SEGSUpscaler", "display_name": "Upscaler (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Upscale", "output_node": false}, "SEGSUpscalerPipe": {"input": {"required": {"image": ["IMAGE"], "segs": ["SEGS"], "basic_pipe": ["BASIC_PIPE"], "rescale_factor": ["FLOAT", {"default": 2, "min": 0.01, "max": 100.0, "step": 0.01}], "resampling_method": [["lanczos", "nearest", "bilinear", "bicubic"]], "supersample": [["true", "false"]], "rounding_modulus": ["INT", {"default": 8, "min": 8, "max": 1024, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}]}, "optional": {"upscale_model_opt": ["UPSCALE_MODEL"], "upscaler_hook_opt": ["UPSCALER_HOOK"], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["image", "segs", "basic_pipe", "rescale_factor", "resampling_method", "supersample", "rounding_modulus", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "feather", "inpaint_model", "noise_mask_feather"], "optional": ["upscale_model_opt", "upscaler_hook_opt", "scheduler_func_opt"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "SEGSUpscalerPipe", "display_name": "Upscaler (SEGS/pipe)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Upscale", "output_node": false}, "SEGSDetailer": {"input": {"required": {"image": ["IMAGE"], "segs": ["SEGS"], "guide_size": ["FLOAT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 768, "min": 64, "max": 16384, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "noise_mask": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "force_inpaint": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "basic_pipe": ["BASIC_PIPE"], "refiner_ratio": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 100}], "cycle": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"refiner_basic_pipe_opt": ["BASIC_PIPE"], "inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["image", "segs", "guide_size", "guide_size_for", "max_size", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "noise_mask", "force_inpaint", "basic_pipe", "refiner_ratio", "batch_size", "cycle"], "optional": ["refiner_basic_pipe_opt", "inpaint_model", "noise_mask_feather", "scheduler_func_opt"]}, "output": ["SEGS", "IMAGE"], "output_is_list": [false, true], "output_name": ["segs", "cnet_images"], "name": "SEGSDetailer", "display_name": "SEGSDetailer", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detailer", "output_node": false}, "SEGSPaste": {"input": {"required": {"image": ["IMAGE"], "segs": ["SEGS"], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "alpha": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}]}, "optional": {"ref_image_opt": ["IMAGE"]}}, "input_order": {"required": ["image", "segs", "feather", "alpha"], "optional": ["ref_image_opt"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "SEGSPaste", "display_name": "SEGSPaste", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detailer", "output_node": false}, "SEGSPreview": {"input": {"required": {"segs": ["SEGS"], "alpha_mode": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "min_alpha": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"fallback_image_opt": ["IMAGE"]}}, "input_order": {"required": ["segs", "alpha_mode", "min_alpha"], "optional": ["fallback_image_opt"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "SEGSPreview", "display_name": "SEGSPreview", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": true}, "SEGSPreviewCNet": {"input": {"required": {"segs": ["SEGS"]}}, "input_order": {"required": ["segs"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "SEGSPreviewCNet", "display_name": "SEGSPreview (CNET Image)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": true}, "SEGSToImageList": {"input": {"required": {"segs": ["SEGS"]}, "optional": {"fallback_image_opt": ["IMAGE"]}}, "input_order": {"required": ["segs"], "optional": ["fallback_image_opt"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "SEGSToImageList", "display_name": "SEGSToImageList", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactSEGSToMaskList": {"input": {"required": {"segs": ["SEGS"]}}, "input_order": {"required": ["segs"]}, "output": ["MASK"], "output_is_list": [true], "output_name": ["MASK"], "name": "ImpactSEGSToMaskList", "display_name": "SEGS to Mask List", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactSEGSToMaskBatch": {"input": {"required": {"segs": ["SEGS"]}}, "input_order": {"required": ["segs"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ImpactSEGSToMaskBatch", "display_name": "SEGS to Mask Batch", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactSEGSConcat": {"input": {"required": {"segs1": ["SEGS"]}}, "input_order": {"required": ["segs1"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactSEGSConcat", "display_name": "SEGS Concat", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactSEGSPicker": {"input": {"required": {"picks": ["STRING", {"multiline": true, "dynamicPrompts": false, "pysssss.autocomplete": false}], "segs": ["SEGS"]}, "optional": {"fallback_image_opt": ["IMAGE"]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["picks", "segs"], "optional": ["fallback_image_opt"], "hidden": ["unique_id"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactSEGSPicker", "display_name": "Picker (SEGS)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactMakeTileSEGS": {"input": {"required": {"images": ["IMAGE"], "bbox_size": ["INT", {"default": 512, "min": 64, "max": 4096, "step": 8}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 10, "step": 0.01}], "min_overlap": ["INT", {"default": 5, "min": 0, "max": 512, "step": 1}], "filter_segs_dilation": ["INT", {"default": 20, "min": -255, "max": 255, "step": 1}], "mask_irregularity": ["FLOAT", {"default": 0, "min": 0, "max": 1.0, "step": 0.01}], "irregular_mask_mode": [["Reuse fast", "Reuse quality", "All random fast", "All random quality"]]}, "optional": {"filter_in_segs_opt": ["SEGS"], "filter_out_segs_opt": ["SEGS"]}}, "input_order": {"required": ["images", "bbox_size", "crop_factor", "min_overlap", "filter_segs_dilation", "mask_irregularity", "irregular_mask_mode"], "optional": ["filter_in_segs_opt", "filter_out_segs_opt"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactMakeTileSEGS", "display_name": "Make Tile SEGS", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/__for_testing", "output_node": false}, "ImpactSEGSMerge": {"input": {"required": {"segs": ["SEGS"]}}, "input_order": {"required": ["segs"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactSEGSMerge", "display_name": "SEGS Merge", "description": "SEGS contains multiple SEGs. SEGS Merge integrates several SEGs into a single merged SEG. The label is changed to `merged` and the confidence becomes the minimum confidence. The applied controlnet and cropped_image are removed.", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "SEGSDetailerForAnimateDiff": {"input": {"required": {"image_frames": ["IMAGE"], "segs": ["SEGS"], "guide_size": ["FLOAT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 768, "min": 64, "max": 16384, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "basic_pipe": ["BASIC_PIPE"], "refiner_ratio": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0}]}, "optional": {"refiner_basic_pipe_opt": ["BASIC_PIPE"], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["image_frames", "segs", "guide_size", "guide_size_for", "max_size", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "basic_pipe", "refiner_ratio"], "optional": ["refiner_basic_pipe_opt", "noise_mask_feather", "scheduler_func_opt"]}, "output": ["SEGS", "IMAGE"], "output_is_list": [false, true], "output_name": ["segs", "cnet_images"], "name": "SEGSDetailerForAnimateDiff", "display_name": "SEGSDetailer For AnimateDiff (SEGS/pipe)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Detailer", "output_node": false}, "ImpactKSamplerBasicPipe": {"input": {"required": {"basic_pipe": ["BASIC_PIPE", {"tooltip": "basic_pipe input for sampling"}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "Random seed to use for generating CPU noise for sampling."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "tooltip": "total sampling steps"}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "tooltip": "classifier free guidance value"}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"], {"tooltip": "sampler"}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"], {"tooltip": "noise schedule"}], "latent_image": ["LATENT", {"tooltip": "input latent image"}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The amount of noise to remove. This amount is the noise added at the start, and the higher it is, the more the input latent will be modified before being returned."}]}, "optional": {"scheduler_func_opt": ["SCHEDULER_FUNC", {"tooltip": "[OPTIONAL] Noise schedule generation function. If this is set, the scheduler widget will be ignored."}]}}, "input_order": {"required": ["basic_pipe", "seed", "steps", "cfg", "sampler_name", "scheduler", "latent_image", "denoise"], "optional": ["scheduler_func_opt"]}, "output": ["BASIC_PIPE", "LATENT", "VAE"], "output_is_list": [false, false, false], "output_name": ["BASIC_PIPE", "LATENT", "VAE"], "name": "ImpactKSamplerBasicPipe", "display_name": "KSampler (pipe)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/sampling", "output_node": false, "output_tooltips": ["passthrough input basic_pipe", "result latent", "VAE in basic_pipe"]}, "ImpactKSamplerAdvancedBasicPipe": {"input": {"required": {"basic_pipe": ["BASIC_PIPE", {"tooltip": "basic_pipe input for sampling"}], "add_noise": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable", "tooltip": "Whether to add noise"}], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "Random seed to use for generating CPU noise for sampling."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "tooltip": "total sampling steps"}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "tooltip": "classifier free guidance value"}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"], {"tooltip": "sampler"}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"], {"tooltip": "noise schedule"}], "latent_image": ["LATENT", {"tooltip": "input latent image"}], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000, "tooltip": "The starting step of the sampling to be applied at this node within the range of 'steps'."}], "end_at_step": ["INT", {"default": 10000, "min": 0, "max": 10000, "tooltip": "The step at which sampling applied at this node will stop within the range of steps (if greater than steps, sampling will continue only up to steps)."}], "return_with_leftover_noise": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable", "tooltip": "Whether to return the latent with noise remaining if the noise has not been completely removed according to the noise schedule, or to completely remove the noise before returning it."}]}, "optional": {"scheduler_func_opt": ["SCHEDULER_FUNC", {"tooltip": "[OPTIONAL] Noise schedule generation function. If this is set, the scheduler widget will be ignored."}]}}, "input_order": {"required": ["basic_pipe", "add_noise", "noise_seed", "steps", "cfg", "sampler_name", "scheduler", "latent_image", "start_at_step", "end_at_step", "return_with_leftover_noise"], "optional": ["scheduler_func_opt"]}, "output": ["BASIC_PIPE", "LATENT", "VAE"], "output_is_list": [false, false, false], "output_name": ["BASIC_PIPE", "LATENT", "VAE"], "name": "ImpactKSamplerAdvancedBasicPipe", "display_name": "KSampler (Advanced/pipe)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/sampling", "output_node": false, "output_tooltips": ["passthrough input basic_pipe", "result latent", "VAE in basic_pipe"]}, "ReencodeLatent": {"input": {"required": {"samples": ["LATENT"], "tile_mode": [["None", "Both", "Decode(input) only", "Encode(output) only"]], "input_vae": ["VAE"], "output_vae": ["VAE"], "tile_size": ["INT", {"default": 512, "min": 320, "max": 4096, "step": 64}]}}, "input_order": {"required": ["samples", "tile_mode", "input_vae", "output_vae", "tile_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "ReencodeLatent", "display_name": "Reencode Latent", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ReencodeLatentPipe": {"input": {"required": {"samples": ["LATENT"], "tile_mode": [["None", "Both", "Decode(input) only", "Encode(output) only"]], "input_basic_pipe": ["BASIC_PIPE"], "output_basic_pipe": ["BASIC_PIPE"]}}, "input_order": {"required": ["samples", "tile_mode", "input_basic_pipe", "output_basic_pipe"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "ReencodeLatentPipe", "display_name": "Reencode Latent (pipe)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactImageBatchToImageList": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "ImpactImageBatchToImageList", "display_name": "Image Batch to Image List", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactMakeImageList": {"input": {"required": {"image1": ["IMAGE"]}}, "input_order": {"required": ["image1"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "ImpactMakeImageList", "display_name": "Make Image List", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactMakeImageBatch": {"input": {"required": {"image1": ["IMAGE"]}}, "input_order": {"required": ["image1"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImpactMakeImageBatch", "display_name": "Make Image Batch", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactMakeAnyList": {"input": {"required": {}, "optional": {"value1": ["*"]}}, "input_order": {"required": [], "optional": ["value1"]}, "output": ["*"], "output_is_list": [true], "output_name": ["*"], "name": "ImpactMakeAnyList", "display_name": "Make List (Any)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactMakeMaskList": {"input": {"required": {"mask1": ["MASK"]}}, "input_order": {"required": ["mask1"]}, "output": ["MASK"], "output_is_list": [true], "output_name": ["MASK"], "name": "ImpactMakeMaskList", "display_name": "Make Mask List", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactMakeMaskBatch": {"input": {"required": {"mask1": ["MASK"]}}, "input_order": {"required": ["mask1"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ImpactMakeMaskBatch", "display_name": "Make Mask Batch", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "RegionalSampler": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "Random seed to use for generating CPU noise for sampling."}], "seed_2nd": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "Additional noise seed. The behavior is determined by seed_2nd_mode."}], "seed_2nd_mode": [["ignore", "fixed", "seed+seed_2nd", "seed-seed_2nd", "increment", "decrement", "randomize"], {"tooltip": "application method of seed_2nd. 1) ignore: Do not use seed_2nd. In the base only sampling stage, the seed is applied as a noise seed, and in the regional sampling stage, denoising is performed as it is without additional noise. 2) Others: In the base only sampling stage, the seed is applied as a noise seed, and once it is closed so that there is no leftover noise, new noise is added with seed_2nd and the regional samping stage is performed. a) fixed: Use seed_2nd as it is as an additional noise seed. b) seed+seed_2nd: Apply the value of seed+seed_2nd as an additional noise seed. c) seed-seed_2nd: Apply the value of seed-seed_2nd as an additional noise seed. d) increment: Not implemented yet. Same with fixed. e) decrement: Not implemented yet. Same with fixed. f) randomize: Not implemented yet. Same with fixed."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "tooltip": "total sampling steps"}], "base_only_steps": ["INT", {"default": 2, "min": 0, "max": 10000, "tooltip": "total sampling steps"}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The amount of noise to remove. This amount is the noise added at the start, and the higher it is, the more the input latent will be modified before being returned."}], "samples": ["LATENT", {"tooltip": "input latent image"}], "base_sampler": ["KSAMPLER_ADVANCED", {"tooltip": "The sampler applied outside the area set by the regional_prompt."}], "regional_prompts": ["REGIONAL_PROMPTS", {"tooltip": "The prompt applied to each region"}], "overlap_factor": ["INT", {"default": 10, "min": 0, "max": 10000, "tooltip": "To smooth the seams of the region boundaries, expand the mask set in regional_prompts by the overlap_factor amount to overlap with other regions."}], "restore_latent": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled", "tooltip": "At each step, restore the noise outside the mask area to its original state, as per the principle of inpainting. This option is provided for backward compatibility, and it is recommended to always set it to true."}], "additional_mode": [["DISABLE", "ratio additional", "ratio between"], {"default": "ratio between", "tooltip": "..._sde or uni_pc and other special samplers are used, the region is not properly denoised, and it causes a phenomenon that destroys the overall harmony. To compensate for this, a recovery operation is performed using another sampler. This requires a longer time for sampling because a second sampling is performed at each step in each region using a special sampler. 1) DISABLE: Disable this feature. 2) ratio additional: After performing the denoise amount to be performed in the step with the sampler set in the region, the recovery sampler is additionally applied by the additional_sigma_ratio. If you use this option, the total denoise amount increases by additional_sigma_ratio. 3) ratio between: The denoise amount to be performed in the step with the sampler set in the region and the denoise amount to be applied to the recovery sampler are divided by additional_sigma_ratio, and denoise is performed for each denoise amount. If you use this option, the total denoise amount does not change."}], "additional_sampler": [["AUTO", "euler", "heun", "heunpp2", "dpm_2", "dpm_fast", "dpmpp_2m", "ddpm"], {"tooltip": "1) AUTO: Automatically set the recovery sampler. If the sampler is uni_pc, uni_pc_bh2, dpmpp_sde, dpmpp_sde_gpu, the dpm_fast sampler is selected If the sampler is dpmpp_2m_sde, dpmpp_2m_sde_gpu, dpmpp_3m_sde, dpmpp_3m_sde_gpu, the dpmpp_2m sampler is selected. 2) Others: Manually set the recovery sampler."}], "additional_sigma_ratio": ["FLOAT", {"default": 0.3, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "Multiplier of noise schedule to be applied according to additional_mode."}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["seed", "seed_2nd", "seed_2nd_mode", "steps", "base_only_steps", "denoise", "samples", "base_sampler", "regional_prompts", "overlap_factor", "restore_latent", "additional_mode", "additional_sampler", "additional_sigma_ratio"], "hidden": ["unique_id"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "RegionalSampler", "display_name": "RegionalSampler", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Regional", "output_node": false, "output_tooltips": ["result latent"]}, "RegionalSamplerAdvanced": {"input": {"required": {"add_noise": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled", "tooltip": "Whether to add noise"}], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "Random seed to use for generating CPU noise for sampling."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "tooltip": "total sampling steps"}], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000, "tooltip": "The starting step of the sampling to be applied at this node within the range of 'steps'."}], "end_at_step": ["INT", {"default": 10000, "min": 0, "max": 10000, "tooltip": "The step at which sampling applied at this node will stop within the range of steps (if greater than steps, sampling will continue only up to steps)."}], "overlap_factor": ["INT", {"default": 10, "min": 0, "max": 10000, "tooltip": "To smooth the seams of the region boundaries, expand the mask set in regional_prompts by the overlap_factor amount to overlap with other regions."}], "restore_latent": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled", "tooltip": "At each step, restore the noise outside the mask area to its original state, as per the principle of inpainting. This option is provided for backward compatibility, and it is recommended to always set it to true."}], "return_with_leftover_noise": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled", "tooltip": "Whether to return the latent with noise remaining if the noise has not been completely removed according to the noise schedule, or to completely remove the noise before returning it."}], "latent_image": ["LATENT", {"tooltip": "input latent image"}], "base_sampler": ["KSAMPLER_ADVANCED", {"tooltip": "The sampler applied outside the area set by the regional_prompt."}], "regional_prompts": ["REGIONAL_PROMPTS", {"tooltip": "The prompt applied to each region"}], "additional_mode": [["DISABLE", "ratio additional", "ratio between"], {"default": "ratio between", "tooltip": "..._sde or uni_pc and other special samplers are used, the region is not properly denoised, and it causes a phenomenon that destroys the overall harmony. To compensate for this, a recovery operation is performed using another sampler. This requires a longer time for sampling because a second sampling is performed at each step in each region using a special sampler. 1) DISABLE: Disable this feature. 2) ratio additional: After performing the denoise amount to be performed in the step with the sampler set in the region, the recovery sampler is additionally applied by the additional_sigma_ratio. If you use this option, the total denoise amount increases by additional_sigma_ratio. 3) ratio between: The denoise amount to be performed in the step with the sampler set in the region and the denoise amount to be applied to the recovery sampler are divided by additional_sigma_ratio, and denoise is performed for each denoise amount. If you use this option, the total denoise amount does not change."}], "additional_sampler": [["AUTO", "euler", "heun", "heunpp2", "dpm_2", "dpm_fast", "dpmpp_2m", "ddpm"], {"tooltip": "1) AUTO: Automatically set the recovery sampler. If the sampler is uni_pc, uni_pc_bh2, dpmpp_sde, dpmpp_sde_gpu, the dpm_fast sampler is selected If the sampler is dpmpp_2m_sde, dpmpp_2m_sde_gpu, dpmpp_3m_sde, dpmpp_3m_sde_gpu, the dpmpp_2m sampler is selected. 2) Others: Manually set the recovery sampler."}], "additional_sigma_ratio": ["FLOAT", {"default": 0.3, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "Multiplier of noise schedule to be applied according to additional_mode."}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["add_noise", "noise_seed", "steps", "start_at_step", "end_at_step", "overlap_factor", "restore_latent", "return_with_leftover_noise", "latent_image", "base_sampler", "regional_prompts", "additional_mode", "additional_sampler", "additional_sigma_ratio"], "hidden": ["unique_id"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "RegionalSamplerAdvanced", "display_name": "RegionalSamplerAdvanced", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Regional", "output_node": false, "output_tooltips": ["result latent"]}, "CombineRegionalPrompts": {"input": {"required": {"regional_prompts1": ["REGIONAL_PROMPTS", {"tooltip": "input regional_prompts. (Connecting to the input slot increases the number of additional slots.)"}]}}, "input_order": {"required": ["regional_prompts1"]}, "output": ["REGIONAL_PROMPTS"], "output_is_list": [false], "output_name": ["REGIONAL_PROMPTS"], "name": "CombineRegionalPrompts", "display_name": "CombineRegionalPrompts", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Regional", "output_node": false, "output_tooltips": ["Combined REGIONAL_PROMPTS"]}, "RegionalPrompt": {"input": {"required": {"mask": ["MASK", {"tooltip": "region mask"}], "advanced_sampler": ["KSAMPLER_ADVANCED", {"tooltip": "sampler for specified region"}]}, "optional": {"variation_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "Sets the extra seed to be used for noise variation."}], "variation_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "Sets the strength of the noise variation."}], "variation_method": [["linear", "slerp"], {"tooltip": "Sets how the original noise and extra noise are blended together."}]}}, "input_order": {"required": ["mask", "advanced_sampler"], "optional": ["variation_seed", "variation_strength", "variation_method"]}, "output": ["REGIONAL_PROMPTS"], "output_is_list": [false], "output_name": ["REGIONAL_PROMPTS"], "name": "RegionalPrompt", "display_name": "RegionalPrompt", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Regional", "output_node": false, "output_tooltips": ["regional prompts. (Can be used in the RegionalSampler.)"]}, "ImpactCombineConditionings": {"input": {"required": {"conditioning1": ["CONDITIONING", {"tooltip": "input conditionings. (Connecting to the input slot increases the number of additional slots.)"}]}}, "input_order": {"required": ["conditioning1"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ImpactCombineConditionings", "display_name": "Combine Conditionings", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false, "output_tooltips": ["Combined conditioning"]}, "ImpactConcatConditionings": {"input": {"required": {"conditioning1": ["CONDITIONING", {"tooltip": "input conditionings. (Connecting to the input slot increases the number of additional slots.)"}]}}, "input_order": {"required": ["conditioning1"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ImpactConcatConditionings", "display_name": "Concat Conditionings", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false, "output_tooltips": ["Concatenated conditioning"]}, "ImpactSEGSLabelAssign": {"input": {"required": {"segs": ["SEGS"], "labels": ["STRING", {"multiline": true, "placeholder": "List the label to be assigned in order of segs, separated by commas"}]}}, "input_order": {"required": ["segs", "labels"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactSEGSLabelAssign", "display_name": "SEGS Assign (label)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactSEGSLabelFilter": {"input": {"required": {"segs": ["SEGS"], "preset": [["all", "hand", "face", "mouth", "eyes", "eyebrows", "pupils", "left_eyebrow", "left_eye", "left_pupil", "right_eyebrow", "right_eye", "right_pupil", "short_sleeved_shirt", "long_sleeved_shirt", "short_sleeved_outwear", "long_sleeved_outwear", "vest", "sling", "shorts", "trousers", "skirt", "short_sleeved_dress", "long_sleeved_dress", "vest_dress", "sling_dress", "person", "bicycle", "car", "motorcycle", "airplane", "bus", "train", "truck", "boat", "traffic light", "fire hydrant", "stop sign", "parking meter", "bench", "bird", "cat", "dog", "horse", "sheep", "cow", "elephant", "bear", "zebra", "giraffe", "backpack", "umbrella", "handbag", "tie", "suitcase", "frisbee", "skis", "snowboard", "sports ball", "kite", "baseball bat", "baseball glove", "skateboard", "surfboard", "tennis racket", "bottle", "wine glass", "cup", "fork", "knife", "spoon", "bowl", "banana", "apple", "sandwich", "orange", "broccoli", "carrot", "hot dog", "pizza", "donut", "cake", "chair", "couch", "potted plant", "bed", "dining table", "toilet", "tv", "laptop", "mouse", "remote", "keyboard", "cell phone", "microwave", "oven", "toaster", "sink", "refrigerator", "book", "clock", "vase", "scissors", "teddy bear", "hair drier", "toothbrush"]], "labels": ["STRING", {"multiline": true, "placeholder": "List the types of segments to be allowed, separated by commas"}]}}, "input_order": {"required": ["segs", "preset", "labels"]}, "output": ["SEGS", "SEGS"], "output_is_list": [false, false], "output_name": ["filtered_SEGS", "remained_SEGS"], "name": "ImpactSEGSLabelFilter", "display_name": "SEGS Filter (label)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactSEGSRangeFilter": {"input": {"required": {"segs": ["SEGS"], "target": [["area(=w*h)", "width", "height", "x1", "y1", "x2", "y2", "length_percent", "confidence(0-100)"]], "mode": ["BOOLEAN", {"default": true, "label_on": "inside", "label_off": "outside"}], "min_value": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "max_value": ["INT", {"default": 67108864, "min": 0, "max": 9223372036854775807, "step": 1}]}}, "input_order": {"required": ["segs", "target", "mode", "min_value", "max_value"]}, "output": ["SEGS", "SEGS"], "output_is_list": [false, false], "output_name": ["filtered_SEGS", "remained_SEGS"], "name": "ImpactSEGSRangeFilter", "display_name": "SEGS Filter (range)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactSEGSOrderedFilter": {"input": {"required": {"segs": ["SEGS"], "target": [["area(=w*h)", "width", "height", "x1", "y1", "x2", "y2", "confidence"]], "order": ["BOOLEAN", {"default": true, "label_on": "descending", "label_off": "ascending"}], "take_start": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "take_count": ["INT", {"default": 1, "min": 0, "max": 9223372036854775807, "step": 1}]}}, "input_order": {"required": ["segs", "target", "order", "take_start", "take_count"]}, "output": ["SEGS", "SEGS"], "output_is_list": [false, false], "output_name": ["filtered_SEGS", "remained_SEGS"], "name": "ImpactSEGSOrderedFilter", "display_name": "SEGS Filter (ordered)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactCompare": {"input": {"required": {"cmp": [["a = b", "a <> b", "a > b", "a < b", "a >= b", "a <= b", "tt", "ff"]], "a": ["*"], "b": ["*"]}}, "input_order": {"required": ["cmp", "a", "b"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "ImpactCompare", "display_name": "ImpactCompare", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactConditionalBranch": {"input": {"required": {"cond": ["BOOLEAN"], "tt_value": ["*", {"lazy": true}], "ff_value": ["*", {"lazy": true}]}}, "input_order": {"required": ["cond", "tt_value", "ff_value"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "ImpactConditionalBranch", "display_name": "ImpactConditionalBranch", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactConditionalBranchSelMode": {"input": {"required": {"cond": ["BOOLEAN"]}, "optional": {"tt_value": ["*"], "ff_value": ["*"]}}, "input_order": {"required": ["cond"], "optional": ["tt_value", "ff_value"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "ImpactConditionalBranchSelMode", "display_name": "ImpactConditionalBranchSelMode", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactIfNone": {"input": {"required": {}, "optional": {"signal": ["*"], "any_input": ["*"]}}, "input_order": {"required": [], "optional": ["signal", "any_input"]}, "output": ["*", "BOOLEAN"], "output_is_list": [false, false], "output_name": ["signal_opt", "bool"], "name": "ImpactIfNone", "display_name": "ImpactIfNone", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactConvertDataType": {"input": {"required": {"value": ["*"]}}, "input_order": {"required": ["value"]}, "output": ["STRING", "FLOAT", "INT", "BOOLEAN"], "output_is_list": [false, false, false, false], "output_name": ["STRING", "FLOAT", "INT", "BOOLEAN"], "name": "ImpactConvertDataType", "display_name": "ImpactConvertDataType", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactLogicalOperators": {"input": {"required": {"operator": [["and", "or", "xor"]], "bool_a": ["BOOLEAN", {"forceInput": true}], "bool_b": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["operator", "bool_a", "bool_b"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "ImpactLogicalOperators", "display_name": "ImpactLogicalOperators", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactInt": {"input": {"required": {"value": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}]}}, "input_order": {"required": ["value"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "ImpactInt", "display_name": "ImpactInt", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactFloat": {"input": {"required": {"value": ["FLOAT", {"default": 1.0, "min": -3.402823466e+38, "max": 3.402823466e+38}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "ImpactFloat", "display_name": "ImpactFloat", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactBoolean": {"input": {"required": {"value": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["value"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "ImpactBoolean", "display_name": "ImpactBoolean", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactValueSender": {"input": {"required": {"value": ["*"], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}]}, "optional": {"signal_opt": ["*"]}}, "input_order": {"required": ["value", "link_id"], "optional": ["signal_opt"]}, "output": ["*"], "output_is_list": [false], "output_name": ["signal"], "name": "ImpactValueSender", "display_name": "ImpactValueSender", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic", "output_node": true}, "ImpactValueReceiver": {"input": {"required": {"typ": [["STRING", "INT", "FLOAT", "BOOLEAN"]], "value": ["STRING", {"default": ""}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}]}}, "input_order": {"required": ["typ", "value", "link_id"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "ImpactValueReceiver", "display_name": "ImpactValueReceiver", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactImageInfo": {"input": {"required": {"value": ["IMAGE"]}}, "input_order": {"required": ["value"]}, "output": ["INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["batch", "height", "width", "channel"], "name": "ImpactImageInfo", "display_name": "ImpactImageInfo", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic/_for_test", "output_node": false}, "ImpactLatentInfo": {"input": {"required": {"value": ["LATENT"]}}, "input_order": {"required": ["value"]}, "output": ["INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["batch", "height", "width", "channel"], "name": "ImpactLatentInfo", "display_name": "ImpactLatentInfo", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic/_for_test", "output_node": false}, "ImpactMinMax": {"input": {"required": {"mode": ["BOOLEAN", {"default": true, "label_on": "max", "label_off": "min"}], "a": ["*"], "b": ["*"]}}, "input_order": {"required": ["mode", "a", "b"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "ImpactMinMax", "display_name": "ImpactMinMax", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic/_for_test", "output_node": false}, "ImpactNeg": {"input": {"required": {"value": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["value"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "ImpactNeg", "display_name": "ImpactNeg", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactConditionalStopIteration": {"input": {"required": {"cond": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["cond"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ImpactConditionalStopIteration", "display_name": "ImpactConditionalStopIteration", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic", "output_node": true}, "ImpactStringSelector": {"input": {"required": {"strings": ["STRING", {"multiline": true}], "multiline": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "select": ["INT", {"min": 0, "max": 9223372036854775807, "step": 1, "default": 0}]}}, "input_order": {"required": ["strings", "multiline", "select"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "ImpactStringSelector", "display_name": "String Selector", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "StringListToString": {"input": {"required": {"join_with": ["STRING", {"default": "\\n"}], "string_list": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["join_with", "string_list"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "StringListToString", "display_name": "String List to String", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "WildcardPromptFromString": {"input": {"required": {"string": ["STRING", {"forceInput": true}], "delimiter": ["STRING", {"multiline": false, "default": "\\n"}], "prefix_all": ["STRING", {"multiline": false}], "postfix_all": ["STRING", {"multiline": false}], "restrict_to_tags": ["STRING", {"multiline": false}], "exclude_tags": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["string", "delimiter", "prefix_all", "postfix_all", "restrict_to_tags", "exclude_tags"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["wildcard", "segs_labels"], "name": "WildcardPromptFromString", "display_name": "Wildcard Prompt from String", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactExecutionOrderController": {"input": {"required": {"signal": ["*"], "value": ["*"]}}, "input_order": {"required": ["signal", "value"]}, "output": ["*", "*"], "output_is_list": [false, false], "output_name": ["signal", "value"], "name": "ImpactExecutionOrderController", "display_name": "Execution Order Controller", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "RemoveNoiseMask": {"input": {"required": {"samples": ["LATENT"]}}, "input_order": {"required": ["samples"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "RemoveNoiseMask", "display_name": "Remove Noise Mask", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactLogger": {"input": {"required": {"data": ["*"], "text": ["STRING", {"multiline": true}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["data", "text"], "hidden": ["prompt", "extra_pnginfo", "unique_id"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ImpactLogger", "display_name": "ImpactLogger", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Debug", "output_node": true}, "ImpactDummyInput": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "ImpactDummyInput", "display_name": "ImpactDummyInput", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Debug", "output_node": false}, "ImpactQueueTrigger": {"input": {"required": {"signal": ["*"], "mode": ["BOOLEAN", {"default": true, "label_on": "Trigger", "label_off": "Don't trigger"}]}}, "input_order": {"required": ["signal", "mode"]}, "output": ["*"], "output_is_list": [false], "output_name": ["signal_opt"], "name": "ImpactQueueTrigger", "display_name": "Queue Trigger", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic/_for_test", "output_node": true}, "ImpactQueueTriggerCountdown": {"input": {"required": {"count": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "total": ["INT", {"default": 10, "min": 1, "max": 18446744073709551615}], "mode": ["BOOLEAN", {"default": true, "label_on": "Trigger", "label_off": "Don't trigger"}]}, "optional": {"signal": ["*"]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["count", "total", "mode"], "optional": ["signal"], "hidden": ["unique_id"]}, "output": ["*", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["signal_opt", "count", "total"], "name": "ImpactQueueTriggerCountdown", "display_name": "Queue Trigger (Countdown)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic/_for_test", "output_node": true}, "ImpactSetWidgetValue": {"input": {"required": {"signal": ["*"], "node_id": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "widget_name": ["STRING", {"multiline": false}]}, "optional": {"boolean_value": ["BOOLEAN", {"forceInput": true}], "int_value": ["INT", {"forceInput": true}], "float_value": ["FLOAT", {"forceInput": true}], "string_value": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["signal", "node_id", "widget_name"], "optional": ["boolean_value", "int_value", "float_value", "string_value"]}, "output": ["*"], "output_is_list": [false], "output_name": ["signal_opt"], "name": "ImpactSetWidgetValue", "display_name": "Set Widget Value", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic/_for_test", "output_node": true}, "ImpactNodeSetMuteState": {"input": {"required": {"signal": ["*"], "node_id": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "set_state": ["BOOLEAN", {"default": true, "label_on": "active", "label_off": "mute"}]}}, "input_order": {"required": ["signal", "node_id", "set_state"]}, "output": ["*"], "output_is_list": [false], "output_name": ["signal_opt"], "name": "ImpactNodeSetMuteState", "display_name": "Set Mute State", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic/_for_test", "output_node": true}, "ImpactControlBridge": {"input": {"required": {"value": ["*"], "mode": ["BOOLEAN", {"default": true, "label_on": "Active", "label_off": "Stop/Mute/Bypass"}], "behavior": [["Stop", "Mute", "Bypass"]]}, "hidden": {"unique_id": "UNIQUE_ID", "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["value", "mode", "behavior"], "hidden": ["unique_id", "prompt", "extra_pnginfo"]}, "output": ["*"], "output_is_list": [false], "output_name": ["value"], "name": "ImpactControlBridge", "display_name": "Control Bridge", "description": "When behavior is Stop and mode is active, the input value is passed directly to the output.\nWhen behavior is Mute/Bypass and mode is active, the node connected to the output is changed to active state.\nWhen behavior is Stop and mode is Stop/Mute/Bypass, the workflow execution of the current node is halted.\nWhen behavior is Mute/Bypass and mode is Stop/Mute/Bypass, the node connected to the output is changed to Mute/Bypass state.", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic", "output_node": true}, "ImpactIsNotEmptySEGS": {"input": {"required": {"segs": ["SEGS"]}}, "input_order": {"required": ["segs"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "ImpactIsNotEmptySEGS", "display_name": "SEGS isn't Empty", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactSleep": {"input": {"required": {"signal": ["*"], "seconds": ["FLOAT", {"default": 0.5, "min": 0, "max": 3600}]}}, "input_order": {"required": ["signal", "seconds"]}, "output": ["*"], "output_is_list": [false], "output_name": ["signal_opt"], "name": "ImpactSleep", "display_name": "Sleep", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic/_for_test", "output_node": true}, "ImpactRemoteBoolean": {"input": {"required": {"node_id": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "widget_name": ["STRING", {"multiline": false}], "value": ["BOOLEAN", {"default": true, "label_on": "True", "label_off": "False"}]}}, "input_order": {"required": ["node_id", "widget_name", "value"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ImpactRemoteBoolean", "display_name": "Remote Boolean (on prompt)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic/_for_test", "output_node": true}, "ImpactRemoteInt": {"input": {"required": {"node_id": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "widget_name": ["STRING", {"multiline": false}], "value": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["node_id", "widget_name", "value"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ImpactRemoteInt", "display_name": "Remote Int (on prompt)", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Logic/_for_test", "output_node": true}, "ImpactHFTransformersClassifierProvider": {"input": {"required": {"preset_repo_id": [["rizvandwiki/gender-classification-2", "NTQAI/pedestrian_gender_recognition", "Leilab/gender_class", "ProjectPersonal/GenderClassifier", "crangana/trained-gender", "cledoux42/GenderNew_v002", "ivensamdh/genderage2", "Manual repo id"]], "manual_repo_id": ["STRING", {"multiline": false}], "device_mode": [["AUTO", "Prefer GPU", "CPU"]]}}, "input_order": {"required": ["preset_repo_id", "manual_repo_id", "device_mode"]}, "output": ["TRANSFORMERS_CLASSIFIER"], "output_is_list": [false], "output_name": ["TRANSFORMERS_CLASSIFIER"], "name": "ImpactHFTransformersClassifierProvider", "display_name": "HF Transformers Classifier Provider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/HuggingFace", "output_node": false}, "ImpactSEGSClassify": {"input": {"required": {"classifier": ["TRANSFORMERS_CLASSIFIER"], "segs": ["SEGS"], "preset_expr": [["#Female > #Male", "#Female < #Male", "female > 0.5", "male > 0.5", "Age16to25 > 0.1", "Age50to69 > 0.1", "Manual expr"]], "manual_expr": ["STRING", {"multiline": false}]}, "optional": {"ref_image_opt": ["IMAGE"]}}, "input_order": {"required": ["classifier", "segs", "preset_expr", "manual_expr"], "optional": ["ref_image_opt"]}, "output": ["SEGS", "SEGS", "STRING"], "output_is_list": [false, false, true], "output_name": ["filtered_SEGS", "remained_SEGS", "detected_labels"], "name": "ImpactSEGSClassify", "display_name": "SEGS Classify", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/HuggingFace", "output_node": false}, "ImpactSchedulerAdapter": {"input": {"required": {"scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"], {"defaultInput": true}], "extra_scheduler": [["None", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]]}}, "input_order": {"required": ["scheduler", "extra_scheduler"]}, "output": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]"]], "output_is_list": [false], "output_name": ["scheduler"], "name": "ImpactSchedulerAdapter", "display_name": "Impact Scheduler Adapter", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/Util", "output_node": false}, "GITSSchedulerFuncProvider": {"input": {"required": {"coeff": ["FLOAT", {"default": 1.2, "min": 0.8, "max": 1.5, "step": 0.05, "tooltip": "coeff factor of GITS Scheduler"}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "denoise amount for noise schedule"}]}}, "input_order": {"required": ["coeff", "denoise"]}, "output": ["SCHEDULER_FUNC"], "output_is_list": [false], "output_name": ["SCHEDULER_FUNC"], "name": "GITSSchedulerFuncProvider", "display_name": "GITSScheduler Func Provider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack/sampling", "output_node": false, "output_tooltips": ["Returns a function that generates a noise schedule using GITSScheduler. This can be used in place of a predetermined noise schedule to dynamically generate a noise schedule based on the steps."]}, "UltralyticsDetectorProvider": {"input": {"required": {"model_name": [["bbox/face_yolov8m.pt", "bbox/hand_yolov8s.pt", "segm/person_yolov8m-seg.pt"]]}}, "input_order": {"required": ["model_name"]}, "output": ["BBOX_DETECTOR", "SEGM_DETECTOR"], "output_is_list": [false, false], "output_name": ["BBOX_DETECTOR", "SEGM_DETECTOR"], "name": "UltralyticsDetectorProvider", "display_name": "UltralyticsDetectorProvider", "description": "", "python_module": "custom_nodes.ComfyUI-Impact-Pack", "category": "ImpactPack", "output_node": false}, "MZ_ChatGLM3Loader": {"input": {"required": {"chatglm3_checkpoint": [[]]}}, "input_order": {"required": ["chatglm3_checkpoint"]}, "output": ["CHATGLM3MODEL"], "output_is_list": [false], "output_name": ["chatglm3_model"], "name": "MZ_ChatGLM3Loader", "display_name": "MinusZone - ChatGLM3Loader", "description": "", "python_module": "custom_nodes.ComfyUI-Kolors-MZ", "category": "MinusZone - Kolors", "output_node": false}, "MZ_ChatGLM3_V2": {"input": {"required": {"chatglm3_model": ["CHATGLM3MODEL"], "text": ["STRING", {"multiline": true, "dynamicPrompts": true}]}}, "input_order": {"required": ["chatglm3_model", "text"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "MZ_ChatGLM3_V2", "display_name": "MinusZone - ChatGLM3TextEncodeV2", "description": "", "python_module": "custom_nodes.ComfyUI-Kolors-MZ", "category": "MinusZone - Kolors", "output_node": false}, "MZ_ChatGLM3Embeds2Conditioning": {"input": {"required": {"kolors_embeds": ["KOLORS_EMBEDS"], "width": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "height": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "crop_w": ["INT", {"default": 0, "min": 0, "max": 16384}], "crop_h": ["INT", {"default": 0, "min": 0, "max": 16384}], "target_width": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "target_height": ["INT", {"default": 1024.0, "min": 0, "max": 16384}]}}, "input_order": {"required": ["kolors_embeds", "width", "height", "crop_w", "crop_h", "target_width", "target_height"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "MZ_ChatGLM3Embeds2Conditioning", "display_name": "MinusZone - ChatGLM3Embeds2Conditioning", "description": "", "python_module": "custom_nodes.ComfyUI-Kolors-MZ", "category": "MinusZone - Kolors", "output_node": false}, "MZ_ChatGLM3_Advance_V2": {"input": {"required": {"chatglm3_model": ["CHATGLM3MODEL"], "text": ["STRING", {"multiline": true, "dynamicPrompts": true}], "width": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "height": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "crop_w": ["INT", {"default": 0, "min": 0, "max": 16384}], "crop_h": ["INT", {"default": 0, "min": 0, "max": 16384}], "target_width": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "target_height": ["INT", {"default": 1024.0, "min": 0, "max": 16384}]}}, "input_order": {"required": ["chatglm3_model", "text", "width", "height", "crop_w", "crop_h", "target_width", "target_height"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "MZ_ChatGLM3_Advance_V2", "display_name": "MinusZone - ChatGLM3TextEncodeAdvanceV2", "description": "", "python_module": "custom_nodes.ComfyUI-Kolors-MZ", "category": "MinusZone - Kolors", "output_node": false}, "MZ_KolorsCheckpointLoaderSimple": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]]}}, "input_order": {"required": ["ckpt_name"]}, "output": ["MODEL", "VAE"], "output_is_list": [false, false], "output_name": ["MODEL", "VAE"], "name": "MZ_KolorsCheckpointLoaderSimple", "display_name": "MinusZone - KolorsCheckpointLoaderSimple", "description": "", "python_module": "custom_nodes.ComfyUI-Kolors-MZ", "category": "MinusZone - Kolors", "output_node": false}, "MZ_KolorsControlNetLoader": {"input": {"required": {"control_net_name": [["canny-sdxl-1.0.safetensors", "canny-xl1.0.safetensors", "control_sd15_canny.pth", "control_sd15_depth.pth", "control_sd15_normal.pth", "controlnet11Models_tileE.safetensors", "depth-sdxl-1.0.safetensors", "depth-zoe-xl-v1.0-controlnet.safetensors", "diffusers_xl_canny_full.safetensors", "diffusers_xl_depth_full.safetensors", "flux-canny-controlnet-v3.safetensors", "flux-controlnet-union.safetensors", "flux-depth-controlnet-v3.safetensors", "jasperai_flux_depth_controlnet.safetensors", "jasperai_flux_surface_normals_controlnet.safetensors", "mistoLine_fp16.safetensors", "sai_xl_canny_256lora.safetensors", "sai_xl_depth_256lora.safetensors", "t2i-adapter-canny.safetensors", "t2i-adapter-depth.safetensors", "t2iadapter_canny_sd14v1.pth", "t2iadapter_depth_sd14v1.pth", "v3_sd15_sparsectrl_rgb.ckpt", "xinsir_canny.safetensors", "xinsir_depth.safetensors"]]}}, "input_order": {"required": ["control_net_name"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["ControlNet"], "name": "MZ_KolorsControlNetLoader", "display_name": "MinusZone - KolorsControlNetLoader", "description": "", "python_module": "custom_nodes.ComfyUI-Kolors-MZ", "category": "MinusZone - Kolors", "output_node": false}, "MZ_KolorsUNETLoaderV2": {"input": {"required": {"unet_name": [["IC-Light/iclight_sd15_fbc.safetensors", "IC-Light/iclight_sd15_fc.safetensors", "flux1-dev-fp8.safetensors", "flux1-dev.safetensors"]]}}, "input_order": {"required": ["unet_name"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "MZ_KolorsUNETLoaderV2", "display_name": "MinusZone - KolorsUNETLoaderV2", "description": "", "python_module": "custom_nodes.ComfyUI-Kolors-MZ", "category": "MinusZone - Kolors", "output_node": false}, "MZ_KolorsControlNetPatch": {"input": {"required": {"control_net": ["CONTROL_NET"], "model": ["MODEL"]}}, "input_order": {"required": ["control_net", "model"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "MZ_KolorsControlNetPatch", "display_name": "MinusZone - KolorsControlNetPatch", "description": "", "python_module": "custom_nodes.ComfyUI-Kolors-MZ", "category": "MinusZone - Kolors", "output_node": false}, "MZ_KolorsCLIPVisionLoader": {"input": {"required": {"clip_name": [["CLIP-ViT-H-14-laion2B-s32B-b79K.safetensors", "CLIP-ViT-bigG-14-laion2B-39B-b160k.safetensors", "SD1.5/pytorch_model.bin", "sdxl_clip.safetensors"]]}}, "input_order": {"required": ["clip_name"]}, "output": ["CLIP_VISION"], "output_is_list": [false], "output_name": ["CLIP_VISION"], "name": "MZ_KolorsCLIPVisionLoader", "display_name": "MinusZone - KolorsCLIPVisionLoader - Legacy", "description": "", "python_module": "custom_nodes.ComfyUI-Kolors-MZ", "category": "MinusZone - Kolors/Legacy", "output_node": false}, "MZ_ApplySDXLSamplingSettings": {"input": {"required": {"model": ["MODEL"]}}, "input_order": {"required": ["model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "MZ_ApplySDXLSamplingSettings", "display_name": "MinusZone - ApplySDXLSamplingSettings", "description": "", "python_module": "custom_nodes.ComfyUI-Kolors-MZ", "category": "MinusZone - Kolors", "output_node": false}, "MZ_ApplyCUDAGenerator": {"input": {"required": {"model": ["MODEL"]}}, "input_order": {"required": ["model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "MZ_ApplyCUDAGenerator", "display_name": "MinusZone - ApplyCUDAGenerator", "description": "", "python_module": "custom_nodes.ComfyUI-Kolors-MZ", "category": "MinusZone - Kolors", "output_node": false}, "MZ_IPAdapterModelLoaderKolors": {"input": {"required": {"ipadapter_file": [["ip-adapter-plus_sd15.safetensors", "ip-adapter-plus_sdxl_vit-h.safetensors", "ip-adapter_sd15.safetensors", "ip-adapter_sdxl.safetensors"]]}}, "input_order": {"required": ["ipadapter_file"]}, "output": ["IPADAPTER"], "output_is_list": [false], "output_name": ["IPADAPTER"], "name": "MZ_IPAdapterModelLoaderKolors", "display_name": "IPAdapterModelLoader(kolors) - Legacy", "description": "", "python_module": "custom_nodes.ComfyUI-Kolors-MZ", "category": "MinusZone - Kolors/IPAdapter", "output_node": false}, "MZ_IPAdapterAdvancedKolors": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 5, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise", "composition precise"]], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"]}}, "input_order": {"required": ["model", "ipadapter", "image", "weight", "weight_type", "combine_embeds", "start_at", "end_at", "embeds_scaling"], "optional": ["image_negative", "attn_mask", "clip_vision"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "MZ_IPAdapterAdvancedKolors", "display_name": "IPAdapterAdvanced(kolors) - Legacy", "description": "", "python_module": "custom_nodes.ComfyUI-Kolors-MZ", "category": "MinusZone - Kolors/IPAdapter", "output_node": false}, "MZ_IPAdapterInsightFaceLoader": {"input": {"required": {"provider": [["CPU", "CUDA", "ROCM"]]}}, "input_order": {"required": ["provider"]}, "output": ["INSIGHTFACE"], "output_is_list": [false], "output_name": ["INSIGHTFACE"], "name": "MZ_IPAdapterInsightFaceLoader", "display_name": "IPAdapterInsightFaceLoader(kolors) - Legacy", "description": "", "python_module": "custom_nodes.ComfyUI-Kolors-MZ", "category": "MinusZone - Kolors/IPAdapter", "output_node": false}, "MZ_IPAdapterFaceID": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "weight_faceidv2": ["FLOAT", {"default": 1.0, "min": -1, "max": 5.0, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise", "composition precise"]], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"], "insightface": ["INSIGHTFACE"]}}, "input_order": {"required": ["model", "ipadapter", "image", "weight", "weight_faceidv2", "weight_type", "combine_embeds", "start_at", "end_at", "embeds_scaling"], "optional": ["image_negative", "attn_mask", "clip_vision", "insightface"]}, "output": ["MODEL", "IMAGE"], "output_is_list": [false, false], "output_name": ["MODEL", "face_image"], "name": "MZ_IPAdapterFaceID", "display_name": "IPAdapterFaceID(kolors) - Legacy", "description": "", "python_module": "custom_nodes.ComfyUI-Kolors-MZ", "category": "MinusZone - Kolors/IPAdapter", "output_node": false}, "MZ_ChatGLM3": {"input": {"required": {"chatglm3_model": ["CHATGLM3MODEL"], "text": ["STRING", {"multiline": true, "dynamicPrompts": true}], "hid_proj": ["TorchLinear"]}}, "input_order": {"required": ["chatglm3_model", "text", "hid_proj"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "MZ_ChatGLM3", "display_name": "MinusZone - ChatGLM3TextEncode", "description": "", "python_module": "custom_nodes.ComfyUI-Kolors-MZ", "category": "MinusZone - Kolors/Legacy", "output_node": false}, "MZ_KolorsUNETLoader": {"input": {"required": {"unet_name": [["IC-Light/iclight_sd15_fbc.safetensors", "IC-Light/iclight_sd15_fc.safetensors", "flux1-dev-fp8.safetensors", "flux1-dev.safetensors"]]}}, "input_order": {"required": ["unet_name"]}, "output": ["MODEL", "TorchLinear"], "output_is_list": [false, false], "output_name": ["model", "hid_proj"], "name": "MZ_KolorsUNETLoader", "display_name": "MinusZone - Kolors UNET Loader", "description": "", "python_module": "custom_nodes.ComfyUI-Kolors-MZ", "category": "MinusZone - Kolors/Legacy", "output_node": false}, "LayeredDiffusionApply": {"input": {"required": {"model": ["MODEL"], "config": [["SDXL, Attention Injection", "SDXL, Conv Injection", "SD15, Attention Injection, attn_sharing"]], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}]}}, "input_order": {"required": ["model", "config", "weight"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "LayeredDiffusionApply", "display_name": "Layer Diffuse Apply", "description": "", "python_module": "custom_nodes.ComfyUI-layerdiffuse", "category": "layer_diffuse", "output_node": false}, "LayeredDiffusionJointApply": {"input": {"required": {"model": ["MODEL"], "config": [["SD15, attn_sharing, Batch size (3N)"]]}, "optional": {"fg_cond": ["CONDITIONING"], "bg_cond": ["CONDITIONING"], "blended_cond": ["CONDITIONING"]}}, "input_order": {"required": ["model", "config"], "optional": ["fg_cond", "bg_cond", "blended_cond"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "LayeredDiffusionJointApply", "display_name": "Layer Diffuse Joint Apply", "description": "", "python_module": "custom_nodes.ComfyUI-layerdiffuse", "category": "layer_diffuse", "output_node": false}, "LayeredDiffusionCondApply": {"input": {"required": {"model": ["MODEL"], "cond": ["CONDITIONING"], "uncond": ["CONDITIONING"], "latent": ["LATENT"], "config": [["SDXL, Foreground", "SDXL, Background"]], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}]}}, "input_order": {"required": ["model", "cond", "uncond", "latent", "config", "weight"]}, "output": ["MODEL", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CONDITIONING", "CONDITIONING"], "name": "LayeredDiffusionCondApply", "display_name": "Layer Diffuse Cond Apply", "description": "", "python_module": "custom_nodes.ComfyUI-layerdiffuse", "category": "layer_diffuse", "output_node": false}, "LayeredDiffusionCondJointApply": {"input": {"required": {"model": ["MODEL"], "image": ["IMAGE"], "config": [["SD15, Foreground, attn_sharing, Batch size (2N)", "SD15, Background, attn_sharing, Batch size (2N)"]]}, "optional": {"cond": ["CONDITIONING"], "blended_cond": ["CONDITIONING"]}}, "input_order": {"required": ["model", "image", "config"], "optional": ["cond", "blended_cond"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "LayeredDiffusionCondJointApply", "display_name": "Layer Diffuse Cond Joint Apply", "description": "", "python_module": "custom_nodes.ComfyUI-layerdiffuse", "category": "layer_diffuse", "output_node": false}, "LayeredDiffusionDiffApply": {"input": {"required": {"model": ["MODEL"], "cond": ["CONDITIONING"], "uncond": ["CONDITIONING"], "blended_latent": ["LATENT"], "latent": ["LATENT"], "config": [["SDXL, Foreground", "SDXL, Background"]], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}]}}, "input_order": {"required": ["model", "cond", "uncond", "blended_latent", "latent", "config", "weight"]}, "output": ["MODEL", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CONDITIONING", "CONDITIONING"], "name": "LayeredDiffusionDiffApply", "display_name": "Layer Diffuse Diff Apply", "description": "", "python_module": "custom_nodes.ComfyUI-layerdiffuse", "category": "layer_diffuse", "output_node": false}, "LayeredDiffusionDecode": {"input": {"required": {"samples": ["LATENT"], "images": ["IMAGE"], "sd_version": [["SD15", "SDXL"], {"default": "SDXL"}], "sub_batch_size": ["INT", {"default": 16, "min": 1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["samples", "images", "sd_version", "sub_batch_size"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "LayeredDiffusionDecode", "display_name": "Layer Diffuse Decode", "description": "", "python_module": "custom_nodes.ComfyUI-layerdiffuse", "category": "layer_diffuse", "output_node": false}, "LayeredDiffusionDecodeRGBA": {"input": {"required": {"samples": ["LATENT"], "images": ["IMAGE"], "sd_version": [["SD15", "SDXL"], {"default": "SDXL"}], "sub_batch_size": ["INT", {"default": 16, "min": 1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["samples", "images", "sd_version", "sub_batch_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "LayeredDiffusionDecodeRGBA", "display_name": "Layer Diffuse Decode (RGBA)", "description": "", "python_module": "custom_nodes.ComfyUI-layerdiffuse", "category": "layer_diffuse", "output_node": false}, "LayeredDiffusionDecodeSplit": {"input": {"required": {"samples": ["LATENT"], "images": ["IMAGE"], "frames": ["INT", {"default": 2, "min": 2, "max": 3, "step": 1}], "sd_version": [["SD15", "SDXL"], {"default": "SDXL"}], "sub_batch_size": ["INT", {"default": 16, "min": 1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["samples", "images", "frames", "sd_version", "sub_batch_size"]}, "output": ["IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "IMAGE", "IMAGE"], "name": "LayeredDiffusionDecodeSplit", "display_name": "Layer Diffuse Decode (Split)", "description": "", "python_module": "custom_nodes.ComfyUI-layerdiffuse", "category": "layer_diffuse", "output_node": false}, "Context Big (rgthree)": {"input": {"required": {}, "optional": {"base_ctx": ["RGTHREE_CONTEXT"], "model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent": ["LATENT"], "images": ["IMAGE"], "seed": ["INT", {"forceInput": true}], "steps": ["INT", {"forceInput": true}], "step_refiner": ["INT", {"forceInput": true}], "cfg": ["FLOAT", {"forceInput": true}], "ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"], {"forceInput": true}], "sampler": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"], {"forceInput": true}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"], {"forceInput": true}], "clip_width": ["INT", {"forceInput": true}], "clip_height": ["INT", {"forceInput": true}], "text_pos_g": ["STRING", {"forceInput": true}], "text_pos_l": ["STRING", {"forceInput": true}], "text_neg_g": ["STRING", {"forceInput": true}], "text_neg_l": ["STRING", {"forceInput": true}], "mask": ["MASK"], "control_net": ["CONTROL_NET"]}, "hidden": {}}, "input_order": {"required": [], "optional": ["base_ctx", "model", "clip", "vae", "positive", "negative", "latent", "images", "seed", "steps", "step_refiner", "cfg", "ckpt_name", "sampler", "scheduler", "clip_width", "clip_height", "text_pos_g", "text_pos_l", "text_neg_g", "text_neg_l", "mask", "control_net"], "hidden": []}, "output": ["RGTHREE_CONTEXT", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "LATENT", "IMAGE", "INT", "INT", "INT", "FLOAT", ["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"], ["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"], ["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"], "INT", "INT", "STRING", "STRING", "STRING", "STRING", "MASK", "CONTROL_NET"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["CONTEXT", "MODEL", "CLIP", "VAE", "POSITIVE", "NEGATIVE", "LATENT", "IMAGE", "SEED", "STEPS", "STEP_REFINER", "CFG", "CKPT_NAME", "SAMPLER", "SCHEDULER", "CLIP_WIDTH", "CLIP_HEIGHT", "TEXT_POS_G", "TEXT_POS_L", "TEXT_NEG_G", "TEXT_NEG_L", "MASK", "CONTROL_NET"], "name": "Context Big (rgthree)", "display_name": "Context Big (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Context (rgthree)": {"input": {"required": {}, "optional": {"base_ctx": ["RGTHREE_CONTEXT"], "model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent": ["LATENT"], "images": ["IMAGE"], "seed": ["INT", {"forceInput": true}]}, "hidden": {"version": "FLOAT"}}, "input_order": {"required": [], "optional": ["base_ctx", "model", "clip", "vae", "positive", "negative", "latent", "images", "seed"], "hidden": ["version"]}, "output": ["RGTHREE_CONTEXT", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "LATENT", "IMAGE", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["CONTEXT", "MODEL", "CLIP", "VAE", "POSITIVE", "NEGATIVE", "LATENT", "IMAGE", "SEED"], "name": "Context (rgthree)", "display_name": "Context (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Context Switch (rgthree)": {"input": {"required": {}, "optional": {}}, "input_order": {"required": [], "optional": []}, "output": ["RGTHREE_CONTEXT", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "LATENT", "IMAGE", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["CONTEXT", "MODEL", "CLIP", "VAE", "POSITIVE", "NEGATIVE", "LATENT", "IMAGE", "SEED"], "name": "Context Switch (rgthree)", "display_name": "Context Switch (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Context Switch Big (rgthree)": {"input": {"required": {}, "optional": {}}, "input_order": {"required": [], "optional": []}, "output": ["RGTHREE_CONTEXT", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "LATENT", "IMAGE", "INT", "INT", "INT", "FLOAT", ["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"], ["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"], ["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"], "INT", "INT", "STRING", "STRING", "STRING", "STRING", "MASK", "CONTROL_NET"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["CONTEXT", "MODEL", "CLIP", "VAE", "POSITIVE", "NEGATIVE", "LATENT", "IMAGE", "SEED", "STEPS", "STEP_REFINER", "CFG", "CKPT_NAME", "SAMPLER", "SCHEDULER", "CLIP_WIDTH", "CLIP_HEIGHT", "TEXT_POS_G", "TEXT_POS_L", "TEXT_NEG_G", "TEXT_NEG_L", "MASK", "CONTROL_NET"], "name": "Context Switch Big (rgthree)", "display_name": "Context Switch Big (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Context Merge (rgthree)": {"input": {"required": {}, "optional": {}}, "input_order": {"required": [], "optional": []}, "output": ["RGTHREE_CONTEXT", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "LATENT", "IMAGE", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["CONTEXT", "MODEL", "CLIP", "VAE", "POSITIVE", "NEGATIVE", "LATENT", "IMAGE", "SEED"], "name": "Context Merge (rgthree)", "display_name": "Context Merge (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Context Merge Big (rgthree)": {"input": {"required": {}, "optional": {}}, "input_order": {"required": [], "optional": []}, "output": ["RGTHREE_CONTEXT", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "LATENT", "IMAGE", "INT", "INT", "INT", "FLOAT", ["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"], ["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"], ["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"], "INT", "INT", "STRING", "STRING", "STRING", "STRING", "MASK", "CONTROL_NET"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["CONTEXT", "MODEL", "CLIP", "VAE", "POSITIVE", "NEGATIVE", "LATENT", "IMAGE", "SEED", "STEPS", "STEP_REFINER", "CFG", "CKPT_NAME", "SAMPLER", "SCHEDULER", "CLIP_WIDTH", "CLIP_HEIGHT", "TEXT_POS_G", "TEXT_POS_L", "TEXT_NEG_G", "TEXT_NEG_L", "MASK", "CONTROL_NET"], "name": "Context Merge Big (rgthree)", "display_name": "Context Merge Big (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Display Int (rgthree)": {"input": {"required": {"input": ["INT", {"forceInput": true}]}}, "input_order": {"required": ["input"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Display Int (rgthree)", "display_name": "Display Int (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": true}, "Display Any (rgthree)": {"input": {"required": {"source": ["*", {}]}}, "input_order": {"required": ["source"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Display Any (rgthree)", "display_name": "Display Any (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": true}, "Lora Loader Stack (rgthree)": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "lora_01": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "strength_01": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_02": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "strength_02": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_03": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "strength_03": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_04": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "strength_04": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "clip", "lora_01", "strength_01", "lora_02", "strength_02", "lora_03", "strength_03", "lora_04", "strength_04"]}, "output": ["MODEL", "CLIP"], "output_is_list": [false, false], "output_name": ["MODEL", "CLIP"], "name": "Lora Loader Stack (rgthree)", "display_name": "Lora Loader Stack (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Seed (rgthree)": {"input": {"required": {"seed": ["INT", {"default": 0, "min": -1125899906842624, "max": 1125899906842624}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["seed"], "hidden": ["prompt", "extra_pnginfo", "unique_id"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["SEED"], "name": "Seed (rgthree)", "display_name": "Seed (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Image Inset Crop (rgthree)": {"input": {"required": {"image": ["IMAGE"], "measurement": [["Pixels", "Percentage"]], "left": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "right": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "top": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "bottom": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["image", "measurement", "left", "right", "top", "bottom"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Inset Crop (rgthree)", "display_name": "Image Inset Crop (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Power Prompt (rgthree)": {"input": {"required": {"prompt": ["STRING", {"multiline": true}]}, "optional": {"opt_model": ["MODEL"], "opt_clip": ["CLIP"], "insert_lora": [["CHOOSE", "DISABLE LORAS", "AnimateLCM_sd15_t2v_lora", "Bending_Illustartion-000007", "Bending_Illustartion-000010", "Bending_Illustartion-000014", "CPA", "Kodak Motion Picture Film Style v5_2", "Lego_XL_v2.1", "PixarXL", "RW_PS1v1", "RW_pixelart_XL_v1", "Retro_Comic_Flux_v1_renderartist", "SDXL-Lightning/sdxl_lightning_2step_lora", "Vivid Midjourney mimic - XL SDXL v2.0", "add_detail", "anime_lora_comfy_converted", "disney_lora_comfy_converted", "flux_realism_lora", "flux_spirited_away", "furry_lora", "house_architecture_Exterior_SDlife_Chiasedamme", "lcm/SD1.5/pytorch_lora_weights", "legody-v10", "moonies&glorpies_lora", "moonies_lora", "more_details", "pieter", "ps1_style_SDXL_v2", "sdxl_lightning_4step_lora", "v3_sd15_adapter", "xl_more_art-full_v1", "zavy-cntrst-sdxl", "zyd232_Ink_Style_Flux1D_v1_1"]], "insert_embedding": [["CHOOSE"]], "insert_saved": [["CHOOSE"]]}, "hidden": {"values_insert_saved": [["CHOOSE"]]}}, "input_order": {"required": ["prompt"], "optional": ["opt_model", "opt_clip", "insert_lora", "insert_embedding", "insert_saved"], "hidden": ["values_insert_saved"]}, "output": ["CONDITIONING", "MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["CONDITIONING", "MODEL", "CLIP", "TEXT"], "name": "Power Prompt (rgthree)", "display_name": "Power Prompt (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Power Prompt - Simple (rgthree)": {"input": {"required": {"prompt": ["STRING", {"multiline": true}]}, "optional": {"opt_clip": ["CLIP"], "insert_embedding": [["CHOOSE"]], "insert_saved": [["CHOOSE"]]}, "hidden": {"values_insert_saved": [["CHOOSE"]]}}, "input_order": {"required": ["prompt"], "optional": ["opt_clip", "insert_embedding", "insert_saved"], "hidden": ["values_insert_saved"]}, "output": ["CONDITIONING", "STRING"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "TEXT"], "name": "Power Prompt - Simple (rgthree)", "display_name": "Power Prompt - Simple (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "KSampler Config (rgthree)": {"input": {"required": {"steps_total": ["INT", {"default": 30, "min": 1, "max": 16384, "step": 1}], "refiner_step": ["INT", {"default": 24, "min": 1, "max": 16384, "step": 1}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.5}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]]}}, "input_order": {"required": ["steps_total", "refiner_step", "cfg", "sampler_name", "scheduler"]}, "output": ["INT", "INT", "FLOAT", ["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"], ["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "output_is_list": [false, false, false, false, false], "output_name": ["STEPS", "REFINER_STEP", "CFG", "SAMPLER", "SCHEDULER"], "name": "KSampler Config (rgthree)", "display_name": "KSampler Config (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "SDXL Empty Latent Image (rgthree)": {"input": {"required": {"dimensions": [["1536 x 640   (landscape)", "1344 x 768   (landscape)", "1216 x 832   (landscape)", "1152 x 896   (landscape)", "1024 x 1024  (square)", " 896 x 1152  (portrait)", " 832 x 1216  (portrait)", " 768 x 1344  (portrait)", " 640 x 1536  (portrait)"], {"default": "1024 x 1024  (square)"}], "clip_scale": ["FLOAT", {"default": 2.0, "min": 1.0, "max": 10.0, "step": 0.5}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["dimensions", "clip_scale", "batch_size"]}, "output": ["LATENT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["LATENT", "CLIP_WIDTH", "CLIP_HEIGHT"], "name": "SDXL Empty Latent Image (rgthree)", "display_name": "SDXL Empty Latent Image (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "SDXL Power Prompt - Positive (rgthree)": {"input": {"required": {"prompt_g": ["STRING", {"multiline": true}], "prompt_l": ["STRING", {"multiline": true}]}, "optional": {"opt_model": ["MODEL"], "opt_clip": ["CLIP"], "opt_clip_width": ["INT", {"forceInput": true, "default": 1024.0, "min": 0, "max": 16384}], "opt_clip_height": ["INT", {"forceInput": true, "default": 1024.0, "min": 0, "max": 16384}], "insert_lora": [["CHOOSE", "DISABLE LORAS", "AnimateLCM_sd15_t2v_lora", "Bending_Illustartion-000007", "Bending_Illustartion-000010", "Bending_Illustartion-000014", "CPA", "Kodak Motion Picture Film Style v5_2", "Lego_XL_v2.1", "PixarXL", "RW_PS1v1", "RW_pixelart_XL_v1", "Retro_Comic_Flux_v1_renderartist", "SDXL-Lightning/sdxl_lightning_2step_lora", "Vivid Midjourney mimic - XL SDXL v2.0", "add_detail", "anime_lora_comfy_converted", "disney_lora_comfy_converted", "flux_realism_lora", "flux_spirited_away", "furry_lora", "house_architecture_Exterior_SDlife_Chiasedamme", "lcm/SD1.5/pytorch_lora_weights", "legody-v10", "moonies&glorpies_lora", "moonies_lora", "more_details", "pieter", "ps1_style_SDXL_v2", "sdxl_lightning_4step_lora", "v3_sd15_adapter", "xl_more_art-full_v1", "zavy-cntrst-sdxl", "zyd232_Ink_Style_Flux1D_v1_1"]], "insert_embedding": [["CHOOSE"]], "insert_saved": [["CHOOSE"]], "target_width": ["INT", {"default": -1, "min": -1, "max": 16384}], "target_height": ["INT", {"default": -1, "min": -1, "max": 16384}], "crop_width": ["INT", {"default": -1, "min": -1, "max": 16384}], "crop_height": ["INT", {"default": -1, "min": -1, "max": 16384}]}, "hidden": {"values_insert_saved": [["CHOOSE"]]}}, "input_order": {"required": ["prompt_g", "prompt_l"], "optional": ["opt_model", "opt_clip", "opt_clip_width", "opt_clip_height", "insert_lora", "insert_embedding", "insert_saved", "target_width", "target_height", "crop_width", "crop_height"], "hidden": ["values_insert_saved"]}, "output": ["CONDITIONING", "MODEL", "CLIP", "STRING", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["CONDITIONING", "MODEL", "CLIP", "TEXT_G", "TEXT_L"], "name": "SDXL Power Prompt - Positive (rgthree)", "display_name": "SDXL Power Prompt - Positive (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "SDXL Power Prompt - Simple / Negative (rgthree)": {"input": {"required": {"prompt_g": ["STRING", {"multiline": true}], "prompt_l": ["STRING", {"multiline": true}]}, "optional": {"opt_clip": ["CLIP"], "opt_clip_width": ["INT", {"forceInput": true, "default": 1024.0, "min": 0, "max": 16384}], "opt_clip_height": ["INT", {"forceInput": true, "default": 1024.0, "min": 0, "max": 16384}], "insert_embedding": [["CHOOSE"]], "insert_saved": [["CHOOSE"]], "target_width": ["INT", {"default": -1, "min": -1, "max": 16384}], "target_height": ["INT", {"default": -1, "min": -1, "max": 16384}], "crop_width": ["INT", {"default": -1, "min": -1, "max": 16384}], "crop_height": ["INT", {"default": -1, "min": -1, "max": 16384}]}, "hidden": {"values_insert_saved": [["CHOOSE"]]}}, "input_order": {"required": ["prompt_g", "prompt_l"], "optional": ["opt_clip", "opt_clip_width", "opt_clip_height", "insert_embedding", "insert_saved", "target_width", "target_height", "crop_width", "crop_height"], "hidden": ["values_insert_saved"]}, "output": ["CONDITIONING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["CONDITIONING", "TEXT_G", "TEXT_L"], "name": "SDXL Power Prompt - Simple / Negative (rgthree)", "display_name": "SDXL Power Prompt - Simple / Negative (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Any Switch (rgthree)": {"input": {"required": {}, "optional": {}}, "input_order": {"required": [], "optional": []}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "Any Switch (rgthree)", "display_name": "Any Switch (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Image Comparer (rgthree)": {"input": {"required": {}, "optional": {"image_a": ["IMAGE"], "image_b": ["IMAGE"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": [], "optional": ["image_a", "image_b"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Image Comparer (rgthree)", "display_name": "Image Comparer (rgthree)", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": true}, "Power Lora Loader (rgthree)": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"]}, "optional": {}, "hidden": {}}, "input_order": {"required": ["model", "clip"], "optional": [], "hidden": []}, "output": ["MODEL", "CLIP"], "output_is_list": [false, false], "output_name": ["MODEL", "CLIP"], "name": "Power Lora Loader (rgthree)", "display_name": "Power Lora Loader (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "VHS_VideoCombine": {"input": {"required": {"images": ["IMAGE"], "frame_rate": ["FLOAT", {"default": 8, "min": 1, "step": 1}], "loop_count": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "filename_prefix": ["STRING", {"default": "AnimateDiff"}], "format": [["image/gif", "image/webp", "video/16bit-png", "video/8bit-png", ["video/ProRes", [["profile", ["1", "2", "3", "4"], {"default": "3"}]]], ["video/av1-webm", [["pix_fmt", ["yuv420p10le", "yuv420p"]], ["crf", "INT", {"default": 23, "min": 0, "max": 100, "step": 1}], ["input_color_depth", ["8bit", "16bit"]], ["save_metadata", "BOOLEAN", {"default": true}]]], ["video/ffmpeg-gif", [["dither", ["bayer", "heckbert", "floyd_steinberg", "sierra2", "sierra2_4a", "sierra3", "burkes", "atkinson", "none"], {"default": "sierra2_4a"}, "[0:v] split [a][b]; [a] palettegen=reserve_transparent=on:transparency_color=ffffff [p]; [b][p] paletteuse=dither=$val"]]], ["video/h264-mp4", [["pix_fmt", ["yuv420p", "yuv420p10le"]], ["crf", "INT", {"default": 19, "min": 0, "max": 100, "step": 1}], ["save_metadata", "BOOLEAN", {"default": true}]]], ["video/h265-mp4", [["pix_fmt", ["yuv420p10le", "yuv420p"]], ["crf", "INT", {"default": 22, "min": 0, "max": 100, "step": 1}], ["save_metadata", "BOOLEAN", {"default": true}]]], ["video/nvenc_h264-mp4", [["pix_fmt", ["yuv420p", "yuv420p10le", "rgba"]], ["bitrate", "INT", {"default": 10, "min": 1, "max": 999, "step": 1}], ["megabit", "BOOLEAN", {"default": true}], ["save_metadata", "BOOLEAN", {"default": true}]]], ["video/nvenc_hevc-mp4", [["pix_fmt", ["yuv420p", "yuv420p10le", "rgba"]], ["bitrate", "INT", {"default": 10, "min": 1, "max": 999, "step": 1}], ["megabit", "BOOLEAN", {"default": true}], ["save_metadata", "BOOLEAN", {"default": true}]]], ["video/webm", [["pix_fmt", ["yuv420p", "yuva420p"]], ["crf", "INT", {"default": 20, "min": 0, "max": 100, "step": 1}], ["save_metadata", "BOOLEAN", {"default": true}]]]]], "pingpong": ["BOOLEAN", {"default": false}], "save_output": ["BOOLEAN", {"default": true}]}, "optional": {"audio": ["AUDIO"], "meta_batch": ["VHS_BatchManager"], "vae": ["VAE"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["images", "frame_rate", "loop_count", "filename_prefix", "format", "pingpong", "save_output"], "optional": ["audio", "meta_batch", "vae"], "hidden": ["prompt", "extra_pnginfo", "unique_id"]}, "output": ["VHS_FILENAMES"], "output_is_list": [false], "output_name": ["Filenames"], "name": "VHS_VideoCombine", "display_name": "Video Combine \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Video Combine \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Combine an image sequence into a video</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"images\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">images: The images to be turned into a video</div></div><div vhs_title=\"audio\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">audio: (optional) audio to add to the video</div></div><div vhs_title=\"meta_batch\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">meta_batch: (optional) Connect to a Meta Batch manager to divide extremely long image sequences into sub batches. See the documentation for Meta Batch Manager</div></div><div vhs_title=\"vae\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">vae: (optional) If provided, the node will take latents as input instead of images. This drastically reduces the required RAM (not VRAM) when working with long (100+ frames) sequences<div style=\"font-size: 1em\">Unlike on Load Video, this isn't always a strict upgrade over using a standalone VAE Decode.</div><div style=\"font-size: 1em\">If you have multiple Video Combine outputs, then the VAE decode will be performed for each output node increasing execution time</div><div style=\"font-size: 1em\">If you make any change to output settings on the Video Combine (such as changing the output format), the VAE decode will be performed again as the decoded result is (by design) not cached</div></div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"frame_rate\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">frame_rate: The frame rate which will be used for the output video. Consider converting this to an input and connecting this to a Load Video with Video Info(Loaded)->fps. When including audio, failure to properly set this will result in audio desync</div></div><div vhs_title=\"loop_count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">loop_count: The number of additional times the video should repeat. Can cause performance issues when used with long (100+ frames) sequences</div></div><div vhs_title=\"filename_prefix\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">filename_prefix: A prefix to add to the name of the output filename. This can include subfolders or format strings.</div></div><div vhs_title=\"format\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">format: The output format to use. Formats starting with, 'image' are saved with PIL, but formats starting with 'video' utilize the video_formats system. 'video' options require ffmpeg and selecting one frequently adds additional options to the node.</div></div><div vhs_title=\"pingpong\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">pingpong: Play the video normally, then repeat the video in reverse so that it 'pingpongs' back and forth. This is frequently used to minimize the appearance of skips on very short animations.</div></div><div vhs_title=\"save_output\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">save_output: Specifies if output files should be saved to the output folder, or the temporary output folder</div></div><div vhs_title=\"videopreview\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">videopreview: Displays a preview for the processed result. If advanced previews is enabled, the output is always converted to a format viewable from the browser. If the video has audio, it will also be previewed when moused over. Additional preview options can be accessed with right click.</div></div></div></div><div vhs_title=\"Common Format Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Common Format Widgets: <div vhs_title=\"crf\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">crf: Determines how much to prioritize quality over filesize. Numbers vary between formats, but on each format that includes it, the default value provides visually loss less output</div></div><div vhs_title=\"pix_fmt\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">pix_fmt: The pixel format to use for output. Alternative options will often have higher quality at the cost of increased file size and reduced compatibility with external software.<div style=\"font-size: 1em\"><div vhs_title=\"yuv420p\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">yuv420p: The most common and default format</div></div><div vhs_title=\"yuv420p10le\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">yuv420p10le: Use 10 bit color depth. This can improve color quality when combined with 16bit input color depth</div></div><div vhs_title=\"yuva420p\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">yuva420p: Include transparency in the output video</div></div></div></div></div><div vhs_title=\"input_color_depth\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">input_color_depth: VHS supports outputting 16bit images. While this produces higher quality output, the difference usually isn't visible without postprocessing and it significantly increases file size and processing time.</div></div><div vhs_title=\"save_metadata\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">save_metadata: Determines if metadata for the workflow should be included in the output video file</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "output_node": true}, "VHS_LoadVideo": {"input": {"required": {"video": [["AnimateDiff_00037.mp4", "Playbook__00314.mp4"]], "force_rate": ["INT", {"default": 0, "min": 0, "max": 60, "step": 1}], "force_size": [["Disabled", "Custom Height", "Custom Width", "Custom", "256x?", "?x256", "256x256", "512x?", "?x512", "512x512"]], "custom_width": ["INT", {"default": 512, "min": 0, "max": 8192, "step": 8}], "custom_height": ["INT", {"default": 512, "min": 0, "max": 8192, "step": 8}], "frame_load_cap": ["INT", {"default": 0, "min": 0, "max": 9007199254740991, "step": 1}], "skip_first_frames": ["INT", {"default": 0, "min": 0, "max": 9007199254740991, "step": 1}], "select_every_nth": ["INT", {"default": 1, "min": 1, "max": 9007199254740991, "step": 1}]}, "optional": {"meta_batch": ["VHS_BatchManager"], "vae": ["VAE"]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["video", "force_rate", "force_size", "custom_width", "custom_height", "frame_load_cap", "skip_first_frames", "select_every_nth"], "optional": ["meta_batch", "vae"], "hidden": ["unique_id"]}, "output": ["IMAGE", "INT", "AUDIO", "VHS_VIDEOINFO"], "output_is_list": [false, false, false, false], "output_name": ["IMAGE", "frame_count", "audio", "video_info"], "name": "VHS_LoadVideo", "display_name": "Load Video (Upload) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Load Video \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Loads a video from the input folder</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"meta_batch\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">meta_batch: (optional) Connect to a Meta Batch manager to divide extremely long sequences into sub batches. See the documentation for Meta Batch Manager</div></div><div vhs_title=\"vae\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">vae: (optional) If provided the node will output latents instead of images. This drastically reduces the required RAM (not VRAM) when working with long (100+ frames) sequences<div style=\"font-size: 1em\">Using this is strongly encouraged unless connecting to a node that requires a blue image connection such as Apply Controllnet</div></div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"IMAGE\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">IMAGE: The loaded images</div></div><div vhs_title=\"frame_count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">frame_count: The length of images just returned</div></div><div vhs_title=\"audio\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">audio: The audio from the loaded video</div></div><div vhs_title=\"video_info\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">video_info: Exposes additional info about the video such as the source frame rate, or the total length</div></div><div vhs_title=\"LATENT\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">LATENT: The loaded images pre-converted to latents. Only available when a vae is connected</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"video\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">video: The video file to be loaded. Lists all files with a video extension in the ComfyUI/Input folder</div></div><div vhs_title=\"force_rate\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">force_rate: Drops or duplicates frames so that the produced output has the target frame rate. Many motion models are trained on videos of a specific frame rate and will give better results if input matches that frame rate. If set to 0, all frames are returned. May give unusual results with inputs that have a variable frame rate like animated gifs. Reducing this value can also greatly reduce the execution time and memory requirements.</div></div><div vhs_title=\"force_size\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">force_size: Allows for conveniently scaling the input without requiring an additional node. Provides options to maintain aspect ratio or conveniently target common training formats for Animate Diff<div style=\"font-size: 1em\"><div vhs_title=\"custom_width\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">custom_width: Allows for an arbitrary width to be entered, cropping to maintain aspect ratio if both are set</div></div><div vhs_title=\"custom_height\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">custom_height: Allows for an arbitrary height to be entered, cropping to maintain aspect ratio if both are set</div></div></div></div></div><div vhs_title=\"frame_load_cap\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">frame_load_cap: The maximum number of frames to load. If 0, all frames are loaded.</div></div><div vhs_title=\"skip_first_frames\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">skip_first_frames: A number of frames which are discarded before producing output.</div></div><div vhs_title=\"select_every_nth\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">select_every_nth: Similar to frame rate. Keeps only the first of every n frames and discard the rest. Has better compatibility with variable frame rate inputs such as gifs. When combined with force_rate, select_every_nth_applies after force_rate so the resulting output has a frame rate equivalent to force_rate/select_every_nth. select_every_nth does not apply to skip_first_frames</div></div><div vhs_title=\"choose video to upload\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">choose video to upload: An upload button is provided to upload local files to the input folder</div></div><div vhs_title=\"videopreview\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">videopreview: Displays a preview for the selected video input. If advanced previews is enabled, this preview will reflect the frame_load_cap, force_rate, skip_first_frames, and select_every_nth values chosen. If the video has audio, it will also be previewed when moused over. Additional preview options can be accessed with right click.</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "output_node": false}, "VHS_LoadVideoPath": {"input": {"required": {"video": ["STRING", {"placeholder": "X://insert/path/here.mp4", "vhs_path_extensions": ["webm", "mp4", "mkv", "gif", "mov"]}], "force_rate": ["INT", {"default": 0, "min": 0, "max": 60, "step": 1}], "force_size": [["Disabled", "Custom Height", "Custom Width", "Custom", "256x?", "?x256", "256x256", "512x?", "?x512", "512x512"]], "custom_width": ["INT", {"default": 512, "min": 0, "max": 8192, "step": 8}], "custom_height": ["INT", {"default": 512, "min": 0, "max": 8192, "step": 8}], "frame_load_cap": ["INT", {"default": 0, "min": 0, "max": 9007199254740991, "step": 1}], "skip_first_frames": ["INT", {"default": 0, "min": 0, "max": 9007199254740991, "step": 1}], "select_every_nth": ["INT", {"default": 1, "min": 1, "max": 9007199254740991, "step": 1}]}, "optional": {"meta_batch": ["VHS_BatchManager"], "vae": ["VAE"]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["video", "force_rate", "force_size", "custom_width", "custom_height", "frame_load_cap", "skip_first_frames", "select_every_nth"], "optional": ["meta_batch", "vae"], "hidden": ["unique_id"]}, "output": ["IMAGE", "INT", "AUDIO", "VHS_VIDEOINFO"], "output_is_list": [false, false, false, false], "output_name": ["IMAGE", "frame_count", "audio", "video_info"], "name": "VHS_LoadVideoPath", "display_name": "Load Video (Path) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Load Video (Path) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Loads a video from an arbitrary path</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"meta_batch\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">meta_batch: (optional) Connect to a Meta Batch manager to divide extremely long sequences into sub batches. See the documentation for Meta Batch Manager</div></div><div vhs_title=\"vae\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">vae: (optional) If provided the node will output latents instead of images. This drastically reduces the required RAM (not VRAM) when working with long (100+ frames) sequences<div style=\"font-size: 1em\">Using this is strongly encouraged unless connecting to a node that requires a blue image connection such as Apply Controllnet</div></div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"IMAGE\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">IMAGE: The loaded images</div></div><div vhs_title=\"frame_count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">frame_count: The length of images just returned</div></div><div vhs_title=\"audio\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">audio: The audio from the loaded video</div></div><div vhs_title=\"video_info\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">video_info: Exposes additional info about the video such as the source frame rate, or the total length</div></div><div vhs_title=\"LATENT\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">LATENT: The loaded images pre-converted to latents. Only available when a vae is connected</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"video\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">video: The video file to be loaded.<div style=\"font-size: 1em\">You can also select an image to load it as a single frame</div><div style=\"font-size: 1em\">This is a VHS_PATH input. When edited, it provides a list of possible valid files or directories</div><div style=\"font-size: 1em\"><video src=https://github.com/Kosinkadink/ComfyUI-VideoHelperSuite/assets/4284322/729b7185-1fca-41d8-bc8d-a770bb2a5ce6 autoplay muted loop controls controlslist=\"nodownload noremoteplayback noplaybackrate\" style=\"width: 0px; min-width: 100%\" class=\"VHS_loopedvideo\"></div><div style=\"font-size: 1em\">The current top-most completion may be selected with Tab</div><div style=\"font-size: 1em\">You can navigate up a directory by pressing Ctrl+B (or Ctrl+W if supported by browser)</div><div style=\"font-size: 1em\">The filter on suggested file types can be disabled by pressing Ctrl+G.</div><div style=\"font-size: 1em\">If converted to an input, this functions as a string</div></div></div><div vhs_title=\"force_rate\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">force_rate: Drops or duplicates frames so that the produced output has the target frame rate. Many motion models are trained on videos of a specific frame rate and will give better results if input matches that frame rate. If set to 0, all frames are returned. May give unusual results with inputs that have a variable frame rate like animated gifs. Reducing this value can also greatly reduce the execution time and memory requirements.</div></div><div vhs_title=\"force_size\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">force_size: Allows for conveniently scaling the input without requiring an additional node. Provides options to maintain aspect ratio or conveniently target common training formats for Animate Diff<div style=\"font-size: 1em\"><div vhs_title=\"custom_width\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">custom_width: Allows for an arbitrary width to be entered, cropping to maintain aspect ratio if both are set</div></div><div vhs_title=\"custom_height\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">custom_height: Allows for an arbitrary height to be entered, cropping to maintain aspect ratio if both are set</div></div></div></div></div><div vhs_title=\"frame_load_cap\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">frame_load_cap: The maximum number of frames to load. If 0, all frames are loaded.</div></div><div vhs_title=\"skip_first_frames\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">skip_first_frames: A number of frames which are discarded before producing output.</div></div><div vhs_title=\"select_every_nth\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">select_every_nth: Similar to frame rate. Keeps only the first of every n frames and discard the rest. Has better compatibility with variable frame rate inputs such as gifs. When combined with force_rate, select_every_nth_applies after force_rate so the resulting output has a frame rate equivalent to force_rate/select_every_nth. select_every_nth does not apply to skip_first_frames</div></div><div vhs_title=\"videopreview\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">videopreview: Displays a preview for the selected video input. Will only be shown if Advanced Previews is enabled. This preview will reflect the frame_load_cap, force_rate, skip_first_frames, and select_every_nth values chosen. If the video has audio, it will also be previewed when moused over. Additional preview options can be accessed with right click.</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "output_node": false}, "VHS_LoadImages": {"input": {"required": {"directory": [["pasted"]]}, "optional": {"image_load_cap": ["INT", {"default": 0, "min": 0, "max": 9007199254740991, "step": 1}], "skip_first_images": ["INT", {"default": 0, "min": 0, "max": 9007199254740991, "step": 1}], "select_every_nth": ["INT", {"default": 1, "min": 1, "max": 9007199254740991, "step": 1}], "meta_batch": ["VHS_BatchManager"]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["directory"], "optional": ["image_load_cap", "skip_first_images", "select_every_nth", "meta_batch"], "hidden": ["unique_id"]}, "output": ["IMAGE", "MASK", "INT"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "MASK", "frame_count"], "name": "VHS_LoadImages", "display_name": "Load Images (Upload) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Load Images \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Loads a sequence of images from a subdirectory of the input folder</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"meta_batch\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">meta_batch: (optional) Connect to a Meta Batch manager to divide extremely long sequences into sub batches. See the documentation for Meta Batch Manager</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"IMAGE\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">IMAGE: The loaded images</div></div><div vhs_title=\"MASK\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">MASK: The alpha channel of the loaded images.</div></div><div vhs_title=\"frame_count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">frame_count: The length of images just returned</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"directory\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">directory: The directory images will be loaded from. Filtered to process jpg, png, ppm, bmp, tif, and webp files</div></div><div vhs_title=\"image_load_cap\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">image_load_cap: The maximum number of images to load. If 0, all images are loaded.</div></div><div vhs_title=\"skip_first_images\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">skip_first_images: A number of images which are discarded before producing output.</div></div><div vhs_title=\"select_every_nth\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">select_every_nth: Keeps only the first of every n frames and discard the rest.</div></div><div vhs_title=\"choose folder to upload\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">choose folder to upload: An upload button is provided to upload a local folder containing images to the input folder</div></div><div vhs_title=\"videopreview\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">videopreview: Displays a preview for the selected video input. Will only be shown if Advanced Previews is enabled. This preview will reflect the image_load_cap, skip_first_images, and select_every_nth values chosen. Additional preview options can be accessed with right click.</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "output_node": false}, "VHS_LoadImagesPath": {"input": {"required": {"directory": ["STRING", {"placeholder": "X://path/to/images", "vhs_path_extensions": []}]}, "optional": {"image_load_cap": ["INT", {"default": 0, "min": 0, "max": 9007199254740991, "step": 1}], "skip_first_images": ["INT", {"default": 0, "min": 0, "max": 9007199254740991, "step": 1}], "select_every_nth": ["INT", {"default": 1, "min": 1, "max": 9007199254740991, "step": 1}], "meta_batch": ["VHS_BatchManager"]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["directory"], "optional": ["image_load_cap", "skip_first_images", "select_every_nth", "meta_batch"], "hidden": ["unique_id"]}, "output": ["IMAGE", "MASK", "INT"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "MASK", "frame_count"], "name": "VHS_LoadImagesPath", "display_name": "Load Images (Path) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Load Images (Path) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Loads a sequence of images from a subdirectory of the input folder</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"meta_batch\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">meta_batch: (optional) Connect to a Meta Batch manager to divide extremely long sequences into sub batches. See the documentation for Meta Batch Manager</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"IMAGE\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">IMAGE: The loaded images</div></div><div vhs_title=\"MASK\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">MASK: The alpha channel of the loaded images.</div></div><div vhs_title=\"frame_count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">frame_count: The length of images just returned</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"directory\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">directory: The directory images will be loaded from. Filtered to process jpg, png, ppm, bmp, tif, and webp files<div style=\"font-size: 1em\">This is a VHS_PATH input. When edited, it provides a list of possible valid files or directories</div><div style=\"font-size: 1em\"><video src=https://github.com/Kosinkadink/ComfyUI-VideoHelperSuite/assets/4284322/729b7185-1fca-41d8-bc8d-a770bb2a5ce6 autoplay muted loop controls controlslist=\"nodownload noremoteplayback noplaybackrate\" style=\"width: 0px; min-width: 100%\" class=\"VHS_loopedvideo\"></div><div style=\"font-size: 1em\">The current top-most completion may be selected with Tab</div><div style=\"font-size: 1em\">You can navigate up a directory by pressing Ctrl+B (or Ctrl+W if supported by browser)</div><div style=\"font-size: 1em\">The filter on suggested file types can be disabled by pressing Ctrl+G.</div><div style=\"font-size: 1em\">If converted to an input, this functions as a string</div></div></div><div vhs_title=\"image_load_cap\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">image_load_cap: The maximum number of images to load. If 0, all images are loaded.</div></div><div vhs_title=\"skip_first_images\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">skip_first_images: A number of images which are discarded before producing output.</div></div><div vhs_title=\"select_every_nth\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">select_every_nth: Keeps only the first of every n frames and discard the rest.</div></div><div vhs_title=\"videopreview\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">videopreview: Displays a preview for the selected video input. Will only be shown if Advanced Previews is enabled. This preview will reflect the image_load_cap, skip_first_images, and select_every_nth values chosen. Additional preview options can be accessed with right click.</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "output_node": false}, "VHS_LoadAudio": {"input": {"required": {"audio_file": ["STRING", {"default": "input/", "vhs_path_extensions": ["wav", "mp3", "ogg", "m4a", "flac"]}]}, "optional": {"seek_seconds": ["FLOAT", {"default": 0, "min": 0}]}}, "input_order": {"required": ["audio_file"], "optional": ["seek_seconds"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["audio"], "name": "VHS_LoadAudio", "display_name": "Load Audio (Path)\ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Load Audio (Path) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Loads an audio file from an arbitrary path</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"audio\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">audio: The loaded audio</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"audio_file\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">audio_file: The audio file to be loaded.<div style=\"font-size: 1em\">This is a VHS_PATH input. When edited, it provides a list of possible valid files or directories</div><div style=\"font-size: 1em\"><video src=https://github.com/Kosinkadink/ComfyUI-VideoHelperSuite/assets/4284322/729b7185-1fca-41d8-bc8d-a770bb2a5ce6 autoplay muted loop controls controlslist=\"nodownload noremoteplayback noplaybackrate\" style=\"width: 0px; min-width: 100%\" class=\"VHS_loopedvideo\"></div><div style=\"font-size: 1em\">The current top-most completion may be selected with Tab</div><div style=\"font-size: 1em\">You can navigate up a directory by pressing Ctrl+B (or Ctrl+W if supported by browser)</div><div style=\"font-size: 1em\">The filter on suggested file types can be disabled by pressing Ctrl+G.</div><div style=\"font-size: 1em\">If converted to an input, this functions as a string</div></div></div><div vhs_title=\"seek_seconds\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">seek_seconds: An offset from the start of the sound file that the audio should start from</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/audio", "output_node": false}, "VHS_LoadAudioUpload": {"input": {"required": {"audio": [["AnimateDiff_00037.mp4", "Playbook__00314.mp4"]], "start_time": ["FLOAT", {"default": 0, "min": 0, "max": 10000000, "step": 0.01}], "duration": ["FLOAT", {"default": 0, "min": 0, "max": 10000000, "step": 0.01}]}}, "input_order": {"required": ["audio", "start_time", "duration"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["audio"], "name": "VHS_LoadAudioUpload", "display_name": "Load Audio (Upload)\ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Load Audio (Upload) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Loads an audio file from the input directory</div></div><div style=\"font-size: 0.8em\">Very similar in functionality to the built-in LoadAudio. It was originally added before VHS swapped to use Comfy's internal AUDIO format, but provides the additional options for start time and duration</div><div style=\"font-size: 0.8em\"><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"audio\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">audio: The loaded audio</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"audio\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">audio: The audio file to be loaded.</div></div><div vhs_title=\"start_time\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">start_time: An offset from the start of the sound file that the audio should start from</div></div><div vhs_title=\"duration\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">duration: A maximum limit for the audio. Disabled if 0</div></div><div vhs_title=\"choose audio to upload\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">choose audio to upload: An upload button is provided to upload an audio file to the input folder</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/audio", "output_node": false}, "VHS_AudioToVHSAudio": {"input": {"required": {"audio": ["AUDIO"]}}, "input_order": {"required": ["audio"]}, "output": ["VHS_AUDIO"], "output_is_list": [false], "output_name": ["vhs_audio"], "name": "VHS_AudioToVHSAudio", "display_name": "Audio to legacy VHS_AUDIO\ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Audio to legacy VHS_AUDIO \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>utility function for compatibility with external nodes</div></div><div style=\"font-size: 0.8em\">VHS used to use an internal VHS_AUDIO format for routing audio between inputs and outputs. This format was intended to only be used internally and was designed with a focus on performance over ease of use. Since ComfyUI now has an internal AUDIO format, VHS now uses this format. However, some custom node packs were made that are external to both ComfyUI and VHS that use VHS_AUDIO. This node was added so that those external nodes can still function</div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"audio\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">audio: An input in the standardized AUDIO format</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"vhs_audio\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">vhs_audio: An output in the legacy VHS_AUDIO format for use with external nodes</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/audio", "output_node": false}, "VHS_VHSAudioToAudio": {"input": {"required": {"vhs_audio": ["VHS_AUDIO"]}}, "input_order": {"required": ["vhs_audio"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["audio"], "name": "VHS_VHSAudioToAudio", "display_name": "Legacy VHS_AUDIO to Audio\ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Legacy VHS_AUDIO to Audio \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>utility function for compatibility with external nodes</div></div><div style=\"font-size: 0.8em\">VHS used to use an internal VHS_AUDIO format for routing audio between inputs and outputs. This format was intended to only be used internally and was designed with a focus on performance over ease of use. Since ComfyUI now has an internal AUDIO format, VHS now uses this format. However, some custom node packs were made that are external to both ComfyUI and VHS that use VHS_AUDIO. This node was added so that those external nodes can still function</div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"vhs_audio\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">vhs_audio: An input in the legacy VHS_AUDIO format produced by an external node</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"vhs_audio\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">vhs_audio: An output in the standardized AUDIO format</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/audio", "output_node": false}, "VHS_PruneOutputs": {"input": {"required": {"filenames": ["VHS_FILENAMES"], "options": [["Intermediate", "Intermediate and Utility"]]}}, "input_order": {"required": ["filenames", "options"]}, "output": [], "output_is_list": [], "output_name": [], "name": "VHS_PruneOutputs", "display_name": "Prune Outputs \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Prune Outputs \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Automates deletion of undesired outputs from a Video Combine node.</div></div><div style=\"font-size: 0.8em\">Video Combine produces a number of file outputs in addition to the final output. Some of these, such as a video file without audio included, are implementation limitations and are not feasible to solve. As an alternative, the Prune Outputs node is added to automate the deletion of these file outputs if they are not desired</div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"filenames\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">filenames: A connection from a Video Combine node to indicate which outputs should be pruned</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"options\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">options: Which files should be deleted<div style=\"font-size: 1em\"><div vhs_title=\"Intermediate\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Intermediate: Delete any files that were required for intermediate processing but are not the final output, like the no-audio output file when audio is included</div></div><div vhs_title=\"Intermediate and Utility\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Intermediate and Utility: Delete all produced files that aren't the final output, including the first frame png</div></div></div></div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "output_node": true}, "VHS_BatchManager": {"input": {"required": {"frames_per_batch": ["INT", {"default": 16, "min": 1, "max": 128, "step": 1}]}, "hidden": {"prompt": "PROMPT", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["frames_per_batch"], "hidden": ["prompt", "unique_id"]}, "output": ["VHS_BatchManager"], "output_is_list": [false], "output_name": ["meta_batch"], "name": "VHS_BatchManager", "display_name": "Meta Batch Manager \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Meta Batch Manager \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Split the processing of a very long video into sets of smaller Meta Batches</div></div><div style=\"font-size: 0.8em\">The Meta Batch Manager allows for extremely long input videos to be processed when all other methods for fitting the content in RAM fail. It does not effect VRAM usage.</div><div style=\"font-size: 0.8em\">It must be connected to at least one Input (a Load Video or Load Images) AND at least one Video Combine</div><div style=\"font-size: 0.8em\"><img src=https://github.com/Kosinkadink/ComfyUI-VideoHelperSuite/assets/4284322/7cb3fb7e-59d8-4cb2-a09f-9c6698de8b1f style=\"width: 0px; min-width: 100%\"></div><div style=\"font-size: 0.8em\">It functions by holding both the inputs and ouputs open between executions, and automatically requeue's the workflow until one of the inputs is unable to provide additional images.</div><div style=\"font-size: 0.8em\">Because each sub execution only contains a subset of the total frames, each sub execution creates a hard window which temporal smoothing can not be applied across. This results in jumps in the output.</div><div style=\"font-size: 0.8em\"><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"meta_batch\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">meta_batch: Add all connected nodes to this Meta Batch</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"frames_per_batch\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">frames_per_batch: How many frames to process for each sub execution. If loading as image, each frame will use about 50MB of RAM (not VRAM), and this can safely be set in the 100-1000 range, depending on available memory. When loading and combining from latent space (no blue image noodles exist), this value can be much higher, around the 2,000 to 20,000 range</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "output_node": false}, "VHS_VideoInfo": {"input": {"required": {"video_info": ["VHS_VIDEOINFO"]}}, "input_order": {"required": ["video_info"]}, "output": ["FLOAT", "INT", "FLOAT", "INT", "INT", "FLOAT", "INT", "FLOAT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false, false], "output_name": ["source_fps\ud83d\udfe8", "source_frame_count\ud83d\udfe8", "source_duration\ud83d\udfe8", "source_width\ud83d\udfe8", "source_height\ud83d\udfe8", "loaded_fps\ud83d\udfe6", "loaded_frame_count\ud83d\udfe6", "loaded_duration\ud83d\udfe6", "loaded_width\ud83d\udfe6", "loaded_height\ud83d\udfe6"], "name": "VHS_VideoInfo", "display_name": "Video Info \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Video Info \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Splits information on a video into a numerous outputs</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"video_info\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">video_info: A connection to a Load Video node</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"source_fps\ud83d\udfe8\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">source_fps\ud83d\udfe8: The frame rate of the video</div></div><div vhs_title=\"source_frame_count\ud83d\udfe8\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">source_frame_count\ud83d\udfe8: How many total frames the video contains before accounting for frame rate or select_every_nth</div></div><div vhs_title=\"source_duration\ud83d\udfe8\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">source_duration\ud83d\udfe8: The length of images just returned in seconds</div></div><div vhs_title=\"source_width\ud83d\udfe8\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">source_width\ud83d\udfe8: The width</div></div><div vhs_title=\"source_height\ud83d\udfe8\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">source_height\ud83d\udfe8: The height</div></div><div vhs_title=\"loaded_fps\ud83d\udfe6\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">loaded_fps\ud83d\udfe6: The frame rate after accounting for force_rate and select_every_nth. This output is of particular use as it can be connected to the converted frame_rate input of a Video Combine node to ensure audio remains synchronized.</div></div><div vhs_title=\"loaded_frame_count\ud83d\udfe6\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">loaded_frame_count\ud83d\udfe6: The number of frames returned by the current execution. Identical to the frame_count returned by the node itself</div></div><div vhs_title=\"loaded_duration\ud83d\udfe6\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">loaded_duration\ud83d\udfe6: The duration in seconds of returned images after accounting for frame_load_cap</div></div><div vhs_title=\"loaded_width\ud83d\udfe6\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">loaded_width\ud83d\udfe6: The width of the video after scaling. These coordinates are in image space even if loading to latent space</div></div><div vhs_title=\"loaded_height\ud83d\udfe6\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">loaded_height\ud83d\udfe6: The height of the video after scaling. These coordinates are in image space even if loading to latent space</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "output_node": false}, "VHS_VideoInfoSource": {"input": {"required": {"video_info": ["VHS_VIDEOINFO"]}}, "input_order": {"required": ["video_info"]}, "output": ["FLOAT", "INT", "FLOAT", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["fps\ud83d\udfe8", "frame_count\ud83d\udfe8", "duration\ud83d\udfe8", "width\ud83d\udfe8", "height\ud83d\udfe8"], "name": "VHS_VideoInfoSource", "display_name": "Video Info (Source) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Video Info Source \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Splits information on a video into a numerous outputs describing the file itself without accounting for load options</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"video_info\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">video_info: A connection to a Load Video node</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"source_fps\ud83d\udfe8\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">source_fps\ud83d\udfe8: The frame rate of the video</div></div><div vhs_title=\"source_frame_count\ud83d\udfe8\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">source_frame_count\ud83d\udfe8: How many total frames the video contains before accounting for frame rate or select_every_nth</div></div><div vhs_title=\"source_duration\ud83d\udfe8\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">source_duration\ud83d\udfe8: The length of images just returned in seconds</div></div><div vhs_title=\"source_width\ud83d\udfe8\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">source_width\ud83d\udfe8: The original width</div></div><div vhs_title=\"source_height\ud83d\udfe8\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">source_height\ud83d\udfe8: The original height</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "output_node": false}, "VHS_VideoInfoLoaded": {"input": {"required": {"video_info": ["VHS_VIDEOINFO"]}}, "input_order": {"required": ["video_info"]}, "output": ["FLOAT", "INT", "FLOAT", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["fps\ud83d\udfe6", "frame_count\ud83d\udfe6", "duration\ud83d\udfe6", "width\ud83d\udfe6", "height\ud83d\udfe6"], "name": "VHS_VideoInfoLoaded", "display_name": "Video Info (Loaded) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Video Info Loaded \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Splits information on a video into a numerous outputs describing the file itself after accounting for load options</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"video_info\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">video_info: A connection to a Load Video node</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"loaded_fps\ud83d\udfe6\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">loaded_fps\ud83d\udfe6: The frame rate after accounting for force_rate and select_every_nth. This output is of particular use as it can be connected to the converted frame_rate input of a Video Combine node to ensure audio remains synchronized.</div></div><div vhs_title=\"loaded_frame_count\ud83d\udfe6\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">loaded_frame_count\ud83d\udfe6: The number of frames returned by the current execution. Identical to the frame_count returned by the node itself</div></div><div vhs_title=\"loaded_duration\ud83d\udfe6\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">loaded_duration\ud83d\udfe6: The duration in seconds of returned images after accounting for frame_load_cap</div></div><div vhs_title=\"loaded_width\ud83d\udfe6\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">loaded_width\ud83d\udfe6: The width of the video after scaling. This is the dimension of the corresponding image even if loading as a latent directly</div></div><div vhs_title=\"loaded_height\ud83d\udfe6\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">loaded_height\ud83d\udfe6: The height of the video after scaling. This is the dimension of the corresponding image even if loading as a latent directly</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "output_node": false}, "VHS_SelectFilename": {"input": {"required": {"filenames": ["VHS_FILENAMES"], "index": ["INT", {"default": -1, "step": 1, "min": -1}]}}, "input_order": {"required": ["filenames", "index"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["Filename"], "name": "VHS_SelectFilename", "display_name": "Select Filename \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "VAE Select Filename \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Select a single filename from the VHS_FILENAMES output by a Video Combine and return it as a string</div></div><div style=\"font-size: 0.8em\">Take care when combining this node with Prune Outputs. The VHS_FILENAMES object is immutable and will always contain the full list of output files, but execution order is undefined behavior (currently, Prune Outputs will generally execute first) and SelectFilename may return a path to a file that no longer exists.</div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"filenames\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">filenames: A VHS_FILENAMES from a Video Combine node</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"filename\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">filename: A string representation of the full output path for the chosen file</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"index\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">index: The index of which file should be selected. The default, -1, chooses the most complete output</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "output_node": false}, "VHS_VAEEncodeBatched": {"input": {"required": {"pixels": ["IMAGE"], "vae": ["VAE"], "per_batch": ["INT", {"default": 16, "min": 1}]}}, "input_order": {"required": ["pixels", "vae", "per_batch"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "VHS_VAEEncodeBatched", "display_name": "VAE Encode Batched \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "VAE Encode Batched \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Encode images as latents with a manually specified batch size.</div></div><div style=\"font-size: 0.8em\">Some people have ran into VRAM issues when encoding or decoding large batches of images. As a workaround, this node lets you manually set a batch size when encoding images.</div><div style=\"font-size: 0.8em\">Unless these issues have been encountered, it is simpler to use the native VAE Encode or to encode directly from a Load Video</div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"pixels\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">pixels: The images to be encoded.</div></div><div vhs_title=\"vae\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">vae: The VAE to use when encoding.</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"LATENT\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">LATENT: The encoded latents.</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"per_batch\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">per_batch: The maximum number of images to encode in each batch.</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/batched nodes", "output_node": false}, "VHS_VAEDecodeBatched": {"input": {"required": {"samples": ["LATENT"], "vae": ["VAE"], "per_batch": ["INT", {"default": 16, "min": 1}]}}, "input_order": {"required": ["samples", "vae", "per_batch"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "VHS_VAEDecodeBatched", "display_name": "VAE Decode Batched \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "VAE Decode Batched \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Decode latents to images with a manually specified batch size</div></div><div style=\"font-size: 0.8em\">Some people have ran into VRAM issues when encoding or decoding large batches of images. As a workaround, this node lets you manually set a batch size when decoding latents.</div><div style=\"font-size: 0.8em\">Unless these issues have been encountered, it is simpler to use the native VAE Decode or to decode from a Video Combine directly</div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"samples\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">samples: The latents to be decoded.</div></div><div vhs_title=\"vae\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">vae: The VAE to use when decoding.</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"IMAGE\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">IMAGE: The decoded images.</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"per_batch\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">per_batch: The maximum number of images to decode in each batch.</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/batched nodes", "output_node": false}, "VHS_SplitLatents": {"input": {"required": {"latents": ["LATENT"], "split_index": ["INT", {"default": 0, "step": 1, "min": -9007199254740991, "max": 9007199254740991}]}}, "input_order": {"required": ["latents", "split_index"]}, "output": ["LATENT", "INT", "LATENT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["LATENT_A", "A_count", "LATENT_B", "B_count"], "name": "VHS_SplitLatents", "display_name": "Split Latents \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Split Latents \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Split a set of latents into two groups</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"latents\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">latents: The latents to be split.</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"LATENT_A\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">LATENT_A: The first group of latents</div></div><div vhs_title=\"A_count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">A_count: The number of latents in group A. This will be equal to split_index unless the latents input has length less than split_index</div></div><div vhs_title=\"LATENT_B\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">LATENT_B: The second group of latents</div></div><div vhs_title=\"B_count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">B_count: The number of latents in group B</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"split_index\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">split_index: The index of the first latent that will be in the second output groups.</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent", "output_node": false}, "VHS_SplitImages": {"input": {"required": {"images": ["IMAGE"], "split_index": ["INT", {"default": 0, "step": 1, "min": -9007199254740991, "max": 9007199254740991}]}}, "input_order": {"required": ["images", "split_index"]}, "output": ["IMAGE", "INT", "IMAGE", "INT"], "output_is_list": [false, false, false, false], "output_name": ["IMAGE_A", "A_count", "IMAGE_B", "B_count"], "name": "VHS_SplitImages", "display_name": "Split Images \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Split Images \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Split a set of images into two groups</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"images\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">images: The images to be split.</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"IMAGE_A\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">IMAGE_A: The first group of images</div></div><div vhs_title=\"A_count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">A_count: The number of images in group A. This will be equal to split_index unless the images input has length less than split_index</div></div><div vhs_title=\"IMAGE_B\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">IMAGE_B: The second group of images</div></div><div vhs_title=\"B_count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">B_count: The number of images in group B</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"split_index\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">split_index: The index of the first latent that will be in the second output groups.</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image", "output_node": false}, "VHS_SplitMasks": {"input": {"required": {"mask": ["MASK"], "split_index": ["INT", {"default": 0, "step": 1, "min": -9007199254740991, "max": 9007199254740991}]}}, "input_order": {"required": ["mask", "split_index"]}, "output": ["MASK", "INT", "MASK", "INT"], "output_is_list": [false, false, false, false], "output_name": ["MASK_A", "A_count", "MASK_B", "B_count"], "name": "VHS_SplitMasks", "display_name": "Split Masks \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Split Masks \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Split a set of masks into two groups</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"mask\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">mask: The masks to be split.</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"MASK_A\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">MASK_A: The first group of masks</div></div><div vhs_title=\"A_count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">A_count: The number of masks in group A. This will be equal to split_index unless the mask input has length less than split_index</div></div><div vhs_title=\"MASK_B\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">MASK_B: The second group of masks</div></div><div vhs_title=\"B_count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">B_count: The number of masks in group B</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"split_index\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">split_index: The index of the first latent that will be in the second output groups.</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask", "output_node": false}, "VHS_MergeLatents": {"input": {"required": {"latents_A": ["LATENT"], "latents_B": ["LATENT"], "merge_strategy": [["match A", "match B", "match smaller", "match larger"]], "scale_method": [["nearest-exact", "bilinear", "area", "bicubic", "bislerp"]], "crop": [["disabled", "center"]]}}, "input_order": {"required": ["latents_A", "latents_B", "merge_strategy", "scale_method", "crop"]}, "output": ["LATENT", "INT"], "output_is_list": [false, false], "output_name": ["LATENT", "count"], "name": "VHS_MergeLatents", "display_name": "Merge Latents \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Merge Latents \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Combine two groups of latents into a single group of latents</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"latents_A\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">latents_A: The first group of latents</div></div><div vhs_title=\"latents_B\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">latents_B: The first group of latents</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"LATENT\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">LATENT: The combined group of latents</div></div><div vhs_title=\"count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">count: The length of the combined group</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"merge_strategy\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">merge_strategy: Determines what the output resolution will be if input resolutions don't match<div style=\"font-size: 1em\"><div vhs_title=\"match A\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">match A: Always use the resolution for A</div></div><div vhs_title=\"match B\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">match B: Always use the resolution for B</div></div><div vhs_title=\"match smaller\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">match smaller: Pick the smaller resolution by area</div></div><div vhs_title=\"match larger\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">match larger: Pick the larger resolution by area</div></div></div></div></div><div vhs_title=\"scale_method\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">scale_method: Determines what method to use if scaling is required</div></div><div vhs_title=\"crop\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">crop: When sizes don't match, should the resized image have it's aspect ratio changed, or be cropped to maintain aspect ratio</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent", "output_node": false}, "VHS_MergeImages": {"input": {"required": {"images_A": ["IMAGE"], "images_B": ["IMAGE"], "merge_strategy": [["match A", "match B", "match smaller", "match larger"]], "scale_method": [["nearest-exact", "bilinear", "area", "bicubic", "bislerp"]], "crop": [["disabled", "center"]]}}, "input_order": {"required": ["images_A", "images_B", "merge_strategy", "scale_method", "crop"]}, "output": ["IMAGE", "INT"], "output_is_list": [false, false], "output_name": ["IMAGE", "count"], "name": "VHS_MergeImages", "display_name": "Merge Images \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Merge Images \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Combine two groups of images into a single group of images</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"images_A\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">images_A: The first group of images</div></div><div vhs_title=\"images_B\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">images_B: The first group of images</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"IMAGE\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">IMAGE: The combined group of images</div></div><div vhs_title=\"count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">count: The length of the combined group</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"merge_strategy\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">merge_strategy: Determines what the output resolution will be if input resolutions don't match<div style=\"font-size: 1em\"><div vhs_title=\"match A\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">match A: Always use the resolution for A</div></div><div vhs_title=\"match B\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">match B: Always use the resolution for B</div></div><div vhs_title=\"match smaller\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">match smaller: Pick the smaller resolution by area</div></div><div vhs_title=\"match larger\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">match larger: Pick the larger resolution by area</div></div></div></div></div><div vhs_title=\"scale_method\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">scale_method: Determines what method to use if scaling is required</div></div><div vhs_title=\"crop\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">crop: When sizes don't match, should the resized image have it's aspect ratio changed, or be cropped to maintain aspect ratio</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image", "output_node": false}, "VHS_MergeMasks": {"input": {"required": {"mask_A": ["MASK"], "mask_B": ["MASK"], "merge_strategy": [["match A", "match B", "match smaller", "match larger"]], "scale_method": [["nearest-exact", "bilinear", "area", "bicubic", "bislerp"]], "crop": [["disabled", "center"]]}}, "input_order": {"required": ["mask_A", "mask_B", "merge_strategy", "scale_method", "crop"]}, "output": ["MASK", "INT"], "output_is_list": [false, false], "output_name": ["MASK", "count"], "name": "VHS_MergeMasks", "display_name": "Merge Masks \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Merge Masks \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Combine two groups of masks into a single group of masks</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"mask_A\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">mask_A: The first group of masks</div></div><div vhs_title=\"mask_B\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">mask_B: The first group of masks</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"MASK\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">MASK: The combined group of masks</div></div><div vhs_title=\"count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">count: The length of the combined group</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"merge_strategy\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">merge_strategy: Determines what the output resolution will be if input resolutions don't match<div style=\"font-size: 1em\"><div vhs_title=\"match A\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">match A: Always use the resolution for A</div></div><div vhs_title=\"match B\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">match B: Always use the resolution for B</div></div><div vhs_title=\"match smaller\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">match smaller: Pick the smaller resolution by area</div></div><div vhs_title=\"match larger\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">match larger: Pick the larger resolution by area</div></div></div></div></div><div vhs_title=\"scale_method\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">scale_method: Determines what method to use if scaling is required</div></div><div vhs_title=\"crop\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">crop: When sizes don't match, should the resized image have it's aspect ratio changed, or be cropped to maintain aspect ratio</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask", "output_node": false}, "VHS_GetLatentCount": {"input": {"required": {"latents": ["LATENT"]}}, "input_order": {"required": ["latents"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["count"], "name": "VHS_GetLatentCount", "display_name": "Get Latent Count \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Get Latent Count \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Return the number of latents in an input as an INT</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"latents\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">latents: The input latent</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">count: The number of latents in the input</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent", "output_node": false}, "VHS_GetImageCount": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["count"], "name": "VHS_GetImageCount", "display_name": "Get Image Count \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Get Image Count \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Return the number of images in an input as an INT</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"images\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">images: The input image</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">count: The number of images in the input</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image", "output_node": false}, "VHS_GetMaskCount": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["count"], "name": "VHS_GetMaskCount", "display_name": "Get Mask Count \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Get Mask Count \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Return the number of masks in an input as an INT</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"masks\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">masks: The input mask</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">count: The number of masks in the input</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask", "output_node": false}, "VHS_DuplicateLatents": {"input": {"required": {"latents": ["LATENT"], "multiply_by": ["INT", {"default": 1, "min": 1, "max": 9007199254740991, "step": 1}]}}, "input_order": {"required": ["latents", "multiply_by"]}, "output": ["LATENT", "INT"], "output_is_list": [false, false], "output_name": ["LATENT", "count"], "name": "VHS_DuplicateLatents", "display_name": "Repeat Latents \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Repeat Latents \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Append copies of a latent to itself so it repeats</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"latents\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">latents: The latents to be repeated</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"LATENT\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">LATENT: The latent with repeats</div></div><div vhs_title=\"count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">count: The number of latents in the output. Equal to the length of the input latent * multiply_by</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"multiply_by\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">multiply_by: Controls the number of times the latent should repeat. 1, the default, means no change.</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent", "output_node": false}, "VHS_DuplicateImages": {"input": {"required": {"images": ["IMAGE"], "multiply_by": ["INT", {"default": 1, "min": 1, "max": 9007199254740991, "step": 1}]}}, "input_order": {"required": ["images", "multiply_by"]}, "output": ["IMAGE", "INT"], "output_is_list": [false, false], "output_name": ["IMAGE", "count"], "name": "VHS_DuplicateImages", "display_name": "Repeat Images \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Repeat Images \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Append copies of a image to itself so it repeats</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"IMAGES\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">IMAGES: The image to be repeated</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"IMAGE\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">IMAGE: The image with repeats</div></div><div vhs_title=\"count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">count: The number of image in the output. Equal to the length of the input image * multiply_by</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"multiply_by\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">multiply_by: Controls the number of times the mask should repeat. 1, the default, means no change.</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image", "output_node": false}, "VHS_DuplicateMasks": {"input": {"required": {"mask": ["MASK"], "multiply_by": ["INT", {"default": 1, "min": 1, "max": 9007199254740991, "step": 1}]}}, "input_order": {"required": ["mask", "multiply_by"]}, "output": ["MASK", "INT"], "output_is_list": [false, false], "output_name": ["MASK", "count"], "name": "VHS_DuplicateMasks", "display_name": "Repeat Masks \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Repeat Masks \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Append copies of a mask to itself so it repeats</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"masks\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">masks: The masks to be repeated</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"LATENT\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">LATENT: The mask with repeats</div></div><div vhs_title=\"count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">count: The number of mask in the output. Equal to the length of the input mask * multiply_by</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"multiply_by\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">multiply_by: Controls the number of times the mask should repeat. 1, the default, means no change.</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask", "output_node": false}, "VHS_SelectEveryNthLatent": {"input": {"required": {"latents": ["LATENT"], "select_every_nth": ["INT", {"default": 1, "min": 1, "max": 9007199254740991, "step": 1}], "skip_first_latents": ["INT", {"default": 0, "min": 0, "max": 9007199254740991, "step": 1}]}}, "input_order": {"required": ["latents", "select_every_nth", "skip_first_latents"]}, "output": ["LATENT", "INT"], "output_is_list": [false, false], "output_name": ["LATENT", "count"], "name": "VHS_SelectEveryNthLatent", "display_name": "Select Every Nth Latent \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Select Every Nth Latent \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Keep only 1 latent for every interval</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"latents\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">latents: The input latent</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"LATENT\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">LATENT: The output latents</div></div><div vhs_title=\"count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">count: The number of latents in the input</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"select_every_nth\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">select_every_nth: The interval from which one frame is kept. 1 means no frames are skipped.</div></div><div vhs_title=\"skip_first_latents\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">skip_first_latents: A number of frames which that is skipped from the start. This applies before select_every_nth. As a result, multiple copies of the node can each have a different skip_first_frames to divide the latent into groups</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent", "output_node": false}, "VHS_SelectEveryNthImage": {"input": {"required": {"images": ["IMAGE"], "select_every_nth": ["INT", {"default": 1, "min": 1, "max": 9007199254740991, "step": 1}], "skip_first_images": ["INT", {"default": 0, "min": 0, "max": 9007199254740991, "step": 1}]}}, "input_order": {"required": ["images", "select_every_nth", "skip_first_images"]}, "output": ["IMAGE", "INT"], "output_is_list": [false, false], "output_name": ["IMAGE", "count"], "name": "VHS_SelectEveryNthImage", "display_name": "Select Every Nth Image \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Select Every Nth Image \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Keep only 1 image for every interval</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"images\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">images: The input image</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"IMAGE\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">IMAGE: The output images</div></div><div vhs_title=\"count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">count: The number of images in the input</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"select_every_nth\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">select_every_nth: The interval from which one frame is kept. 1 means no frames are skipped.</div></div><div vhs_title=\"skip_first_images\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">skip_first_images: A number of frames which that is skipped from the start. This applies before select_every_nth. As a result, multiple copies of the node can each have a different skip_first_frames to divide the image into groups</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image", "output_node": false}, "VHS_SelectEveryNthMask": {"input": {"required": {"mask": ["MASK"], "select_every_nth": ["INT", {"default": 1, "min": 1, "max": 9007199254740991, "step": 1}], "skip_first_masks": ["INT", {"default": 0, "min": 0, "max": 9007199254740991, "step": 1}]}}, "input_order": {"required": ["mask", "select_every_nth", "skip_first_masks"]}, "output": ["MASK", "INT"], "output_is_list": [false, false], "output_name": ["MASK", "count"], "name": "VHS_SelectEveryNthMask", "display_name": "Select Every Nth Mask \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Select Every Nth Mask \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Keep only 1 mask for every interval</div></div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"mask\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">mask: The input mask</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"MASK\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">MASK: The output mask</div></div><div vhs_title=\"count\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">count: The number of mask in the input</div></div></div></div><div vhs_title=\"Widgets\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Widgets: <div vhs_title=\"select_every_nth\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">select_every_nth: The interval from which one frame is kept. 1 means no frames are skipped.</div></div><div vhs_title=\"skip_first_mask\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">skip_first_mask: A number of frames which that is skipped from the start. This applies before select_every_nth. As a result, multiple copies of the node can each have a different skip_first_frames to divide the mask into groups</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask", "output_node": false}, "VHS_SelectLatents": {"input": {"required": {"latent": ["LATENT"], "indexes": ["STRING", {"default": "0"}], "err_if_missing": ["BOOLEAN", {"default": true}], "err_if_empty": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["latent", "indexes", "err_if_missing", "err_if_empty"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "VHS_SelectLatents", "display_name": "Select Latents \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Use comma-separated indexes to select items in the given order.\nSupports negative indexes, python-style ranges (end index excluded),\nas well as range step.\n\nAcceptable entries (assuming 16 items provided, so idxs 0 to 15 exist):\n0         -> Returns [0]\n-1        -> Returns [15]\n0, 1, 13  -> Returns [0, 1, 13]\n0:5, 13   -> Returns [0, 1, 2, 3, 4, 13]\n0:-1      -> Returns [0, 1, 2, ..., 13, 14]\n0:5:-1    -> Returns [4, 3, 2, 1, 0]\n0:5:2     -> Returns [0, 2, 4]\n::-1     -> Returns [15, 14, 13, ..., 2, 1, 0]\n", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent", "output_node": false}, "VHS_SelectImages": {"input": {"required": {"image": ["IMAGE"], "indexes": ["STRING", {"default": "0"}], "err_if_missing": ["BOOLEAN", {"default": true}], "err_if_empty": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "indexes", "err_if_missing", "err_if_empty"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "VHS_SelectImages", "display_name": "Select Images \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Use comma-separated indexes to select items in the given order.\nSupports negative indexes, python-style ranges (end index excluded),\nas well as range step.\n\nAcceptable entries (assuming 16 items provided, so idxs 0 to 15 exist):\n0         -> Returns [0]\n-1        -> Returns [15]\n0, 1, 13  -> Returns [0, 1, 13]\n0:5, 13   -> Returns [0, 1, 2, 3, 4, 13]\n0:-1      -> Returns [0, 1, 2, ..., 13, 14]\n0:5:-1    -> Returns [4, 3, 2, 1, 0]\n0:5:2     -> Returns [0, 2, 4]\n::-1     -> Returns [15, 14, 13, ..., 2, 1, 0]\n", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image", "output_node": false}, "VHS_SelectMasks": {"input": {"required": {"mask": ["MASK"], "indexes": ["STRING", {"default": "0"}], "err_if_missing": ["BOOLEAN", {"default": true}], "err_if_empty": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["mask", "indexes", "err_if_missing", "err_if_empty"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "VHS_SelectMasks", "display_name": "Select Masks \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Use comma-separated indexes to select items in the given order.\nSupports negative indexes, python-style ranges (end index excluded),\nas well as range step.\n\nAcceptable entries (assuming 16 items provided, so idxs 0 to 15 exist):\n0         -> Returns [0]\n-1        -> Returns [15]\n0, 1, 13  -> Returns [0, 1, 13]\n0:5, 13   -> Returns [0, 1, 2, 3, 4, 13]\n0:-1      -> Returns [0, 1, 2, ..., 13, 14]\n0:5:-1    -> Returns [4, 3, 2, 1, 0]\n0:5:2     -> Returns [0, 2, 4]\n::-1     -> Returns [15, 14, 13, ..., 2, 1, 0]\n", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask", "output_node": false}, "VHS_Unbatch": {"input": {"required": {"batched": ["*"]}}, "input_order": {"required": ["batched"]}, "output": ["*"], "output_is_list": [false], "output_name": ["unbatched"], "name": "VHS_Unbatch", "display_name": "Unbatch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "description": "Unbatch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62<div style=\"font-size: 0.8em\"><div id=VHS_shortdesc>Experimental node to unbatch a list of items into a single concatenated item</div></div><div style=\"font-size: 0.8em\">Useful for when you want a single video output from a complex workflow</div><div style=\"font-size: 0.8em\">Has no relation to the Meta Batch system of VHS</div><div style=\"font-size: 0.8em\"><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"batched\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">batched: Any input which may or may not be batched</div></div></div></div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"unbatched\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">unbatched: A single output element. Torch tensors are concatenated across dim 0, all other types are added which functions as concatenation for strings and arrays, but may give undesired results for other types</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-VideoHelperSuite", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "output_node": false, "experimental": true}, "Lerp": {"input": {"required": {"num_Images": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "current_frame": ["INT", {"default": 1.0, "min": 0.0, "max": 9999, "step": 1.0}]}}, "input_order": {"required": ["num_Images", "strength", "current_frame"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "Lerp", "display_name": "Lerp \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes", "output_node": false}, "SinWave": {"input": {"required": {"phase": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "amplitude": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 9999.0, "step": 0.1}], "x_translation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "y_translation": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 9999.0, "step": 0.05}], "current_frame": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["phase", "amplitude", "x_translation", "y_translation", "current_frame"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "SinWave", "display_name": "SinWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes", "output_node": false}, "InvSinWave": {"input": {"required": {"phase": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "amplitude": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 9999.0, "step": 0.1}], "x_translation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "y_translation": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 9999.0, "step": 0.05}], "current_frame": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["phase", "amplitude", "x_translation", "y_translation", "current_frame"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "InvSinWave", "display_name": "InvSinWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes", "output_node": false}, "CosWave": {"input": {"required": {"phase": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "amplitude": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 9999.0, "step": 0.1}], "x_translation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "y_translation": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 9999.0, "step": 0.05}], "current_frame": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["phase", "amplitude", "x_translation", "y_translation", "current_frame"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "CosWave", "display_name": "CosWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes", "output_node": false}, "InvCosWave": {"input": {"required": {"phase": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "amplitude": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 9999.0, "step": 0.1}], "x_translation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "y_translation": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 9999.0, "step": 0.05}], "current_frame": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["phase", "amplitude", "x_translation", "y_translation", "current_frame"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "InvCosWave", "display_name": "InvCosWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes", "output_node": false}, "SquareWave": {"input": {"required": {"phase": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "amplitude": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 9999.0, "step": 0.1}], "x_translation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "y_translation": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 9999.0, "step": 0.05}], "current_frame": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["phase", "amplitude", "x_translation", "y_translation", "current_frame"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "SquareWave", "display_name": "SquareWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes", "output_node": false}, "SawtoothWave": {"input": {"required": {"phase": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "step_increment": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 9999.0, "step": 0.1}], "x_translation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "start_value": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 9999.0, "step": 0.05}], "current_frame": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["phase", "step_increment", "x_translation", "start_value", "current_frame"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "SawtoothWave", "display_name": "SawtoothWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes", "output_node": false}, "TriangleWave": {"input": {"required": {"phase": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "amplitude": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 9999.0, "step": 0.1}], "x_translation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "y_translation": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 9999.0, "step": 0.05}], "current_frame": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["phase", "amplitude", "x_translation", "y_translation", "current_frame"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "TriangleWave", "display_name": "TriangleWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes", "output_node": false}, "AbsCosWave": {"input": {"required": {"phase": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "amplitude": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 9999.0, "step": 0.1}], "x_translation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "max_value": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 9999.0, "step": 0.05}], "current_frame": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["phase", "amplitude", "x_translation", "max_value", "current_frame"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "AbsCosWave", "display_name": "AbsCosWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes", "output_node": false}, "AbsSinWave": {"input": {"required": {"phase": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "amplitude": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 9999.0, "step": 0.1}], "x_translation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "max_value": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 9999.0, "step": 0.05}], "current_frame": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["phase", "amplitude", "x_translation", "max_value", "current_frame"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "AbsSinWave", "display_name": "AbsSinWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes", "output_node": false}, "PromptSchedule": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "\"0\" :\"\",\n\"11\" :\"\",\n\"23\" :\"\",\n\"35\" :\"\",\n\"47\" :\"\",\n\"59\" :\"\",\n\"71\" :\"\",\n\"83\" :\"\",\n\"95\" :\"\",\n\"107\" :\"\",\n\"119\" :\"\"\n"}], "clip": ["CLIP"], "max_frames": ["INT", {"default": 120.0, "min": 1.0, "max": 999999.0, "step": 1.0}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 999999.0, "step": 1.0, "forceInput": true}], "print_output": ["BOOLEAN", {"default": false}]}, "optional": {"pre_text": ["STRING", {"multiline": true, "forceInput": true}], "app_text": ["STRING", {"multiline": true, "forceInput": true}], "pw_a": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_b": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_c": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_d": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}]}}, "input_order": {"required": ["text", "clip", "max_frames", "current_frame", "print_output"], "optional": ["pre_text", "app_text", "pw_a", "pw_b", "pw_c", "pw_d"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["POS", "NEG"], "name": "PromptSchedule", "display_name": "Prompt Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes", "output_node": false}, "ValueSchedule": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "0:(0),\n11:(0),\n23:(0),\n35:(0),\n47:(0),\n59:(0),\n71:(0),\n83:(0),\n95:(0),\n107:(0),\n119:(0)\n"}], "max_frames": ["INT", {"default": 120.0, "min": 1.0, "max": 999999.0, "step": 1.0}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 999999.0, "step": 1.0, "forceInput": true}], "print_output": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["text", "max_frames", "current_frame", "print_output"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "ValueSchedule", "display_name": "Value Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes", "output_node": false}, "PromptScheduleNodeFlow": {"input": {"required": {"text": ["STRING", {"multiline": true}], "num_frames": ["INT", {"default": 24.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}, "optional": {"in_text": ["STRING", {"multiline": false}], "max_frames": ["INT", {"default": 0.0, "min": 0.0, "max": 999999.0, "step": 1.0}]}}, "input_order": {"required": ["text", "num_frames"], "optional": ["in_text", "max_frames"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "STRING"], "name": "PromptScheduleNodeFlow", "display_name": "Prompt Schedule NodeFlow \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes", "output_node": false}, "PromptScheduleNodeFlowEnd": {"input": {"required": {"text": ["STRING", {"multiline": false, "forceInput": true}], "clip": ["CLIP"], "max_frames": ["INT", {"default": 0.0, "min": 0.0, "max": 999999.0, "step": 1.0}], "print_output": ["BOOLEAN", {"default": false}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 999999.0, "step": 1.0, "forceInput": true}]}, "optional": {"pre_text": ["STRING", {"multiline": true, "forceInput": true}], "app_text": ["STRING", {"multiline": true, "forceInput": true}], "pw_a": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_b": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_c": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_d": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}]}}, "input_order": {"required": ["text", "clip", "max_frames", "print_output", "current_frame"], "optional": ["pre_text", "app_text", "pw_a", "pw_b", "pw_c", "pw_d"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["POS", "NEG"], "name": "PromptScheduleNodeFlowEnd", "display_name": "Prompt Schedule NodeFlow End \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes", "output_node": false}, "PromptScheduleEncodeSDXL": {"input": {"required": {"width": ["INT", {"default": 1024.0, "min": 0, "max": 8192}], "height": ["INT", {"default": 1024.0, "min": 0, "max": 8192}], "crop_w": ["INT", {"default": 0, "min": 0, "max": 8192}], "crop_h": ["INT", {"default": 0, "min": 0, "max": 8192}], "target_width": ["INT", {"default": 1024.0, "min": 0, "max": 8192}], "target_height": ["INT", {"default": 1024.0, "min": 0, "max": 8192}], "text_g": ["STRING", {"multiline": true}], "clip": ["CLIP"], "text_l": ["STRING", {"multiline": true}], "max_frames": ["INT", {"default": 120.0, "min": 1.0, "max": 999999.0, "step": 1.0}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 999999.0, "step": 1.0}], "print_output": ["BOOLEAN", {"default": false}]}, "optional": {"pre_text_G": ["STRING", {"multiline": true, "forceInput": true}], "app_text_G": ["STRING", {"multiline": true, "forceInput": true}], "pre_text_L": ["STRING", {"multiline": true, "forceInput": true}], "app_text_L": ["STRING", {"multiline": true, "forceInput": true}], "pw_a": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_b": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_c": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_d": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}]}}, "input_order": {"required": ["width", "height", "crop_w", "crop_h", "target_width", "target_height", "text_g", "clip", "text_l", "max_frames", "current_frame", "print_output"], "optional": ["pre_text_G", "app_text_G", "pre_text_L", "app_text_L", "pw_a", "pw_b", "pw_c", "pw_d"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["POS", "NEG"], "name": "PromptScheduleEncodeSDXL", "display_name": "Prompt Schedule SDXL \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes", "output_node": false}, "StringSchedule": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "\"0\" :\"\",\n\"11\" :\"\",\n\"23\" :\"\",\n\"35\" :\"\",\n\"47\" :\"\",\n\"59\" :\"\",\n\"71\" :\"\",\n\"83\" :\"\",\n\"95\" :\"\",\n\"107\" :\"\",\n\"119\" :\"\"\n"}], "max_frames": ["INT", {"default": 120.0, "min": 1.0, "max": 999999.0, "step": 1.0}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 999999.0, "step": 1.0}], "print_output": ["BOOLEAN", {"default": false}]}, "optional": {"pre_text": ["STRING", {"multiline": true, "forceInput": true}], "app_text": ["STRING", {"multiline": true, "forceInput": true}], "pw_a": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_b": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_c": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_d": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}]}}, "input_order": {"required": ["text", "max_frames", "current_frame", "print_output"], "optional": ["pre_text", "app_text", "pw_a", "pw_b", "pw_c", "pw_d"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["POS", "NEG"], "name": "StringSchedule", "display_name": "String Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes", "output_node": false}, "BatchPromptSchedule": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "\"0\" :\"\",\n\"11\" :\"\",\n\"23\" :\"\",\n\"35\" :\"\",\n\"47\" :\"\",\n\"59\" :\"\",\n\"71\" :\"\",\n\"83\" :\"\",\n\"95\" :\"\",\n\"107\" :\"\",\n\"119\" :\"\"\n"}], "clip": ["CLIP"], "max_frames": ["INT", {"default": 120.0, "min": 1.0, "max": 999999.0, "step": 1.0}], "print_output": ["BOOLEAN", {"default": false}]}, "optional": {"pre_text": ["STRING", {"multiline": true, "forceInput": true}], "app_text": ["STRING", {"multiline": true, "forceInput": true}], "start_frame": ["INT", {"default": 0, "min": 0, "max": 9999, "step": 1, "display": "start_frame(print_only)"}], "end_frame": ["INT", {"default": 0, "min": 0, "max": 9999, "step": 1, "display": "end_frame(print_only)"}], "pw_a": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_b": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_c": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_d": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}]}}, "input_order": {"required": ["text", "clip", "max_frames", "print_output"], "optional": ["pre_text", "app_text", "start_frame", "end_frame", "pw_a", "pw_b", "pw_c", "pw_d"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["POS", "NEG"], "name": "BatchPromptSchedule", "display_name": "Batch Prompt Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes", "output_node": false}, "BatchValueSchedule": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "0:(0),\n11:(0),\n23:(0),\n35:(0),\n47:(0),\n59:(0),\n71:(0),\n83:(0),\n95:(0),\n107:(0),\n119:(0)\n"}], "max_frames": ["INT", {"default": 120.0, "min": 1.0, "max": 999999.0, "step": 1.0}], "print_output": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["text", "max_frames", "print_output"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "BatchValueSchedule", "display_name": "Batch Value Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes", "output_node": false}, "BatchPromptScheduleEncodeSDXL": {"input": {"required": {"width": ["INT", {"default": 1024.0, "min": 0, "max": 8192}], "height": ["INT", {"default": 1024.0, "min": 0, "max": 8192}], "crop_w": ["INT", {"default": 0, "min": 0, "max": 8192}], "crop_h": ["INT", {"default": 0, "min": 0, "max": 8192}], "target_width": ["INT", {"default": 1024.0, "min": 0, "max": 8192}], "target_height": ["INT", {"default": 1024.0, "min": 0, "max": 8192}], "text_g": ["STRING", {"multiline": true}], "clip": ["CLIP"], "text_l": ["STRING", {"multiline": true}], "max_frames": ["INT", {"default": 120.0, "min": 1.0, "max": 999999.0, "step": 1.0}], "print_output": ["BOOLEAN", {"default": false}]}, "optional": {"pre_text_G": ["STRING", {"multiline": true, "forceInput": true}], "app_text_G": ["STRING", {"multiline": true, "forceInput": true}], "pre_text_L": ["STRING", {"multiline": true, "forceInput": true}], "app_text_L": ["STRING", {"multiline": true, "forceInput": true}], "pw_a": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_b": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_c": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_d": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "start_frame": ["INT", {"default": 0, "min": 0, "max": 9999, "step": 1, "display": "start_frame(print_only)"}], "end_frame": ["INT", {"default": 120, "min": 0, "max": 9999, "step": 1, "display": "end_frame(print_only)"}]}}, "input_order": {"required": ["width", "height", "crop_w", "crop_h", "target_width", "target_height", "text_g", "clip", "text_l", "max_frames", "print_output"], "optional": ["pre_text_G", "app_text_G", "pre_text_L", "app_text_L", "pw_a", "pw_b", "pw_c", "pw_d", "start_frame", "end_frame"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["POS", "NEG", "POS_CUR", "NEG_CUR", "POS_NXT", "NEG_NXT"], "name": "BatchPromptScheduleEncodeSDXL", "display_name": "Batch Prompt Schedule SDXL \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes", "output_node": false}, "BatchStringSchedule": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "\"0\" :\"\",\n\"11\" :\"\",\n\"23\" :\"\",\n\"35\" :\"\",\n\"47\" :\"\",\n\"59\" :\"\",\n\"71\" :\"\",\n\"83\" :\"\",\n\"95\" :\"\",\n\"107\" :\"\",\n\"119\" :\"\"\n"}], "max_frames": ["INT", {"default": 120.0, "min": 1.0, "max": 999999.0, "step": 1.0}], "print_output": ["BOOLEAN", {"default": false}]}, "optional": {"pre_text": ["STRING", {"multiline": true, "forceInput": true}], "app_text": ["STRING", {"multiline": true, "forceInput": true}], "pw_a": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_b": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_c": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_d": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}]}}, "input_order": {"required": ["text", "max_frames", "print_output"], "optional": ["pre_text", "app_text", "pw_a", "pw_b", "pw_c", "pw_d"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["POS", "NEG"], "name": "BatchStringSchedule", "display_name": "Batch String Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes", "output_node": false}, "BatchValueScheduleLatentInput": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "0:(0),\n11:(0),\n23:(0),\n35:(0),\n47:(0),\n59:(0),\n71:(0),\n83:(0),\n95:(0),\n107:(0),\n119:(0)\n"}], "num_latents": ["LATENT"], "print_output": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["text", "num_latents", "print_output"]}, "output": ["FLOAT", "INT", "LATENT"], "output_is_list": [false, false, false], "output_name": ["FLOAT", "INT", "LATENT"], "name": "BatchValueScheduleLatentInput", "display_name": "Batch Value Schedule (Latent Input) \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes", "output_node": false}, "BatchPromptScheduleSDXLLatentInput": {"input": {"required": {"width": ["INT", {"default": 1024.0, "min": 0, "max": 8192}], "height": ["INT", {"default": 1024.0, "min": 0, "max": 8192}], "crop_w": ["INT", {"default": 0, "min": 0, "max": 8192}], "crop_h": ["INT", {"default": 0, "min": 0, "max": 8192}], "target_width": ["INT", {"default": 1024.0, "min": 0, "max": 8192}], "target_height": ["INT", {"default": 1024.0, "min": 0, "max": 8192}], "text_g": ["STRING", {"multiline": true}], "clip": ["CLIP"], "text_l": ["STRING", {"multiline": true}], "num_latents": ["LATENT"], "print_output": ["BOOLEAN", {"default": false}]}, "optional": {"pre_text_G": ["STRING", {"multiline": true, "forceInput": true}], "app_text_G": ["STRING", {"multiline": true, "forceInput": true}], "pre_text_L": ["STRING", {"multiline": true, "forceInput": true}], "app_text_L": ["STRING", {"multiline": true, "forceInput": true}], "pw_a": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_b": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_c": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_d": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "start_frame": ["INT", {"default": 0, "min": 0, "max": 9999, "step": 1, "display": "start_frame(print_only)"}], "end_frame": ["INT", {"default": 120, "min": 0, "max": 9999, "step": 1, "display": "end_frame(print_only)"}]}}, "input_order": {"required": ["width", "height", "crop_w", "crop_h", "target_width", "target_height", "text_g", "clip", "text_l", "num_latents", "print_output"], "optional": ["pre_text_G", "app_text_G", "pre_text_L", "app_text_L", "pw_a", "pw_b", "pw_c", "pw_d", "start_frame", "end_frame"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["POS", "NEG", "POS_CUR", "NEG_CUR", "POS_NXT", "NEG_NXT"], "name": "BatchPromptScheduleSDXLLatentInput", "display_name": "Batch Prompt Schedule SDXL (Latent Input) \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes", "output_node": false}, "BatchPromptScheduleLatentInput": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "\"0\" :\"\",\n\"11\" :\"\",\n\"23\" :\"\",\n\"35\" :\"\",\n\"47\" :\"\",\n\"59\" :\"\",\n\"71\" :\"\",\n\"83\" :\"\",\n\"95\" :\"\",\n\"107\" :\"\",\n\"119\" :\"\"\n"}], "clip": ["CLIP"], "num_latents": ["LATENT"], "print_output": ["BOOLEAN", {"default": false}]}, "optional": {"pre_text": ["STRING", {"multiline": true, "forceInput": true}], "app_text": ["STRING", {"multiline": true, "forceInput": true}], "start_frame": ["INT", {"default": 0.0, "min": 0, "max": 9999, "step": 1, "display": "start_frame(print_only)"}], "end_frame": ["INT", {"default": 0, "min": 0, "max": 9999, "step": 1, "display": "end_frame(print_only)"}], "pw_a": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_b": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_c": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}], "pw_d": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.1, "forceInput": true}]}}, "input_order": {"required": ["text", "clip", "num_latents", "print_output"], "optional": ["pre_text", "app_text", "start_frame", "end_frame", "pw_a", "pw_b", "pw_c", "pw_d"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["POS", "NEG", "INPUT_LATENTS"], "name": "BatchPromptScheduleLatentInput", "display_name": "Batch Prompt Schedule (Latent Input) \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes", "output_node": false}, "ImagesFromBatchSchedule": {"input": {"required": {"images": ["IMAGE"], "text": ["STRING", {"multiline": true, "default": "\"0\" :\"\",\n\"11\" :\"\",\n\"23\" :\"\",\n\"35\" :\"\",\n\"47\" :\"\",\n\"59\" :\"\",\n\"71\" :\"\",\n\"83\" :\"\",\n\"95\" :\"\",\n\"107\" :\"\",\n\"119\" :\"\"\n"}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 999999.0, "step": 1.0}], "max_frames": ["INT", {"default": 120.0, "min": 1.0, "max": 999999.0, "step": 1.0}], "print_output": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["images", "text", "current_frame", "max_frames", "print_output"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImagesFromBatchSchedule", "display_name": "Image Select Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes", "output_node": false}, "StringConcatenate": {"input": {"required": {"text_a": ["STRING", {"forceInput": true, "multiline": true, "default": ""}], "frame_a": ["INT", {"default": 0}], "text_b": ["STRING", {"forceInput": true, "multiline": true, "default": ""}], "frame_b": ["INT", {"default": 12}]}, "optional": {"text_c": ["STRING", {"forceInput": true, "multiline": true, "default": ""}], "frame_c": ["INT", {"default": 24}], "text_d": ["STRING", {"forceInput": true, "multiline": true, "default": ""}], "frame_d": ["INT", {"default": 36}], "text_e": ["STRING", {"forceInput": true, "multiline": true, "default": ""}], "frame_e": ["INT", {"default": 48}], "text_f": ["STRING", {"forceInput": true, "multiline": true, "default": ""}], "frame_f": ["INT", {"default": 60}], "text_g": ["STRING", {"forceInput": true, "multiline": true, "default": ""}], "frame_g": ["INT", {"default": 72}]}}, "input_order": {"required": ["text_a", "frame_a", "text_b", "frame_b"], "optional": ["text_c", "frame_c", "text_d", "frame_d", "text_e", "frame_e", "text_f", "frame_f", "text_g", "frame_g"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "StringConcatenate", "display_name": "String Concatenate \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/FrameNodes", "output_node": false}, "Init FizzFrame": {"input": {"required": {"frame": ["INT", {"default": 0, "min": 0}], "positive_text": ["STRING", {"multiline": true}]}, "optional": {"negative_text": ["STRING", {"multiline": true}], "general_positive": ["STRING", {"multiline": true}], "general_negative": ["STRING", {"multiline": true}], "previous_frame": ["FIZZFRAME", {"forceInput": true}], "clip": ["CLIP"]}}, "input_order": {"required": ["frame", "positive_text"], "optional": ["negative_text", "general_positive", "general_negative", "previous_frame", "clip"]}, "output": ["FIZZFRAME", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false], "output_name": ["FIZZFRAME", "CONDITIONING", "CONDITIONING"], "name": "Init FizzFrame", "display_name": "Init Node Frame \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/FrameNodes", "output_node": false}, "FizzFrame": {"input": {"required": {"frame": ["INT", {"default": 0, "min": 0}], "previous_frame": ["FIZZFRAME", {"forceInput": true}], "positive_text": ["STRING", {"multiline": true}]}, "optional": {"negative_text": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["frame", "previous_frame", "positive_text"], "optional": ["negative_text"]}, "output": ["FIZZFRAME", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false], "output_name": ["FIZZFRAME", "CONDITIONING", "CONDITIONING"], "name": "FizzFrame", "display_name": "Node Frame \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/FrameNodes", "output_node": false}, "FizzFrameConcatenate": {"input": {"required": {"frame": ["FIZZFRAME", {"forceInput": true}]}}, "input_order": {"required": ["frame"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "FizzFrameConcatenate", "display_name": "Frame Concatenate \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/FrameNodes", "output_node": false}, "ConcatStringSingle": {"input": {"required": {"string_a": ["STRING", {"forceInput": true, "default": "", "multiline": true}], "string_b": ["STRING", {"forceInput": true, "default": "", "multiline": true}]}}, "input_order": {"required": ["string_a", "string_b"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "ConcatStringSingle", "display_name": "Concat String (Single) \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/HelperNodes", "output_node": false}, "convertKeyframeKeysToBatchKeys": {"input": {"required": {"input": ["INT", {"forceInput": true, "default": 0}], "num_latents": ["INT", {"default": 16}]}}, "input_order": {"required": ["input", "num_latents"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "convertKeyframeKeysToBatchKeys", "display_name": "Keyframe Keys To Batch Keys \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/HelperNodes", "output_node": false}, "CalculateFrameOffset": {"input": {"required": {"current_frame": ["INT", {"default": 0, "min": 0}], "max_frames": ["INT", {"default": 18, "min": 0}], "num_latent_inputs": ["INT", {"default": 4, "min": 0}], "index": ["INT", {"default": 4, "min": 0}]}}, "input_order": {"required": ["current_frame", "max_frames", "num_latent_inputs", "index"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "CalculateFrameOffset", "display_name": "Calculate Frame Offset \ud83d\udcc5\ud83c\udd55\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI_FizzNodes", "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/HelperNodes", "output_node": false}, "AdainFilterLatent": {"input": {"required": {"latents": ["LATENT"], "reference": ["LATENT"], "filter_size": ["INT", {"default": 1, "min": 1, "max": 128}], "factor": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["latents", "reference", "filter_size", "factor"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "AdainFilterLatent", "display_name": "AdaIN Filter (Latent)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "latent/filters", "output_node": false}, "AdainImage": {"input": {"required": {"images": ["IMAGE"], "reference": ["IMAGE"], "factor": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["images", "reference", "factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "AdainImage", "display_name": "AdaIN (Image)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "AdainLatent": {"input": {"required": {"latents": ["LATENT"], "reference": ["LATENT"], "factor": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["latents", "reference", "factor"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "AdainLatent", "display_name": "AdaIN (Latent)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "latent/filters", "output_node": false}, "AlphaClean": {"input": {"required": {"images": ["IMAGE"], "radius": ["INT", {"default": 8, "min": 1, "max": 64, "step": 1}], "fill_holes": ["INT", {"default": 1, "min": 0, "max": 16, "step": 1}], "white_threshold": ["FLOAT", {"default": 0.9, "min": 0.01, "max": 1.0, "step": 0.01}], "extra_clip": ["FLOAT", {"default": 0.98, "min": 0.01, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["images", "radius", "fill_holes", "white_threshold", "extra_clip"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "AlphaClean", "display_name": "Alpha Clean", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "AlphaMatte": {"input": {"required": {"images": ["IMAGE"], "alpha_trimap": ["IMAGE"], "preblur": ["INT", {"default": 8, "min": 0, "max": 256, "step": 1}], "blackpoint": ["FLOAT", {"default": 0.01, "min": 0.0, "max": 0.99, "step": 0.01}], "whitepoint": ["FLOAT", {"default": 0.99, "min": 0.01, "max": 1.0, "step": 0.01}], "max_iterations": ["INT", {"default": 1000, "min": 100, "max": 10000, "step": 100}], "estimate_fg": [["true", "false"]]}}, "input_order": {"required": ["images", "alpha_trimap", "preblur", "blackpoint", "whitepoint", "max_iterations", "estimate_fg"]}, "output": ["IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["alpha", "fg", "bg"], "name": "AlphaMatte", "display_name": "Alpha Matte", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "BatchAlign": {"input": {"required": {"images": ["IMAGE"], "ref_frame": ["INT", {"default": 0, "min": 0}], "direction": [["forward", "backward"]], "blur": ["INT", {"default": 0, "min": 0}]}}, "input_order": {"required": ["images", "ref_frame", "direction", "blur"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["aligned", "flow"], "name": "BatchAlign", "display_name": "Batch Align (RAFT)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "BatchAverageImage": {"input": {"required": {"images": ["IMAGE"], "operation": [["mean", "median"]]}}, "input_order": {"required": ["images", "operation"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BatchAverageImage", "display_name": "Batch Average Image", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "BatchAverageUnJittered": {"input": {"required": {"images": ["IMAGE"], "operation": [["mean", "median"]]}}, "input_order": {"required": ["images", "operation"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BatchAverageUnJittered", "display_name": "Batch Average Un-Jittered", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters/jitter", "output_node": false}, "BatchNormalizeImage": {"input": {"required": {"images": ["IMAGE"], "factor": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["images", "factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BatchNormalizeImage", "display_name": "Batch Normalize (Image)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "BatchNormalizeLatent": {"input": {"required": {"latents": ["LATENT"], "factor": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["latents", "factor"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "BatchNormalizeLatent", "display_name": "Batch Normalize (Latent)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "latent/filters", "output_node": false}, "BetterFilmGrain": {"input": {"required": {"image": ["IMAGE"], "scale": ["FLOAT", {"default": 0.5, "min": 0.25, "max": 2.0, "step": 0.05}], "strength": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 10.0, "step": 0.01}], "saturation": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 2.0, "step": 0.01}], "toe": ["FLOAT", {"default": 0.0, "min": -0.2, "max": 0.5, "step": 0.001}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["image", "scale", "strength", "saturation", "toe", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BetterFilmGrain", "display_name": "Better Film Grain", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "BilateralFilterImage": {"input": {"required": {"images": ["IMAGE"], "size": ["INT", {"default": 8, "min": 1, "max": 64}], "sigma_color": ["FLOAT", {"default": 0.5, "min": 0.01, "max": 1000.0, "step": 0.01}], "sigma_space": ["FLOAT", {"default": 100.0, "min": 0.01, "max": 1000.0, "step": 0.01}]}}, "input_order": {"required": ["images", "size", "sigma_color", "sigma_space"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BilateralFilterImage", "display_name": "Bilateral Filter Image", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "BlurImageFast": {"input": {"required": {"images": ["IMAGE"], "radius_x": ["INT", {"default": 1, "min": 0, "max": 1023, "step": 1}], "radius_y": ["INT", {"default": 1, "min": 0, "max": 1023, "step": 1}]}}, "input_order": {"required": ["images", "radius_x", "radius_y"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BlurImageFast", "display_name": "Blur Image (Fast)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "BlurMaskFast": {"input": {"required": {"masks": ["MASK"], "radius_x": ["INT", {"default": 1, "min": 0, "max": 1023, "step": 1}], "radius_y": ["INT", {"default": 1, "min": 0, "max": 1023, "step": 1}]}}, "input_order": {"required": ["masks", "radius_x", "radius_y"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "BlurMaskFast", "display_name": "Blur Mask (Fast)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "mask/filters", "output_node": false}, "ClampOutliers": {"input": {"required": {"latents": ["LATENT"], "std_dev": ["FLOAT", {"default": 3.0, "min": 0.1, "max": 100.0, "step": 0.1, "round": 0.1}]}}, "input_order": {"required": ["latents", "std_dev"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "ClampOutliers", "display_name": "Clamp Outliers", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "latent/filters", "output_node": false}, "ColorMatchImage": {"input": {"required": {"images": ["IMAGE"], "reference": ["IMAGE"], "blur_type": [["blur", "guidedFilter"]], "blur_size": ["INT", {"default": 0, "min": 0, "max": 1023}], "factor": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["images", "reference", "blur_type", "blur_size", "factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ColorMatchImage", "display_name": "Color Match Image", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "ConditioningSubtract": {"input": {"required": {"cond_orig": ["CONDITIONING"], "cond_subtract": ["CONDITIONING"], "subtract_strength": ["FLOAT", {"default": 1.0, "step": 0.01}]}}, "input_order": {"required": ["cond_orig", "cond_subtract", "subtract_strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSubtract", "display_name": "ConditioningSubtract", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "conditioning", "output_node": false}, "ConvertNormals": {"input": {"required": {"normals": ["IMAGE"], "input_mode": [["BAE", "MiDaS", "Standard"]], "output_mode": [["BAE", "MiDaS", "Standard"]], "scale_XY": ["FLOAT", {"default": 1, "min": 0, "max": 100, "step": 0.001}], "normalize": ["BOOLEAN", {"default": true}], "fix_black": ["BOOLEAN", {"default": true}]}, "optional": {"optional_fill": ["IMAGE"]}}, "input_order": {"required": ["normals", "input_mode", "output_mode", "scale_XY", "normalize", "fix_black"], "optional": ["optional_fill"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ConvertNormals", "display_name": "Convert Normals", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "CustomNoise": {"input": {"required": {"noise": ["LATENT"]}}, "input_order": {"required": ["noise"]}, "output": ["NOISE"], "output_is_list": [false], "output_name": ["NOISE"], "name": "CustomNoise", "display_name": "CustomNoise", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "sampling/custom_sampling/noise", "output_node": false}, "DepthToNormals": {"input": {"required": {"depth": ["IMAGE"], "scale": ["FLOAT", {"default": 1, "min": 0.001, "max": 1000, "step": 0.001}], "output_mode": [["Standard", "BAE", "MiDaS"]]}}, "input_order": {"required": ["depth", "scale", "output_mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["normals"], "name": "DepthToNormals", "display_name": "Depth To Normals", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "DifferenceChecker": {"input": {"required": {"images1": ["IMAGE"], "images2": ["IMAGE"], "multiplier": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 1000.0, "step": 0.01, "round": 0.01}], "print_MAE": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["images1", "images2", "multiplier", "print_MAE"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "DifferenceChecker", "display_name": "Difference Checker", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": true}, "DilateErodeMask": {"input": {"required": {"masks": ["MASK"], "radius": ["INT", {"default": 0, "min": -1023, "max": 1023, "step": 1}], "shape": [["box", "circle"]]}}, "input_order": {"required": ["masks", "radius", "shape"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "DilateErodeMask", "display_name": "Dilate/Erode Mask", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "mask/filters", "output_node": false}, "EnhanceDetail": {"input": {"required": {"images": ["IMAGE"], "filter_radius": ["INT", {"default": 2, "min": 1, "max": 64, "step": 1}], "sigma": ["FLOAT", {"default": 0.1, "min": 0.01, "max": 100.0, "step": 0.01}], "denoise": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 10.0, "step": 0.01}], "detail_mult": ["FLOAT", {"default": 2.0, "min": 0.0, "max": 100.0, "step": 0.1}]}}, "input_order": {"required": ["images", "filter_radius", "sigma", "denoise", "detail_mult"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "EnhanceDetail", "display_name": "Enhance Detail", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "ExposureAdjust": {"input": {"required": {"images": ["IMAGE"], "stops": ["FLOAT", {"default": 0.0, "min": -100, "max": 100, "step": 0.01}], "input_mode": [["sRGB", "linear"]], "output_mode": [["sRGB", "linear"]], "use_tonemap": ["BOOLEAN", {"default": false}], "tonemap_scale": ["FLOAT", {"default": 1, "min": 0.1, "max": 10, "step": 0.01}]}}, "input_order": {"required": ["images", "stops", "input_mode", "output_mode", "use_tonemap", "tonemap_scale"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ExposureAdjust", "display_name": "Exposure Adjust", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "FrequencyCombine": {"input": {"required": {"high_frequency": ["IMAGE"], "low_frequency": ["IMAGE"], "mode": [["subtract", "divide"]], "eps": ["FLOAT", {"default": 0.1, "min": 0.01, "max": 0.99, "step": 0.01}]}}, "input_order": {"required": ["high_frequency", "low_frequency", "mode", "eps"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "FrequencyCombine", "display_name": "Frequency Combine", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "FrequencySeparate": {"input": {"required": {"original": ["IMAGE"], "low_frequency": ["IMAGE"], "mode": [["subtract", "divide"]], "eps": ["FLOAT", {"default": 0.1, "min": 0.01, "max": 0.99, "step": 0.01}]}}, "input_order": {"required": ["original", "low_frequency", "mode", "eps"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["high_frequency"], "name": "FrequencySeparate", "display_name": "Frequency Separate", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "GameOfLife": {"input": {"required": {"width": ["INT", {"default": 32, "min": 8, "max": 1024, "step": 1}], "height": ["INT", {"default": 32, "min": 8, "max": 1024, "step": 1}], "cell_size": ["INT", {"default": 16, "min": 8, "max": 1024, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "step": 1}], "threshold": ["FLOAT", {"default": 0.8, "min": 0.0, "max": 1.0, "step": 0.01}], "steps": ["INT", {"default": 64, "min": 1, "max": 999999, "step": 1}]}, "optional": {"optional_start": ["MASK"]}}, "input_order": {"required": ["width", "height", "cell_size", "seed", "threshold", "steps"], "optional": ["optional_start"]}, "output": ["IMAGE", "MASK", "MASK", "MASK"], "output_is_list": [false, false, false, false], "output_name": ["image", "mask", "off", "on"], "name": "GameOfLife", "display_name": "Game Of Life", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "GuidedFilterAlpha": {"input": {"required": {"images": ["IMAGE"], "alpha": ["IMAGE"], "filter_radius": ["INT", {"default": 8, "min": 1, "max": 64, "step": 1}], "sigma": ["FLOAT", {"default": 0.1, "min": 0.01, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["images", "alpha", "filter_radius", "sigma"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "GuidedFilterAlpha", "display_name": "(DEPRECATED) Guided Filter Alpha", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "GuidedFilterImage": {"input": {"required": {"images": ["IMAGE"], "guide": ["IMAGE"], "size": ["INT", {"default": 4, "min": 0, "max": 1023}], "sigma": ["FLOAT", {"default": 0.1, "min": 0.01, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["images", "guide", "size", "sigma"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "GuidedFilterImage", "display_name": "Guided Filter Image", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "ImageConstant": {"input": {"required": {"width": ["INT", {"default": 512, "min": 1, "max": 8192, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 8192, "step": 1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "red": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "green": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "blue": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["width", "height", "batch_size", "red", "green", "blue"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageConstant", "display_name": "Image Constant Color (RGB)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "ImageConstantHSV": {"input": {"required": {"width": ["INT", {"default": 512, "min": 1, "max": 8192, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 8192, "step": 1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "hue": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "saturation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "value": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["width", "height", "batch_size", "hue", "saturation", "value"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageConstantHSV", "display_name": "Image Constant Color (HSV)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "InstructPixToPixConditioningAdvanced": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "new": ["LATENT"], "new_scale": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 100.0, "step": 0.01}], "original": ["LATENT"], "original_scale": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["positive", "negative", "new", "new_scale", "original", "original_scale"]}, "output": ["CONDITIONING", "CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false, false], "output_name": ["cond1", "cond2", "negative", "latent"], "name": "InstructPixToPixConditioningAdvanced", "display_name": "InstructPixToPixConditioningAdvanced", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "conditioning/instructpix2pix", "output_node": false}, "JitterImage": {"input": {"required": {"images": ["IMAGE"], "jitter_scale": ["FLOAT", {"default": 1.0, "min": 0.1, "step": 0.1}]}}, "input_order": {"required": ["images", "jitter_scale"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JitterImage", "display_name": "Jitter Image", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters/jitter", "output_node": false}, "Keyer": {"input": {"required": {"images": ["IMAGE"], "operation": [["luminance", "saturation", "max", "min", "red", "green", "blue", "redscreen", "greenscreen", "bluescreen"]], "low": ["FLOAT", {"default": 0, "step": 0.001}], "high": ["FLOAT", {"default": 1, "step": 0.001}], "gamma": ["FLOAT", {"default": 1.0, "min": 0.001, "step": 0.001}], "premult": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["images", "operation", "low", "high", "gamma", "premult"]}, "output": ["IMAGE", "IMAGE", "MASK"], "output_is_list": [false, false, false], "output_name": ["image", "alpha", "mask"], "name": "Keyer", "display_name": "Keyer", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "LatentNormalizeShuffle": {"input": {"required": {"latents": ["LATENT"], "flatten": ["INT", {"default": 0, "min": 0, "max": 16}], "normalize": ["BOOLEAN", {"default": true}], "shuffle": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["latents", "flatten", "normalize", "shuffle"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentNormalizeShuffle", "display_name": "LatentNormalizeShuffle", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "latent/filters", "output_node": false}, "LatentStats": {"input": {"required": {"latent": ["LATENT"]}}, "input_order": {"required": ["latent"]}, "output": ["STRING", "FLOAT", "FLOAT", "FLOAT", "FLOAT"], "output_is_list": [false, false, false, false, false], "output_name": ["stats", "c0_mean", "c1_mean", "c2_mean", "c3_mean"], "name": "LatentStats", "display_name": "Latent Stats", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "utils", "output_node": true}, "MedianFilterImage": {"input": {"required": {"images": ["IMAGE"], "size": ["INT", {"default": 1, "min": 1, "max": 1023}]}}, "input_order": {"required": ["images", "size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "MedianFilterImage", "display_name": "Median Filter Image", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "ModelTest": {"input": {"required": {"model": ["MODEL"], "code": ["STRING", {"multiline": true, "default": "d = model.model.model_config.unet_config\nfor k in d.keys():\n    print(k, d[k])"}]}}, "input_order": {"required": ["model", "code"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ModelTest", "display_name": "Model Test", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "utils", "output_node": true}, "NormalMapSimple": {"input": {"required": {"images": ["IMAGE"], "scale_XY": ["FLOAT", {"default": 1, "min": 0, "max": 100, "step": 0.001}]}}, "input_order": {"required": ["images", "scale_XY"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "NormalMapSimple", "display_name": "Normal Map (Simple)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "OffsetLatentImage": {"input": {"required": {"width": ["INT", {"default": 512, "min": 16, "max": 8192, "step": 8}], "height": ["INT", {"default": 512, "min": 16, "max": 8192, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "offset_0": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 10.0, "step": 0.1, "round": 0.1}], "offset_1": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 10.0, "step": 0.1, "round": 0.1}], "offset_2": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 10.0, "step": 0.1, "round": 0.1}], "offset_3": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 10.0, "step": 0.1, "round": 0.1}]}}, "input_order": {"required": ["width", "height", "batch_size", "offset_0", "offset_1", "offset_2", "offset_3"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "OffsetLatentImage", "display_name": "Offset Latent Image", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "latent", "output_node": false}, "PrintSigmas": {"input": {"required": {"sigmas": ["SIGMAS"]}}, "input_order": {"required": ["sigmas"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "PrintSigmas", "display_name": "PrintSigmas", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "utils", "output_node": true}, "RelightSimple": {"input": {"required": {"image": ["IMAGE"], "normals": ["IMAGE"], "x_dir": ["FLOAT", {"default": 0.0, "min": -1.5, "max": 1.5, "step": 0.01}], "y_dir": ["FLOAT", {"default": 0.0, "min": -1.5, "max": 1.5, "step": 0.01}], "brightness": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100, "step": 0.01}]}}, "input_order": {"required": ["image", "normals", "x_dir", "y_dir", "brightness"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RelightSimple", "display_name": "Relight (Simple)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "RemapRange": {"input": {"required": {"image": ["IMAGE"], "blackpoint": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "whitepoint": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "blackpoint", "whitepoint"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RemapRange", "display_name": "Remap Range", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "RestoreDetail": {"input": {"required": {"images": ["IMAGE"], "detail": ["IMAGE"], "mode": [["add", "multiply"]], "blur_type": [["blur", "guidedFilter"]], "blur_size": ["INT", {"default": 1, "min": 1, "max": 1023}], "factor": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["images", "detail", "mode", "blur_type", "blur_size", "factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RestoreDetail", "display_name": "Restore Detail", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "SharpenFilterLatent": {"input": {"required": {"latents": ["LATENT"], "filter_size": ["INT", {"default": 1, "min": 1, "max": 128}], "factor": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["latents", "filter_size", "factor"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "SharpenFilterLatent", "display_name": "Sharpen Filter (Latent)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "latent/filters", "output_node": false}, "ShuffleChannels": {"input": {"required": {"image": ["IMAGE"], "red": [["red", "green", "blue", "alpha", "white", "black"], {"default": "red"}], "green": [["red", "green", "blue", "alpha", "white", "black"], {"default": "green"}], "blue": [["red", "green", "blue", "alpha", "white", "black"], {"default": "blue"}], "alpha": [["red", "green", "blue", "alpha", "white", "black", "none"], {"default": "none"}]}}, "input_order": {"required": ["image", "red", "green", "blue", "alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ShuffleChannels", "display_name": "Shuffle Channels", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "Tonemap": {"input": {"required": {"images": ["IMAGE"], "input_mode": [["linear", "sRGB"]], "output_mode": [["sRGB", "linear"]], "tonemap_scale": ["FLOAT", {"default": 1, "min": 0.1, "max": 10, "step": 0.01}]}}, "input_order": {"required": ["images", "input_mode", "output_mode", "tonemap_scale"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Tonemap", "display_name": "Tonemap", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "UnJitterImage": {"input": {"required": {"images": ["IMAGE"], "jitter_scale": ["FLOAT", {"default": 1.0, "min": 0.1, "step": 0.1}], "oflow_align": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["images", "jitter_scale", "oflow_align"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "UnJitterImage", "display_name": "Un-Jitter Image", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters/jitter", "output_node": false}, "UnTonemap": {"input": {"required": {"images": ["IMAGE"], "input_mode": [["sRGB", "linear"]], "output_mode": [["linear", "sRGB"]], "tonemap_scale": ["FLOAT", {"default": 1, "min": 0.1, "max": 10, "step": 0.01}]}}, "input_order": {"required": ["images", "input_mode", "output_mode", "tonemap_scale"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "UnTonemap", "display_name": "UnTonemap", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "image/filters", "output_node": false}, "VisualizeLatents": {"input": {"required": {"latent": ["LATENT"]}}, "input_order": {"required": ["latent"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "VisualizeLatents", "display_name": "Visualize Latents", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "utils", "output_node": false}, "RemoteQueueSimple": {"input": {"required": {"remote_url": ["STRING", {"multiline": false, "default": "http://127.0.0.1:8288/"}], "batch_local": ["INT", {"default": 1, "min": 1, "max": 8}], "batch_remote": ["INT", {"default": 1, "min": 1, "max": 8}], "trigger": [["on_change", "always"]], "enabled": [["true", "false", "remote"], {"default": "true"}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "hidden": {"prompt": "PROMPT"}}, "input_order": {"required": ["remote_url", "batch_local", "batch_remote", "trigger", "enabled", "seed"], "hidden": ["prompt"]}, "output": ["INT", "INT", "REMINFO"], "output_is_list": [false, false, false], "output_name": ["seed", "batch", "remote_info"], "name": "RemoteQueueSimple", "display_name": "Queue on remote (single)", "description": "", "python_module": "custom_nodes.ComfyUI_NetDist", "category": "remote", "output_node": false}, "FetchRemote": {"input": {"required": {"final_image": ["IMAGE"], "remote_info": ["REMINFO"]}}, "input_order": {"required": ["final_image", "remote_info"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "FetchRemote", "display_name": "Fetch from remote", "description": "", "python_module": "custom_nodes.ComfyUI_NetDist", "category": "remote", "output_node": false}, "RemoteChainStart": {"input": {"required": {"workflow": ["JSON"], "trigger": [["on_change", "always"]], "batch": ["INT", {"default": 1, "min": 1, "max": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["workflow", "trigger", "batch", "seed"]}, "output": ["REMCHAIN"], "output_is_list": [false], "output_name": ["remote_chain"], "name": "RemoteChainStart", "display_name": "Queue on remote (start of chain)", "description": "", "python_module": "custom_nodes.ComfyUI_NetDist", "category": "remote/advanced", "output_node": false}, "RemoteQueueWorker": {"input": {"required": {"remote_chain": ["REMCHAIN"], "remote_url": ["STRING", {"multiline": false, "default": "http://127.0.0.1:8288/"}], "batch_override": ["INT", {"default": 0, "min": 0, "max": 8}], "enabled": [["true", "false", "remote"], {"default": "true"}], "outputs": [["final_image", "any"], {"default": "final_image"}]}}, "input_order": {"required": ["remote_chain", "remote_url", "batch_override", "enabled", "outputs"]}, "output": ["REMCHAIN", "REMINFO"], "output_is_list": [false, false], "output_name": ["remote_chain", "remote_info"], "name": "RemoteQueueWorker", "display_name": "Queue on remote (worker)", "description": "", "python_module": "custom_nodes.ComfyUI_NetDist", "category": "remote/advanced", "output_node": false}, "RemoteChainEnd": {"input": {"required": {"remote_chain": ["REMCHAIN"]}}, "input_order": {"required": ["remote_chain"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["seed", "batch"], "name": "RemoteChainEnd", "display_name": "Queue on remote (end of chain)", "description": "", "python_module": "custom_nodes.ComfyUI_NetDist", "category": "remote/advanced", "output_node": false}, "LoadImageUrl": {"input": {"required": {"url": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["url"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "LoadImageUrl", "display_name": "Load Image (URL)", "description": "", "python_module": "custom_nodes.ComfyUI_NetDist", "category": "remote/image", "output_node": false}, "SaveImageUrl": {"input": {"required": {"images": ["IMAGE"], "url": ["STRING", {"multiline": false}], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "data_format": [["HTML_image", "Raw_data"]]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "url", "filename_prefix", "data_format"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveImageUrl", "display_name": "Save Image (URL)", "description": "", "python_module": "custom_nodes.ComfyUI_NetDist", "category": "remote/image", "output_node": true}, "CombineImageBatch": {"input": {"required": {"images_a": ["IMAGE"], "images_b": ["IMAGE"]}}, "input_order": {"required": ["images_a", "images_b"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "CombineImageBatch", "display_name": "Combine images", "description": "", "python_module": "custom_nodes.ComfyUI_NetDist", "category": "remote/image", "output_node": false}, "LoadLatentNumpy": {"input": {"required": {"latent": [[]]}}, "input_order": {"required": ["latent"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LoadLatentNumpy", "display_name": "Load Latent (Numpy)", "description": "", "python_module": "custom_nodes.ComfyUI_NetDist", "category": "remote/latent", "output_node": false}, "LoadLatentUrl": {"input": {"required": {"url": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["url"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LoadLatentUrl", "display_name": "Load Latent (URL)", "description": "", "python_module": "custom_nodes.ComfyUI_NetDist", "category": "remote/latent", "output_node": false}, "SaveLatentNumpy": {"input": {"required": {"samples": ["LATENT"], "filename_prefix": ["STRING", {"default": "latents/ComfyUI"}]}}, "input_order": {"required": ["samples", "filename_prefix"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["filename"], "name": "SaveLatentNumpy", "display_name": "Save Latent (Numpy)", "description": "", "python_module": "custom_nodes.ComfyUI_NetDist", "category": "remote/latent", "output_node": true}, "SaveDiskWorkflowJSON": {"input": {"required": {"workflow": ["JSON"], "filename_prefix": ["STRING", {"default": "workflow/ComfyUI"}]}}, "input_order": {"required": ["workflow", "filename_prefix"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveDiskWorkflowJSON", "display_name": "Save workflow (disk)", "description": "", "python_module": "custom_nodes.ComfyUI_NetDist", "category": "remote/advanced", "output_node": true}, "LoadDiskWorkflowJSON": {"input": {"required": {"workflow": [[]]}}, "input_order": {"required": ["workflow"]}, "output": ["JSON"], "output_is_list": [false], "output_name": ["Workflow JSON"], "name": "LoadDiskWorkflowJSON", "display_name": "Load workflow (disk)", "description": "", "python_module": "custom_nodes.ComfyUI_NetDist", "category": "remote/advanced", "output_node": false}, "LoadCurrentWorkflowJSON": {"input": {"required": {}, "hidden": {"prompt": "PROMPT"}}, "input_order": {"required": [], "hidden": ["prompt"]}, "output": ["JSON"], "output_is_list": [false], "output_name": ["Workflow JSON"], "name": "LoadCurrentWorkflowJSON", "display_name": "Load workflow (current)", "description": "", "python_module": "custom_nodes.ComfyUI_NetDist", "category": "remote/advanced", "output_node": false}, "IPAdapter": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "weight_type": [["standard", "prompt is more important", "style transfer"]]}, "optional": {"attn_mask": ["MASK"]}}, "input_order": {"required": ["model", "ipadapter", "image", "weight", "start_at", "end_at", "weight_type"], "optional": ["attn_mask"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "IPAdapter", "display_name": "IPAdapter", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter", "output_node": false}, "IPAdapterAdvanced": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 5, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise", "composition precise"]], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"]}}, "input_order": {"required": ["model", "ipadapter", "image", "weight", "weight_type", "combine_embeds", "start_at", "end_at", "embeds_scaling"], "optional": ["image_negative", "attn_mask", "clip_vision"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "IPAdapterAdvanced", "display_name": "IPAdapter Advanced", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter", "output_node": false}, "IPAdapterBatch": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 5, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise", "composition precise"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]], "encode_batch_size": ["INT", {"default": 0, "min": 0, "max": 4096}]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"]}}, "input_order": {"required": ["model", "ipadapter", "image", "weight", "weight_type", "start_at", "end_at", "embeds_scaling", "encode_batch_size"], "optional": ["image_negative", "attn_mask", "clip_vision"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "IPAdapterBatch", "display_name": "IPAdapter Batch (Adv.)", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter", "output_node": false}, "IPAdapterFaceID": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "weight_faceidv2": ["FLOAT", {"default": 1.0, "min": -1, "max": 5.0, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise", "composition precise"]], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"], "insightface": ["INSIGHTFACE"]}}, "input_order": {"required": ["model", "ipadapter", "image", "weight", "weight_faceidv2", "weight_type", "combine_embeds", "start_at", "end_at", "embeds_scaling"], "optional": ["image_negative", "attn_mask", "clip_vision", "insightface"]}, "output": ["MODEL", "IMAGE"], "output_is_list": [false, false], "output_name": ["MODEL", "face_image"], "name": "IPAdapterFaceID", "display_name": "IPAdapter FaceID", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/faceid", "output_node": false}, "IPAdapterFaceIDKolors": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "weight_faceidv2": ["FLOAT", {"default": 1.0, "min": -1, "max": 5.0, "step": 0.05}], "weight_kolors": ["FLOAT", {"default": 1.0, "min": -1, "max": 5.0, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise", "composition precise"]], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"], "insightface": ["INSIGHTFACE"]}}, "input_order": {"required": ["model", "ipadapter", "image", "weight", "weight_faceidv2", "weight_kolors", "weight_type", "combine_embeds", "start_at", "end_at", "embeds_scaling"], "optional": ["image_negative", "attn_mask", "clip_vision", "insightface"]}, "output": ["MODEL", "IMAGE"], "output_is_list": [false, false], "output_name": ["MODEL", "face_image"], "name": "IPAdapterFaceIDKolors", "display_name": "IPAdapter FaceID Kolors", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/faceid", "output_node": false}, "IPAAdapterFaceIDBatch": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "weight_faceidv2": ["FLOAT", {"default": 1.0, "min": -1, "max": 5.0, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise", "composition precise"]], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"], "insightface": ["INSIGHTFACE"]}}, "input_order": {"required": ["model", "ipadapter", "image", "weight", "weight_faceidv2", "weight_type", "combine_embeds", "start_at", "end_at", "embeds_scaling"], "optional": ["image_negative", "attn_mask", "clip_vision", "insightface"]}, "output": ["MODEL", "IMAGE"], "output_is_list": [false, false], "output_name": ["MODEL", "face_image"], "name": "IPAAdapterFaceIDBatch", "display_name": "IPAdapter FaceID Batch", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/faceid", "output_node": false}, "IPAdapterTiled": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise", "composition precise"]], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "sharpening": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.05}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"]}}, "input_order": {"required": ["model", "ipadapter", "image", "weight", "weight_type", "combine_embeds", "start_at", "end_at", "sharpening", "embeds_scaling"], "optional": ["image_negative", "attn_mask", "clip_vision"]}, "output": ["MODEL", "IMAGE", "MASK"], "output_is_list": [false, false, false], "output_name": ["MODEL", "tiles", "masks"], "name": "IPAdapterTiled", "display_name": "IPAdapter Tiled", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/tiled", "output_node": false}, "IPAdapterTiledBatch": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise", "composition precise"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "sharpening": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.05}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]], "encode_batch_size": ["INT", {"default": 0, "min": 0, "max": 4096}]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"]}}, "input_order": {"required": ["model", "ipadapter", "image", "weight", "weight_type", "start_at", "end_at", "sharpening", "embeds_scaling", "encode_batch_size"], "optional": ["image_negative", "attn_mask", "clip_vision"]}, "output": ["MODEL", "IMAGE", "MASK"], "output_is_list": [false, false, false], "output_name": ["MODEL", "tiles", "masks"], "name": "IPAdapterTiledBatch", "display_name": "IPAdapter Tiled Batch", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/tiled", "output_node": false}, "IPAdapterEmbeds": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "pos_embed": ["EMBEDS"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise", "composition precise"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]]}, "optional": {"neg_embed": ["EMBEDS"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"]}}, "input_order": {"required": ["model", "ipadapter", "pos_embed", "weight", "weight_type", "start_at", "end_at", "embeds_scaling"], "optional": ["neg_embed", "attn_mask", "clip_vision"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "IPAdapterEmbeds", "display_name": "IPAdapter Embeds", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/embeds", "output_node": false}, "IPAdapterEmbedsBatch": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "pos_embed": ["EMBEDS"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise", "composition precise"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]]}, "optional": {"neg_embed": ["EMBEDS"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"]}}, "input_order": {"required": ["model", "ipadapter", "pos_embed", "weight", "weight_type", "start_at", "end_at", "embeds_scaling"], "optional": ["neg_embed", "attn_mask", "clip_vision"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "IPAdapterEmbedsBatch", "display_name": "IPAdapter Embeds Batch", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/embeds", "output_node": false}, "IPAdapterStyleComposition": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "image_style": ["IMAGE"], "image_composition": ["IMAGE"], "weight_style": ["FLOAT", {"default": 1.0, "min": -1, "max": 5, "step": 0.05}], "weight_composition": ["FLOAT", {"default": 1.0, "min": -1, "max": 5, "step": 0.05}], "expand_style": ["BOOLEAN", {"default": false}], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"], {"default": "average"}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"]}}, "input_order": {"required": ["model", "ipadapter", "image_style", "image_composition", "weight_style", "weight_composition", "expand_style", "combine_embeds", "start_at", "end_at", "embeds_scaling"], "optional": ["image_negative", "attn_mask", "clip_vision"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "IPAdapterStyleComposition", "display_name": "IPAdapter Style & Composition SDXL", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/style_composition", "output_node": false}, "IPAdapterStyleCompositionBatch": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "image_style": ["IMAGE"], "image_composition": ["IMAGE"], "weight_style": ["FLOAT", {"default": 1.0, "min": -1, "max": 5, "step": 0.05}], "weight_composition": ["FLOAT", {"default": 1.0, "min": -1, "max": 5, "step": 0.05}], "expand_style": ["BOOLEAN", {"default": false}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"]}}, "input_order": {"required": ["model", "ipadapter", "image_style", "image_composition", "weight_style", "weight_composition", "expand_style", "start_at", "end_at", "embeds_scaling"], "optional": ["image_negative", "attn_mask", "clip_vision"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "IPAdapterStyleCompositionBatch", "display_name": "IPAdapter Style & Composition Batch SDXL", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/style_composition", "output_node": false}, "IPAdapterMS": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 5, "step": 0.05}], "weight_faceidv2": ["FLOAT", {"default": 1.0, "min": -1, "max": 5.0, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise", "composition precise"]], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]], "layer_weights": ["STRING", {"default": "", "multiline": true}]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"], "insightface": ["INSIGHTFACE"]}}, "input_order": {"required": ["model", "ipadapter", "image", "weight", "weight_faceidv2", "weight_type", "combine_embeds", "start_at", "end_at", "embeds_scaling", "layer_weights"], "optional": ["image_negative", "attn_mask", "clip_vision", "insightface"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "IPAdapterMS", "display_name": "IPAdapter Mad Scientist", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/dev", "output_node": false}, "IPAdapterClipVisionEnhancer": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 5, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise", "composition precise"]], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]], "enhance_tiles": ["INT", {"default": 2, "min": 1, "max": 16}], "enhance_ratio": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.05}]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"]}}, "input_order": {"required": ["model", "ipadapter", "image", "weight", "weight_type", "combine_embeds", "start_at", "end_at", "embeds_scaling", "enhance_tiles", "enhance_ratio"], "optional": ["image_negative", "attn_mask", "clip_vision"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "IPAdapterClipVisionEnhancer", "display_name": "IPAdapter ClipVision Enhancer", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/dev", "output_node": false}, "IPAdapterClipVisionEnhancerBatch": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 5, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise", "composition precise"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]], "enhance_tiles": ["INT", {"default": 2, "min": 1, "max": 16}], "enhance_ratio": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.05}], "encode_batch_size": ["INT", {"default": 0, "min": 0, "max": 4096}]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"]}}, "input_order": {"required": ["model", "ipadapter", "image", "weight", "weight_type", "start_at", "end_at", "embeds_scaling", "enhance_tiles", "enhance_ratio", "encode_batch_size"], "optional": ["image_negative", "attn_mask", "clip_vision"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "IPAdapterClipVisionEnhancerBatch", "display_name": "IPAdapter ClipVision Enhancer Batch", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/dev", "output_node": false}, "IPAdapterFromParams": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "ipadapter_params": ["IPADAPTER_PARAMS"], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]]}, "optional": {"image_negative": ["IMAGE"], "clip_vision": ["CLIP_VISION"]}}, "input_order": {"required": ["model", "ipadapter", "ipadapter_params", "combine_embeds", "embeds_scaling"], "optional": ["image_negative", "clip_vision"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "IPAdapterFromParams", "display_name": "IPAdapter from Params", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/params", "output_node": false}, "IPAdapterPreciseStyleTransfer": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 5, "step": 0.05}], "style_boost": ["FLOAT", {"default": 1.0, "min": -5, "max": 5, "step": 0.05}], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"]}}, "input_order": {"required": ["model", "ipadapter", "image", "weight", "style_boost", "combine_embeds", "start_at", "end_at", "embeds_scaling"], "optional": ["image_negative", "attn_mask", "clip_vision"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "IPAdapterPreciseStyleTransfer", "display_name": "IPAdapter Precise Style Transfer", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter", "output_node": false}, "IPAdapterPreciseStyleTransferBatch": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 5, "step": 0.05}], "style_boost": ["FLOAT", {"default": 1.0, "min": -5, "max": 5, "step": 0.05}], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"]}}, "input_order": {"required": ["model", "ipadapter", "image", "weight", "style_boost", "combine_embeds", "start_at", "end_at", "embeds_scaling"], "optional": ["image_negative", "attn_mask", "clip_vision"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "IPAdapterPreciseStyleTransferBatch", "display_name": "IPAdapter Precise Style Transfer Batch", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter", "output_node": false}, "IPAdapterPreciseComposition": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 5, "step": 0.05}], "composition_boost": ["FLOAT", {"default": 0.0, "min": -5, "max": 5, "step": 0.05}], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"]}}, "input_order": {"required": ["model", "ipadapter", "image", "weight", "composition_boost", "combine_embeds", "start_at", "end_at", "embeds_scaling"], "optional": ["image_negative", "attn_mask", "clip_vision"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "IPAdapterPreciseComposition", "display_name": "IPAdapter Precise Composition", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter", "output_node": false}, "IPAdapterPreciseCompositionBatch": {"input": {"required": {"model": ["MODEL"], "ipadapter": ["IPADAPTER"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 5, "step": 0.05}], "composition_boost": ["FLOAT", {"default": 0.0, "min": -5, "max": 5, "step": 0.05}], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"]}}, "input_order": {"required": ["model", "ipadapter", "image", "weight", "composition_boost", "combine_embeds", "start_at", "end_at", "embeds_scaling"], "optional": ["image_negative", "attn_mask", "clip_vision"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "IPAdapterPreciseCompositionBatch", "display_name": "IPAdapter Precise Composition Batch", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter", "output_node": false}, "IPAdapterUnifiedLoader": {"input": {"required": {"model": ["MODEL"], "preset": [["LIGHT - SD1.5 only (low strength)", "STANDARD (medium strength)", "VIT-G (medium strength)", "PLUS (high strength)", "PLUS FACE (portraits)", "FULL FACE - SD1.5 only (portraits stronger)"]]}, "optional": {"ipadapter": ["IPADAPTER"]}}, "input_order": {"required": ["model", "preset"], "optional": ["ipadapter"]}, "output": ["MODEL", "IPADAPTER"], "output_is_list": [false, false], "output_name": ["model", "ipadapter"], "name": "IPAdapterUnifiedLoader", "display_name": "IPAdapter Unified Loader", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter", "output_node": false}, "IPAdapterUnifiedLoaderFaceID": {"input": {"required": {"model": ["MODEL"], "preset": [["FACEID", "FACEID PLUS - SD1.5 only", "FACEID PLUS V2", "FACEID PORTRAIT (style transfer)", "FACEID PORTRAIT UNNORM - SDXL only (strong)"]], "lora_strength": ["FLOAT", {"default": 0.6, "min": 0, "max": 1, "step": 0.01}], "provider": [["CPU", "CUDA", "ROCM", "DirectML", "OpenVINO", "CoreML"]]}, "optional": {"ipadapter": ["IPADAPTER"]}}, "input_order": {"required": ["model", "preset", "lora_strength", "provider"], "optional": ["ipadapter"]}, "output": ["MODEL", "IPADAPTER"], "output_is_list": [false, false], "output_name": ["MODEL", "ipadapter"], "name": "IPAdapterUnifiedLoaderFaceID", "display_name": "IPAdapter Unified Loader FaceID", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/faceid", "output_node": false}, "IPAdapterModelLoader": {"input": {"required": {"ipadapter_file": [["ip-adapter-plus_sd15.safetensors", "ip-adapter-plus_sdxl_vit-h.safetensors", "ip-adapter_sd15.safetensors", "ip-adapter_sdxl.safetensors"]]}}, "input_order": {"required": ["ipadapter_file"]}, "output": ["IPADAPTER"], "output_is_list": [false], "output_name": ["IPADAPTER"], "name": "IPAdapterModelLoader", "display_name": "IPAdapter Model Loader", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/loaders", "output_node": false}, "IPAdapterInsightFaceLoader": {"input": {"required": {"provider": [["CPU", "CUDA", "ROCM"]], "model_name": [["buffalo_l", "antelopev2"]]}}, "input_order": {"required": ["provider", "model_name"]}, "output": ["INSIGHTFACE"], "output_is_list": [false], "output_name": ["INSIGHTFACE"], "name": "IPAdapterInsightFaceLoader", "display_name": "IPAdapter InsightFace Loader", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/loaders", "output_node": false}, "IPAdapterUnifiedLoaderCommunity": {"input": {"required": {"model": ["MODEL"], "preset": [["Composition", "Kolors"]]}, "optional": {"ipadapter": ["IPADAPTER"]}}, "input_order": {"required": ["model", "preset"], "optional": ["ipadapter"]}, "output": ["MODEL", "IPADAPTER"], "output_is_list": [false, false], "output_name": ["model", "ipadapter"], "name": "IPAdapterUnifiedLoaderCommunity", "display_name": "IPAdapter Unified Loader Community", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/loaders", "output_node": false}, "IPAdapterEncoder": {"input": {"required": {"ipadapter": ["IPADAPTER"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1.0, "max": 3.0, "step": 0.01}]}, "optional": {"mask": ["MASK"], "clip_vision": ["CLIP_VISION"]}}, "input_order": {"required": ["ipadapter", "image", "weight"], "optional": ["mask", "clip_vision"]}, "output": ["EMBEDS", "EMBEDS"], "output_is_list": [false, false], "output_name": ["pos_embed", "neg_embed"], "name": "IPAdapterEncoder", "display_name": "IPAdapter Encoder", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/embeds", "output_node": false}, "IPAdapterCombineEmbeds": {"input": {"required": {"embed1": ["EMBEDS"], "method": [["concat", "add", "subtract", "average", "norm average", "max", "min"]]}, "optional": {"embed2": ["EMBEDS"], "embed3": ["EMBEDS"], "embed4": ["EMBEDS"], "embed5": ["EMBEDS"]}}, "input_order": {"required": ["embed1", "method"], "optional": ["embed2", "embed3", "embed4", "embed5"]}, "output": ["EMBEDS"], "output_is_list": [false], "output_name": ["EMBEDS"], "name": "IPAdapterCombineEmbeds", "display_name": "IPAdapter Combine Embeds", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/embeds", "output_node": false}, "IPAdapterNoise": {"input": {"required": {"type": [["fade", "dissolve", "gaussian", "shuffle"]], "strength": ["FLOAT", {"default": 1.0, "min": 0, "max": 1, "step": 0.05}], "blur": ["INT", {"default": 0, "min": 0, "max": 32, "step": 1}]}, "optional": {"image_optional": ["IMAGE"]}}, "input_order": {"required": ["type", "strength", "blur"], "optional": ["image_optional"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "IPAdapterNoise", "display_name": "IPAdapter Noise", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/utils", "output_node": false}, "PrepImageForClipVision": {"input": {"required": {"image": ["IMAGE"], "interpolation": [["LANCZOS", "BICUBIC", "HAMMING", "BILINEAR", "BOX", "NEAREST"]], "crop_position": [["top", "bottom", "left", "right", "center", "pad"]], "sharpening": ["FLOAT", {"default": 0.0, "min": 0, "max": 1, "step": 0.05}]}}, "input_order": {"required": ["image", "interpolation", "crop_position", "sharpening"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "PrepImageForClipVision", "display_name": "Prep Image For ClipVision", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/utils", "output_node": false}, "IPAdapterSaveEmbeds": {"input": {"required": {"embeds": ["EMBEDS"], "filename_prefix": ["STRING", {"default": "IP_embeds"}]}}, "input_order": {"required": ["embeds", "filename_prefix"]}, "output": [], "output_is_list": [], "output_name": [], "name": "IPAdapterSaveEmbeds", "display_name": "IPAdapter Save Embeds", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/embeds", "output_node": true}, "IPAdapterLoadEmbeds": {"input": {"required": {"embeds": [[]]}}, "input_order": {"required": ["embeds"]}, "output": ["EMBEDS"], "output_is_list": [false], "output_name": ["EMBEDS"], "name": "IPAdapterLoadEmbeds", "display_name": "IPAdapter Load Embeds", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/embeds", "output_node": false}, "IPAdapterWeights": {"input": {"required": {"weights": ["STRING", {"default": "1.0, 0.0", "multiline": true}], "timing": [["custom", "linear", "ease_in_out", "ease_in", "ease_out", "random"], {"default": "linear"}], "frames": ["INT", {"default": 0, "min": 0, "max": 9999, "step": 1}], "start_frame": ["INT", {"default": 0, "min": 0, "max": 9999, "step": 1}], "end_frame": ["INT", {"default": 9999, "min": 0, "max": 9999, "step": 1}], "add_starting_frames": ["INT", {"default": 0, "min": 0, "max": 9999, "step": 1}], "add_ending_frames": ["INT", {"default": 0, "min": 0, "max": 9999, "step": 1}], "method": [["full batch", "shift batches", "alternate batches"], {"default": "full batch"}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["weights", "timing", "frames", "start_frame", "end_frame", "add_starting_frames", "add_ending_frames", "method"], "optional": ["image"]}, "output": ["FLOAT", "FLOAT", "INT", "IMAGE", "IMAGE", "WEIGHTS_STRATEGY"], "output_is_list": [false, false, false, false, false, false], "output_name": ["weights", "weights_invert", "total_frames", "image_1", "image_2", "weights_strategy"], "name": "IPAdapterWeights", "display_name": "IPAdapter Weights", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/weights", "output_node": false}, "IPAdapterCombineWeights": {"input": {"required": {"weights_1": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.05}], "weights_2": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.05}]}}, "input_order": {"required": ["weights_1", "weights_2"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["weights", "count"], "name": "IPAdapterCombineWeights", "display_name": "IPAdapter Combine Weights", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/utils", "output_node": false}, "IPAdapterWeightsFromStrategy": {"input": {"required": {"weights_strategy": ["WEIGHTS_STRATEGY"]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["weights_strategy"], "optional": ["image"]}, "output": ["FLOAT", "FLOAT", "INT", "IMAGE", "IMAGE", "WEIGHTS_STRATEGY"], "output_is_list": [false, false, false, false, false, false], "output_name": ["weights", "weights_invert", "total_frames", "image_1", "image_2", "weights_strategy"], "name": "IPAdapterWeightsFromStrategy", "display_name": "IPAdapter Weights From Strategy", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/weights", "output_node": false}, "IPAdapterPromptScheduleFromWeightsStrategy": {"input": {"required": {"weights_strategy": ["WEIGHTS_STRATEGY"], "prompt": ["STRING", {"default": "", "multiline": true}]}}, "input_order": {"required": ["weights_strategy", "prompt"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["prompt_schedule"], "name": "IPAdapterPromptScheduleFromWeightsStrategy", "display_name": "Prompt Schedule From Weights Strategy", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/weights", "output_node": false}, "IPAdapterRegionalConditioning": {"input": {"required": {"image": ["IMAGE"], "image_weight": ["FLOAT", {"default": 1.0, "min": -1.0, "max": 3.0, "step": 0.05}], "prompt_weight": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise", "composition precise"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"mask": ["MASK"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"]}}, "input_order": {"required": ["image", "image_weight", "prompt_weight", "weight_type", "start_at", "end_at"], "optional": ["mask", "positive", "negative"]}, "output": ["IPADAPTER_PARAMS", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false], "output_name": ["IPADAPTER_PARAMS", "POSITIVE", "NEGATIVE"], "name": "IPAdapterRegionalConditioning", "display_name": "IPAdapter Regional Conditioning", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/params", "output_node": false}, "IPAdapterCombineParams": {"input": {"required": {"params_1": ["IPADAPTER_PARAMS"], "params_2": ["IPADAPTER_PARAMS"]}, "optional": {"params_3": ["IPADAPTER_PARAMS"], "params_4": ["IPADAPTER_PARAMS"], "params_5": ["IPADAPTER_PARAMS"]}}, "input_order": {"required": ["params_1", "params_2"], "optional": ["params_3", "params_4", "params_5"]}, "output": ["IPADAPTER_PARAMS"], "output_is_list": [false], "output_name": ["IPADAPTER_PARAMS"], "name": "IPAdapterCombineParams", "display_name": "IPAdapter Combine Params", "description": "", "python_module": "custom_nodes.ComfyUI_IPAdapter_plus", "category": "ipadapter/params", "output_node": false}, "ADE_AnimateDiffLoRALoader": {"input": {"required": {"name": [[]], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}]}, "optional": {"prev_motion_lora": ["MOTION_LORA"], "autosize": ["ADEAUTOSIZE", {"padding": 30}]}}, "input_order": {"required": ["name", "strength"], "optional": ["prev_motion_lora", "autosize"]}, "output": ["MOTION_LORA"], "output_is_list": [false], "output_name": ["MOTION_LORA"], "name": "ADE_AnimateDiffLoRALoader", "display_name": "Load AnimateDiff LoRA \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53", "output_node": false}, "ADE_AnimateDiffSamplingSettings": {"input": {"required": {"batch_offset": ["INT", {"default": 0, "min": 0, "max": 9007199254740991}], "noise_type": [["default", "constant", "empty", "repeated_context", "FreeNoise"]], "seed_gen": [["comfy", "comfy [gpu]", "auto1111", "auto1111 [gpu]"]], "seed_offset": ["INT", {"default": 0, "min": -9007199254740991, "max": 9007199254740991}]}, "optional": {"noise_layers": ["NOISE_LAYERS"], "iteration_opts": ["ITERATION_OPTS"], "seed_override": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "forceInput": true}], "adapt_denoise_steps": ["BOOLEAN", {"default": false}], "custom_cfg": ["CUSTOM_CFG"], "sigma_schedule": ["SIGMA_SCHEDULE"], "image_inject": ["IMAGE_INJECT"], "autosize": ["ADEAUTOSIZE", {"padding": 10}]}}, "input_order": {"required": ["batch_offset", "noise_type", "seed_gen", "seed_offset"], "optional": ["noise_layers", "iteration_opts", "seed_override", "adapt_denoise_steps", "custom_cfg", "sigma_schedule", "image_inject", "autosize"]}, "output": ["SAMPLE_SETTINGS"], "output_is_list": [false], "output_name": ["settings"], "name": "ADE_AnimateDiffSamplingSettings", "display_name": "Sample Settings \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53", "output_node": false}, "ADE_AnimateDiffKeyframe": {"input": {"required": {"start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"prev_ad_keyframes": ["AD_KEYFRAMES"], "scale_multival": ["MULTIVAL"], "effect_multival": ["MULTIVAL"], "inherit_missing": ["BOOLEAN", {"default": true}], "guarantee_steps": ["INT", {"default": 1, "min": 0, "max": 9007199254740991}], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["start_percent"], "optional": ["prev_ad_keyframes", "scale_multival", "effect_multival", "inherit_missing", "guarantee_steps", "autosize"]}, "output": ["AD_KEYFRAMES"], "output_is_list": [false], "output_name": ["AD_KEYFRAMES"], "name": "ADE_AnimateDiffKeyframe", "display_name": "AnimateDiff Keyframe \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53", "output_node": false}, "ADE_MultivalDynamic": {"input": {"required": {"float_val": ["FLOAT", {"default": 1.0, "min": 0.0, "step": 0.001}]}, "optional": {"mask_optional": ["MASK"], "autosize": ["ADEAUTOSIZE", {"padding": 10}]}}, "input_order": {"required": ["float_val"], "optional": ["mask_optional", "autosize"]}, "output": ["MULTIVAL"], "output_is_list": [false], "output_name": ["MULTIVAL"], "name": "ADE_MultivalDynamic", "display_name": "Multival \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/multival", "output_node": false}, "ADE_MultivalDynamicFloatInput": {"input": {"required": {"float_val": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001, "forceInput": true}]}, "optional": {"mask_optional": ["MASK"], "autosize": ["ADEAUTOSIZE", {"padding": 10}]}}, "input_order": {"required": ["float_val"], "optional": ["mask_optional", "autosize"]}, "output": ["MULTIVAL"], "output_is_list": [false], "output_name": ["MULTIVAL"], "name": "ADE_MultivalDynamicFloatInput", "display_name": "Multival [Float List] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/multival", "output_node": false}, "ADE_MultivalDynamicFloats": {"input": {"required": {"floats": ["FLOATS", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}]}, "optional": {"mask_optional": ["MASK"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["floats"], "optional": ["mask_optional", "autosize"]}, "output": ["MULTIVAL"], "output_is_list": [false], "output_name": ["MULTIVAL"], "name": "ADE_MultivalDynamicFloats", "display_name": "Multival [Floats] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/multival", "output_node": false}, "ADE_MultivalScaledMask": {"input": {"required": {"min_float_val": ["FLOAT", {"default": 0.0, "min": 0.0, "step": 0.001}], "max_float_val": ["FLOAT", {"default": 1.0, "min": 0.0, "step": 0.001}], "mask": ["MASK"]}, "optional": {"scaling": [["absolute", "relative"]], "autosize": ["ADEAUTOSIZE", {"padding": 10}]}}, "input_order": {"required": ["min_float_val", "max_float_val", "mask"], "optional": ["scaling", "autosize"]}, "output": ["MULTIVAL"], "output_is_list": [false], "output_name": ["MULTIVAL"], "name": "ADE_MultivalScaledMask", "display_name": "Multival Scaled Mask \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/multival", "output_node": false}, "ADE_MultivalConvertToMask": {"input": {"required": {"multival": ["MULTIVAL"]}, "optional": {"autosize": ["ADEAUTOSIZE", {"padding": 10}]}}, "input_order": {"required": ["multival"], "optional": ["autosize"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ADE_MultivalConvertToMask", "display_name": "Multival to Mask \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/multival", "output_node": false}, "ADE_StandardStaticContextOptions": {"input": {"required": {"context_length": ["INT", {"default": 16, "min": 1, "max": 128}], "context_overlap": ["INT", {"default": 4, "min": 0, "max": 128}]}, "optional": {"fuse_method": [["pyramid", "relative", "flat", "delayed reverse sawtooth", "pyramid-sigma", "pyramid-sigma inverse", "gauss-sigma", "gauss-sigma inverse", "random"]], "use_on_equal_length": ["BOOLEAN", {"default": false}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "guarantee_steps": ["INT", {"default": 1, "min": 0, "max": 9007199254740991}], "prev_context": ["CONTEXT_OPTIONS"], "view_opts": ["VIEW_OPTS"]}}, "input_order": {"required": ["context_length", "context_overlap"], "optional": ["fuse_method", "use_on_equal_length", "start_percent", "guarantee_steps", "prev_context", "view_opts"]}, "output": ["CONTEXT_OPTIONS"], "output_is_list": [false], "output_name": ["CONTEXT_OPTS"], "name": "ADE_StandardStaticContextOptions", "display_name": "Context Options\u25c6Standard Static \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts", "output_node": false}, "ADE_StandardUniformContextOptions": {"input": {"required": {"context_length": ["INT", {"default": 16, "min": 1, "max": 128}], "context_stride": ["INT", {"default": 1, "min": 1, "max": 32}], "context_overlap": ["INT", {"default": 4, "min": 0, "max": 128}]}, "optional": {"fuse_method": [["pyramid", "flat", "delayed reverse sawtooth", "pyramid-sigma", "pyramid-sigma inverse", "gauss-sigma", "gauss-sigma inverse", "random"]], "use_on_equal_length": ["BOOLEAN", {"default": false}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "guarantee_steps": ["INT", {"default": 1, "min": 0, "max": 9007199254740991}], "prev_context": ["CONTEXT_OPTIONS"], "view_opts": ["VIEW_OPTS"]}}, "input_order": {"required": ["context_length", "context_stride", "context_overlap"], "optional": ["fuse_method", "use_on_equal_length", "start_percent", "guarantee_steps", "prev_context", "view_opts"]}, "output": ["CONTEXT_OPTIONS"], "output_is_list": [false], "output_name": ["CONTEXT_OPTS"], "name": "ADE_StandardUniformContextOptions", "display_name": "Context Options\u25c6Standard Uniform \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts", "output_node": false}, "ADE_LoopedUniformContextOptions": {"input": {"required": {"context_length": ["INT", {"default": 16, "min": 1, "max": 128}], "context_stride": ["INT", {"default": 1, "min": 1, "max": 32}], "context_overlap": ["INT", {"default": 4, "min": 0, "max": 128}], "closed_loop": ["BOOLEAN", {"default": false}]}, "optional": {"fuse_method": [["pyramid", "flat", "delayed reverse sawtooth", "pyramid-sigma", "pyramid-sigma inverse", "gauss-sigma", "gauss-sigma inverse", "random"]], "use_on_equal_length": ["BOOLEAN", {"default": false}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "guarantee_steps": ["INT", {"default": 1, "min": 0, "max": 9007199254740991}], "prev_context": ["CONTEXT_OPTIONS"], "view_opts": ["VIEW_OPTS"]}}, "input_order": {"required": ["context_length", "context_stride", "context_overlap", "closed_loop"], "optional": ["fuse_method", "use_on_equal_length", "start_percent", "guarantee_steps", "prev_context", "view_opts"]}, "output": ["CONTEXT_OPTIONS"], "output_is_list": [false], "output_name": ["CONTEXT_OPTS"], "name": "ADE_LoopedUniformContextOptions", "display_name": "Context Options\u25c6Looped Uniform \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts", "output_node": false}, "ADE_ViewsOnlyContextOptions": {"input": {"required": {"view_opts_req": ["VIEW_OPTS"]}, "optional": {"start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "guarantee_steps": ["INT", {"default": 1, "min": 0, "max": 9007199254740991}], "prev_context": ["CONTEXT_OPTIONS"]}}, "input_order": {"required": ["view_opts_req"], "optional": ["start_percent", "guarantee_steps", "prev_context"]}, "output": ["CONTEXT_OPTIONS"], "output_is_list": [false], "output_name": ["CONTEXT_OPTS"], "name": "ADE_ViewsOnlyContextOptions", "display_name": "Context Options\u25c6Views Only [VRAM\u21c8] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts", "output_node": false}, "ADE_BatchedContextOptions": {"input": {"required": {"context_length": ["INT", {"default": 16, "min": 1, "max": 128}]}, "optional": {"start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "guarantee_steps": ["INT", {"default": 1, "min": 0, "max": 9007199254740991}], "prev_context": ["CONTEXT_OPTIONS"]}}, "input_order": {"required": ["context_length"], "optional": ["start_percent", "guarantee_steps", "prev_context"]}, "output": ["CONTEXT_OPTIONS"], "output_is_list": [false], "output_name": ["CONTEXT_OPTS"], "name": "ADE_BatchedContextOptions", "display_name": "Context Options\u25c6Batched [Non-AD] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts", "output_node": false}, "ADE_AnimateDiffUniformContextOptions": {"input": {"required": {"context_length": ["INT", {"default": 16, "min": 1, "max": 128}], "context_stride": ["INT", {"default": 1, "min": 1, "max": 32}], "context_overlap": ["INT", {"default": 4, "min": 0, "max": 128}], "context_schedule": [["uniform"]], "closed_loop": ["BOOLEAN", {"default": false}]}, "optional": {"fuse_method": [["pyramid", "flat", "delayed reverse sawtooth", "pyramid-sigma", "pyramid-sigma inverse", "gauss-sigma", "gauss-sigma inverse", "random"], {"default": "flat"}], "use_on_equal_length": ["BOOLEAN", {"default": false}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "guarantee_steps": ["INT", {"default": 1, "min": 0, "max": 9007199254740991}], "prev_context": ["CONTEXT_OPTIONS"], "view_opts": ["VIEW_OPTS"], "deprecation_warning": ["ADEWARN", {"text": ""}]}}, "input_order": {"required": ["context_length", "context_stride", "context_overlap", "context_schedule", "closed_loop"], "optional": ["fuse_method", "use_on_equal_length", "start_percent", "guarantee_steps", "prev_context", "view_opts", "deprecation_warning"]}, "output": ["CONTEXT_OPTIONS"], "output_is_list": [false], "output_name": ["CONTEXT_OPTS"], "name": "ADE_AnimateDiffUniformContextOptions", "display_name": "Context Options\u25c6Looped Uniform \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "", "output_node": false}, "ADE_VisualizeContextOptionsK": {"input": {"required": {"model": ["MODEL"], "context_opts": ["CONTEXT_OPTIONS"], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]]}, "optional": {"visual_width": ["INT", {"min": 32, "max": 16384, "default": 1440}], "latents_length": ["INT", {"min": 1, "max": 9007199254740991, "default": 32}], "steps": ["INT", {"min": 0, "max": 9007199254740991, "default": 20}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "context_opts", "sampler_name", "scheduler"], "optional": ["visual_width", "latents_length", "steps", "denoise"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ADE_VisualizeContextOptionsK", "display_name": "Visualize Context Options (K.) \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/visualize", "output_node": false}, "ADE_VisualizeContextOptionsKAdv": {"input": {"required": {"model": ["MODEL"], "context_opts": ["CONTEXT_OPTIONS"], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]]}, "optional": {"visual_width": ["INT", {"min": 32, "max": 16384, "default": 1440}], "latents_length": ["INT", {"min": 1, "max": 9007199254740991, "default": 32}], "steps": ["INT", {"min": 0, "max": 9007199254740991, "default": 20}], "start_step": ["INT", {"min": 0, "max": 9007199254740991, "default": 0}], "end_step": ["INT", {"min": 1, "max": 9007199254740991, "default": 20}]}}, "input_order": {"required": ["model", "context_opts", "sampler_name", "scheduler"], "optional": ["visual_width", "latents_length", "steps", "start_step", "end_step"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ADE_VisualizeContextOptionsKAdv", "display_name": "Visualize Context Options (K.Adv.) \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/visualize", "output_node": false}, "ADE_VisualizeContextOptionsSCustom": {"input": {"required": {"model": ["MODEL"], "context_opts": ["CONTEXT_OPTIONS"], "sigmas": ["SIGMAS"]}, "optional": {"visual_width": ["INT", {"min": 32, "max": 16384, "default": 1440}], "latents_length": ["INT", {"min": 1, "max": 9007199254740991, "default": 32}]}}, "input_order": {"required": ["model", "context_opts", "sigmas"], "optional": ["visual_width", "latents_length"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ADE_VisualizeContextOptionsSCustom", "display_name": "Visualize Context Options (S.Cus.) \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/visualize", "output_node": false}, "ADE_StandardStaticViewOptions": {"input": {"required": {"view_length": ["INT", {"default": 16, "min": 1, "max": 128}], "view_overlap": ["INT", {"default": 4, "min": 0, "max": 128}]}, "optional": {"fuse_method": [["pyramid", "flat", "delayed reverse sawtooth", "pyramid-sigma", "pyramid-sigma inverse", "gauss-sigma", "gauss-sigma inverse", "random"]]}}, "input_order": {"required": ["view_length", "view_overlap"], "optional": ["fuse_method"]}, "output": ["VIEW_OPTS"], "output_is_list": [false], "output_name": ["VIEW_OPTS"], "name": "ADE_StandardStaticViewOptions", "display_name": "View Options\u25c6Standard Static \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/view opts", "output_node": false}, "ADE_StandardUniformViewOptions": {"input": {"required": {"view_length": ["INT", {"default": 16, "min": 1, "max": 128}], "view_stride": ["INT", {"default": 1, "min": 1, "max": 32}], "view_overlap": ["INT", {"default": 4, "min": 0, "max": 128}]}, "optional": {"fuse_method": [["pyramid", "flat", "delayed reverse sawtooth", "pyramid-sigma", "pyramid-sigma inverse", "gauss-sigma", "gauss-sigma inverse", "random"]]}}, "input_order": {"required": ["view_length", "view_stride", "view_overlap"], "optional": ["fuse_method"]}, "output": ["VIEW_OPTS"], "output_is_list": [false], "output_name": ["VIEW_OPTS"], "name": "ADE_StandardUniformViewOptions", "display_name": "View Options\u25c6Standard Uniform \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/view opts", "output_node": false}, "ADE_LoopedUniformViewOptions": {"input": {"required": {"view_length": ["INT", {"default": 16, "min": 1, "max": 128}], "view_stride": ["INT", {"default": 1, "min": 1, "max": 32}], "view_overlap": ["INT", {"default": 4, "min": 0, "max": 128}], "closed_loop": ["BOOLEAN", {"default": false}]}, "optional": {"fuse_method": [["pyramid", "flat", "delayed reverse sawtooth", "pyramid-sigma", "pyramid-sigma inverse", "gauss-sigma", "gauss-sigma inverse", "random"]], "use_on_equal_length": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["view_length", "view_stride", "view_overlap", "closed_loop"], "optional": ["fuse_method", "use_on_equal_length"]}, "output": ["VIEW_OPTS"], "output_is_list": [false], "output_name": ["VIEW_OPTS"], "name": "ADE_LoopedUniformViewOptions", "display_name": "View Options\u25c6Looped Uniform \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/view opts", "output_node": false}, "ADE_ContextExtras_Set": {"input": {"required": {"context_opts": ["CONTEXT_OPTIONS"], "context_extras": ["CONTEXT_EXTRAS"]}, "optional": {"autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["context_opts", "context_extras"], "optional": ["autosize"]}, "output": ["CONTEXT_OPTIONS"], "output_is_list": [false], "output_name": ["CONTEXT_OPTS"], "name": "ADE_ContextExtras_Set", "display_name": "Set Context Extras \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/context extras", "output_node": false}, "ADE_ContextExtras_ContextRef": {"input": {"required": {}, "optional": {"prev_extras": ["CONTEXT_EXTRAS"], "strength_multival": ["MULTIVAL"], "contextref_mode": ["CONTEXTREF_MODE"], "contextref_tune": ["CONTEXTREF_TUNE"], "contextref_kf": ["CONTEXTREF_KEYFRAME"], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.001}], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": [], "optional": ["prev_extras", "strength_multival", "contextref_mode", "contextref_tune", "contextref_kf", "start_percent", "end_percent", "autosize"]}, "output": ["CONTEXT_EXTRAS"], "output_is_list": [false], "output_name": ["CONTEXT_EXTRAS"], "name": "ADE_ContextExtras_ContextRef", "display_name": "Context Extras\u25c6ContextRef \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/context extras", "output_node": false}, "ADE_ContextExtras_ContextRef_ModeFirst": {"input": {"required": {}, "optional": {"autosize": ["ADEAUTOSIZE", {"padding": 25}]}}, "input_order": {"required": [], "optional": ["autosize"]}, "output": ["CONTEXTREF_MODE"], "output_is_list": [false], "output_name": ["CONTEXTREF_MODE"], "name": "ADE_ContextExtras_ContextRef_ModeFirst", "display_name": "ContextRef Mode\u25c6First \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/context extras/contextref", "output_node": false}, "ADE_ContextExtras_ContextRef_ModeSliding": {"input": {"required": {}, "optional": {"sliding_width": ["INT", {"default": 2, "min": 2, "max": 9007199254740991, "step": 1}], "autosize": ["ADEAUTOSIZE", {"padding": 42}]}}, "input_order": {"required": [], "optional": ["sliding_width", "autosize"]}, "output": ["CONTEXTREF_MODE"], "output_is_list": [false], "output_name": ["CONTEXTREF_MODE"], "name": "ADE_ContextExtras_ContextRef_ModeSliding", "display_name": "ContextRef Mode\u25c6Sliding \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/context extras/contextref", "output_node": false}, "ADE_ContextExtras_ContextRef_ModeIndexes": {"input": {"required": {}, "optional": {"switch_on_idxs": ["STRING", {"default": ""}], "always_include_0": ["BOOLEAN", {"default": true}], "autosize": ["ADEAUTOSIZE", {"padding": 50}]}}, "input_order": {"required": [], "optional": ["switch_on_idxs", "always_include_0", "autosize"]}, "output": ["CONTEXTREF_MODE"], "output_is_list": [false], "output_name": ["CONTEXTREF_MODE"], "name": "ADE_ContextExtras_ContextRef_ModeIndexes", "display_name": "ContextRef Mode\u25c6Indexes \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/context extras/contextref", "output_node": false}, "ADE_ContextExtras_ContextRef_TuneAttn": {"input": {"required": {}, "optional": {"attn_style_fidelity": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "attn_ref_weight": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "attn_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "autosize": ["ADEAUTOSIZE", {"padding": 15}]}}, "input_order": {"required": [], "optional": ["attn_style_fidelity", "attn_ref_weight", "attn_strength", "autosize"]}, "output": ["CONTEXTREF_TUNE"], "output_is_list": [false], "output_name": ["CONTEXTREF_TUNE"], "name": "ADE_ContextExtras_ContextRef_TuneAttn", "display_name": "ContextRef Tune\u25c6Attn \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/context extras/contextref", "output_node": false}, "ADE_ContextExtras_ContextRef_TuneAttnAdain": {"input": {"required": {}, "optional": {"attn_style_fidelity": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "attn_ref_weight": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "attn_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "adain_style_fidelity": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "adain_ref_weight": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "adain_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "autosize": ["ADEAUTOSIZE", {"padding": 65}]}}, "input_order": {"required": [], "optional": ["attn_style_fidelity", "attn_ref_weight", "attn_strength", "adain_style_fidelity", "adain_ref_weight", "adain_strength", "autosize"]}, "output": ["CONTEXTREF_TUNE"], "output_is_list": [false], "output_name": ["CONTEXTREF_TUNE"], "name": "ADE_ContextExtras_ContextRef_TuneAttnAdain", "display_name": "ContextRef Tune\u25c6Attn+Adain \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/context extras/contextref", "output_node": false}, "ADE_ContextExtras_ContextRef_Keyframe": {"input": {"required": {}, "optional": {"prev_kf": ["CONTEXTREF_KEYFRAME"], "mult_multival": ["MULTIVAL"], "mode_replace": ["CONTEXTREF_MODE"], "tune_replace": ["CONTEXTREF_TUNE"], "mult": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "guarantee_steps": ["INT", {"default": 1, "min": 0, "max": 9007199254740991}], "inherit_missing": ["BOOLEAN", {"default": true}], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": [], "optional": ["prev_kf", "mult_multival", "mode_replace", "tune_replace", "mult", "start_percent", "guarantee_steps", "inherit_missing", "autosize"]}, "output": ["CONTEXTREF_KEYFRAME"], "output_is_list": [false], "output_name": ["CONTEXTREF_KF"], "name": "ADE_ContextExtras_ContextRef_Keyframe", "display_name": "ContextRef Keyframe \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/context extras/contextref", "output_node": false}, "ADE_ContextExtras_ContextRef_KeyframeInterpolation": {"input": {"required": {"start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "mult_start": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "mult_end": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out"]], "intervals": ["INT", {"default": 50, "min": 2, "max": 100, "step": 1}], "inherit_missing": ["BOOLEAN", {"default": true}], "print_keyframes": ["BOOLEAN", {"default": false}]}, "optional": {"prev_kf": ["CONTEXTREF_KEYFRAME"], "mult_multival": ["MULTIVAL"], "mode_replace": ["CONTEXTREF_MODE"], "tune_replace": ["CONTEXTREF_TUNE"], "autosize": ["ADEAUTOSIZE", {"padding": 50}]}}, "input_order": {"required": ["start_percent", "end_percent", "mult_start", "mult_end", "interpolation", "intervals", "inherit_missing", "print_keyframes"], "optional": ["prev_kf", "mult_multival", "mode_replace", "tune_replace", "autosize"]}, "output": ["CONTEXTREF_KEYFRAME"], "output_is_list": [false], "output_name": ["CONTEXTREF_KF"], "name": "ADE_ContextExtras_ContextRef_KeyframeInterpolation", "display_name": "ContextRef Keyframes Interp. \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/context extras/contextref", "output_node": false}, "ADE_ContextExtras_ContextRef_KeyframeFromList": {"input": {"required": {"mults_float": ["FLOAT", {"default": -1, "min": -1, "step": 0.001, "forceInput": true}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "inherit_missing": ["BOOLEAN", {"default": true}], "print_keyframes": ["BOOLEAN", {"default": false}]}, "optional": {"prev_kf": ["CONTEXTREF_KEYFRAME"], "mult_multival": ["MULTIVAL"], "mode_replace": ["CONTEXTREF_MODE"], "tune_replace": ["CONTEXTREF_TUNE"], "autosize": ["ADEAUTOSIZE", {"padding": 50}]}}, "input_order": {"required": ["mults_float", "start_percent", "end_percent", "inherit_missing", "print_keyframes"], "optional": ["prev_kf", "mult_multival", "mode_replace", "tune_replace", "autosize"]}, "output": ["CONTEXTREF_KEYFRAME"], "output_is_list": [false], "output_name": ["CONTEXTREF_KF"], "name": "ADE_ContextExtras_ContextRef_KeyframeFromList", "display_name": "ContextRef Keyframes From List \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/context extras/contextref", "output_node": false}, "ADE_ContextExtras_NaiveReuse": {"input": {"required": {}, "optional": {"prev_extras": ["CONTEXT_EXTRAS"], "strength_multival": ["MULTIVAL"], "naivereuse_kf": ["NAIVEREUSE_KEYFRAME"], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 0.15, "min": 0.0, "max": 1.0, "step": 0.001}], "weighted_mean": ["FLOAT", {"default": 0.95, "min": 0.0, "max": 1.0, "step": 0.001}], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": [], "optional": ["prev_extras", "strength_multival", "naivereuse_kf", "start_percent", "end_percent", "weighted_mean", "autosize"]}, "output": ["CONTEXT_EXTRAS"], "output_is_list": [false], "output_name": ["CONTEXT_EXTRAS"], "name": "ADE_ContextExtras_NaiveReuse", "display_name": "Context Extras\u25c6NaiveReuse \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/context extras", "output_node": false}, "ADE_ContextExtras_NaiveReuse_Keyframe": {"input": {"required": {}, "optional": {"prev_kf": ["NAIVEREUSE_KEYFRAME"], "mult_multival": ["MULTIVAL"], "mult": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "guarantee_steps": ["INT", {"default": 1, "min": 0, "max": 9007199254740991}], "inherit_missing": ["BOOLEAN", {"default": true}], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": [], "optional": ["prev_kf", "mult_multival", "mult", "start_percent", "guarantee_steps", "inherit_missing", "autosize"]}, "output": ["NAIVEREUSE_KEYFRAME"], "output_is_list": [false], "output_name": ["NAIVEREUSE_KF"], "name": "ADE_ContextExtras_NaiveReuse_Keyframe", "display_name": "NaiveReuse Keyframe \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/context extras/naivereuse", "output_node": false}, "ADE_ContextExtras_NaiveReuse_KeyframeInterpolation": {"input": {"required": {"start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "mult_start": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "mult_end": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out"]], "intervals": ["INT", {"default": 50, "min": 2, "max": 100, "step": 1}], "inherit_missing": ["BOOLEAN", {"default": true}], "print_keyframes": ["BOOLEAN", {"default": false}]}, "optional": {"prev_kf": ["NAIVEREUSE_KEYFRAME"], "mult_multival": ["MULTIVAL"], "autosize": ["ADEAUTOSIZE", {"padding": 50}]}}, "input_order": {"required": ["start_percent", "end_percent", "mult_start", "mult_end", "interpolation", "intervals", "inherit_missing", "print_keyframes"], "optional": ["prev_kf", "mult_multival", "autosize"]}, "output": ["NAIVEREUSE_KEYFRAME"], "output_is_list": [false], "output_name": ["NAIVEREUSE_KF"], "name": "ADE_ContextExtras_NaiveReuse_KeyframeInterpolation", "display_name": "NaiveReuse Keyframes Interp. \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/context extras/naivereuse", "output_node": false}, "ADE_ContextExtras_NaiveReuse_KeyframeFromList": {"input": {"required": {"mults_float": ["FLOAT", {"default": -1, "min": -1, "step": 0.001, "forceInput": true}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "inherit_missing": ["BOOLEAN", {"default": true}], "print_keyframes": ["BOOLEAN", {"default": false}]}, "optional": {"prev_kf": ["NAIVEREUSE_KEYFRAME"], "mult_multival": ["MULTIVAL"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["mults_float", "start_percent", "end_percent", "inherit_missing", "print_keyframes"], "optional": ["prev_kf", "mult_multival", "autosize"]}, "output": ["NAIVEREUSE_KEYFRAME"], "output_is_list": [false], "output_name": ["NAIVEREUSE_KF"], "name": "ADE_ContextExtras_NaiveReuse_KeyframeFromList", "display_name": "NaiveReuse Keyframes From List \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/context extras/naivereuse", "output_node": false}, "ADE_IterationOptsDefault": {"input": {"required": {"iterations": ["INT", {"default": 1, "min": 1}]}, "optional": {"iter_batch_offset": ["INT", {"default": 0, "min": 0, "max": 9007199254740991}], "iter_seed_offset": ["INT", {"default": 0, "min": -9007199254740991, "max": 9007199254740991}]}}, "input_order": {"required": ["iterations"], "optional": ["iter_batch_offset", "iter_seed_offset"]}, "output": ["ITERATION_OPTS"], "output_is_list": [false], "output_name": ["ITERATION_OPTS"], "name": "ADE_IterationOptsDefault", "display_name": "Default Iteration Options \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/iteration opts", "output_node": false}, "ADE_IterationOptsFreeInit": {"input": {"required": {"iterations": ["INT", {"default": 2, "min": 1}], "filter": [["gaussian", "butterworth", "ideal", "box"]], "d_s": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.001}], "d_t": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.001}], "n_butterworth": ["INT", {"default": 4, "min": 1, "max": 100}], "sigma_step": ["INT", {"default": 999, "min": 1, "max": 999}], "apply_to_1st_iter": ["BOOLEAN", {"default": false}], "init_type": [["FreeInit [sampler sigma]", "FreeInit [model sigma]", "DinkInit_v1"]]}, "optional": {"iter_batch_offset": ["INT", {"default": 0, "min": 0, "max": 9007199254740991}], "iter_seed_offset": ["INT", {"default": 1, "min": -9007199254740991, "max": 9007199254740991}], "autosize": ["ADEAUTOSIZE", {"padding": 55}]}}, "input_order": {"required": ["iterations", "filter", "d_s", "d_t", "n_butterworth", "sigma_step", "apply_to_1st_iter", "init_type"], "optional": ["iter_batch_offset", "iter_seed_offset", "autosize"]}, "output": ["ITERATION_OPTS"], "output_is_list": [false], "output_name": ["ITERATION_OPTS"], "name": "ADE_IterationOptsFreeInit", "display_name": "FreeInit Iteration Options \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/iteration opts", "output_node": false}, "ADE_RegisterLoraHook": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "lora_name": [["AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}]}}, "input_order": {"required": ["model", "clip", "lora_name", "strength_model", "strength_clip"]}, "output": ["MODEL", "CLIP", "LORA_HOOK"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "LORA_HOOK"], "name": "ADE_RegisterLoraHook", "display_name": "Register LoRA Hook \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning/register lora hooks", "output_node": false}, "ADE_RegisterLoraHookModelOnly": {"input": {"required": {"model": ["MODEL"], "lora_name": [["AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}]}}, "input_order": {"required": ["model", "lora_name", "strength_model"]}, "output": ["MODEL", "LORA_HOOK"], "output_is_list": [false, false], "output_name": ["MODEL", "LORA_HOOK"], "name": "ADE_RegisterLoraHookModelOnly", "display_name": "Register LoRA Hook (Model Only) \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning/register lora hooks", "output_node": false}, "ADE_RegisterModelAsLoraHook": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}]}}, "input_order": {"required": ["model", "clip", "ckpt_name", "strength_model", "strength_clip"]}, "output": ["MODEL", "CLIP", "LORA_HOOK"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "LORA_HOOK"], "name": "ADE_RegisterModelAsLoraHook", "display_name": "Register Model as LoRA Hook \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning/register lora hooks", "output_node": false}, "ADE_RegisterModelAsLoraHookModelOnly": {"input": {"required": {"model": ["MODEL"], "ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}]}}, "input_order": {"required": ["model", "ckpt_name", "strength_model"]}, "output": ["MODEL", "LORA_HOOK"], "output_is_list": [false, false], "output_name": ["MODEL", "LORA_HOOK"], "name": "ADE_RegisterModelAsLoraHookModelOnly", "display_name": "Register Model as LoRA Hook (MO) \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning/register lora hooks", "output_node": false}, "ADE_CombineLoraHooks": {"input": {"required": {}, "optional": {"lora_hook_A": ["LORA_HOOK"], "lora_hook_B": ["LORA_HOOK"], "autosize": ["ADEAUTOSIZE", {"padding": 30}]}}, "input_order": {"required": [], "optional": ["lora_hook_A", "lora_hook_B", "autosize"]}, "output": ["LORA_HOOK"], "output_is_list": [false], "output_name": ["LORA_HOOK"], "name": "ADE_CombineLoraHooks", "display_name": "Combine LoRA Hooks [2] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning/combine lora hooks", "output_node": false}, "ADE_CombineLoraHooksFour": {"input": {"required": {}, "optional": {"lora_hook_A": ["LORA_HOOK"], "lora_hook_B": ["LORA_HOOK"], "lora_hook_C": ["LORA_HOOK"], "lora_hook_D": ["LORA_HOOK"], "autosize": ["ADEAUTOSIZE", {"padding": 30}]}}, "input_order": {"required": [], "optional": ["lora_hook_A", "lora_hook_B", "lora_hook_C", "lora_hook_D", "autosize"]}, "output": ["LORA_HOOK"], "output_is_list": [false], "output_name": ["LORA_HOOK"], "name": "ADE_CombineLoraHooksFour", "display_name": "Combine LoRA Hooks [4] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning/combine lora hooks", "output_node": false}, "ADE_CombineLoraHooksEight": {"input": {"required": {}, "optional": {"lora_hook_A": ["LORA_HOOK"], "lora_hook_B": ["LORA_HOOK"], "lora_hook_C": ["LORA_HOOK"], "lora_hook_D": ["LORA_HOOK"], "lora_hook_E": ["LORA_HOOK"], "lora_hook_F": ["LORA_HOOK"], "lora_hook_G": ["LORA_HOOK"], "lora_hook_H": ["LORA_HOOK"], "autosize": ["ADEAUTOSIZE", {"padding": 30}]}}, "input_order": {"required": [], "optional": ["lora_hook_A", "lora_hook_B", "lora_hook_C", "lora_hook_D", "lora_hook_E", "lora_hook_F", "lora_hook_G", "lora_hook_H", "autosize"]}, "output": ["LORA_HOOK"], "output_is_list": [false], "output_name": ["LORA_HOOK"], "name": "ADE_CombineLoraHooksEight", "display_name": "Combine LoRA Hooks [8] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning/combine lora hooks", "output_node": false}, "ADE_SetLoraHookKeyframe": {"input": {"required": {"lora_hook": ["LORA_HOOK"], "hook_kf": ["LORA_HOOK_KEYFRAMES"]}, "optional": {"autosize": ["ADEAUTOSIZE", {"padding": 40}]}}, "input_order": {"required": ["lora_hook", "hook_kf"], "optional": ["autosize"]}, "output": ["LORA_HOOK"], "output_is_list": [false], "output_name": ["LORA_HOOK"], "name": "ADE_SetLoraHookKeyframe", "display_name": "Set LoRA Hook Keyframes \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning", "output_node": false}, "ADE_AttachLoraHookToCLIP": {"input": {"required": {"clip": ["CLIP"], "lora_hook": ["LORA_HOOK"]}, "optional": {"autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["clip", "lora_hook"], "optional": ["autosize"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["hook_CLIP"], "name": "ADE_AttachLoraHookToCLIP", "display_name": "Set CLIP LoRA Hook \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning", "output_node": false}, "ADE_LoraHookKeyframe": {"input": {"required": {"strength_model": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "guarantee_steps": ["INT", {"default": 1, "min": 0, "max": 9007199254740991}]}, "optional": {"prev_hook_kf": ["LORA_HOOK_KEYFRAMES"], "autosize": ["ADEAUTOSIZE", {"padding": 5}]}}, "input_order": {"required": ["strength_model", "start_percent", "guarantee_steps"], "optional": ["prev_hook_kf", "autosize"]}, "output": ["LORA_HOOK_KEYFRAMES"], "output_is_list": [false], "output_name": ["HOOK_KF"], "name": "ADE_LoraHookKeyframe", "display_name": "LoRA Hook Keyframe \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning/schedule lora hooks", "output_node": false}, "ADE_LoraHookKeyframeInterpolation": {"input": {"required": {"start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "strength_start": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "strength_end": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out"]], "intervals": ["INT", {"default": 5, "min": 2, "max": 100, "step": 1}], "print_keyframes": ["BOOLEAN", {"default": false}]}, "optional": {"prev_hook_kf": ["LORA_HOOK_KEYFRAMES"], "autosize": ["ADEAUTOSIZE", {"padding": 70}]}}, "input_order": {"required": ["start_percent", "end_percent", "strength_start", "strength_end", "interpolation", "intervals", "print_keyframes"], "optional": ["prev_hook_kf", "autosize"]}, "output": ["LORA_HOOK_KEYFRAMES"], "output_is_list": [false], "output_name": ["HOOK_KF"], "name": "ADE_LoraHookKeyframeInterpolation", "display_name": "LoRA Hook Keyframes Interp. \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning/schedule lora hooks", "output_node": false}, "ADE_LoraHookKeyframeFromStrengthList": {"input": {"required": {"strengths_float": ["FLOAT", {"default": -1, "min": -1, "step": 0.001, "forceInput": true}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "print_keyframes": ["BOOLEAN", {"default": false}]}, "optional": {"prev_hook_kf": ["LORA_HOOK_KEYFRAMES"]}}, "input_order": {"required": ["strengths_float", "start_percent", "end_percent", "print_keyframes"], "optional": ["prev_hook_kf"]}, "output": ["LORA_HOOK_KEYFRAMES"], "output_is_list": [false], "output_name": ["HOOK_KF"], "name": "ADE_LoraHookKeyframeFromStrengthList", "display_name": "LoRA Hook Keyframes From List \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning/schedule lora hooks", "output_node": false}, "ADE_AttachLoraHookToConditioning": {"input": {"required": {"conditioning": ["CONDITIONING"], "lora_hook": ["LORA_HOOK"]}, "optional": {"autosize": ["ADEAUTOSIZE", {"padding": 5}]}}, "input_order": {"required": ["conditioning", "lora_hook"], "optional": ["autosize"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ADE_AttachLoraHookToConditioning", "display_name": "Set Model LoRA Hook \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning/single cond ops", "output_node": false}, "ADE_PairedConditioningSetMask": {"input": {"required": {"positive_ADD": ["CONDITIONING"], "negative_ADD": ["CONDITIONING"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}, "optional": {"opt_mask": ["MASK"], "opt_lora_hook": ["LORA_HOOK"], "opt_timesteps": ["TIMESTEPS_COND"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["positive_ADD", "negative_ADD", "strength", "set_cond_area"], "optional": ["opt_mask", "opt_lora_hook", "opt_timesteps", "autosize"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "ADE_PairedConditioningSetMask", "display_name": "Set Props on Conds \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning", "output_node": false}, "ADE_ConditioningSetMask": {"input": {"required": {"cond_ADD": ["CONDITIONING"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}, "optional": {"opt_mask": ["MASK"], "opt_lora_hook": ["LORA_HOOK"], "opt_timesteps": ["TIMESTEPS_COND"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["cond_ADD", "strength", "set_cond_area"], "optional": ["opt_mask", "opt_lora_hook", "opt_timesteps", "autosize"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ADE_ConditioningSetMask", "display_name": "Set Props on Cond \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning/single cond ops", "output_node": false}, "ADE_PairedConditioningSetMaskAndCombine": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "positive_ADD": ["CONDITIONING"], "negative_ADD": ["CONDITIONING"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}, "optional": {"opt_mask": ["MASK"], "opt_lora_hook": ["LORA_HOOK"], "opt_timesteps": ["TIMESTEPS_COND"], "autosize": ["ADEAUTOSIZE", {"padding": 70}]}}, "input_order": {"required": ["positive", "negative", "positive_ADD", "negative_ADD", "strength", "set_cond_area"], "optional": ["opt_mask", "opt_lora_hook", "opt_timesteps", "autosize"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "ADE_PairedConditioningSetMaskAndCombine", "display_name": "Set Props and Combine Conds \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning", "output_node": false}, "ADE_ConditioningSetMaskAndCombine": {"input": {"required": {"cond": ["CONDITIONING"], "cond_ADD": ["CONDITIONING"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}, "optional": {"opt_mask": ["MASK"], "opt_lora_hook": ["LORA_HOOK"], "opt_timesteps": ["TIMESTEPS_COND"], "autosize": ["ADEAUTOSIZE", {"padding": 55}]}}, "input_order": {"required": ["cond", "cond_ADD", "strength", "set_cond_area"], "optional": ["opt_mask", "opt_lora_hook", "opt_timesteps", "autosize"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ADE_ConditioningSetMaskAndCombine", "display_name": "Set Props and Combine Cond \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning/single cond ops", "output_node": false}, "ADE_PairedConditioningSetUnmaskedAndCombine": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "positive_DEFAULT": ["CONDITIONING"], "negative_DEFAULT": ["CONDITIONING"]}, "optional": {"opt_lora_hook": ["LORA_HOOK"], "autosize": ["ADEAUTOSIZE", {"padding": 10}]}}, "input_order": {"required": ["positive", "negative", "positive_DEFAULT", "negative_DEFAULT"], "optional": ["opt_lora_hook", "autosize"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "ADE_PairedConditioningSetUnmaskedAndCombine", "display_name": "Set Unmasked Conds \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning", "output_node": false}, "ADE_ConditioningSetUnmaskedAndCombine": {"input": {"required": {"cond": ["CONDITIONING"], "cond_DEFAULT": ["CONDITIONING"]}, "optional": {"opt_lora_hook": ["LORA_HOOK"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["cond", "cond_DEFAULT"], "optional": ["opt_lora_hook", "autosize"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ADE_ConditioningSetUnmaskedAndCombine", "display_name": "Set Unmasked Cond \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning/single cond ops", "output_node": false}, "ADE_PairedConditioningCombine": {"input": {"required": {"positive_A": ["CONDITIONING"], "negative_A": ["CONDITIONING"], "positive_B": ["CONDITIONING"], "negative_B": ["CONDITIONING"]}}, "input_order": {"required": ["positive_A", "negative_A", "positive_B", "negative_B"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "ADE_PairedConditioningCombine", "display_name": "Manual Combine Conds \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning", "output_node": false}, "ADE_ConditioningCombine": {"input": {"required": {"cond_A": ["CONDITIONING"], "cond_B": ["CONDITIONING"]}}, "input_order": {"required": ["cond_A", "cond_B"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ADE_ConditioningCombine", "display_name": "Manual Combine Cond \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning/single cond ops", "output_node": false}, "ADE_TimestepsConditioning": {"input": {"required": {"start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"autosize": ["ADEAUTOSIZE", {"padding": 25}]}}, "input_order": {"required": ["start_percent", "end_percent"], "optional": ["autosize"]}, "output": ["TIMESTEPS_COND"], "output_is_list": [false], "output_name": ["TIMESTEPS_COND"], "name": "ADE_TimestepsConditioning", "display_name": "Timesteps Conditioning \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/conditioning", "output_node": false}, "ADE_NoiseLayerAdd": {"input": {"required": {"batch_offset": ["INT", {"default": 0, "min": 0, "max": 9007199254740991}], "noise_type": [["default", "constant", "empty", "repeated_context", "FreeNoise"]], "seed_gen_override": [["use existing", "comfy", "comfy [gpu]", "auto1111", "auto1111 [gpu]"]], "seed_offset": ["INT", {"default": 0, "min": -9007199254740991, "max": 9007199254740991}], "noise_weight": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 10.0, "step": 0.001}]}, "optional": {"prev_noise_layers": ["NOISE_LAYERS"], "mask_optional": ["MASK"], "seed_override": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "forceInput": true}], "autosize": ["ADEAUTOSIZE", {"padding": 20}]}}, "input_order": {"required": ["batch_offset", "noise_type", "seed_gen_override", "seed_offset", "noise_weight"], "optional": ["prev_noise_layers", "mask_optional", "seed_override", "autosize"]}, "output": ["NOISE_LAYERS"], "output_is_list": [false], "output_name": ["NOISE_LAYERS"], "name": "ADE_NoiseLayerAdd", "display_name": "Noise Layer [Add] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/noise layers", "output_node": false}, "ADE_NoiseLayerAddWeighted": {"input": {"required": {"batch_offset": ["INT", {"default": 0, "min": 0, "max": 9007199254740991}], "noise_type": [["default", "constant", "empty", "repeated_context", "FreeNoise"]], "seed_gen_override": [["use existing", "comfy", "comfy [gpu]", "auto1111", "auto1111 [gpu]"]], "seed_offset": ["INT", {"default": 0, "min": -9007199254740991, "max": 9007199254740991}], "noise_weight": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 10.0, "step": 0.001}], "balance_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "step": 0.001}]}, "optional": {"prev_noise_layers": ["NOISE_LAYERS"], "mask_optional": ["MASK"], "seed_override": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "forceInput": true}], "autosize": ["ADEAUTOSIZE", {"padding": 10}]}}, "input_order": {"required": ["batch_offset", "noise_type", "seed_gen_override", "seed_offset", "noise_weight", "balance_multiplier"], "optional": ["prev_noise_layers", "mask_optional", "seed_override", "autosize"]}, "output": ["NOISE_LAYERS"], "output_is_list": [false], "output_name": ["NOISE_LAYERS"], "name": "ADE_NoiseLayerAddWeighted", "display_name": "Noise Layer [Add Weighted] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/noise layers", "output_node": false}, "ADE_NoiseLayerReplace": {"input": {"required": {"batch_offset": ["INT", {"default": 0, "min": 0, "max": 9007199254740991}], "noise_type": [["default", "constant", "empty", "repeated_context", "FreeNoise"]], "seed_gen_override": [["use existing", "comfy", "comfy [gpu]", "auto1111", "auto1111 [gpu]"]], "seed_offset": ["INT", {"default": 0, "min": -9007199254740991, "max": 9007199254740991}]}, "optional": {"prev_noise_layers": ["NOISE_LAYERS"], "mask_optional": ["MASK"], "seed_override": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "forceInput": true}], "autosize": ["ADEAUTOSIZE", {"padding": 20}]}}, "input_order": {"required": ["batch_offset", "noise_type", "seed_gen_override", "seed_offset"], "optional": ["prev_noise_layers", "mask_optional", "seed_override", "autosize"]}, "output": ["NOISE_LAYERS"], "output_is_list": [false], "output_name": ["NOISE_LAYERS"], "name": "ADE_NoiseLayerReplace", "display_name": "Noise Layer [Replace] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/noise layers", "output_node": false}, "ADE_AnimateDiffSettings": {"input": {"optional": {"pe_adjust": ["PE_ADJUST"], "weight_adjust": ["WEIGHT_ADJUST"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"optional": ["pe_adjust", "weight_adjust", "autosize"]}, "output": ["AD_SETTINGS"], "output_is_list": [false], "output_name": ["AD_SETTINGS"], "name": "ADE_AnimateDiffSettings", "display_name": "AnimateDiff Settings \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings", "output_node": false}, "ADE_AdjustPESweetspotStretch": {"input": {"required": {"sweetspot": ["INT", {"default": 16, "min": 0, "max": 9007199254740991}], "new_sweetspot": ["INT", {"default": 16, "min": 0, "max": 9007199254740991}], "print_adjustment": ["BOOLEAN", {"default": false}]}, "optional": {"prev_pe_adjust": ["PE_ADJUST"], "autosize": ["ADEAUTOSIZE", {"padding": 20}]}}, "input_order": {"required": ["sweetspot", "new_sweetspot", "print_adjustment"], "optional": ["prev_pe_adjust", "autosize"]}, "output": ["PE_ADJUST"], "output_is_list": [false], "output_name": ["PE_ADJUST"], "name": "ADE_AdjustPESweetspotStretch", "display_name": "Adjust PE [Sweetspot] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/pe adjust", "output_node": false}, "ADE_AdjustPEFullStretch": {"input": {"required": {"pe_stretch": ["INT", {"default": 0, "min": 0, "max": 9007199254740991}], "print_adjustment": ["BOOLEAN", {"default": false}]}, "optional": {"prev_pe_adjust": ["PE_ADJUST"], "autosize": ["ADEAUTOSIZE", {"padding": 30}]}}, "input_order": {"required": ["pe_stretch", "print_adjustment"], "optional": ["prev_pe_adjust", "autosize"]}, "output": ["PE_ADJUST"], "output_is_list": [false], "output_name": ["PE_ADJUST"], "name": "ADE_AdjustPEFullStretch", "display_name": "Adjust PE [Full Stretch] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/pe adjust", "output_node": false}, "ADE_AdjustPEManual": {"input": {"required": {"cap_initial_pe_length": ["INT", {"default": 0, "min": 0, "step": 1}], "interpolate_pe_to_length": ["INT", {"default": 0, "min": 0, "step": 1}], "initial_pe_idx_offset": ["INT", {"default": 0, "min": 0, "step": 1}], "final_pe_idx_offset": ["INT", {"default": 0, "min": 0, "step": 1}], "print_adjustment": ["BOOLEAN", {"default": false}]}, "optional": {"prev_pe_adjust": ["PE_ADJUST"], "autosize": ["ADEAUTOSIZE", {"padding": 30}]}}, "input_order": {"required": ["cap_initial_pe_length", "interpolate_pe_to_length", "initial_pe_idx_offset", "final_pe_idx_offset", "print_adjustment"], "optional": ["prev_pe_adjust", "autosize"]}, "output": ["PE_ADJUST"], "output_is_list": [false], "output_name": ["PE_ADJUST"], "name": "ADE_AdjustPEManual", "display_name": "Adjust PE [Manual] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/pe adjust", "output_node": false}, "ADE_AdjustWeightAllAdd": {"input": {"required": {"all_ADD": ["FLOAT", {"default": 0.0, "min": -2.0, "max": 2.0, "step": 1e-06}], "print_adjustment": ["BOOLEAN", {"default": false}]}, "optional": {"prev_weight_adjust": ["WEIGHT_ADJUST"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["all_ADD", "print_adjustment"], "optional": ["prev_weight_adjust", "autosize"]}, "output": ["WEIGHT_ADJUST"], "output_is_list": [false], "output_name": ["WEIGHT_ADJUST"], "name": "ADE_AdjustWeightAllAdd", "display_name": "Adjust Weight [All\u25c6Add] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/weight adjust", "output_node": false}, "ADE_AdjustWeightAllMult": {"input": {"required": {"all_MULT": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 1e-06}], "print_adjustment": ["BOOLEAN", {"default": false}]}, "optional": {"prev_weight_adjust": ["WEIGHT_ADJUST"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["all_MULT", "print_adjustment"], "optional": ["prev_weight_adjust", "autosize"]}, "output": ["WEIGHT_ADJUST"], "output_is_list": [false], "output_name": ["WEIGHT_ADJUST"], "name": "ADE_AdjustWeightAllMult", "display_name": "Adjust Weight [All\u25c6Mult] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/weight adjust", "output_node": false}, "ADE_AdjustWeightIndivAdd": {"input": {"required": {"pe_ADD": ["FLOAT", {"default": 0.0, "min": -2.0, "max": 2.0, "step": 1e-06}], "attn_ADD": ["FLOAT", {"default": 0.0, "min": -2.0, "max": 2.0, "step": 1e-06}], "other_ADD": ["FLOAT", {"default": 0.0, "min": -2.0, "max": 2.0, "step": 1e-06}], "print_adjustment": ["BOOLEAN", {"default": false}]}, "optional": {"prev_weight_adjust": ["WEIGHT_ADJUST"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["pe_ADD", "attn_ADD", "other_ADD", "print_adjustment"], "optional": ["prev_weight_adjust", "autosize"]}, "output": ["WEIGHT_ADJUST"], "output_is_list": [false], "output_name": ["WEIGHT_ADJUST"], "name": "ADE_AdjustWeightIndivAdd", "display_name": "Adjust Weight [Indiv\u25c6Add] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/weight adjust", "output_node": false}, "ADE_AdjustWeightIndivMult": {"input": {"required": {"pe_MULT": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 1e-06}], "attn_MULT": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 1e-06}], "other_MULT": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 1e-06}], "print_adjustment": ["BOOLEAN", {"default": false}]}, "optional": {"prev_weight_adjust": ["WEIGHT_ADJUST"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["pe_MULT", "attn_MULT", "other_MULT", "print_adjustment"], "optional": ["prev_weight_adjust", "autosize"]}, "output": ["WEIGHT_ADJUST"], "output_is_list": [false], "output_name": ["WEIGHT_ADJUST"], "name": "ADE_AdjustWeightIndivMult", "display_name": "Adjust Weight [Indiv\u25c6Mult] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/weight adjust", "output_node": false}, "ADE_AdjustWeightIndivAttnAdd": {"input": {"required": {"pe_ADD": ["FLOAT", {"default": 0.0, "min": -2.0, "max": 2.0, "step": 1e-06}], "attn_ADD": ["FLOAT", {"default": 0.0, "min": -2.0, "max": 2.0, "step": 1e-06}], "attn_q_ADD": ["FLOAT", {"default": 0.0, "min": -2.0, "max": 2.0, "step": 1e-06}], "attn_k_ADD": ["FLOAT", {"default": 0.0, "min": -2.0, "max": 2.0, "step": 1e-06}], "attn_v_ADD": ["FLOAT", {"default": 0.0, "min": -2.0, "max": 2.0, "step": 1e-06}], "attn_out_weight_ADD": ["FLOAT", {"default": 0.0, "min": -2.0, "max": 2.0, "step": 1e-06}], "attn_out_bias_ADD": ["FLOAT", {"default": 0.0, "min": -2.0, "max": 2.0, "step": 1e-06}], "other_ADD": ["FLOAT", {"default": 0.0, "min": -2.0, "max": 2.0, "step": 1e-06}], "print_adjustment": ["BOOLEAN", {"default": false}]}, "optional": {"prev_weight_adjust": ["WEIGHT_ADJUST"], "autosize": ["ADEAUTOSIZE", {"padding": 20}]}}, "input_order": {"required": ["pe_ADD", "attn_ADD", "attn_q_ADD", "attn_k_ADD", "attn_v_ADD", "attn_out_weight_ADD", "attn_out_bias_ADD", "other_ADD", "print_adjustment"], "optional": ["prev_weight_adjust", "autosize"]}, "output": ["WEIGHT_ADJUST"], "output_is_list": [false], "output_name": ["WEIGHT_ADJUST"], "name": "ADE_AdjustWeightIndivAttnAdd", "display_name": "Adjust Weight [Indiv-Attn\u25c6Add] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/weight adjust", "output_node": false}, "ADE_AdjustWeightIndivAttnMult": {"input": {"required": {"pe_MULT": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 1e-06}], "attn_MULT": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 1e-06}], "attn_q_MULT": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 1e-06}], "attn_k_MULT": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 1e-06}], "attn_v_MULT": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 1e-06}], "attn_out_weight_MULT": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 1e-06}], "attn_out_bias_MULT": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 1e-06}], "other_MULT": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 1e-06}], "print_adjustment": ["BOOLEAN", {"default": false}]}, "optional": {"prev_weight_adjust": ["WEIGHT_ADJUST"], "autosize": ["ADEAUTOSIZE", {"padding": 20}]}}, "input_order": {"required": ["pe_MULT", "attn_MULT", "attn_q_MULT", "attn_k_MULT", "attn_v_MULT", "attn_out_weight_MULT", "attn_out_bias_MULT", "other_MULT", "print_adjustment"], "optional": ["prev_weight_adjust", "autosize"]}, "output": ["WEIGHT_ADJUST"], "output_is_list": [false], "output_name": ["WEIGHT_ADJUST"], "name": "ADE_AdjustWeightIndivAttnMult", "display_name": "Adjust Weight [Indiv-Attn\u25c6Mult] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/weight adjust", "output_node": false}, "ADE_CustomCFGSimple": {"input": {"required": {"cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1}]}, "optional": {"cfg_extras": ["CFG_EXTRAS"], "autosize": ["ADEAUTOSIZE", {"padding": 10}]}}, "input_order": {"required": ["cfg"], "optional": ["cfg_extras", "autosize"]}, "output": ["CUSTOM_CFG"], "output_is_list": [false], "output_name": ["CUSTOM_CFG"], "name": "ADE_CustomCFGSimple", "display_name": "Custom CFG \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/custom cfg", "output_node": false}, "ADE_CustomCFG": {"input": {"required": {"cfg_multival": ["MULTIVAL"]}, "optional": {"cfg_extras": ["CFG_EXTRAS"], "autosize": ["ADEAUTOSIZE", {"padding": 20}]}}, "input_order": {"required": ["cfg_multival"], "optional": ["cfg_extras", "autosize"]}, "output": ["CUSTOM_CFG"], "output_is_list": [false], "output_name": ["CUSTOM_CFG"], "name": "ADE_CustomCFG", "display_name": "Custom CFG [Multival] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/custom cfg", "output_node": false}, "ADE_CustomCFGKeyframeSimple": {"input": {"required": {"cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "guarantee_steps": ["INT", {"default": 1, "min": 0, "max": 9007199254740991}]}, "optional": {"prev_custom_cfg": ["CUSTOM_CFG"], "cfg_extras": ["CFG_EXTRAS"], "autosize": ["ADEAUTOSIZE", {"padding": 10}]}}, "input_order": {"required": ["cfg", "start_percent", "guarantee_steps"], "optional": ["prev_custom_cfg", "cfg_extras", "autosize"]}, "output": ["CUSTOM_CFG"], "output_is_list": [false], "output_name": ["CUSTOM_CFG"], "name": "ADE_CustomCFGKeyframeSimple", "display_name": "Custom CFG Keyframe \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/custom cfg", "output_node": false}, "ADE_CustomCFGKeyframe": {"input": {"required": {"cfg_multival": ["MULTIVAL"], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "guarantee_steps": ["INT", {"default": 1, "min": 0, "max": 9007199254740991}]}, "optional": {"prev_custom_cfg": ["CUSTOM_CFG"], "cfg_extras": ["CFG_EXTRAS"], "autosize": ["ADEAUTOSIZE", {"padding": 80}]}}, "input_order": {"required": ["cfg_multival", "start_percent", "guarantee_steps"], "optional": ["prev_custom_cfg", "cfg_extras", "autosize"]}, "output": ["CUSTOM_CFG"], "output_is_list": [false], "output_name": ["CUSTOM_CFG"], "name": "ADE_CustomCFGKeyframe", "display_name": "Custom CFG Keyframe [Multival] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/custom cfg", "output_node": false}, "ADE_CustomCFGKeyframeInterpolation": {"input": {"required": {"start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "cfg_start": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1}], "cfg_end": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1}], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out"]], "intervals": ["INT", {"default": 50, "min": 2, "max": 100, "step": 1}], "print_keyframes": ["BOOLEAN", {"default": false}]}, "optional": {"prev_custom_cfg": ["CUSTOM_CFG"], "cfg_extras": ["CFG_EXTRAS"], "autosize": ["ADEAUTOSIZE", {"padding": 70}]}}, "input_order": {"required": ["start_percent", "end_percent", "cfg_start", "cfg_end", "interpolation", "intervals", "print_keyframes"], "optional": ["prev_custom_cfg", "cfg_extras", "autosize"]}, "output": ["CUSTOM_CFG"], "output_is_list": [false], "output_name": ["CUSTOM_CFG"], "name": "ADE_CustomCFGKeyframeInterpolation", "display_name": "Custom CFG Keyframes Interp. \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/custom cfg", "output_node": false}, "ADE_CustomCFGKeyframeFromList": {"input": {"required": {"cfgs_float": ["FLOAT", {"default": -1, "min": -1, "step": 0.001, "forceInput": true}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "print_keyframes": ["BOOLEAN", {"default": false}]}, "optional": {"prev_custom_cfg": ["CUSTOM_CFG"], "cfg_extras": ["CFG_EXTRAS"]}}, "input_order": {"required": ["cfgs_float", "start_percent", "end_percent", "print_keyframes"], "optional": ["prev_custom_cfg", "cfg_extras"]}, "output": ["CUSTOM_CFG"], "output_is_list": [false], "output_name": ["CUSTOM_CFG"], "name": "ADE_CustomCFGKeyframeFromList", "display_name": "Custom CFG Keyframes From List \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/custom cfg", "output_node": false}, "ADE_CFGExtrasPAGSimple": {"input": {"required": {"scale": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}]}, "optional": {"prev_extras": ["CFG_EXTRAS"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["scale"], "optional": ["prev_extras", "autosize"]}, "output": ["CFG_EXTRAS"], "output_is_list": [false], "output_name": ["CFG_EXTRAS"], "name": "ADE_CFGExtrasPAGSimple", "display_name": "CFG Extras\u25c6PAG \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/cfg extras", "output_node": false}, "ADE_CFGExtrasPAG": {"input": {"required": {"scale_multival": ["MULTIVAL"]}, "optional": {"prev_extras": ["CFG_EXTRAS"], "autosize": ["ADEAUTOSIZE", {"padding": 45}]}}, "input_order": {"required": ["scale_multival"], "optional": ["prev_extras", "autosize"]}, "output": ["CFG_EXTRAS"], "output_is_list": [false], "output_name": ["CFG_EXTRAS"], "name": "ADE_CFGExtrasPAG", "display_name": "CFG Extras\u25c6PAG [Multival] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/cfg extras", "output_node": false}, "ADE_CFGExtrasRescaleCFGSimple": {"input": {"required": {"multiplier": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"prev_extras": ["CFG_EXTRAS"], "autosize": ["ADEAUTOSIZE", {"padding": 45}]}}, "input_order": {"required": ["multiplier"], "optional": ["prev_extras", "autosize"]}, "output": ["CFG_EXTRAS"], "output_is_list": [false], "output_name": ["CFG_EXTRAS"], "name": "ADE_CFGExtrasRescaleCFGSimple", "display_name": "CFG Extras\u25c6RescaleCFG \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/cfg extras", "output_node": false}, "ADE_CFGExtrasRescaleCFG": {"input": {"required": {"mult_multival": ["MULTIVAL"]}, "optional": {"prev_extras": ["CFG_EXTRAS"]}}, "input_order": {"required": ["mult_multival"], "optional": ["prev_extras"]}, "output": ["CFG_EXTRAS"], "output_is_list": [false], "output_name": ["CFG_EXTRAS"], "name": "ADE_CFGExtrasRescaleCFG", "display_name": "CFG Extras\u25c6RescaleCFG [Multival] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/cfg extras", "output_node": false}, "ADE_SigmaSchedule": {"input": {"required": {"beta_schedule": [["sqrt_linear (AnimateDiff)", "linear (AnimateDiff-SDXL)", "linear (HotshotXL/default)", "avg(sqrt_linear,linear)", "lcm avg(sqrt_linear,linear)", "lcm", "lcm[100_ots]", "lcm >> sqrt_linear", "sqrt", "cosine", "squaredcos_cap_v2"]]}}, "input_order": {"required": ["beta_schedule"]}, "output": ["SIGMA_SCHEDULE"], "output_is_list": [false], "output_name": ["SIGMA_SCHEDULE"], "name": "ADE_SigmaSchedule", "display_name": "Create Sigma Schedule \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/sigma schedule", "output_node": false}, "ADE_RawSigmaSchedule": {"input": {"required": {"raw_beta_schedule": [["linear", "sqrt_linear", "sqrt", "cosine", "squaredcos_cap_v2"]], "linear_start": ["FLOAT", {"default": 0.00085, "min": 0.0, "max": 1.0, "step": 1e-06}], "linear_end": ["FLOAT", {"default": 0.012, "min": 0.0, "max": 1.0, "step": 1e-06}], "sampling": [["eps", "v_prediction", "lcm"]], "lcm_original_timesteps": ["INT", {"default": 50, "min": 1, "max": 1000}], "lcm_zsnr": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["raw_beta_schedule", "linear_start", "linear_end", "sampling", "lcm_original_timesteps", "lcm_zsnr"]}, "output": ["SIGMA_SCHEDULE"], "output_is_list": [false], "output_name": ["SIGMA_SCHEDULE"], "name": "ADE_RawSigmaSchedule", "display_name": "Create Raw Sigma Schedule \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/sigma schedule", "output_node": false}, "ADE_SigmaScheduleWeightedAverage": {"input": {"required": {"schedule_A": ["SIGMA_SCHEDULE"], "schedule_B": ["SIGMA_SCHEDULE"], "weight_A": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"autosize": ["ADEAUTOSIZE", {"padding": 80}]}}, "input_order": {"required": ["schedule_A", "schedule_B", "weight_A"], "optional": ["autosize"]}, "output": ["SIGMA_SCHEDULE"], "output_is_list": [false], "output_name": ["SIGMA_SCHEDULE"], "name": "ADE_SigmaScheduleWeightedAverage", "display_name": "Sigma Schedule Weighted Mean \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/sigma schedule", "output_node": false}, "ADE_SigmaScheduleWeightedAverageInterp": {"input": {"required": {"schedule_A": ["SIGMA_SCHEDULE"], "schedule_B": ["SIGMA_SCHEDULE"], "weight_A_Start": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.001}], "weight_A_End": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.001}], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out"]]}, "optional": {"autosize": ["ADEAUTOSIZE", {"padding": 70}]}}, "input_order": {"required": ["schedule_A", "schedule_B", "weight_A_Start", "weight_A_End", "interpolation"], "optional": ["autosize"]}, "output": ["SIGMA_SCHEDULE"], "output_is_list": [false], "output_name": ["SIGMA_SCHEDULE"], "name": "ADE_SigmaScheduleWeightedAverageInterp", "display_name": "Sigma Schedule Interp. Mean \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/sigma schedule", "output_node": false}, "ADE_SigmaScheduleSplitAndCombine": {"input": {"required": {"schedule_Start": ["SIGMA_SCHEDULE"], "schedule_End": ["SIGMA_SCHEDULE"], "idx_split_percent": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"autosize": ["ADEAUTOSIZE", {"padding": 40}]}}, "input_order": {"required": ["schedule_Start", "schedule_End", "idx_split_percent"], "optional": ["autosize"]}, "output": ["SIGMA_SCHEDULE"], "output_is_list": [false], "output_name": ["SIGMA_SCHEDULE"], "name": "ADE_SigmaScheduleSplitAndCombine", "display_name": "Sigma Schedule Split Combine \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/sigma schedule", "output_node": false}, "ADE_SigmaScheduleToSigmas": {"input": {"required": {"sigma_schedule": ["SIGMA_SCHEDULE"], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"autosize": ["ADEAUTOSIZE", {"padding": 50}]}}, "input_order": {"required": ["sigma_schedule", "scheduler", "steps", "denoise"], "optional": ["autosize"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "ADE_SigmaScheduleToSigmas", "display_name": "Sigma Schedule To Sigmas \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/sigma schedule", "output_node": false}, "ADE_NoisedImageInjection": {"input": {"required": {"image": ["IMAGE"], "vae": ["VAE"]}, "optional": {"mask_opt": ["MASK"], "invert_mask": ["BOOLEAN", {"default": false}], "resize_image": ["BOOLEAN", {"default": true}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "guarantee_steps": ["INT", {"default": 1, "min": 1, "max": 9007199254740991}], "img_inject_opts": ["IMAGE_INJECT_OPTIONS"], "strength_multival": ["MULTIVAL"], "prev_image_inject": ["IMAGE_INJECT"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["image", "vae"], "optional": ["mask_opt", "invert_mask", "resize_image", "start_percent", "guarantee_steps", "img_inject_opts", "strength_multival", "prev_image_inject", "autosize"]}, "output": ["IMAGE_INJECT"], "output_is_list": [false], "output_name": ["IMAGE_INJECT"], "name": "ADE_NoisedImageInjection", "display_name": "Image Injection \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/image inject", "output_node": false}, "ADE_NoisedImageInjectOptions": {"input": {"required": {}, "optional": {"composite_x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "composite_y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "autosize": ["ADEAUTOSIZE", {"padding": 30}]}}, "input_order": {"required": [], "optional": ["composite_x", "composite_y", "autosize"]}, "output": ["IMAGE_INJECT_OPTIONS"], "output_is_list": [false], "output_name": ["IMG_INJECT_OPTS"], "name": "ADE_NoisedImageInjectOptions", "display_name": "Image Injection Options \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/image inject", "output_node": false}, "ADE_PromptScheduling": {"input": {"required": {"prompts": ["STRING", {"multiline": true, "default": ""}], "clip": ["CLIP"]}, "optional": {"prepend_text": ["STRING", {"multiline": true, "default": "", "forceInput": true}], "append_text": ["STRING", {"multiline": true, "default": "", "forceInput": true}], "values_replace": ["VALUES_REPLACE"], "print_schedule": ["BOOLEAN", {"default": false}], "max_length": ["INT", {"default": 0, "min": 0, "max": 9007199254740991, "step": 1}], "tensor_interp": [["lerp", "slerp"]]}}, "input_order": {"required": ["prompts", "clip"], "optional": ["prepend_text", "append_text", "values_replace", "print_schedule", "max_length", "tensor_interp"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ADE_PromptScheduling", "display_name": "Prompt Scheduling \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "<div><div id=VHS_shortdesc style=\"font-size: .8em\">Encode a schedule of prompts with automatic interpolation.</div></div><div><div vhs_title=\"Format\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Format: <div>Scheduling supports two formats: JSON and pythonic.</div><div><div vhs_title=\"JSON\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">JSON: <div>\"idx\": \"your prompt here\", ...</div></div></div><div vhs_title=\"pythonic\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">pythonic: <div>idx = \"your prompt here\", ...</div></div></div></div><div>The idx is the index of the frame - first frame is 0, last frame is max_frames-1. An idx may be the following:</div><div><div vhs_title=\"allowed idxs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">allowed idxs: <div vhs_title=\"single\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">single: A positive integer (e.g. 0, 2) schedules value for frame. A negative integer (e.g. -1, -5) schedules value for frame from the end (-1 would be the last frame). A decimal (e.g. 0.5, 1.0) selects frame based relative location in whole schedule (0.5 would be halfway, 1.0 would be last frame).</div></div><div vhs_title=\"range\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">range: Using rules above, single:single chooses uninterpolated prompts from start idx (included) to end idx (excluded). Examples -> 0:12, 0:-5, 2:0.5</div></div><div vhs_title=\"hold\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">hold: Putting a colon after a single idx stops interpolation until the next provided index. Examples -> 0:, 0.5:, 16: </div></div></div></div></div><div>The prompts themselves should be surrounded by double quotes (\"your prompt here\"). Portions of prompts can use value schedules provided values_replace.</div><div><div vhs_title=\"JSON\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">JSON: <div>\"0\": \"blue rock on mountain\",</div><div>\"16\": \"green rock in lake\"</div></div></div><div vhs_title=\"pythonic\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">pythonic: <div>0 = \"blue rock on mountain\",</div><div>16 = \"green rock in lake\"</div></div></div></div></div></div></div><div><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse VHS_precollapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"prompts\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse VHS_precollapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">prompts: Write your prompts here.</div></div><div vhs_title=\"clip\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">clip: CLIP to use for encoding prompts.</div></div><div vhs_title=\"values_replace\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">values_replace: OPTIONAL, replaces keys from value_replace keys with provided value schedules. Keys in the prompt are written as `some_key`, surrounded by the ` characters.</div></div><div vhs_title=\"prepend_text\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">prepend_text: OPTIONAL, adds text before all prompts.</div></div><div vhs_title=\"append_text\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">append_text: OPTIONAL, adds text after all prompts.</div></div><div vhs_title=\"max_length\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">max_length: Used to select the intended length of schedule. If set to 0, will use the largest index in the schedule as max_length, but will disable relative indexes (negative and decimal).</div></div><div vhs_title=\"tensor_interp\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">tensor_interp: Selects method of interpolating prompt conds - defaults to lerp.</div></div><div vhs_title=\"print_schedule\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">print_schedule: When True, prints output values for each frame.</div></div></div></div></div><div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse VHS_precollapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"CONDITIONING\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">CONDITIONING: Encoded prompts.</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/scheduling", "output_node": false}, "ADE_PromptSchedulingLatents": {"input": {"required": {"prompts": ["STRING", {"multiline": true, "default": ""}], "clip": ["CLIP"], "latent": ["LATENT"]}, "optional": {"prepend_text": ["STRING", {"multiline": true, "default": "", "forceInput": true}], "append_text": ["STRING", {"multiline": true, "default": "", "forceInput": true}], "values_replace": ["VALUES_REPLACE"], "print_schedule": ["BOOLEAN", {"default": false}], "tensor_interp": [["lerp", "slerp"]]}}, "input_order": {"required": ["prompts", "clip", "latent"], "optional": ["prepend_text", "append_text", "values_replace", "print_schedule", "tensor_interp"]}, "output": ["CONDITIONING", "LATENT"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "LATENT"], "name": "ADE_PromptSchedulingLatents", "display_name": "Prompt Scheduling [Latents] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "<div><div id=VHS_shortdesc style=\"font-size: .8em\">Encode a schedule of prompts with automatic interpolation, its length matching passed-in latent count.</div></div><div><div vhs_title=\"Format\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Format: <div>Scheduling supports two formats: JSON and pythonic.</div><div><div vhs_title=\"JSON\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">JSON: <div>\"idx\": \"your prompt here\", ...</div></div></div><div vhs_title=\"pythonic\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">pythonic: <div>idx = \"your prompt here\", ...</div></div></div></div><div>The idx is the index of the frame - first frame is 0, last frame is max_frames-1. An idx may be the following:</div><div><div vhs_title=\"allowed idxs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">allowed idxs: <div vhs_title=\"single\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">single: A positive integer (e.g. 0, 2) schedules value for frame. A negative integer (e.g. -1, -5) schedules value for frame from the end (-1 would be the last frame). A decimal (e.g. 0.5, 1.0) selects frame based relative location in whole schedule (0.5 would be halfway, 1.0 would be last frame).</div></div><div vhs_title=\"range\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">range: Using rules above, single:single chooses uninterpolated prompts from start idx (included) to end idx (excluded). Examples -> 0:12, 0:-5, 2:0.5</div></div><div vhs_title=\"hold\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">hold: Putting a colon after a single idx stops interpolation until the next provided index. Examples -> 0:, 0.5:, 16: </div></div></div></div></div><div>The prompts themselves should be surrounded by double quotes (\"your prompt here\"). Portions of prompts can use value schedules provided values_replace.</div><div><div vhs_title=\"JSON\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">JSON: <div>\"0\": \"blue rock on mountain\",</div><div>\"16\": \"green rock in lake\"</div></div></div><div vhs_title=\"pythonic\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">pythonic: <div>0 = \"blue rock on mountain\",</div><div>16 = \"green rock in lake\"</div></div></div></div></div></div></div><div><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse VHS_precollapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"prompts\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse VHS_precollapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">prompts: Write your prompts here.</div></div><div vhs_title=\"clip\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">clip: CLIP to use for encoding prompts.</div></div><div vhs_title=\"latent\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">latent: Used to get the amount of frames (max_length) to use for scheduling.</div></div><div vhs_title=\"values_replace\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">values_replace: OPTIONAL, replaces keys from value_replace keys with provided value schedules. Keys in the prompt are written as `some_key`, surrounded by the ` characters.</div></div><div vhs_title=\"prepend_text\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">prepend_text: OPTIONAL, adds text before all prompts.</div></div><div vhs_title=\"append_text\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">append_text: OPTIONAL, adds text after all prompts.</div></div><div vhs_title=\"tensor_interp\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">tensor_interp: Selects method of interpolating prompt conds - defaults to lerp.</div></div><div vhs_title=\"print_schedule\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">print_schedule: When True, prints output values for each frame.</div></div></div></div></div><div><div vhs_title=\"Outputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse VHS_precollapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Outputs: <div vhs_title=\"CONDITIONING\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">CONDITIONING: Encoded prompts.</div></div><div vhs_title=\"LATENT\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">LATENT: Unmodified input latents; can be used as pipe, or can be ignored.</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/scheduling", "output_node": false}, "ADE_ValueScheduling": {"input": {"required": {"values": ["STRING", {"multiline": true, "default": ""}]}, "optional": {"print_schedule": ["BOOLEAN", {"default": false}], "max_length": ["INT", {"default": 0, "min": 0, "max": 9007199254740991, "step": 1}], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["values"], "optional": ["print_schedule", "max_length", "autosize"]}, "output": ["FLOAT", "FLOATS", "INT", "INTS"], "output_is_list": [false, false, false, false], "output_name": ["FLOAT", "FLOATS", "INT", "INTS"], "name": "ADE_ValueScheduling", "display_name": "Value Scheduling \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "<div><div id=VHS_shortdesc style=\"font-size: .8em\">Create a list of values, its length matching passed-in latent count.</div></div><div><div vhs_title=\"Format\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Format: <div>Scheduling supports two formats: JSON and pythonic.</div><div><div vhs_title=\"JSON\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">JSON: <div>\"idx\": float/int_value, ...</div></div></div><div vhs_title=\"pythonic\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">pythonic: <div>idx = float/int_value, ...</div></div></div></div><div>The idx is the index of the frame - first frame is 0, last frame is max_frames-1. An idx may be the following:</div><div><div vhs_title=\"allowed idxs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">allowed idxs: <div vhs_title=\"single\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">single: A positive integer (e.g. 0, 2) schedules value for frame. A negative integer (e.g. -1, -5) schedules value for frame from the end (-1 would be the last frame). A decimal (e.g. 0.5, 1.0) selects frame based relative location in whole schedule (0.5 would be halfway, 1.0 would be last frame).</div></div><div vhs_title=\"range\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">range: Using rules above, single:single chooses uninterpolated prompts from start idx (included) to end idx (excluded). Examples -> 0:12, 0:-5, 2:0.5</div></div><div vhs_title=\"hold\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">hold: Putting a colon after a single idx stops interpolation until the next provided index. Examples -> 0:, 0.5:, 16: </div></div></div></div></div><div>The values can be written without any special formatting.</div><div><div vhs_title=\"JSON\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">JSON: <div>\"0\": 1.0,</div><div>\"16\": 1.3</div></div></div><div vhs_title=\"pythonic\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">pythonic: <div>0 = 1.0,</div><div>16 = 1.3</div></div></div></div></div></div></div><div><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse VHS_precollapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"values\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse VHS_precollapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">values: Write your values here.</div></div><div vhs_title=\"max_length\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">max_length: Used to select the intended length of schedule. If set to 0, will use the largest index in the schedule as max_length, but will disable relative indexes (negative and decimal).</div></div><div vhs_title=\"print_schedule\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">print_schedule: When True, prints output values for each frame.</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/scheduling", "output_node": false}, "ADE_ValueSchedulingLatents": {"input": {"required": {"values": ["STRING", {"multiline": true, "default": ""}], "latent": ["LATENT"]}, "optional": {"print_schedule": ["BOOLEAN", {"default": false}], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["values", "latent"], "optional": ["print_schedule", "autosize"]}, "output": ["FLOAT", "FLOATS", "INT", "INTS"], "output_is_list": [false, false, false, false], "output_name": ["FLOAT", "FLOATS", "INT", "INTS"], "name": "ADE_ValueSchedulingLatents", "display_name": "Value Scheduling [Latents] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "<div><div id=VHS_shortdesc style=\"font-size: .8em\">Create a list of values, its length matching passed-in latent count.</div></div><div><div vhs_title=\"Format\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Format: <div>Scheduling supports two formats: JSON and pythonic.</div><div><div vhs_title=\"JSON\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">JSON: <div>\"idx\": float/int_value, ...</div></div></div><div vhs_title=\"pythonic\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">pythonic: <div>idx = float/int_value, ...</div></div></div></div><div>The idx is the index of the frame - first frame is 0, last frame is max_frames-1. An idx may be the following:</div><div><div vhs_title=\"allowed idxs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">allowed idxs: <div vhs_title=\"single\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">single: A positive integer (e.g. 0, 2) schedules value for frame. A negative integer (e.g. -1, -5) schedules value for frame from the end (-1 would be the last frame). A decimal (e.g. 0.5, 1.0) selects frame based relative location in whole schedule (0.5 would be halfway, 1.0 would be last frame).</div></div><div vhs_title=\"range\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">range: Using rules above, single:single chooses uninterpolated prompts from start idx (included) to end idx (excluded). Examples -> 0:12, 0:-5, 2:0.5</div></div><div vhs_title=\"hold\" style=\"display: flex; font-size: 1em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">hold: Putting a colon after a single idx stops interpolation until the next provided index. Examples -> 0:, 0.5:, 16: </div></div></div></div></div><div>The values can be written without any special formatting.</div><div><div vhs_title=\"JSON\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">JSON: <div>\"0\": 1.0,</div><div>\"16\": 1.3</div></div></div><div vhs_title=\"pythonic\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">pythonic: <div>0 = 1.0,</div><div>16 = 1.3</div></div></div></div></div></div></div><div><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse VHS_precollapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"values\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse VHS_precollapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">values: Write your values here.</div></div><div vhs_title=\"latent\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">latent: Used to get the amount of frames (max_length) to use for scheduling.</div></div><div vhs_title=\"print_schedule\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">print_schedule: When True, prints output values for each frame.</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/scheduling", "output_node": false}, "ADE_ValuesReplace": {"input": {"required": {"value_key": ["STRING", {"default": ""}], "floats": ["FLOATS"]}, "optional": {"prev_replace": ["VALUES_REPLACE"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["value_key", "floats"], "optional": ["prev_replace", "autosize"]}, "output": ["VALUES_REPLACE"], "output_is_list": [false], "output_name": ["VALUES_REPLACE"], "name": "ADE_ValuesReplace", "display_name": "Add Values Replace \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "<div><div id=VHS_shortdesc style=\"font-size: .8em\">Add a values schedule bound to a key to be used in Prompt Scheduling node.</div></div><div><div vhs_title=\"Inputs\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">Inputs: <div vhs_title=\"value_key\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">value_key: Key to use for value schedule in Prompt Scheduling node. Can only contain a-z, A-Z, 0-9, and _ characters. In Prompt Scheduling, keys can be referred to as `some_key`, where the key is surrounded by ` characters.</div></div><div vhs_title=\"floats\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">floats: List of floats, likely outputted by a Value Scheduling node.</div></div><div vhs_title=\"prev_replace\" style=\"display: flex; font-size: 0.8em\" class=\"VHS_collapse\"><div style=\"color: #AAA; height: 1.5em;\">[<span style=\"font-family: monospace\">-</span>]</div><div style=\"width: 100%\">prev_replace: OPTIONAL, other values_replace can be chained.</div></div></div></div></div>", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/scheduling", "output_node": false}, "ADE_FloatToFloats": {"input": {"required": {"FLOAT": ["FLOAT", {"default": 39, "forceInput": true}]}, "optional": {"autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["FLOAT"], "optional": ["autosize"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["FLOATS"], "name": "ADE_FloatToFloats", "display_name": "Float to Floats \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/scheduling", "output_node": false}, "ADE_ADBlockCombo": {"input": {"required": {}, "optional": {"effect": ["MULTIVAL"], "scale": ["MULTIVAL"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": [], "optional": ["effect", "scale", "autosize"]}, "output": ["AD_BLOCK"], "output_is_list": [false], "output_name": ["AD_BLOCK"], "name": "ADE_ADBlockCombo", "display_name": "AD Block \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/per block", "output_node": false}, "ADE_ADBlockIndiv": {"input": {"required": {}, "optional": {"effect": ["MULTIVAL"], "scale_0": ["MULTIVAL"], "scale_1": ["MULTIVAL"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": [], "optional": ["effect", "scale_0", "scale_1", "autosize"]}, "output": ["AD_BLOCK"], "output_is_list": [false], "output_name": ["AD_BLOCK"], "name": "ADE_ADBlockIndiv", "display_name": "AD Block+ \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/per block", "output_node": false}, "ADE_PerBlockHighLevel": {"input": {"required": {}, "optional": {"down": ["AD_BLOCK"], "mid": ["AD_BLOCK"], "up": ["AD_BLOCK"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": [], "optional": ["down", "mid", "up", "autosize"]}, "output": ["PER_BLOCK"], "output_is_list": [false], "output_name": ["PER_BLOCK"], "name": "ADE_PerBlockHighLevel", "display_name": "AD Per Block \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/per block", "output_node": false}, "ADE_PerBlock_SD15_MidLevel": {"input": {"required": {}, "optional": {"down_0": ["AD_BLOCK"], "down_1": ["AD_BLOCK"], "down_2": ["AD_BLOCK"], "down_3": ["AD_BLOCK"], "mid": ["AD_BLOCK"], "up_0": ["AD_BLOCK"], "up_1": ["AD_BLOCK"], "up_2": ["AD_BLOCK"], "up_3": ["AD_BLOCK"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": [], "optional": ["down_0", "down_1", "down_2", "down_3", "mid", "up_0", "up_1", "up_2", "up_3", "autosize"]}, "output": ["PER_BLOCK"], "output_is_list": [false], "output_name": ["PER_BLOCK"], "name": "ADE_PerBlock_SD15_MidLevel", "display_name": "AD Per Block+ (SD1.5) \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/per block", "output_node": false}, "ADE_PerBlock_SD15_LowLevel": {"input": {"required": {}, "optional": {"down_0__0": ["AD_BLOCK"], "down_0__1": ["AD_BLOCK"], "down_1__0": ["AD_BLOCK"], "down_1__1": ["AD_BLOCK"], "down_2__0": ["AD_BLOCK"], "down_2__1": ["AD_BLOCK"], "down_3__0": ["AD_BLOCK"], "down_3__1": ["AD_BLOCK"], "mid": ["AD_BLOCK"], "up_0__0": ["AD_BLOCK"], "up_0__1": ["AD_BLOCK"], "up_0__2": ["AD_BLOCK"], "up_1__0": ["AD_BLOCK"], "up_1__1": ["AD_BLOCK"], "up_1__2": ["AD_BLOCK"], "up_2__0": ["AD_BLOCK"], "up_2__1": ["AD_BLOCK"], "up_2__2": ["AD_BLOCK"], "up_3__0": ["AD_BLOCK"], "up_3__1": ["AD_BLOCK"], "up_3__2": ["AD_BLOCK"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": [], "optional": ["down_0__0", "down_0__1", "down_1__0", "down_1__1", "down_2__0", "down_2__1", "down_3__0", "down_3__1", "mid", "up_0__0", "up_0__1", "up_0__2", "up_1__0", "up_1__1", "up_1__2", "up_2__0", "up_2__1", "up_2__2", "up_3__0", "up_3__1", "up_3__2", "autosize"]}, "output": ["PER_BLOCK"], "output_is_list": [false], "output_name": ["PER_BLOCK"], "name": "ADE_PerBlock_SD15_LowLevel", "display_name": "AD Per Block++ (SD1.5) \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/per block", "output_node": false}, "ADE_PerBlock_SD15_FromFloats": {"input": {"required": {}, "optional": {"effect_21_floats": ["FLOATS"], "scale_21_floats": ["FLOATS"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": [], "optional": ["effect_21_floats", "scale_21_floats", "autosize"]}, "output": ["PER_BLOCK"], "output_is_list": [false], "output_name": ["PER_BLOCK"], "name": "ADE_PerBlock_SD15_FromFloats", "display_name": "AD Per Block Floats (SD1.5) \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "<div><div id=VHS_shortdesc style=\"font-size: .8em\">Use Floats from Value Schedules to select SD1.5 effect/scale values for blocks.</div></div><div>SD1.5 Motion Modules contain 21 blocks:</div><div>idx 0 - start of down blocks (down_0__0)</div><div>idx 7 - end of down blocks   (down_3__1)</div><div>idx 8 - mid block            (mid)</div><div>idx 9 - start of up blocks   (up_0__0)</div><div>idx 20 - end of up blocks    (up_3__2)</div>", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/per block", "output_node": false}, "ADE_PerBlock_SDXL_MidLevel": {"input": {"required": {}, "optional": {"down_0": ["AD_BLOCK"], "down_1": ["AD_BLOCK"], "down_2": ["AD_BLOCK"], "mid": ["AD_BLOCK"], "up_0": ["AD_BLOCK"], "up_1": ["AD_BLOCK"], "up_2": ["AD_BLOCK"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": [], "optional": ["down_0", "down_1", "down_2", "mid", "up_0", "up_1", "up_2", "autosize"]}, "output": ["PER_BLOCK"], "output_is_list": [false], "output_name": ["PER_BLOCK"], "name": "ADE_PerBlock_SDXL_MidLevel", "display_name": "AD Per Block+ (SDXL) \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/per block", "output_node": false}, "ADE_PerBlock_SDXL_LowLevel": {"input": {"required": {}, "optional": {"down_0__0": ["AD_BLOCK"], "down_0__1": ["AD_BLOCK"], "down_1__0": ["AD_BLOCK"], "down_1__1": ["AD_BLOCK"], "down_2__0": ["AD_BLOCK"], "down_2__1": ["AD_BLOCK"], "mid": ["AD_BLOCK"], "up_0__0": ["AD_BLOCK"], "up_0__1": ["AD_BLOCK"], "up_0__2": ["AD_BLOCK"], "up_1__0": ["AD_BLOCK"], "up_1__1": ["AD_BLOCK"], "up_1__2": ["AD_BLOCK"], "up_2__0": ["AD_BLOCK"], "up_2__1": ["AD_BLOCK"], "up_2__2": ["AD_BLOCK"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": [], "optional": ["down_0__0", "down_0__1", "down_1__0", "down_1__1", "down_2__0", "down_2__1", "mid", "up_0__0", "up_0__1", "up_0__2", "up_1__0", "up_1__1", "up_1__2", "up_2__0", "up_2__1", "up_2__2", "autosize"]}, "output": ["PER_BLOCK"], "output_is_list": [false], "output_name": ["PER_BLOCK"], "name": "ADE_PerBlock_SDXL_LowLevel", "display_name": "AD Per Block++ (SDXL) \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/per block", "output_node": false}, "ADE_PerBlock_SDXL_FromFloats": {"input": {"required": {}, "optional": {"effect_16_floats": ["FLOATS"], "scale_16_floats": ["FLOATS"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": [], "optional": ["effect_16_floats", "scale_16_floats", "autosize"]}, "output": ["PER_BLOCK"], "output_is_list": [false], "output_name": ["PER_BLOCK"], "name": "ADE_PerBlock_SDXL_FromFloats", "display_name": "AD Per Block Floats (SDXL) \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "<div><div id=VHS_shortdesc style=\"font-size: .8em\">Use Floats from Value Schedules to select SDXL effect/scale values for blocks.</div></div><div>SDXL Motion Modules contain 16 blocks:</div><div>idx 0 - start of down blocks (down_0__0)</div><div>idx 5 - end of down blocks   (down_2__1)</div><div>idx 6 - mid block            (mid)</div><div>idx 7 - start of up blocks   (up_0__0)</div><div>idx 15 - end of up blocks    (up_2__2)</div>", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/per block", "output_node": false}, "ADE_AnimateDiffUnload": {"input": {"required": {"model": ["MODEL"]}}, "input_order": {"required": ["model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ADE_AnimateDiffUnload", "display_name": "AnimateDiff Unload \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/extras", "output_node": false}, "ADE_EmptyLatentImageLarge": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 262144}]}}, "input_order": {"required": ["width", "height", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "ADE_EmptyLatentImageLarge", "display_name": "Empty Latent Image (Big Batch) \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/extras", "output_node": false}, "CheckpointLoaderSimpleWithNoiseSelect": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "beta_schedule": [["autoselect", "use existing", "sqrt_linear (AnimateDiff)", "linear (AnimateDiff-SDXL)", "linear (HotshotXL/default)", "avg(sqrt_linear,linear)", "lcm avg(sqrt_linear,linear)", "lcm", "lcm[100_ots]", "lcm >> sqrt_linear", "sqrt", "cosine", "squaredcos_cap_v2"], {"default": "use existing"}]}, "optional": {"use_custom_scale_factor": ["BOOLEAN", {"default": false}], "scale_factor": ["FLOAT", {"default": 0.18215, "min": 0.0, "max": 1.0, "step": 1e-05}]}}, "input_order": {"required": ["ckpt_name", "beta_schedule"], "optional": ["use_custom_scale_factor", "scale_factor"]}, "output": ["MODEL", "CLIP", "VAE"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "VAE"], "name": "CheckpointLoaderSimpleWithNoiseSelect", "display_name": "Load Checkpoint w/ Noise Select \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/extras", "output_node": false}, "ADE_PerturbedAttentionGuidanceMultival": {"input": {"required": {"model": ["MODEL"], "scale_multival": ["MULTIVAL"]}}, "input_order": {"required": ["model", "scale_multival"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ADE_PerturbedAttentionGuidanceMultival", "display_name": "PerturbedAttnGuide [Multival] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/extras", "output_node": false}, "ADE_RescaleCFGMultival": {"input": {"required": {"model": ["MODEL"], "mult_multival": ["MULTIVAL"]}}, "input_order": {"required": ["model", "mult_multival"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ADE_RescaleCFGMultival", "display_name": "RescaleCFG [Multival] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/extras", "output_node": false}, "ADE_AnimateDiffLoaderGen1": {"input": {"required": {"model": ["MODEL"], "model_name": [["AnimateLCM_sd15_t2v.ckpt", "hotshotxl_mm_v1.pth", "hsxl_temporal_layers.f16.safetensors", "v3_sd15_mm.ckpt"]], "beta_schedule": [["autoselect", "use existing", "sqrt_linear (AnimateDiff)", "linear (AnimateDiff-SDXL)", "linear (HotshotXL/default)", "avg(sqrt_linear,linear)", "lcm avg(sqrt_linear,linear)", "lcm", "lcm[100_ots]", "lcm >> sqrt_linear", "sqrt", "cosine", "squaredcos_cap_v2"], {"default": "autoselect"}]}, "optional": {"context_options": ["CONTEXT_OPTIONS"], "motion_lora": ["MOTION_LORA"], "ad_settings": ["AD_SETTINGS"], "ad_keyframes": ["AD_KEYFRAMES"], "sample_settings": ["SAMPLE_SETTINGS"], "scale_multival": ["MULTIVAL"], "effect_multival": ["MULTIVAL"], "per_block": ["PER_BLOCK"]}}, "input_order": {"required": ["model", "model_name", "beta_schedule"], "optional": ["context_options", "motion_lora", "ad_settings", "ad_keyframes", "sample_settings", "scale_multival", "effect_multival", "per_block"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ADE_AnimateDiffLoaderGen1", "display_name": "AnimateDiff Loader \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2460 Gen1 nodes \u2460", "output_node": false}, "ADE_AnimateDiffLoaderWithContext": {"input": {"required": {"model": ["MODEL"], "model_name": [["AnimateLCM_sd15_t2v.ckpt", "hotshotxl_mm_v1.pth", "hsxl_temporal_layers.f16.safetensors", "v3_sd15_mm.ckpt"]], "beta_schedule": [["autoselect", "use existing", "sqrt_linear (AnimateDiff)", "linear (AnimateDiff-SDXL)", "linear (HotshotXL/default)", "avg(sqrt_linear,linear)", "lcm avg(sqrt_linear,linear)", "lcm", "lcm[100_ots]", "lcm >> sqrt_linear", "sqrt", "cosine", "squaredcos_cap_v2"], {"default": "autoselect"}]}, "optional": {"context_options": ["CONTEXT_OPTIONS"], "motion_lora": ["MOTION_LORA"], "ad_settings": ["AD_SETTINGS"], "sample_settings": ["SAMPLE_SETTINGS"], "motion_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "step": 0.001}], "apply_v2_models_properly": ["BOOLEAN", {"default": true}], "ad_keyframes": ["AD_KEYFRAMES"]}}, "input_order": {"required": ["model", "model_name", "beta_schedule"], "optional": ["context_options", "motion_lora", "ad_settings", "sample_settings", "motion_scale", "apply_v2_models_properly", "ad_keyframes"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ADE_AnimateDiffLoaderWithContext", "display_name": "AnimateDiff Loader [Legacy] \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2460 Gen1 nodes \u2460", "output_node": false}, "ADE_UseEvolvedSampling": {"input": {"required": {"model": ["MODEL"], "beta_schedule": [["autoselect", "use existing", "sqrt_linear (AnimateDiff)", "linear (AnimateDiff-SDXL)", "linear (HotshotXL/default)", "avg(sqrt_linear,linear)", "lcm avg(sqrt_linear,linear)", "lcm", "lcm[100_ots]", "lcm >> sqrt_linear", "sqrt", "cosine", "squaredcos_cap_v2"], {"default": "autoselect"}]}, "optional": {"m_models": ["M_MODELS"], "context_options": ["CONTEXT_OPTIONS"], "sample_settings": ["SAMPLE_SETTINGS"]}}, "input_order": {"required": ["model", "beta_schedule"], "optional": ["m_models", "context_options", "sample_settings"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ADE_UseEvolvedSampling", "display_name": "Use Evolved Sampling \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461", "output_node": false}, "ADE_ApplyAnimateDiffModelSimple": {"input": {"required": {"motion_model": ["MOTION_MODEL_ADE"]}, "optional": {"motion_lora": ["MOTION_LORA"], "scale_multival": ["MULTIVAL"], "effect_multival": ["MULTIVAL"], "ad_keyframes": ["AD_KEYFRAMES"], "per_block": ["PER_BLOCK"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["motion_model"], "optional": ["motion_lora", "scale_multival", "effect_multival", "ad_keyframes", "per_block", "autosize"]}, "output": ["M_MODELS"], "output_is_list": [false], "output_name": ["M_MODELS"], "name": "ADE_ApplyAnimateDiffModelSimple", "display_name": "Apply AnimateDiff Model \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461", "output_node": false}, "ADE_ApplyAnimateDiffModel": {"input": {"required": {"motion_model": ["MOTION_MODEL_ADE"], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"motion_lora": ["MOTION_LORA"], "scale_multival": ["MULTIVAL"], "effect_multival": ["MULTIVAL"], "ad_keyframes": ["AD_KEYFRAMES"], "prev_m_models": ["M_MODELS"], "per_block": ["PER_BLOCK"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["motion_model", "start_percent", "end_percent"], "optional": ["motion_lora", "scale_multival", "effect_multival", "ad_keyframes", "prev_m_models", "per_block", "autosize"]}, "output": ["M_MODELS"], "output_is_list": [false], "output_name": ["M_MODELS"], "name": "ADE_ApplyAnimateDiffModel", "display_name": "Apply AnimateDiff Model (Adv.) \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461", "output_node": false}, "ADE_LoadAnimateDiffModel": {"input": {"required": {"model_name": [["AnimateLCM_sd15_t2v.ckpt", "hotshotxl_mm_v1.pth", "hsxl_temporal_layers.f16.safetensors", "v3_sd15_mm.ckpt"]]}, "optional": {"ad_settings": ["AD_SETTINGS"]}}, "input_order": {"required": ["model_name"], "optional": ["ad_settings"]}, "output": ["MOTION_MODEL_ADE"], "output_is_list": [false], "output_name": ["MOTION_MODEL"], "name": "ADE_LoadAnimateDiffModel", "display_name": "Load AnimateDiff Model \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461", "output_node": false}, "ADE_ApplyAnimateLCMI2VModel": {"input": {"required": {"motion_model": ["MOTION_MODEL_ADE"], "ref_latent": ["LATENT"], "ref_drift": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.001}], "apply_ref_when_disabled": ["BOOLEAN", {"default": false}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"motion_lora": ["MOTION_LORA"], "scale_multival": ["MULTIVAL"], "effect_multival": ["MULTIVAL"], "ad_keyframes": ["AD_KEYFRAMES"], "prev_m_models": ["M_MODELS"], "per_block": ["PER_BLOCK"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["motion_model", "ref_latent", "ref_drift", "apply_ref_when_disabled", "start_percent", "end_percent"], "optional": ["motion_lora", "scale_multival", "effect_multival", "ad_keyframes", "prev_m_models", "per_block", "autosize"]}, "output": ["M_MODELS"], "output_is_list": [false], "output_name": ["M_MODELS"], "name": "ADE_ApplyAnimateLCMI2VModel", "display_name": "Apply AnimateLCM-I2V Model \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/AnimateLCM-I2V", "output_node": false}, "ADE_LoadAnimateLCMI2VModel": {"input": {"required": {"model_name": [["AnimateLCM_sd15_t2v.ckpt", "hotshotxl_mm_v1.pth", "hsxl_temporal_layers.f16.safetensors", "v3_sd15_mm.ckpt"]]}, "optional": {"ad_settings": ["AD_SETTINGS"]}}, "input_order": {"required": ["model_name"], "optional": ["ad_settings"]}, "output": ["MOTION_MODEL_ADE", "MOTION_MODEL_ADE"], "output_is_list": [false, false], "output_name": ["MOTION_MODEL", "encoder_only"], "name": "ADE_LoadAnimateLCMI2VModel", "display_name": "Load AnimateLCM-I2V Model \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/AnimateLCM-I2V", "output_node": false}, "ADE_UpscaleAndVAEEncode": {"input": {"required": {"image": ["IMAGE"], "vae": ["VAE"], "latent_size": ["LATENT"], "scale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]], "crop": [["disabled", "center"], {"default": "center"}]}}, "input_order": {"required": ["image", "vae", "latent_size", "scale_method", "crop"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "ADE_UpscaleAndVAEEncode", "display_name": "Scale Ref Image and VAE Encode \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/AnimateLCM-I2V", "output_node": false}, "ADE_InjectI2VIntoAnimateDiffModel": {"input": {"required": {"model_name": [["AnimateLCM_sd15_t2v.ckpt", "hotshotxl_mm_v1.pth", "hsxl_temporal_layers.f16.safetensors", "v3_sd15_mm.ckpt"]], "motion_model": ["MOTION_MODEL_ADE"]}, "optional": {"ad_settings": ["AD_SETTINGS"], "deprecation_warning": ["ADEWARN", {"text": "Experimental. Don't expect to work.", "warn_type": "experimental", "color": "#CFC"}]}}, "input_order": {"required": ["model_name", "motion_model"], "optional": ["ad_settings", "deprecation_warning"]}, "output": ["MOTION_MODEL_ADE"], "output_is_list": [false], "output_name": ["MOTION_MODEL"], "name": "ADE_InjectI2VIntoAnimateDiffModel", "display_name": "\ud83e\uddeaInject I2V into AnimateDiff Model \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/AnimateLCM-I2V/\ud83e\uddeaexperimental", "output_node": false}, "ADE_ApplyAnimateDiffModelWithCameraCtrl": {"input": {"required": {"motion_model": ["MOTION_MODEL_ADE"], "cameractrl_poses": ["CAMERACTRL_POSES"], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"motion_lora": ["MOTION_LORA"], "scale_multival": ["MULTIVAL"], "effect_multival": ["MULTIVAL"], "cameractrl_multival": ["MULTIVAL"], "ad_keyframes": ["AD_KEYFRAMES"], "prev_m_models": ["M_MODELS"], "per_block": ["PER_BLOCK"]}}, "input_order": {"required": ["motion_model", "cameractrl_poses", "start_percent", "end_percent"], "optional": ["motion_lora", "scale_multival", "effect_multival", "cameractrl_multival", "ad_keyframes", "prev_m_models", "per_block"]}, "output": ["M_MODELS"], "output_is_list": [false], "output_name": ["M_MODELS"], "name": "ADE_ApplyAnimateDiffModelWithCameraCtrl", "display_name": "Apply AnimateDiff+CameraCtrl Model \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/CameraCtrl", "output_node": false}, "ADE_LoadAnimateDiffModelWithCameraCtrl": {"input": {"required": {"model_name": [["AnimateLCM_sd15_t2v.ckpt", "hotshotxl_mm_v1.pth", "hsxl_temporal_layers.f16.safetensors", "v3_sd15_mm.ckpt"]], "camera_ctrl": [["AnimateLCM_sd15_t2v.ckpt", "hotshotxl_mm_v1.pth", "hsxl_temporal_layers.f16.safetensors", "v3_sd15_mm.ckpt"]]}, "optional": {"ad_settings": ["AD_SETTINGS"]}}, "input_order": {"required": ["model_name", "camera_ctrl"], "optional": ["ad_settings"]}, "output": ["MOTION_MODEL_ADE"], "output_is_list": [false], "output_name": ["MOTION_MODEL"], "name": "ADE_LoadAnimateDiffModelWithCameraCtrl", "display_name": "Load AnimateDiff+CameraCtrl Model \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/CameraCtrl", "output_node": false}, "ADE_CameraCtrlAnimateDiffKeyframe": {"input": {"required": {"start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"prev_ad_keyframes": ["AD_KEYFRAMES"], "scale_multival": ["MULTIVAL"], "effect_multival": ["MULTIVAL"], "cameractrl_multival": ["MULTIVAL"], "inherit_missing": ["BOOLEAN", {"default": true}], "guarantee_steps": ["INT", {"default": 1, "min": 0, "max": 9007199254740991}], "autosize": ["ADEAUTOSIZE", {"padding": 30}]}}, "input_order": {"required": ["start_percent"], "optional": ["prev_ad_keyframes", "scale_multival", "effect_multival", "cameractrl_multival", "inherit_missing", "guarantee_steps", "autosize"]}, "output": ["AD_KEYFRAMES"], "output_is_list": [false], "output_name": ["AD_KEYFRAMES"], "name": "ADE_CameraCtrlAnimateDiffKeyframe", "display_name": "AnimateDiff+CameraCtrl Keyframe \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/CameraCtrl", "output_node": false}, "ADE_LoadCameraPoses": {"input": {"required": {"pose_filename": [["file.txt"]]}}, "input_order": {"required": ["pose_filename"]}, "output": ["CAMERACTRL_POSES"], "output_is_list": [false], "output_name": ["CAMERACTRL_POSES"], "name": "ADE_LoadCameraPoses", "display_name": "Load CameraCtrl Poses (File) \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/CameraCtrl/poses", "output_node": false}, "ADE_LoadCameraPosesFromPath": {"input": {"optional": {"file_path": ["STRING", {"default": "X://path/to/pose_file.txt"}]}}, "input_order": {"optional": ["file_path"]}, "output": ["CAMERACTRL_POSES"], "output_is_list": [false], "output_name": ["CAMERACTRL_POSES"], "name": "ADE_LoadCameraPosesFromPath", "display_name": "Load CameraCtrl Poses (Path) \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/CameraCtrl/poses", "output_node": false}, "ADE_CameraPoseBasic": {"input": {"required": {"motion_type": [["Static", "Pan Up", "Pan Down", "Pan Left", "Pan Right", "Zoom In", "Zoom Out", "Roll Clockwise", "Roll Anticlockwise", "Tilt Down", "Tilt Up", "Tilt Left", "Tilt Right"]], "speed": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}], "frame_length": ["INT", {"default": 16}]}, "optional": {"prev_poses": ["CAMERACTRL_POSES"], "autosize": ["ADEAUTOSIZE", {"padding": 30}]}}, "input_order": {"required": ["motion_type", "speed", "frame_length"], "optional": ["prev_poses", "autosize"]}, "output": ["CAMERACTRL_POSES"], "output_is_list": [false], "output_name": ["CAMERACTRL_POSES"], "name": "ADE_CameraPoseBasic", "display_name": "Create CameraCtrl Poses \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/CameraCtrl/poses", "output_node": false}, "ADE_CameraPoseCombo": {"input": {"required": {"motion_type1": [["Static", "Pan Up", "Pan Down", "Pan Left", "Pan Right", "Zoom In", "Zoom Out", "Roll Clockwise", "Roll Anticlockwise", "Tilt Down", "Tilt Up", "Tilt Left", "Tilt Right"]], "motion_type2": [["Static", "Pan Up", "Pan Down", "Pan Left", "Pan Right", "Zoom In", "Zoom Out", "Roll Clockwise", "Roll Anticlockwise", "Tilt Down", "Tilt Up", "Tilt Left", "Tilt Right"]], "motion_type3": [["Static", "Pan Up", "Pan Down", "Pan Left", "Pan Right", "Zoom In", "Zoom Out", "Roll Clockwise", "Roll Anticlockwise", "Tilt Down", "Tilt Up", "Tilt Left", "Tilt Right"]], "motion_type4": [["Static", "Pan Up", "Pan Down", "Pan Left", "Pan Right", "Zoom In", "Zoom Out", "Roll Clockwise", "Roll Anticlockwise", "Tilt Down", "Tilt Up", "Tilt Left", "Tilt Right"]], "motion_type5": [["Static", "Pan Up", "Pan Down", "Pan Left", "Pan Right", "Zoom In", "Zoom Out", "Roll Clockwise", "Roll Anticlockwise", "Tilt Down", "Tilt Up", "Tilt Left", "Tilt Right"]], "motion_type6": [["Static", "Pan Up", "Pan Down", "Pan Left", "Pan Right", "Zoom In", "Zoom Out", "Roll Clockwise", "Roll Anticlockwise", "Tilt Down", "Tilt Up", "Tilt Left", "Tilt Right"]], "speed": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}], "frame_length": ["INT", {"default": 16}]}, "optional": {"prev_poses": ["CAMERACTRL_POSES"]}}, "input_order": {"required": ["motion_type1", "motion_type2", "motion_type3", "motion_type4", "motion_type5", "motion_type6", "speed", "frame_length"], "optional": ["prev_poses"]}, "output": ["CAMERACTRL_POSES"], "output_is_list": [false], "output_name": ["CAMERACTRL_POSES"], "name": "ADE_CameraPoseCombo", "display_name": "Create CameraCtrl Poses (Combo) \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/CameraCtrl/poses", "output_node": false}, "ADE_CameraPoseAdvanced": {"input": {"required": {"motion_type1": [["Static", "Pan Up", "Pan Down", "Pan Left", "Pan Right", "Zoom In", "Zoom Out", "Roll Clockwise", "Roll Anticlockwise", "Tilt Down", "Tilt Up", "Tilt Left", "Tilt Right"]], "strength1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "motion_type2": [["Static", "Pan Up", "Pan Down", "Pan Left", "Pan Right", "Zoom In", "Zoom Out", "Roll Clockwise", "Roll Anticlockwise", "Tilt Down", "Tilt Up", "Tilt Left", "Tilt Right"]], "strength2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "motion_type3": [["Static", "Pan Up", "Pan Down", "Pan Left", "Pan Right", "Zoom In", "Zoom Out", "Roll Clockwise", "Roll Anticlockwise", "Tilt Down", "Tilt Up", "Tilt Left", "Tilt Right"]], "strength3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "motion_type4": [["Static", "Pan Up", "Pan Down", "Pan Left", "Pan Right", "Zoom In", "Zoom Out", "Roll Clockwise", "Roll Anticlockwise", "Tilt Down", "Tilt Up", "Tilt Left", "Tilt Right"]], "strength4": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "motion_type5": [["Static", "Pan Up", "Pan Down", "Pan Left", "Pan Right", "Zoom In", "Zoom Out", "Roll Clockwise", "Roll Anticlockwise", "Tilt Down", "Tilt Up", "Tilt Left", "Tilt Right"]], "strength5": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "motion_type6": [["Static", "Pan Up", "Pan Down", "Pan Left", "Pan Right", "Zoom In", "Zoom Out", "Roll Clockwise", "Roll Anticlockwise", "Tilt Down", "Tilt Up", "Tilt Left", "Tilt Right"]], "strength6": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "speed": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}], "frame_length": ["INT", {"default": 16}]}, "optional": {"prev_poses": ["CAMERACTRL_POSES"]}}, "input_order": {"required": ["motion_type1", "strength1", "motion_type2", "strength2", "motion_type3", "strength3", "motion_type4", "strength4", "motion_type5", "strength5", "motion_type6", "strength6", "speed", "frame_length"], "optional": ["prev_poses"]}, "output": ["CAMERACTRL_POSES"], "output_is_list": [false], "output_name": ["CAMERACTRL_POSES"], "name": "ADE_CameraPoseAdvanced", "display_name": "Create CameraCtrl Poses (Adv.) \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/CameraCtrl/poses", "output_node": false}, "ADE_CameraManualPoseAppend": {"input": {"required": {"poses_first": ["CAMERACTRL_POSES"], "poses_last": ["CAMERACTRL_POSES"]}}, "input_order": {"required": ["poses_first", "poses_last"]}, "output": ["CAMERACTRL_POSES"], "output_is_list": [false], "output_name": ["CAMERACTRL_POSES"], "name": "ADE_CameraManualPoseAppend", "display_name": "Manual Append CameraCtrl Poses \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/CameraCtrl/poses", "output_node": false}, "ADE_ReplaceCameraParameters": {"input": {"required": {"poses": ["CAMERACTRL_POSES"], "fx": ["FLOAT", {"default": 0.474812461, "min": 0, "max": 1, "step": 1e-09}], "fy": ["FLOAT", {"default": 0.844111024, "min": 0, "max": 1, "step": 1e-09}], "cx": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "cy": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}]}}, "input_order": {"required": ["poses", "fx", "fy", "cx", "cy"]}, "output": ["CAMERACTRL_POSES"], "output_is_list": [false], "output_name": ["CAMERACTRL_POSES"], "name": "ADE_ReplaceCameraParameters", "display_name": "Replace Camera Parameters \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/CameraCtrl/poses", "output_node": false}, "ADE_ReplaceOriginalPoseAspectRatio": {"input": {"required": {"poses": ["CAMERACTRL_POSES"], "orig_pose_width": ["INT", {"default": 1280, "min": 1, "max": 9007199254740991}], "orig_pose_height": ["INT", {"default": 720, "min": 1, "max": 9007199254740991}]}}, "input_order": {"required": ["poses", "orig_pose_width", "orig_pose_height"]}, "output": ["CAMERACTRL_POSES"], "output_is_list": [false], "output_name": ["CAMERACTRL_POSES"], "name": "ADE_ReplaceOriginalPoseAspectRatio", "display_name": "Replace Orig. Pose Aspect Ratio \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/CameraCtrl/poses", "output_node": false}, "ADE_ApplyAnimateDiffModelWithPIA": {"input": {"required": {"motion_model": ["MOTION_MODEL_ADE"], "image": ["IMAGE"], "vae": ["VAE"], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"pia_input": ["PIA_INPUT"], "motion_lora": ["MOTION_LORA"], "scale_multival": ["MULTIVAL"], "effect_multival": ["MULTIVAL"], "ad_keyframes": ["AD_KEYFRAMES"], "prev_m_models": ["M_MODELS"], "per_block": ["PER_BLOCK"], "autosize": ["ADEAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["motion_model", "image", "vae", "start_percent", "end_percent"], "optional": ["pia_input", "motion_lora", "scale_multival", "effect_multival", "ad_keyframes", "prev_m_models", "per_block", "autosize"]}, "output": ["M_MODELS"], "output_is_list": [false], "output_name": ["M_MODELS"], "name": "ADE_ApplyAnimateDiffModelWithPIA", "display_name": "Apply AnimateDiff-PIA Model \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/PIA", "output_node": false}, "ADE_InputPIA_Multival": {"input": {"required": {"multival": ["MULTIVAL"]}}, "input_order": {"required": ["multival"]}, "output": ["PIA_INPUT"], "output_is_list": [false], "output_name": ["PIA_INPUT"], "name": "ADE_InputPIA_Multival", "display_name": "PIA Input [Multival] \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/PIA", "output_node": false}, "ADE_InputPIA_PaperPresets": {"input": {"required": {"preset": [["Animation (Small Motion)", "Animation (Medium Motion)", "Animation (Large Motion)", "Loop (Small Motion)", "Loop (Medium Motion)", "Loop (Large Motion)", "Style Transfer (Small Motion)", "Style Transfer (Medium Motion)", "Style Transfer (Large Motion)"]], "batch_index": ["INT", {"default": 0, "min": -9007199254740991, "max": 9007199254740991, "step": 1}]}, "optional": {"mult_multival": ["MULTIVAL"], "print_values": ["BOOLEAN", {"default": false}], "autosize": ["ADEAUTOSIZE", {"padding": 60}]}}, "input_order": {"required": ["preset", "batch_index"], "optional": ["mult_multival", "print_values", "autosize"]}, "output": ["PIA_INPUT"], "output_is_list": [false], "output_name": ["PIA_INPUT"], "name": "ADE_InputPIA_PaperPresets", "display_name": "PIA Input [Paper Presets] \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/PIA", "output_node": false}, "ADE_PIA_AnimateDiffKeyframe": {"input": {"required": {"start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"prev_ad_keyframes": ["AD_KEYFRAMES"], "scale_multival": ["MULTIVAL"], "effect_multival": ["MULTIVAL"], "pia_input": ["PIA_INPUT"], "inherit_missing": ["BOOLEAN", {"default": true}], "guarantee_steps": ["INT", {"default": 1, "min": 0, "max": 9007199254740991}], "autosize": ["ADEAUTOSIZE", {"padding": 5}]}}, "input_order": {"required": ["start_percent"], "optional": ["prev_ad_keyframes", "scale_multival", "effect_multival", "pia_input", "inherit_missing", "guarantee_steps", "autosize"]}, "output": ["AD_KEYFRAMES"], "output_is_list": [false], "output_name": ["AD_KEYFRAMES"], "name": "ADE_PIA_AnimateDiffKeyframe", "display_name": "AnimateDiff-PIA Keyframe \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/PIA", "output_node": false}, "ADE_InjectPIAIntoAnimateDiffModel": {"input": {"required": {"model_name": [["AnimateLCM_sd15_t2v.ckpt", "hotshotxl_mm_v1.pth", "hsxl_temporal_layers.f16.safetensors", "v3_sd15_mm.ckpt"]], "motion_model": ["MOTION_MODEL_ADE"]}, "optional": {"ad_settings": ["AD_SETTINGS"], "deprecation_warning": ["ADEWARN", {"text": "Experimental. Don't expect to work.", "warn_type": "experimental", "color": "#CFC"}]}}, "input_order": {"required": ["model_name", "motion_model"], "optional": ["ad_settings", "deprecation_warning"]}, "output": ["MOTION_MODEL_ADE"], "output_is_list": [false], "output_name": ["MOTION_MODEL"], "name": "ADE_InjectPIAIntoAnimateDiffModel", "display_name": "\ud83e\uddeaInject PIA into AnimateDiff Model \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/PIA/\ud83e\uddeaexperimental", "output_node": false}, "AnimateDiffLoaderV1": {"input": {"required": {"model": ["MODEL"], "latents": ["LATENT"], "model_name": [["AnimateLCM_sd15_t2v.ckpt", "hotshotxl_mm_v1.pth", "hsxl_temporal_layers.f16.safetensors", "v3_sd15_mm.ckpt"]], "unlimited_area_hack": ["BOOLEAN", {"default": false}], "beta_schedule": [["sqrt_linear (AnimateDiff)", "use existing", "autoselect", "linear (AnimateDiff-SDXL)", "linear (HotshotXL/default)", "avg(sqrt_linear,linear)", "lcm avg(sqrt_linear,linear)", "lcm", "lcm[100_ots]", "lcm >> sqrt_linear", "sqrt", "cosine", "squaredcos_cap_v2"]]}, "optional": {"deprecation_warning": ["ADEWARN", {"text": "Deprecated"}]}}, "input_order": {"required": ["model", "latents", "model_name", "unlimited_area_hack", "beta_schedule"], "optional": ["deprecation_warning"]}, "output": ["MODEL", "LATENT"], "output_is_list": [false, false], "output_name": ["MODEL", "LATENT"], "name": "AnimateDiffLoaderV1", "display_name": "\ud83d\udeabAnimateDiff Loader [DEPRECATED] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "", "output_node": false}, "ADE_AnimateDiffLoaderV1Advanced": {"input": {"required": {"model": ["MODEL"], "latents": ["LATENT"], "model_name": [["AnimateLCM_sd15_t2v.ckpt", "hotshotxl_mm_v1.pth", "hsxl_temporal_layers.f16.safetensors", "v3_sd15_mm.ckpt"]], "unlimited_area_hack": ["BOOLEAN", {"default": false}], "context_length": ["INT", {"default": 16, "min": 0, "max": 1000}], "context_stride": ["INT", {"default": 1, "min": 1, "max": 1000}], "context_overlap": ["INT", {"default": 4, "min": 0, "max": 1000}], "context_schedule": [["uniform"]], "closed_loop": ["BOOLEAN", {"default": false}], "beta_schedule": [["sqrt_linear (AnimateDiff)", "use existing", "autoselect", "linear (AnimateDiff-SDXL)", "linear (HotshotXL/default)", "avg(sqrt_linear,linear)", "lcm avg(sqrt_linear,linear)", "lcm", "lcm[100_ots]", "lcm >> sqrt_linear", "sqrt", "cosine", "squaredcos_cap_v2"]]}, "optional": {"deprecation_warning": ["ADEWARN", {"text": "Deprecated"}]}}, "input_order": {"required": ["model", "latents", "model_name", "unlimited_area_hack", "context_length", "context_stride", "context_overlap", "context_schedule", "closed_loop", "beta_schedule"], "optional": ["deprecation_warning"]}, "output": ["MODEL", "LATENT"], "output_is_list": [false, false], "output_name": ["MODEL", "LATENT"], "name": "ADE_AnimateDiffLoaderV1Advanced", "display_name": "\ud83d\udeabAnimateDiff Loader (Advanced) [DEPRECATED] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "", "output_node": false}, "ADE_AnimateDiffCombine": {"input": {"required": {"images": ["IMAGE"], "frame_rate": ["INT", {"default": 8, "min": 1, "max": 24, "step": 1}], "loop_count": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "filename_prefix": ["STRING", {"default": "AnimateDiff"}], "format": [["image/gif", "image/webp"]], "pingpong": ["BOOLEAN", {"default": false}], "save_image": ["BOOLEAN", {"default": true}]}, "optional": {"deprecation_warning": ["ADEWARN", {"text": "Deprecated. Use VHS Video Combine"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "frame_rate", "loop_count", "filename_prefix", "format", "pingpong", "save_image"], "optional": ["deprecation_warning"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["GIF"], "output_is_list": [false], "output_name": ["GIF"], "name": "ADE_AnimateDiffCombine", "display_name": "\ud83d\udeabAnimateDiff Combine [DEPRECATED, Use Video Combine (VHS) Instead!] \ud83c\udfad\ud83c\udd50\ud83c\udd53", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "", "output_node": true}, "ADE_AnimateDiffModelSettings_Release": {"input": {"required": {"min_motion_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "step": 0.001}], "max_motion_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "step": 0.001}]}, "optional": {"mask_motion_scale": ["MASK"], "deprecation_warning": ["ADEWARN", {"text": "Deprecated"}]}}, "input_order": {"required": ["min_motion_scale", "max_motion_scale"], "optional": ["mask_motion_scale", "deprecation_warning"]}, "output": ["AD_SETTINGS"], "output_is_list": [false], "output_name": ["AD_SETTINGS"], "name": "ADE_AnimateDiffModelSettings_Release", "display_name": "\ud83d\udeab[DEPR] Motion Model Settings \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "", "output_node": false}, "ADE_AnimateDiffModelSettingsSimple": {"input": {"required": {"motion_pe_stretch": ["INT", {"default": 0, "min": 0, "step": 1}]}, "optional": {"mask_motion_scale": ["MASK"], "min_motion_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "step": 0.001}], "max_motion_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "step": 0.001}], "deprecation_warning": ["ADEWARN", {"text": "Deprecated"}]}}, "input_order": {"required": ["motion_pe_stretch"], "optional": ["mask_motion_scale", "min_motion_scale", "max_motion_scale", "deprecation_warning"]}, "output": ["AD_SETTINGS"], "output_is_list": [false], "output_name": ["AD_SETTINGS"], "name": "ADE_AnimateDiffModelSettingsSimple", "display_name": "\ud83d\udeab[DEPR] Motion Model Settings (Simple) \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "", "output_node": false}, "ADE_AnimateDiffModelSettings": {"input": {"required": {"pe_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.0001}], "attn_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.0001}], "other_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.0001}], "motion_pe_stretch": ["INT", {"default": 0, "min": 0, "step": 1}], "cap_initial_pe_length": ["INT", {"default": 0, "min": 0, "step": 1}], "interpolate_pe_to_length": ["INT", {"default": 0, "min": 0, "step": 1}], "initial_pe_idx_offset": ["INT", {"default": 0, "min": 0, "step": 1}], "final_pe_idx_offset": ["INT", {"default": 0, "min": 0, "step": 1}]}, "optional": {"mask_motion_scale": ["MASK"], "min_motion_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "step": 0.001}], "max_motion_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "step": 0.001}], "deprecation_warning": ["ADEWARN", {"text": "Deprecated"}]}}, "input_order": {"required": ["pe_strength", "attn_strength", "other_strength", "motion_pe_stretch", "cap_initial_pe_length", "interpolate_pe_to_length", "initial_pe_idx_offset", "final_pe_idx_offset"], "optional": ["mask_motion_scale", "min_motion_scale", "max_motion_scale", "deprecation_warning"]}, "output": ["AD_SETTINGS"], "output_is_list": [false], "output_name": ["AD_SETTINGS"], "name": "ADE_AnimateDiffModelSettings", "display_name": "\ud83d\udeab[DEPR] Motion Model Settings (Advanced) \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "", "output_node": false}, "ADE_AnimateDiffModelSettingsAdvancedAttnStrengths": {"input": {"required": {"pe_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.0001}], "attn_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.0001}], "attn_q_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.0001}], "attn_k_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.0001}], "attn_v_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.0001}], "attn_out_weight_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.0001}], "attn_out_bias_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.0001}], "other_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.0001}], "motion_pe_stretch": ["INT", {"default": 0, "min": 0, "step": 1}], "cap_initial_pe_length": ["INT", {"default": 0, "min": 0, "step": 1}], "interpolate_pe_to_length": ["INT", {"default": 0, "min": 0, "step": 1}], "initial_pe_idx_offset": ["INT", {"default": 0, "min": 0, "step": 1}], "final_pe_idx_offset": ["INT", {"default": 0, "min": 0, "step": 1}]}, "optional": {"mask_motion_scale": ["MASK"], "min_motion_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "step": 0.001}], "max_motion_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "step": 0.001}], "deprecation_warning": ["ADEWARN", {"text": "Deprecated"}]}}, "input_order": {"required": ["pe_strength", "attn_strength", "attn_q_strength", "attn_k_strength", "attn_v_strength", "attn_out_weight_strength", "attn_out_bias_strength", "other_strength", "motion_pe_stretch", "cap_initial_pe_length", "interpolate_pe_to_length", "initial_pe_idx_offset", "final_pe_idx_offset"], "optional": ["mask_motion_scale", "min_motion_scale", "max_motion_scale", "deprecation_warning"]}, "output": ["AD_SETTINGS"], "output_is_list": [false], "output_name": ["AD_SETTINGS"], "name": "ADE_AnimateDiffModelSettingsAdvancedAttnStrengths", "display_name": "\ud83d\udeab[DEPR] Motion Model Settings (Adv. Attn) \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460", "description": "", "python_module": "custom_nodes.ComfyUI-AnimateDiff-Evolved", "category": "", "output_node": false}, "Generation Parameter Input": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "image_width": ["INT", {"default": 512, "min": 0, "max": 1024, "step": 8}], "image_height": ["INT", {"default": 512, "min": 0, "max": 1024, "step": 8}], "steps": ["INT", {"default": 20, "min": 0, "max": 200}], "cfg": ["FLOAT", {"default": 7.0, "min": 0.0, "max": 30.0, "step": 0.5}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"], {"default": "dpmpp_2m"}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"], {"default": "karras"}], "denoise": ["FLOAT", {"default": 1, "min": 0, "max": 1}]}, "optional": {"parameters": ["PARAMETERS"]}}, "input_order": {"required": ["seed", "image_width", "image_height", "steps", "cfg", "sampler_name", "scheduler", "denoise"], "optional": ["parameters"]}, "output": ["PARAMETERS"], "output_is_list": [false], "output_name": ["parameters"], "name": "Generation Parameter Input", "display_name": "Generation Parameter Input", "description": "", "python_module": "custom_nodes.CharacterFaceSwap", "category": "CFaceSwap", "output_node": false}, "Generation Parameter Output": {"input": {"required": {"parameters": ["PARAMETERS"]}}, "input_order": {"required": ["parameters"]}, "output": ["PARAMETERS", "INT", "INT", "INT", "INT", "FLOAT", ["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"], ["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"], "FLOAT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["parameters", "seed", "image_width", "image_height", "steps", "cfg", "sampler_name", "scheduler", "denoise"], "name": "Generation Parameter Output", "display_name": "Generation Parameter Output", "description": "", "python_module": "custom_nodes.CharacterFaceSwap", "category": "CFaceSwap", "output_node": false}, "Load RetinaFace": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["RETINAFACE"], "output_is_list": [false], "output_name": ["MODEL"], "name": "Load RetinaFace", "display_name": "Load RetinaFace", "description": "", "python_module": "custom_nodes.CharacterFaceSwap", "category": "CFaceSwap", "output_node": false}, "Load BiseNet": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["BISENET"], "output_is_list": [false], "output_name": ["BISENET"], "name": "Load BiseNet", "display_name": "Load BiseNet", "description": "", "python_module": "custom_nodes.CharacterFaceSwap", "category": "CFaceSwap", "output_node": false}, "Uncrop Face": {"input": {"required": {"image": ["IMAGE"], "bbox": ["BBOX"], "face": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["image", "bbox", "face", "mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Uncrop Face", "display_name": "Uncrop Face", "description": "", "python_module": "custom_nodes.CharacterFaceSwap", "category": "CFaceSwap", "output_node": false}, "Crop Face": {"input": {"required": {"model": ["RETINAFACE"], "image": ["IMAGE"], "confidence": ["FLOAT", {"default": 0.8, "min": 0, "max": 1}], "margin": ["INT", {"default": 32}]}}, "input_order": {"required": ["model", "image", "confidence", "margin"]}, "output": ["IMAGE", "IMAGE", "BBOX"], "output_is_list": [false, false, false], "output_name": ["face_image", "preview", "bbox"], "name": "Crop Face", "display_name": "Crop Face", "description": "", "python_module": "custom_nodes.CharacterFaceSwap", "category": "CFaceSwap", "output_node": false}, "Segment Face": {"input": {"required": {"model": ["BISENET"], "image": ["IMAGE"], "expand": ["INT", {"min": 0}], "include_hair": [["enable", "disable"], {"default": "disable"}], "include_neck": [["enable", "disable"], {"default": "disable"}]}}, "input_order": {"required": ["model", "image", "expand", "include_hair", "include_neck"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "Segment Face", "display_name": "Segment Face", "description": "", "python_module": "custom_nodes.CharacterFaceSwap", "category": "CFaceSwap", "output_node": false}, "Image Full BBox": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["BBOX"], "output_is_list": [false], "output_name": ["BBOX"], "name": "Image Full BBox", "display_name": "Image Full BBox", "description": "", "python_module": "custom_nodes.CharacterFaceSwap", "category": "CFaceSwap", "output_node": false}, "Color Blend": {"input": {"required": {"blend_image": ["IMAGE"], "base_image": ["IMAGE"], "mode": [["Hue", "Saturation", "Color", "Luminosity"]]}}, "input_order": {"required": ["blend_image", "base_image", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Color Blend", "display_name": "Color Blend", "description": "", "python_module": "custom_nodes.CharacterFaceSwap", "category": "CFaceSwap", "output_node": false}, "Exclude Facial Feature": {"input": {"required": {"face": ["IMAGE"], "model": ["BISENET"], "image": ["IMAGE"], "expand": ["INT", {"min": 0}]}}, "input_order": {"required": ["face", "model", "image", "expand"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Exclude Facial Feature", "display_name": "Exclude Facial Feature", "description": "", "python_module": "custom_nodes.CharacterFaceSwap", "category": "CFaceSwap", "output_node": false}, "Mask Contour": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "Mask Contour", "display_name": "Mask Contour", "description": "", "python_module": "custom_nodes.CharacterFaceSwap", "category": "CFaceSwap", "output_node": false}, "LoadAndApplyICLightUnet": {"input": {"required": {"model": ["MODEL"], "model_path": [["IC-Light/iclight_sd15_fbc.safetensors", "IC-Light/iclight_sd15_fc.safetensors", "flux1-dev-fp8.safetensors", "flux1-dev.safetensors"]]}}, "input_order": {"required": ["model", "model_path"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "LoadAndApplyICLightUnet", "display_name": "Load And Apply IC-Light", "description": "\n  \nLoads and applies the diffusers SD1.5 IC-Light models available here:  \nhttps://huggingface.co/lllyasviel/ic-light/tree/main  \n  \nUsed with ICLightConditioning -node  \n", "python_module": "custom_nodes.ComfyUI-IC-Light", "category": "IC-Light", "output_node": false}, "ICLightConditioning": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "foreground": ["LATENT"], "multiplier": ["FLOAT", {"default": 0.18215, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"opt_background": ["LATENT"]}}, "input_order": {"required": ["positive", "negative", "vae", "foreground", "multiplier"], "optional": ["opt_background"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "empty_latent"], "name": "ICLightConditioning", "display_name": "IC-Light Conditioning", "description": "\n  \nConditioning for the IC-Light model.  \nTo use the \"opt_background\" input, you also need to use the  \n\"fbc\" version of the IC-Light models.  \n  \n", "python_module": "custom_nodes.ComfyUI-IC-Light", "category": "IC-Light", "output_node": false}, "LightSource": {"input": {"required": {"light_position": [["Left Light", "Right Light", "Top Light", "Bottom Light", "Top Left Light", "Top Right Light", "Bottom Left Light", "Bottom Right Light"]], "multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.001}], "start_color": ["STRING", {"default": "#FFFFFF"}], "end_color": ["STRING", {"default": "#000000"}], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}]}, "optional": {"batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "prev_image": ["IMAGE"]}}, "input_order": {"required": ["light_position", "multiplier", "start_color", "end_color", "width", "height"], "optional": ["batch_size", "prev_image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "LightSource", "display_name": "Simple Light Source", "description": "\nGenerates a gradient image that can be used  \nas a simple light source.  The color can be  \nspecified in RGB or hex format.  \n", "python_module": "custom_nodes.ComfyUI-IC-Light", "category": "IC-Light", "output_node": false}, "CalculateNormalsFromImages": {"input": {"required": {"images": ["IMAGE"], "sigma": ["FLOAT", {"default": 10.0, "min": 0.01, "max": 100.0, "step": 0.01}], "center_input_range": ["BOOLEAN", {"default": false}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["images", "sigma", "center_input_range"], "optional": ["mask"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["normal", "divided"], "name": "CalculateNormalsFromImages", "display_name": "Calculate Normals From Images", "description": "\nCalculates normal map from different directional exposures.  \nTakes in 4 images as a batch:  \nleft, right, bottom, top  \n\n", "python_module": "custom_nodes.ComfyUI-IC-Light", "category": "IC-Light", "output_node": false}, "LoadHDRImage": {"input": {"required": {"image": [["00100-3444294236.png", "01115-3441384736-mature ginger guy, laying on field, armpit, sunburnt, blushing, blued eyes, smile, tank top, muscular, facial hair, moustache ,.png", "0c42073e550d6ae9cb7624ad1b2ee53d1d4e8c69_high.webp", "11121_158078841563e50810b30c1.jpg", "1313766545.png", "2024-08-14ComfyUI_00004_.png", "33097901.jpg", "33246906.jpg", "360_F_562816292_d7bYLVGfttt68HKFkOc4f2QKtWUg8Q5n.jpg", "381543ce-3045-4381-9b52-676686caed8f.jpg", "AnimateDiff_00037.mp4", "BGDK748BV7YGRQNF7P3CDK8910 (1).jpeg", "ComfyUI_00074_.png", "ComfyUI_00078_.png", "ComfyUI_00091_.png", "ComfyUI_00219_.png", "ComfyUI_00222_.png", "ComfyUI_00808_.png", "ComfyUI_00809_.png", "ComfyUI_00810_.png", "ComfyUI_00813_.png", "ComfyUI_00815_.png", "ComfyUI_00818_.png", "ComfyUI_00819_.png", "ComfyUI_00842_.png", "ComfyUI_temp_alxcm_00001_.png", "ComfyUI_temp_ayutp_00001_.png", "ComfyUI_temp_bvpdk_00001_.png", "ComfyUI_temp_bvpdk_00004_.png", "ComfyUI_temp_cgbmm_00001_.png", "ComfyUI_temp_chusq_00001_.png", "ComfyUI_temp_doxtg_00002_.png", "ComfyUI_temp_ecxhs_00001_.png", "ComfyUI_temp_ecxhs_00004_.png", "ComfyUI_temp_ecxhs_00006_ (1).png", "ComfyUI_temp_ecxhs_00006_.png", "ComfyUI_temp_ecxhs_00008_.png", "ComfyUI_temp_ecxhs_00010_.png", "ComfyUI_temp_fqjhe_00001_.png", "ComfyUI_temp_fqjhe_00016_.png", "ComfyUI_temp_gxxzz_00001_.png", "ComfyUI_temp_hlvpl_00001_.png", "ComfyUI_temp_ipugi_00131_.png", "ComfyUI_temp_jluvj_00001_.png", "ComfyUI_temp_kteza_00001_.png", "ComfyUI_temp_kubpn_00003_.png", "ComfyUI_temp_lviic_00009_.png", "ComfyUI_temp_lzhyu_00004_.png", "ComfyUI_temp_nmjmf_00001_.png", "ComfyUI_temp_oqypc_00001_.png", "ComfyUI_temp_oqypc_00004_ (1).png", "ComfyUI_temp_oufve_00001_.png", "ComfyUI_temp_pukae_00002_.png", "ComfyUI_temp_qakbs_00001_.png", "ComfyUI_temp_rdanj_00004_.png", "ComfyUI_temp_rqrpi_00001_.png", "ComfyUI_temp_rsiuu_00005_.png", "ComfyUI_temp_rtbjq_00004_.png", "ComfyUI_temp_toyue_00002_.png", "ComfyUI_temp_tqaav_00002_.png", "ComfyUI_temp_txndi_00002_.png", "Guy_Mask_5.png", "Guy_Matcap_5.png", "Guy_Outline_5.png", "H100Test_00015_.png", "H100Test_00016_.png", "H100Test_00034_.png", "IMG_3440.png", "IMG_6129.png", "MAsk.png", "Mario.webp", "MarkuryFLUX_00003_.png", "MarkuryFLUX_00005_.png", "MarkuryFLUX_00022_.png", "MarkuryFLUX_00036_.png", "MarkuryFLUX_00037_.png", "Mask_2 (1).png", "Mask_2.png", "Matcap.png", "Outline.png", "Outline_2.png", "PB-_temp_bxspr_00001_.png", "PNG image.jpeg", "Playbook_00.png", "Playbook_22.png", "Playbook_47.png", "Playbook__00001_ (1) (1).png", "Playbook__00001_ (1).png", "Playbook__00001_ (2).png", "Playbook__00001_.png", "Playbook__00003_ (4).png", "Playbook__00016_.png", "Playbook__00018_.png", "Playbook__00031_.png", "Playbook__00034_.png", "Playbook__00045_.png", "Playbook__00058_.png", "Playbook__00065_.png", "Playbook__00113_.png", "Playbook__00178_.png", "Playbook__00183_.png", "Playbook__00184_.png", "Playbook__00205_.png", "Playbook__00314.mp4", "Playbook__00348_.png", "Playbook__00417_.png", "Playbook__00419_ (1).png", "Playbook__00419_.png", "SDXL-Lightning_00012_.png", "SDXL_ControlNet_Image.png", "archivs_upscalewithflux.png", "beauty (1).png", "beauty (2).png", "beauty (3).png", "beauty (4).png", "beauty-0 (11).png", "beauty-0 (21).png", "beauty-0 (36).png", "beauty-0 (9).png", "beauty-0 - 2024-07-02T105656.553.png", "beauty.png", "ca-times.brightspotcdn.jpg", "canny.png", "canny_res_00003_ (1).png", "canny_res_00003_.png", "canny_res_00014_.png", "canny_res_00038_.png", "canny_res_00040_.png", "dancer-front-depth.png", "dancer-front-mask.png", "dancer-front-outline.png", "depth (1).png", "depth (2).png", "depth (3).png", "depth (4).png", "depth (5).png", "depth-0 (16).png", "depth-0 (18).png", "depth-0 (19).png", "depth-0 (31).png", "depth-0 (38).png", "depth-0 - 2024-07-02T105656.499.png", "depth.png", "depth0000 (1).png", "depth0000 (2).png", "depth0000 (3).png", "depth0000.png", "depth0001.png", "depth0043.png", "download.png", "example.png", "file.txt", "img_BmzB6PyCLHnFfVvV.png", "img_DpgERK4DxUAwLftG.png", "img_QYLbD1uzHC1nFbAE.png", "img_ULjhfQdRpzpEnmug.png", "img_Xipc5yPPxgtt1QGj.png", "img_iBZAGHnJ2Bv3f1XS.png", "inputs_img_DLe7eAeVKcd5aihb copy.png", "inputs_img_DLe7eAeVKcd5aihb.png", "inputs_img_EPMSddrLooFQ1YVD.png", "inputs_img_JLRRUVkofX1vCmjx.png", "inputs_img_Jvze5V927RFFAHX5.png", "inputs_img_KiPSrfifuNwC54ep.png", "inputs_img_UBc9tSV7cFAx87FQ.png", "inputs_img_Uf1LEsrNL4ovoWpz copy.png", "inputs_img_Uf1LEsrNL4ovoWpz.png", "inputs_img_Yhq6WtF5vDhoS4r5.png", "inputs_img_bG6odzGr8EZUPK1u.png", "inputs_img_fp87ttHy7b3hLkDg.png", "inputs_img_pKYznktDTwbYPGcL.png", "inputs_img_qyyvpcueAihTw9YV.png", "istockphoto-1325701162-612x612.jpg", "large-elephant-herd-walking-dust-savuti-botswana-towards-camera-196186738.webp", "manwithsign-depth.png", "manwithsign-mask.png", "manwithsign-outline.png", "mask (1).png", "mask (10).png", "mask (2).png", "mask (3).png", "mask (4).png", "mask (5).png", "mask (6).png", "mask (7).png", "mask (8).png", "mask (9).png", "mask-0 (11).png", "mask-0 (24).png", "mask-0 (28).png", "mask-0 (9).png", "mask-0 - 2024-07-02T105656.507.png", "mask.png", "masks.png", "night vision.jpg", "outline (1).png", "outline (2).png", "outline (3).png", "outline (4).png", "outline-0 (11).png", "outline-0 (31).png", "outline-0 (9).png", "outline-0 - 2024-07-02T105656.503.png", "outline.png", "outline0000 (1).png", "outline0000 (2).png", "outline0000 (3).png", "outline0000.png", "outline0001.png", "outline0043.png", "playbook_59b784a6-af19-4b44-9a45-1e98bae3c9e5.png", "playbook_e2a76fa6-15a6-41d2-922a-29dd68bfd3e3.png", "refernece.jpg", "result_14.png", "rgthree.compare._temp_rzpfz_00007_.png", "safari.jpg", "undefined_image (1).png", "walking-depth.png", "walking-mask.png", "walking-outline.png"], {"image_upload": false}], "exposures": ["STRING", {"default": "-2,-1,0,1,2"}]}}, "input_order": {"required": ["image", "exposures"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "LoadHDRImage", "display_name": "Load HDR Image", "description": "\nLoads a .hdr image from the input directory.  \nOutput is a batch of LDR images with the selected exposures.  \n\n", "python_module": "custom_nodes.ComfyUI-IC-Light", "category": "IC-Light", "output_node": false}, "BackgroundScaler": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "scale": ["FLOAT", {"default": 0.5, "min": -10.0, "max": 10.0, "step": 0.001}], "invert": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "mask", "scale", "invert"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BackgroundScaler", "display_name": "Background Scaler", "description": "\nSets the masked area color in grayscale range.  \n", "python_module": "custom_nodes.ComfyUI-IC-Light", "category": "IC-Light", "output_node": false}, "DetailTransfer": {"input": {"required": {"target": ["IMAGE"], "source": ["IMAGE"], "mode": [["add", "multiply", "screen", "overlay", "soft_light", "hard_light", "color_dodge", "color_burn", "difference", "exclusion", "divide"], {"default": "add"}], "blur_sigma": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.01}], "blend_factor": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.001, "round": 0.001}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["target", "source", "mode", "blur_sigma", "blend_factor"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "DetailTransfer", "display_name": "Detail Transfer", "description": "", "python_module": "custom_nodes.ComfyUI-IC-Light", "category": "IC-Light", "output_node": false}, "BRIA_RMBG_ModelLoader_Zho": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["RMBGMODEL"], "output_is_list": [false], "output_name": ["rmbgmodel"], "name": "BRIA_RMBG_ModelLoader_Zho", "display_name": "\ud83e\uddf9BRIA_RMBG Model Loader", "description": "", "python_module": "custom_nodes.ComfyUI-BRIA_AI-RMBG", "category": "\ud83e\uddf9BRIA RMBG", "output_node": false}, "BRIA_RMBG_Zho": {"input": {"required": {"rmbgmodel": ["RMBGMODEL"], "image": ["IMAGE"]}}, "input_order": {"required": ["rmbgmodel", "image"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "BRIA_RMBG_Zho", "display_name": "\ud83e\uddf9BRIA RMBG", "description": "", "python_module": "custom_nodes.ComfyUI-BRIA_AI-RMBG", "category": "\ud83e\uddf9BRIA RMBG", "output_node": false}, "SaveImageWebsocket": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveImageWebsocket", "display_name": "SaveImageWebsocket", "description": "", "python_module": "custom_nodes.websocket_image_save", "category": "api/image", "output_node": true}, "INPAINT_LoadFooocusInpaint": {"input": {"required": {"head": [["MAT_Places512_G_fp16 (1).safetensors"]], "patch": [["MAT_Places512_G_fp16 (1).safetensors"]]}}, "input_order": {"required": ["head", "patch"]}, "output": ["INPAINT_PATCH"], "output_is_list": [false], "output_name": ["INPAINT_PATCH"], "name": "INPAINT_LoadFooocusInpaint", "display_name": "Load Fooocus Inpaint", "description": "", "python_module": "custom_nodes.comfyui-inpaint-nodes", "category": "inpaint", "output_node": false}, "INPAINT_ApplyFooocusInpaint": {"input": {"required": {"model": ["MODEL"], "patch": ["INPAINT_PATCH"], "latent": ["LATENT"]}}, "input_order": {"required": ["model", "patch", "latent"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "INPAINT_ApplyFooocusInpaint", "display_name": "Apply Fooocus Inpaint", "description": "", "python_module": "custom_nodes.comfyui-inpaint-nodes", "category": "inpaint", "output_node": false}, "INPAINT_VAEEncodeInpaintConditioning": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "pixels": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["positive", "negative", "vae", "pixels", "mask"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT", "LATENT"], "output_is_list": [false, false, false, false], "output_name": ["positive", "negative", "latent_inpaint", "latent_samples"], "name": "INPAINT_VAEEncodeInpaintConditioning", "display_name": "VAE Encode & Inpaint Conditioning", "description": "", "python_module": "custom_nodes.comfyui-inpaint-nodes", "category": "inpaint", "output_node": false}, "INPAINT_MaskedFill": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "fill": [["neutral", "telea", "navier-stokes"]], "falloff": ["INT", {"default": 0, "min": 0, "max": 8191, "step": 1}]}}, "input_order": {"required": ["image", "mask", "fill", "falloff"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "INPAINT_MaskedFill", "display_name": "Fill Masked Area", "description": "", "python_module": "custom_nodes.comfyui-inpaint-nodes", "category": "inpaint", "output_node": false}, "INPAINT_MaskedBlur": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "blur": ["INT", {"default": 255, "min": 3, "max": 8191, "step": 1}], "falloff": ["INT", {"default": 0, "min": 0, "max": 8191, "step": 1}]}}, "input_order": {"required": ["image", "mask", "blur", "falloff"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "INPAINT_MaskedBlur", "display_name": "Blur Masked Area", "description": "", "python_module": "custom_nodes.comfyui-inpaint-nodes", "category": "inpaint", "output_node": false}, "INPAINT_LoadInpaintModel": {"input": {"required": {"model_name": [["MAT_Places512_G_fp16 (1).safetensors"]]}}, "input_order": {"required": ["model_name"]}, "output": ["INPAINT_MODEL"], "output_is_list": [false], "output_name": ["INPAINT_MODEL"], "name": "INPAINT_LoadInpaintModel", "display_name": "Load Inpaint Model", "description": "", "python_module": "custom_nodes.comfyui-inpaint-nodes", "category": "inpaint", "output_node": false}, "INPAINT_InpaintWithModel": {"input": {"required": {"inpaint_model": ["INPAINT_MODEL"], "image": ["IMAGE"], "mask": ["MASK"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"optional_upscale_model": ["UPSCALE_MODEL"]}}, "input_order": {"required": ["inpaint_model", "image", "mask", "seed"], "optional": ["optional_upscale_model"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "INPAINT_InpaintWithModel", "display_name": "Inpaint (using Model)", "description": "", "python_module": "custom_nodes.comfyui-inpaint-nodes", "category": "inpaint", "output_node": false}, "INPAINT_ExpandMask": {"input": {"required": {"mask": ["MASK"], "grow": ["INT", {"default": 16, "min": 0, "max": 8096, "step": 1}], "blur": ["INT", {"default": 7, "min": 0, "max": 8096, "step": 1}]}}, "input_order": {"required": ["mask", "grow", "blur"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "INPAINT_ExpandMask", "display_name": "Expand Mask", "description": "", "python_module": "custom_nodes.comfyui-inpaint-nodes", "category": "inpaint", "output_node": false}, "INPAINT_DenoiseToCompositingMask": {"input": {"required": {"mask": ["MASK"], "offset": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.01}], "threshold": ["FLOAT", {"default": 0.2, "min": 0.01, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["mask", "offset", "threshold"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "INPAINT_DenoiseToCompositingMask", "display_name": "Denoise to Compositing Mask", "description": "", "python_module": "custom_nodes.comfyui-inpaint-nodes", "category": "inpaint", "output_node": false}, "InpaintPreprocessor": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"]}, "optional": {"black_pixel_for_xinsir_cn": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "mask"], "optional": ["black_pixel_for_xinsir_cn"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "InpaintPreprocessor", "display_name": "Inpaint Preprocessor", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/others", "output_node": false}, "MediaPipe-FaceMeshPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"max_faces": ["INT", {"default": 10, "min": 1, "max": 50, "step": 1}], "min_confidence": ["FLOAT", {"default": 0.5, "min": 0.1, "max": 1, "step": 0.01}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["max_faces", "min_confidence", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "MediaPipe-FaceMeshPreprocessor", "display_name": "MediaPipe Face Mesh", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Faces and Poses Estimators", "output_node": false}, "BinaryPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"bin_threshold": ["INT", {"default": 100, "min": 0, "max": 255, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["bin_threshold", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BinaryPreprocessor", "display_name": "Binary Lines", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "AnimeLineArtPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "AnimeLineArtPreprocessor", "display_name": "Anime Lineart", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "MeshGraphormer-DepthMapPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"mask_bbox_padding": ["INT", {"default": 30, "min": 0, "max": 100}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}], "mask_type": [["based_on_depth", "tight_bboxes", "original"], {"default": "based_on_depth"}], "mask_expand": ["INT", {"default": 5, "min": -16384, "max": 16384, "step": 1}], "rand_seed": ["INT", {"default": 88, "min": 0, "max": 18446744073709551615, "step": 1}], "detect_thr": ["FLOAT", {"default": 0.6, "min": 0.1, "max": 1, "step": 0.01}], "presence_thr": ["FLOAT", {"default": 0.6, "min": 0.1, "max": 1, "step": 0.01}]}}, "input_order": {"required": ["image"], "optional": ["mask_bbox_padding", "resolution", "mask_type", "mask_expand", "rand_seed", "detect_thr", "presence_thr"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "INPAINTING_MASK"], "name": "MeshGraphormer-DepthMapPreprocessor", "display_name": "MeshGraphormer Hand Refiner", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "MeshGraphormer+ImpactDetector-DepthMapPreprocessor": {"input": {"required": {"image": ["IMAGE"], "bbox_detector": ["BBOX_DETECTOR"]}, "optional": {"bbox_threshold": ["FLOAT", {"default": 0.5, "min": 0.1, "max": 1, "step": 0.01}], "bbox_dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}], "bbox_crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 10.0, "step": 0.01}], "drop_size": ["INT", {"default": 10, "min": 1, "max": 16384, "step": 1}], "mask_bbox_padding": ["INT", {"default": 30, "min": 0, "max": 100, "step": 1}], "mask_type": [["based_on_depth", "tight_bboxes", "original"], {"default": "based_on_depth"}], "mask_expand": ["INT", {"default": 5, "min": -16384, "max": 16384, "step": 1}], "rand_seed": ["INT", {"default": 88, "min": 0, "max": 18446744073709551615, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image", "bbox_detector"], "optional": ["bbox_threshold", "bbox_dilation", "bbox_crop_factor", "drop_size", "mask_bbox_padding", "mask_type", "mask_expand", "rand_seed", "resolution"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "INPAINTING_MASK"], "name": "MeshGraphormer+ImpactDetector-DepthMapPreprocessor", "display_name": "MeshGraphormer Hand Refiner With External Detector", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "ShufflePreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["image"], "optional": ["resolution", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ShufflePreprocessor", "display_name": "Content Shuffle", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/T2IAdapter-only", "output_node": false}, "BAE-NormalMapPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BAE-NormalMapPreprocessor", "display_name": "BAE Normal Map", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "DensePosePreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"model": [["densepose_r50_fpn_dl.torchscript", "densepose_r101_fpn_dl.torchscript"], {"default": "densepose_r50_fpn_dl.torchscript"}], "cmap": [["Viridis (MagicAnimate)", "Parula (CivitAI)"], {"default": "Viridis (MagicAnimate)"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["model", "cmap", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "DensePosePreprocessor", "display_name": "DensePose Estimator", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Faces and Poses Estimators", "output_node": false}, "AnimeFace_SemSegPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"remove_background_using_abg": ["BOOLEAN", {"default": true}], "resolution": ["INT", {"default": 512, "min": 512, "max": 512, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["remove_background_using_abg", "resolution"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "ABG_CHARACTER_MASK (MASK)"], "name": "AnimeFace_SemSegPreprocessor", "display_name": "Anime Face Segmentor", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Semantic Segmentation", "output_node": false}, "Unimatch_OptFlowPreprocessor": {"input": {"required": {"image": ["IMAGE"], "ckpt_name": [["gmflow-scale1-mixdata.pth", "gmflow-scale2-mixdata.pth", "gmflow-scale2-regrefine6-mixdata.pth"], {"default": "gmflow-scale2-regrefine6-mixdata.pth"}], "backward_flow": ["BOOLEAN", {"default": false}], "bidirectional_flow": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "ckpt_name", "backward_flow", "bidirectional_flow"]}, "output": ["OPTICAL_FLOW", "IMAGE"], "output_is_list": [false, false], "output_name": ["OPTICAL_FLOW", "PREVIEW_IMAGE"], "name": "Unimatch_OptFlowPreprocessor", "display_name": "Unimatch Optical Flow", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Optical Flow", "output_node": false}, "MaskOptFlow": {"input": {"required": {"optical_flow": ["OPTICAL_FLOW"], "mask": ["MASK"]}}, "input_order": {"required": ["optical_flow", "mask"]}, "output": ["OPTICAL_FLOW", "IMAGE"], "output_is_list": [false, false], "output_name": ["OPTICAL_FLOW", "PREVIEW_IMAGE"], "name": "MaskOptFlow", "display_name": "Mask Optical Flow (DragNUWA)", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Optical Flow", "output_node": false}, "Manga2Anime_LineArt_Preprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Manga2Anime_LineArt_Preprocessor", "display_name": "Manga Lineart (aka lineart_anime_denoise)", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "SAMPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "SAMPreprocessor", "display_name": "SAM Segmentor", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/others", "output_node": false}, "LineartStandardPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"guassian_sigma": ["FLOAT", {"default": 6.0, "min": 0, "max": 100.0, "step": 0.01}], "intensity_threshold": ["INT", {"default": 8, "min": 0, "max": 16, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["guassian_sigma", "intensity_threshold", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "LineartStandardPreprocessor", "display_name": "Standard Lineart", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "LeReS-DepthMapPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"rm_nearest": ["FLOAT", {"default": 0, "min": 0, "max": 100.0, "step": 0.01}], "rm_background": ["FLOAT", {"default": 0, "min": 0, "max": 100.0, "step": 0.01}], "boost": [["disable", "enable"], {"default": "disable"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["rm_nearest", "rm_background", "boost", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "LeReS-DepthMapPreprocessor", "display_name": "LeReS Depth Map (enable boost for leres++)", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "SavePoseKpsAsJsonFile": {"input": {"required": {"pose_kps": ["POSE_KEYPOINT"], "filename_prefix": ["STRING", {"default": "PoseKeypoint"}]}}, "input_order": {"required": ["pose_kps", "filename_prefix"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SavePoseKpsAsJsonFile", "display_name": "Save Pose Keypoints", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Pose Keypoint Postprocess", "output_node": true}, "FacialPartColoringFromPoseKps": {"input": {"required": {"pose_kps": ["POSE_KEYPOINT"], "mode": [["point", "polygon"], {"default": "polygon"}], "skin": ["STRING", {"default": "rgb(0, 153, 255)", "multiline": false}], "left_eye": ["STRING", {"default": "rgb(0, 204, 153)", "multiline": false}], "right_eye": ["STRING", {"default": "rgb(255, 153, 0)", "multiline": false}], "nose": ["STRING", {"default": "rgb(255, 102, 255)", "multiline": false}], "upper_lip": ["STRING", {"default": "rgb(102, 0, 51)", "multiline": false}], "inner_mouth": ["STRING", {"default": "rgb(255, 204, 255)", "multiline": false}], "lower_lip": ["STRING", {"default": "rgb(255, 0, 102)", "multiline": false}]}}, "input_order": {"required": ["pose_kps", "mode", "skin", "left_eye", "right_eye", "nose", "upper_lip", "inner_mouth", "lower_lip"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "FacialPartColoringFromPoseKps", "display_name": "Colorize Facial Parts from PoseKPS", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Pose Keypoint Postprocess", "output_node": false}, "UpperBodyTrackingFromPoseKps": {"input": {"required": {"pose_kps": ["POSE_KEYPOINT"], "id_include": ["STRING", {"default": "", "multiline": false}], "Head_width_height": ["STRING", {"default": "256, 256", "multiline": false}], "Neck_width_height": ["STRING", {"default": "100, 100", "multiline": false}], "Shoulder_width_height": ["STRING", {"default": "", "multiline": false}], "Torso_width_height": ["STRING", {"default": "350, 450", "multiline": false}], "RArm_width_height": ["STRING", {"default": "128, 256", "multiline": false}], "RForearm_width_height": ["STRING", {"default": "128, 256", "multiline": false}], "LArm_width_height": ["STRING", {"default": "128, 256", "multiline": false}], "LForearm_width_height": ["STRING", {"default": "128, 256", "multiline": false}]}}, "input_order": {"required": ["pose_kps", "id_include", "Head_width_height", "Neck_width_height", "Shoulder_width_height", "Torso_width_height", "RArm_width_height", "RForearm_width_height", "LArm_width_height", "LForearm_width_height"]}, "output": ["TRACKING", "STRING"], "output_is_list": [false, false], "output_name": ["tracking", "prompt"], "name": "UpperBodyTrackingFromPoseKps", "display_name": "Upper Body Tracking From PoseKps (InstanceDiffusion)", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Pose Keypoint Postprocess", "output_node": false}, "RenderPeopleKps": {"input": {"required": {"kps": ["POSE_KEYPOINT"], "render_body": ["BOOLEAN", {"default": true}], "render_hand": ["BOOLEAN", {"default": true}], "render_face": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["kps", "render_body", "render_hand", "render_face"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RenderPeopleKps", "display_name": "Render Pose JSON (Human)", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Pose Keypoint Postprocess", "output_node": false}, "RenderAnimalKps": {"input": {"required": {"kps": ["POSE_KEYPOINT"]}}, "input_order": {"required": ["kps"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RenderAnimalKps", "display_name": "Render Pose JSON (Animal)", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Pose Keypoint Postprocess", "output_node": false}, "TEEDPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"safe_steps": ["INT", {"default": 2, "min": 0, "max": 10, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["safe_steps", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "TEEDPreprocessor", "display_name": "TEEDPreprocessor", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "M-LSDPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"score_threshold": ["FLOAT", {"default": 0.1, "min": 0.01, "max": 2.0, "step": 0.01}], "dist_threshold": ["FLOAT", {"default": 0.1, "min": 0.01, "max": 20.0, "step": 0.01}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["score_threshold", "dist_threshold", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "M-LSDPreprocessor", "display_name": "M-LSD Lines", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "ColorPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ColorPreprocessor", "display_name": "Color Pallete", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/T2IAdapter-only", "output_node": false}, "Zoe-DepthMapPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Zoe-DepthMapPreprocessor", "display_name": "Zoe Depth Map", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "PiDiNetPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"safe": [["enable", "disable"], {"default": "enable"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["safe", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "PiDiNetPreprocessor", "display_name": "PiDiNet Soft-Edge Lines", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "UniFormer-SemSegPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "UniFormer-SemSegPreprocessor", "display_name": "UniFormer Segmentor", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Semantic Segmentation", "output_node": false}, "SemSegPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "SemSegPreprocessor", "display_name": "Semantic Segmentor (legacy, alias for UniFormer)", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Semantic Segmentation", "output_node": false}, "CannyEdgePreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"low_threshold": ["INT", {"default": 100, "min": 0, "max": 255, "step": 1}], "high_threshold": ["INT", {"default": 200, "min": 0, "max": 255, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["low_threshold", "high_threshold", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CannyEdgePreprocessor", "display_name": "Canny Edge", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "DepthAnythingV2Preprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"ckpt_name": [["depth_anything_v2_vitg.pth", "depth_anything_v2_vitl.pth", "depth_anything_v2_vitb.pth", "depth_anything_v2_vits.pth"], {"default": "depth_anything_v2_vitl.pth"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["ckpt_name", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "DepthAnythingV2Preprocessor", "display_name": "Depth Anything V2 - Relative", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "ScribblePreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ScribblePreprocessor", "display_name": "Scribble Lines", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "Scribble_XDoG_Preprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"threshold": ["INT", {"default": 32, "min": 1, "max": 64, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["threshold", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Scribble_XDoG_Preprocessor", "display_name": "Scribble XDoG Lines", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "Scribble_PiDiNet_Preprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"safe": ["enable", "disable"], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["safe", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Scribble_PiDiNet_Preprocessor", "display_name": "Scribble PiDiNet Lines", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "TilePreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"pyrUp_iters": ["INT", {"default": 3, "min": 1, "max": 10, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["pyrUp_iters", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "TilePreprocessor", "display_name": "Tile", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/tile", "output_node": false}, "TTPlanet_TileGF_Preprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"scale_factor": ["FLOAT", {"default": 1.0, "min": 1.0, "max": 8.0, "step": 0.01}], "blur_strength": ["FLOAT", {"default": 2.0, "min": 1.0, "max": 10.0, "step": 0.01}], "radius": ["INT", {"default": 7, "min": 1, "max": 20, "step": 1}], "eps": ["FLOAT", {"default": 0.01, "min": 0.001, "max": 0.1, "step": 0.001}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["scale_factor", "blur_strength", "radius", "eps", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "TTPlanet_TileGF_Preprocessor", "display_name": "TTPlanet Tile GuidedFilter", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/tile", "output_node": false}, "TTPlanet_TileSimple_Preprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"scale_factor": ["FLOAT", {"default": 1.0, "min": 1.0, "max": 8.0, "step": 0.01}], "blur_strength": ["FLOAT", {"default": 2.0, "min": 1.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["image"], "optional": ["scale_factor", "blur_strength"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "TTPlanet_TileSimple_Preprocessor", "display_name": "TTPlanet Tile Simple", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/tile", "output_node": false}, "OpenposePreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"detect_hand": [["enable", "disable"], {"default": "enable"}], "detect_body": [["enable", "disable"], {"default": "enable"}], "detect_face": [["enable", "disable"], {"default": "enable"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}], "scale_stick_for_xinsr_cn": [["disable", "enable"], {"default": "disable"}]}}, "input_order": {"required": ["image"], "optional": ["detect_hand", "detect_body", "detect_face", "resolution", "scale_stick_for_xinsr_cn"]}, "output": ["IMAGE", "POSE_KEYPOINT"], "output_is_list": [false, false], "output_name": ["IMAGE", "POSE_KEYPOINT"], "name": "OpenposePreprocessor", "display_name": "OpenPose Pose", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Faces and Poses Estimators", "output_node": false}, "HEDPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"safe": [["enable", "disable"], {"default": "enable"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["safe", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "HEDPreprocessor", "display_name": "HED Soft-Edge Lines", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "FakeScribblePreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"safe": [["enable", "disable"], {"default": "enable"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["safe", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "FakeScribblePreprocessor", "display_name": "Fake Scribble Lines (aka scribble_hed)", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "DSINE-NormalMapPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"fov": ["FLOAT", {"default": 60.0, "min": 0, "max": 365.0, "step": 0.01}], "iterations": ["INT", {"default": 5, "min": 1, "max": 20, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["fov", "iterations", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "DSINE-NormalMapPreprocessor", "display_name": "DSINE Normal Map", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "DWPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"detect_hand": [["enable", "disable"], {"default": "enable"}], "detect_body": [["enable", "disable"], {"default": "enable"}], "detect_face": [["enable", "disable"], {"default": "enable"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}], "bbox_detector": [["yolox_l.torchscript.pt", "yolox_l.onnx", "yolo_nas_l_fp16.onnx", "yolo_nas_m_fp16.onnx", "yolo_nas_s_fp16.onnx"], {"default": "yolox_l.onnx"}], "pose_estimator": [["dw-ll_ucoco_384_bs5.torchscript.pt", "dw-ll_ucoco_384.onnx", "dw-ll_ucoco.onnx"], {"default": "dw-ll_ucoco_384_bs5.torchscript.pt"}], "scale_stick_for_xinsr_cn": [["disable", "enable"], {"default": "disable"}]}}, "input_order": {"required": ["image"], "optional": ["detect_hand", "detect_body", "detect_face", "resolution", "bbox_detector", "pose_estimator", "scale_stick_for_xinsr_cn"]}, "output": ["IMAGE", "POSE_KEYPOINT"], "output_is_list": [false, false], "output_name": ["IMAGE", "POSE_KEYPOINT"], "name": "DWPreprocessor", "display_name": "DWPose Estimator", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Faces and Poses Estimators", "output_node": false}, "AnimalPosePreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"bbox_detector": [["yolox_l.torchscript.pt", "yolox_l.onnx", "yolo_nas_l_fp16.onnx", "yolo_nas_m_fp16.onnx", "yolo_nas_s_fp16.onnx"], {"default": "yolox_l.torchscript.pt"}], "pose_estimator": [["rtmpose-m_ap10k_256_bs5.torchscript.pt", "rtmpose-m_ap10k_256.onnx"], {"default": "rtmpose-m_ap10k_256_bs5.torchscript.pt"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["bbox_detector", "pose_estimator", "resolution"]}, "output": ["IMAGE", "POSE_KEYPOINT"], "output_is_list": [false, false], "output_name": ["IMAGE", "POSE_KEYPOINT"], "name": "AnimalPosePreprocessor", "display_name": "AnimalPose Estimator (AP10K)", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Faces and Poses Estimators", "output_node": false}, "LineArtPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"coarse": [["disable", "enable"], {"default": "disable"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["coarse", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "LineArtPreprocessor", "display_name": "Realistic Lineart", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "DiffusionEdge_Preprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"environment": [["indoor", "urban", "natrual"], {"default": "indoor"}], "patch_batch_size": ["INT", {"default": 4, "min": 1, "max": 16, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["environment", "patch_batch_size", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "DiffusionEdge_Preprocessor", "display_name": "Diffusion Edge (batch size \u2191 => speed \u2191, VRAM \u2191)", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "ImageLuminanceDetector": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"gamma_correction": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 2.0, "step": 0.01}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["gamma_correction", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageLuminanceDetector", "display_name": "Image Luminance", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Recolor", "output_node": false}, "ImageIntensityDetector": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"gamma_correction": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 2.0, "step": 0.01}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["gamma_correction", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageIntensityDetector", "display_name": "Image Intensity", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Recolor", "output_node": false}, "AnyLineArtPreprocessor_aux": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"merge_with_lineart": [["lineart_standard", "lineart_realisitic", "lineart_anime", "manga_line"], {"default": "lineart_standard"}], "resolution": ["INT", {"default": 1280, "min": 64, "max": 16384, "step": 8}], "lineart_lower_bound": ["FLOAT", {"default": 0, "min": 0, "max": 1, "step": 0.01}], "lineart_upper_bound": ["FLOAT", {"default": 1, "min": 0, "max": 1, "step": 0.01}], "object_min_size": ["INT", {"default": 36, "min": 1, "max": 16384, "step": 1}], "object_connectivity": ["INT", {"default": 1, "min": 1, "max": 16384, "step": 1}]}}, "input_order": {"required": ["image"], "optional": ["merge_with_lineart", "resolution", "lineart_lower_bound", "lineart_upper_bound", "object_min_size", "object_connectivity"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "AnyLineArtPreprocessor_aux", "display_name": "AnyLine Lineart", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "OneFormer-COCO-SemSegPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "OneFormer-COCO-SemSegPreprocessor", "display_name": "OneFormer COCO Segmentor", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Semantic Segmentation", "output_node": false}, "OneFormer-ADE20K-SemSegPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "OneFormer-ADE20K-SemSegPreprocessor", "display_name": "OneFormer ADE20K Segmentor", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Semantic Segmentation", "output_node": false}, "DepthAnythingPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"ckpt_name": [["depth_anything_vitl14.pth", "depth_anything_vitb14.pth", "depth_anything_vits14.pth"], {"default": "depth_anything_vitl14.pth"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["ckpt_name", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "DepthAnythingPreprocessor", "display_name": "Depth Anything", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "Zoe_DepthAnythingPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"environment": [["indoor", "outdoor"], {"default": "indoor"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["environment", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Zoe_DepthAnythingPreprocessor", "display_name": "Zoe Depth Anything", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "MiDaS-NormalMapPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"a": ["FLOAT", {"default": 6.283185307179586, "min": 0.0, "max": 15.707963267948966, "step": 0.01}], "bg_threshold": ["FLOAT", {"default": 0.1, "min": 0, "max": 1, "step": 0.01}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["a", "bg_threshold", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "MiDaS-NormalMapPreprocessor", "display_name": "MiDaS Normal Map", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "MiDaS-DepthMapPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"a": ["FLOAT", {"default": 6.283185307179586, "min": 0.0, "max": 15.707963267948966, "step": 0.01}], "bg_threshold": ["FLOAT", {"default": 0.1, "min": 0, "max": 1, "step": 0.01}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["a", "bg_threshold", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "MiDaS-DepthMapPreprocessor", "display_name": "MiDaS Depth Map", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "Metric3D-DepthMapPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"backbone": [["vit-small", "vit-large", "vit-giant2"], {"default": "vit-small"}], "fx": ["INT", {"default": 1000, "min": 1, "max": 16384, "step": 1}], "fy": ["INT", {"default": 1000, "min": 1, "max": 16384, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["backbone", "fx", "fy", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Metric3D-DepthMapPreprocessor", "display_name": "Metric3D Depth Map", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "Metric3D-NormalMapPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"backbone": [["vit-small", "vit-large", "vit-giant2"], {"default": "vit-small"}], "fx": ["INT", {"default": 1000, "min": 1, "max": 16384, "step": 1}], "fy": ["INT", {"default": 1000, "min": 1, "max": 16384, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["backbone", "fx", "fy", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Metric3D-NormalMapPreprocessor", "display_name": "Metric3D Normal Map", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "AIO_Preprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"preprocessor": [["none", "MediaPipe-FaceMeshPreprocessor", "BinaryPreprocessor", "AnimeLineArtPreprocessor", "MeshGraphormer-DepthMapPreprocessor", "ShufflePreprocessor", "BAE-NormalMapPreprocessor", "DensePosePreprocessor", "AnimeFace_SemSegPreprocessor", "Manga2Anime_LineArt_Preprocessor", "SAMPreprocessor", "LineartStandardPreprocessor", "LeReS-DepthMapPreprocessor", "TEEDPreprocessor", "M-LSDPreprocessor", "ColorPreprocessor", "Zoe-DepthMapPreprocessor", "PiDiNetPreprocessor", "UniFormer-SemSegPreprocessor", "SemSegPreprocessor", "CannyEdgePreprocessor", "DepthAnythingV2Preprocessor", "ScribblePreprocessor", "Scribble_XDoG_Preprocessor", "Scribble_PiDiNet_Preprocessor", "TilePreprocessor", "TTPlanet_TileGF_Preprocessor", "TTPlanet_TileSimple_Preprocessor", "OpenposePreprocessor", "HEDPreprocessor", "FakeScribblePreprocessor", "DSINE-NormalMapPreprocessor", "DWPreprocessor", "AnimalPosePreprocessor", "LineArtPreprocessor", "ImageLuminanceDetector", "ImageIntensityDetector", "AnyLineArtPreprocessor_aux", "OneFormer-COCO-SemSegPreprocessor", "OneFormer-ADE20K-SemSegPreprocessor", "DepthAnythingPreprocessor", "Zoe_DepthAnythingPreprocessor", "MiDaS-NormalMapPreprocessor", "MiDaS-DepthMapPreprocessor", "Metric3D-DepthMapPreprocessor", "Metric3D-NormalMapPreprocessor"], {"default": "none"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["preprocessor", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "AIO_Preprocessor", "display_name": "AIO Aux Preprocessor", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors", "output_node": false}, "ControlNetPreprocessorSelector": {"input": {"required": {"preprocessor": [["none", "MediaPipe-FaceMeshPreprocessor", "BinaryPreprocessor", "AnimeLineArtPreprocessor", "MeshGraphormer-DepthMapPreprocessor", "ShufflePreprocessor", "BAE-NormalMapPreprocessor", "DensePosePreprocessor", "AnimeFace_SemSegPreprocessor", "Manga2Anime_LineArt_Preprocessor", "SAMPreprocessor", "LineartStandardPreprocessor", "LeReS-DepthMapPreprocessor", "TEEDPreprocessor", "M-LSDPreprocessor", "ColorPreprocessor", "Zoe-DepthMapPreprocessor", "PiDiNetPreprocessor", "UniFormer-SemSegPreprocessor", "SemSegPreprocessor", "CannyEdgePreprocessor", "DepthAnythingV2Preprocessor", "ScribblePreprocessor", "Scribble_XDoG_Preprocessor", "Scribble_PiDiNet_Preprocessor", "TilePreprocessor", "TTPlanet_TileGF_Preprocessor", "TTPlanet_TileSimple_Preprocessor", "OpenposePreprocessor", "HEDPreprocessor", "FakeScribblePreprocessor", "DSINE-NormalMapPreprocessor", "DWPreprocessor", "AnimalPosePreprocessor", "LineArtPreprocessor", "ImageLuminanceDetector", "ImageIntensityDetector", "AnyLineArtPreprocessor_aux", "OneFormer-COCO-SemSegPreprocessor", "OneFormer-ADE20K-SemSegPreprocessor", "DepthAnythingPreprocessor", "Zoe_DepthAnythingPreprocessor", "MiDaS-NormalMapPreprocessor", "MiDaS-DepthMapPreprocessor", "Metric3D-DepthMapPreprocessor", "Metric3D-NormalMapPreprocessor"]]}}, "input_order": {"required": ["preprocessor"]}, "output": [["none", "MediaPipe-FaceMeshPreprocessor", "BinaryPreprocessor", "AnimeLineArtPreprocessor", "MeshGraphormer-DepthMapPreprocessor", "ShufflePreprocessor", "BAE-NormalMapPreprocessor", "DensePosePreprocessor", "AnimeFace_SemSegPreprocessor", "Manga2Anime_LineArt_Preprocessor", "SAMPreprocessor", "LineartStandardPreprocessor", "LeReS-DepthMapPreprocessor", "TEEDPreprocessor", "M-LSDPreprocessor", "ColorPreprocessor", "Zoe-DepthMapPreprocessor", "PiDiNetPreprocessor", "UniFormer-SemSegPreprocessor", "SemSegPreprocessor", "CannyEdgePreprocessor", "DepthAnythingV2Preprocessor", "ScribblePreprocessor", "Scribble_XDoG_Preprocessor", "Scribble_PiDiNet_Preprocessor", "TilePreprocessor", "TTPlanet_TileGF_Preprocessor", "TTPlanet_TileSimple_Preprocessor", "OpenposePreprocessor", "HEDPreprocessor", "FakeScribblePreprocessor", "DSINE-NormalMapPreprocessor", "DWPreprocessor", "AnimalPosePreprocessor", "LineArtPreprocessor", "ImageLuminanceDetector", "ImageIntensityDetector", "AnyLineArtPreprocessor_aux", "OneFormer-COCO-SemSegPreprocessor", "OneFormer-ADE20K-SemSegPreprocessor", "DepthAnythingPreprocessor", "Zoe_DepthAnythingPreprocessor", "MiDaS-NormalMapPreprocessor", "MiDaS-DepthMapPreprocessor", "Metric3D-DepthMapPreprocessor", "Metric3D-NormalMapPreprocessor"]], "output_is_list": [false], "output_name": ["preprocessor"], "name": "ControlNetPreprocessorSelector", "display_name": "Preprocessor Selector", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors", "output_node": false}, "PixelPerfectResolution": {"input": {"required": {"original_image": ["IMAGE"], "image_gen_width": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 8}], "image_gen_height": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 8}], "resize_mode": [["Just Resize", "Crop and Resize", "Resize and Fill"], {"default": "Just Resize"}]}}, "input_order": {"required": ["original_image", "image_gen_width", "image_gen_height", "resize_mode"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["RESOLUTION (INT)"], "name": "PixelPerfectResolution", "display_name": "Pixel Perfect Resolution", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors", "output_node": false}, "ImageGenResolutionFromImage": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["IMAGE_GEN_WIDTH (INT)", "IMAGE_GEN_HEIGHT (INT)"], "name": "ImageGenResolutionFromImage", "display_name": "Generation Resolution From Image", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors", "output_node": false}, "ImageGenResolutionFromLatent": {"input": {"required": {"latent": ["LATENT"]}}, "input_order": {"required": ["latent"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["IMAGE_GEN_WIDTH (INT)", "IMAGE_GEN_HEIGHT (INT)"], "name": "ImageGenResolutionFromLatent", "display_name": "Generation Resolution From Latent", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors", "output_node": false}, "HintImageEnchance": {"input": {"required": {"hint_image": ["IMAGE"], "image_gen_width": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 8}], "image_gen_height": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 8}], "resize_mode": [["Just Resize", "Crop and Resize", "Resize and Fill"], {"default": "Just Resize"}]}}, "input_order": {"required": ["hint_image", "image_gen_width", "image_gen_height", "resize_mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "HintImageEnchance", "display_name": "Enchance And Resize Hint Images", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors", "output_node": false}, "ExecuteAllControlNetPreprocessors": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ExecuteAllControlNetPreprocessors", "display_name": "Execute All ControlNet Preprocessors", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors", "output_node": false}, "ControlNetAuxSimpleAddText": {"input": {"required": {"image": ["IMAGE"], "text": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["image", "text"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ControlNetAuxSimpleAddText", "display_name": "ControlNetAuxSimpleAddText", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors", "output_node": false}, "JWImageLoadRGB": {"input": {"required": {"path": ["STRING", {"default": "./image.png"}]}}, "input_order": {"required": ["path"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageLoadRGB", "display_name": "Image Load RGB", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageLoadRGBA": {"input": {"required": {"path": ["STRING", {"default": "./image.png"}]}}, "input_order": {"required": ["path"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "JWImageLoadRGBA", "display_name": "Image Load RGBA", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWLoadImagesFromString": {"input": {"required": {"paths": ["STRING", {"default": "./frame000001.png\n./frame000002.png\n./frame000003.png", "multiline": true, "dynamicPrompts": false}], "ignore_missing_images": [["false", "true"], {"default": "false"}]}}, "input_order": {"required": ["paths", "ignore_missing_images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWLoadImagesFromString", "display_name": "Load Images From String", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageSaveToPath": {"input": {"required": {"path": ["STRING", {"default": "./image.png"}], "image": ["IMAGE"], "overwrite": [["false", "true"], {"default": "true"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["path", "image", "overwrite"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "JWImageSaveToPath", "display_name": "Image Save To Path", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": true}, "JWImageExtractFromBatch": {"input": {"required": {"images": ["IMAGE"], "index": ["INT", {"default": 0, "min": 0, "step": 1}]}}, "input_order": {"required": ["images", "index"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageExtractFromBatch", "display_name": "Image Extract From Batch", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageBatchCount": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "JWImageBatchCount", "display_name": "Get Image Batch Count", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageResize": {"input": {"required": {"image": ["IMAGE"], "height": ["INT", {"default": 512, "min": 0, "step": 1, "max": 99999}], "width": ["INT", {"default": 512, "min": 0, "step": 1, "max": 99999}], "interpolation_mode": [["bicubic", "bilinear", "nearest", "nearest exact"]]}}, "input_order": {"required": ["image", "height", "width", "interpolation_mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageResize", "display_name": "Image Resize", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageFlip": {"input": {"required": {"image": ["IMAGE"], "direction": [["horizontal", "vertical"], {"default": "horizontal"}]}}, "input_order": {"required": ["image", "direction"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageFlip", "display_name": "Image Flip", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWMaskResize": {"input": {"required": {"mask": ["MASK"], "height": ["INT", {"default": 512, "min": 0, "step": 1, "max": 99999}], "width": ["INT", {"default": 512, "min": 0, "step": 1, "max": 99999}], "interpolation_mode": [["bicubic", "bilinear", "nearest", "nearest exact"]]}}, "input_order": {"required": ["mask", "height", "width", "interpolation_mode"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "JWMaskResize", "display_name": "Mask Resize", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWMaskLikeImageSize": {"input": {"required": {"image": ["IMAGE"], "value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "value"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "JWMaskLikeImageSize", "display_name": "Mask Like Image Size", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageResizeToSquare": {"input": {"required": {"image": ["IMAGE"], "size": ["INT", {"default": 512, "min": 0, "step": 1, "max": 99999}], "interpolation_mode": [["bicubic", "bilinear", "nearest", "nearest exact"]]}}, "input_order": {"required": ["image", "size", "interpolation_mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageResizeToSquare", "display_name": "Image Resize to Square", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageResizeByFactor": {"input": {"required": {"image": ["IMAGE"], "factor": ["FLOAT", {"default": 1, "min": 0, "step": 0.01, "max": 99999}], "interpolation_mode": [["bicubic", "bilinear", "nearest", "nearest exact"]]}}, "input_order": {"required": ["image", "factor", "interpolation_mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageResizeByFactor", "display_name": "Image Resize by Factor", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageResizeByShorterSide": {"input": {"required": {"image": ["IMAGE"], "size": ["INT", {"default": 512, "min": 0, "step": 1, "max": 99999}], "interpolation_mode": [["bicubic", "bilinear", "nearest", "nearest exact"]]}}, "input_order": {"required": ["image", "size", "interpolation_mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageResizeByShorterSide", "display_name": "Image Resize by Shorter Side", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageResizeByLongerSide": {"input": {"required": {"image": ["IMAGE"], "size": ["INT", {"default": 512, "min": 0, "step": 1, "max": 99999}], "interpolation_mode": [["bicubic", "bilinear", "nearest", "nearest exact"]]}}, "input_order": {"required": ["image", "size", "interpolation_mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageResizeByLongerSide", "display_name": "Image Resize by Longer Side", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageResizeToClosestSDXLResolution": {"input": {"required": {"image": ["IMAGE"], "interpolation_mode": [["bicubic", "bilinear", "nearest", "nearest exact"]]}}, "input_order": {"required": ["image", "interpolation_mode"]}, "output": ["IMAGE", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "WIDTH", "HEIGHT"], "name": "JWImageResizeToClosestSDXLResolution", "display_name": "Image Resize to Closest SDXL Resolution", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageCropToClosestSDXLResolution": {"input": {"required": {"image": ["IMAGE"], "interpolation_mode": [["bicubic", "bilinear", "nearest", "nearest exact"]]}}, "input_order": {"required": ["image", "interpolation_mode"]}, "output": ["IMAGE", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "WIDTH", "HEIGHT"], "name": "JWImageCropToClosestSDXLResolution", "display_name": "Image Crop to Closest SDXL Resolution", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageLoadRGBFromClipboard": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageLoadRGBFromClipboard", "display_name": "Image Load RGB From Clipboard", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageLoadRGBA From Clipboard": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "JWImageLoadRGBA From Clipboard", "display_name": "Image Load RGBA From Clipboard", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWInteger": {"input": {"required": {"value": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["value"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "JWInteger", "display_name": "Integer", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWIntegerToFloat": {"input": {"required": {"value": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWIntegerToFloat", "display_name": "Integer to Float", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWIntegerToString": {"input": {"required": {"value": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "format_string": ["STRING", {"default": "{:04d}", "multiline": false, "dynamicPrompts": false}]}}, "input_order": {"required": ["value", "format_string"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JWIntegerToString", "display_name": "Integer to String", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWIntegerAdd": {"input": {"required": {"a": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "b": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["a", "b"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "JWIntegerAdd", "display_name": "Integer Add", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWIntegerSub": {"input": {"required": {"a": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "b": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["a", "b"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "JWIntegerSub", "display_name": "Integer Subtract", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWIntegerMul": {"input": {"required": {"a": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "b": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["a", "b"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "JWIntegerMul", "display_name": "Integer Multiply", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWIntegerDiv": {"input": {"required": {"a": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "b": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["a", "b"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWIntegerDiv", "display_name": "Integer Divide", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWIntegerAbsolute": {"input": {"required": {"value": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["value"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "JWIntegerAbsolute", "display_name": "Integer Absolute Value", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWIntegerMin": {"input": {"required": {"a": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "b": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["a", "b"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "JWIntegerMin", "display_name": "Integer Minimum", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWIntegerMax": {"input": {"required": {"a": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "b": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["a", "b"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "JWIntegerMax", "display_name": "Integer Maximum", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWFloat": {"input": {"required": {"value": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWFloat", "display_name": "Float", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWFloatToInteger": {"input": {"required": {"value": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}], "mode": [["round", "floor", "ceiling"]]}}, "input_order": {"required": ["value", "mode"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "JWFloatToInteger", "display_name": "Float to Integer", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWFloatToString": {"input": {"required": {"value": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}], "format_string": ["STRING", {"default": "{:.6g}", "multiline": false, "dynamicPrompts": false}]}}, "input_order": {"required": ["value", "format_string"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JWFloatToString", "display_name": "Float to String", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWFloatAdd": {"input": {"required": {"a": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}], "b": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}]}}, "input_order": {"required": ["a", "b"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWFloatAdd", "display_name": "Float Add", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWFloatSub": {"input": {"required": {"a": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}], "b": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}]}}, "input_order": {"required": ["a", "b"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWFloatSub", "display_name": "Float Subtract", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWFloatMul": {"input": {"required": {"a": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}], "b": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}]}}, "input_order": {"required": ["a", "b"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWFloatMul", "display_name": "Float Multiply", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWFloatDiv": {"input": {"required": {"a": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}], "b": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}]}}, "input_order": {"required": ["a", "b"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWFloatDiv", "display_name": "Float Divide", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWFloatAbsolute": {"input": {"required": {"value": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWFloatAbsolute", "display_name": "Float Absolute Value", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWFloatMin": {"input": {"required": {"a": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}], "b": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}]}}, "input_order": {"required": ["a", "b"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWFloatMin", "display_name": "Float Minimum", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWFloatMax": {"input": {"required": {"a": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}], "b": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}]}}, "input_order": {"required": ["a", "b"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWFloatMax", "display_name": "Float Maximum", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWString": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": false, "dynamicPrompts": false}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JWString", "display_name": "String", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWStringToInteger": {"input": {"required": {"text": ["STRING", {"default": "0", "multiline": false, "dynamicPrompts": false}]}}, "input_order": {"required": ["text"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "JWStringToInteger", "display_name": "String to Integer", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWStringToFloat": {"input": {"required": {"text": ["STRING", {"default": "0.0", "multiline": false, "dynamicPrompts": false}]}}, "input_order": {"required": ["text"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWStringToFloat", "display_name": "String to Float", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWStringMultiline": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true, "dynamicPrompts": false}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JWStringMultiline", "display_name": "String (Multiline)", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWStringConcat": {"input": {"required": {"a": ["STRING", {"default": "", "multiline": false, "dynamicPrompts": false}], "b": ["STRING", {"default": "", "multiline": false, "dynamicPrompts": false}]}}, "input_order": {"required": ["a", "b"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JWStringConcat", "display_name": "String Concatenate", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWStringReplace": {"input": {"required": {"source": ["STRING", {"default": "", "multiline": false, "dynamicPrompts": false}], "to_replace": ["STRING", {"default": "", "multiline": false, "dynamicPrompts": false}], "replace_with": ["STRING", {"default": "", "multiline": false, "dynamicPrompts": false}]}}, "input_order": {"required": ["source", "to_replace", "replace_with"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JWStringReplace", "display_name": "String Replace", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWStringSplit": {"input": {"required": {"source": ["STRING", {"default": "a,b", "multiline": false, "dynamicPrompts": false}], "split_by": ["STRING", {"default": ",", "multiline": false, "dynamicPrompts": false}], "from_right": [["false", "true"]]}}, "input_order": {"required": ["source", "split_by", "from_right"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "STRING"], "name": "JWStringSplit", "display_name": "String Split", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWStringGetLine": {"input": {"required": {"source": ["STRING", {"default": "", "multiline": false, "dynamicPrompts": false}], "line_index": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["source", "line_index"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JWStringGetLine", "display_name": "String Get Line", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWStringUnescape": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": false, "dynamicPrompts": false}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JWStringUnescape", "display_name": "String Unescape", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "RAFTEstimate": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"]}}, "input_order": {"required": ["image_a", "image_b"]}, "output": ["RAFT_FLOW"], "output_is_list": [false], "output_name": ["RAFT_FLOW"], "name": "RAFTEstimate", "display_name": "RAFT Estimate", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "RAFTFlowToImage": {"input": {"required": {"raft_flow": ["RAFT_FLOW"]}}, "input_order": {"required": ["raft_flow"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RAFTFlowToImage", "display_name": "RAFT Flow to Image", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "RAFTLoadFlowFromEXRChannels": {"input": {"required": {"path": ["STRING", {"default": ""}], "x_channel": [["R", "G", "B", "A"], {"default": "R"}], "y_channel": [["R", "G", "B", "A"], {"default": "G"}], "invert_x": [["false", "true"], {"default": "true"}], "invert_y": [["false", "true"], {"default": "false"}]}}, "input_order": {"required": ["path", "x_channel", "y_channel", "invert_x", "invert_y"]}, "output": ["RAFT_FLOW"], "output_is_list": [false], "output_name": ["RAFT_FLOW"], "name": "RAFTLoadFlowFromEXRChannels", "display_name": "RAFT Load Flow from EXR Channels", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageStackChannels": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"]}}, "input_order": {"required": ["image_a", "image_b"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageStackChannels", "display_name": "Image Stack Channels", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageMix": {"input": {"required": {"blend_type": [["mix", "multiply"], {"default": "mix"}], "factor": ["FLOAT", {"min": 0, "max": 1, "step": 0.01, "default": 0.5}], "image_a": ["IMAGE"], "image_b": ["IMAGE"]}}, "input_order": {"required": ["blend_type", "factor", "image_a", "image_b"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageMix", "display_name": "Image Mix", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageContrast": {"input": {"required": {"image": ["IMAGE"], "factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 0.01}]}}, "input_order": {"required": ["image", "factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageContrast", "display_name": "Image Contrast", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageSaturation": {"input": {"required": {"image": ["IMAGE"], "factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 0.01}]}}, "input_order": {"required": ["image", "factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageSaturation", "display_name": "Image Saturation", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageLevels": {"input": {"required": {"image": ["IMAGE"], "min": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "max": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "min", "max"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageLevels", "display_name": "Image Levels", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWDatetimeString": {"input": {"required": {"format": ["STRING", {"default": "%Y-%m-%dT%H:%M:%S"}]}}, "input_order": {"required": ["format"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JWDatetimeString", "display_name": "Datetime String", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWLoadImageSequence": {"input": {"required": {"path_pattern": ["STRING", {"default": "./frame{:06d}.png", "multiline": false}], "start_index": ["INT", {"default": 0, "min": 0, "step": 1}], "frame_count": ["INT", {"default": 16, "min": 1, "step": 1}], "ignore_missing_images": [["false", "true"], {"default": "false"}]}}, "input_order": {"required": ["path_pattern", "start_index", "frame_count", "ignore_missing_images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWLoadImageSequence", "display_name": "Batch Load Image Sequence", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWLoadImageSequenceWithStopIndex": {"input": {"required": {"path_pattern": ["STRING", {"default": "./frame{:06d}.png", "multiline": false}], "start_index": ["INT", {"default": 0, "min": 0, "step": 1, "max": 999999}], "stop_index": ["INT", {"default": 16, "min": 1, "step": 1, "max": 999999}], "inclusive": [["false", "true"], {"default": "false"}], "ignore_missing_images": [["false", "true"], {"default": "false"}]}}, "input_order": {"required": ["path_pattern", "start_index", "stop_index", "inclusive", "ignore_missing_images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWLoadImageSequenceWithStopIndex", "display_name": "Batch Load Image Sequence With Stop Index", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageSequenceExtractFromBatch": {"input": {"required": {"images": ["IMAGE"], "i_start": ["INT", {"default": 0, "min": 0, "step": 1}], "i_stop": ["INT", {"default": 0, "min": 0, "step": 1}], "inclusive": [["false", "true"], {"default": "false"}]}}, "input_order": {"required": ["images", "i_start", "i_stop", "inclusive"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageSequenceExtractFromBatch", "display_name": "Extract Image Sequence From Batch", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWSaveImageSequence": {"input": {"required": {"images": ["IMAGE"], "path_pattern": ["STRING", {"default": "./frame{:06d}.png", "multiline": false}], "start_index": ["INT", {"default": 0, "min": 0, "step": 1}], "overwrite": [["false", "true"], {"default": "true"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "path_pattern", "start_index", "overwrite"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "JWSaveImageSequence", "display_name": "Batch Save Image Sequence", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": true}, "JWLoopImageSequence": {"input": {"required": {"images": ["IMAGE"], "target_frames": ["INT", {"default": 16, "step": 1}]}}, "input_order": {"required": ["images", "target_frames"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWLoopImageSequence", "display_name": "Loop Image Sequence", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWMaskSequenceFromMask": {"input": {"required": {"mask": ["MASK"], "batch_size": ["INT", {"default": 1, "min": 1, "step": 1}]}}, "input_order": {"required": ["mask", "batch_size"]}, "output": ["MASK_SEQUENCE"], "output_is_list": [false], "output_name": ["MASK_SEQUENCE"], "name": "JWMaskSequenceFromMask", "display_name": "Mask Sequence From Mask", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWMaskSequenceJoin": {"input": {"required": {"mask_sequence_1": ["MASK_SEQUENCE"], "mask_sequence_2": ["MASK_SEQUENCE"]}}, "input_order": {"required": ["mask_sequence_1", "mask_sequence_2"]}, "output": ["MASK_SEQUENCE"], "output_is_list": [false], "output_name": ["MASK_SEQUENCE"], "name": "JWMaskSequenceJoin", "display_name": "Join Mask Sequence", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWMaskSequenceApplyToLatent": {"input": {"required": {"samples": ["LATENT"], "mask_sequence": ["MASK_SEQUENCE"]}}, "input_order": {"required": ["samples", "mask_sequence"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "JWMaskSequenceApplyToLatent", "display_name": "Apply Mask Sequence to Latent", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageLoadRGBIfExists": {"input": {"required": {"default": ["IMAGE"], "path": ["STRING", {"default": "./image.png"}]}}, "input_order": {"required": ["default", "path"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageLoadRGBIfExists", "display_name": "Image Load RGB If Exists", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "KSampler Gradually Adding More Denoise (efficient)": {"input": {"required": {"model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "start_denoise": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "denoise_increment": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.1}], "denoise_increment_steps": ["INT", {"default": 20, "min": 1, "max": 10000}]}, "optional": {"optional_vae": ["VAE"]}}, "input_order": {"required": ["model", "positive", "negative", "latent_image", "seed", "steps", "cfg", "sampler_name", "scheduler", "start_denoise", "denoise_increment", "denoise_increment_steps"], "optional": ["optional_vae"]}, "output": ["MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE"], "output_is_list": [false, false, false, false, false], "output_name": ["MODEL", "CONDITIONING+", "CONDITIONING-", "LATENT", "VAE"], "name": "KSampler Gradually Adding More Denoise (efficient)", "display_name": "KSampler Gradually Adding More Denoise (efficient)", "description": "", "python_module": "custom_nodes.ComfyUI-Frame-Interpolation", "category": "ComfyUI-Frame-Interpolation/others", "output_node": true}, "GMFSS Fortuna VFI": {"input": {"required": {"ckpt_name": [["GMFSS_fortuna_union", "GMFSS_fortuna"]], "frames": ["IMAGE"], "clear_cache_after_n_frames": ["INT", {"default": 10, "min": 1, "max": 1000}], "multiplier": ["INT", {"default": 2, "min": 2, "max": 1000}]}, "optional": {"optional_interpolation_states": ["INTERPOLATION_STATES"]}}, "input_order": {"required": ["ckpt_name", "frames", "clear_cache_after_n_frames", "multiplier"], "optional": ["optional_interpolation_states"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "GMFSS Fortuna VFI", "display_name": "GMFSS Fortuna VFI", "description": "", "python_module": "custom_nodes.ComfyUI-Frame-Interpolation", "category": "ComfyUI-Frame-Interpolation/VFI", "output_node": false}, "IFRNet VFI": {"input": {"required": {"ckpt_name": [["IFRNet_S_Vimeo90K.pth", "IFRNet_L_Vimeo90K.pth", "IFRNet_S_GoPro.pth", "IFRNet_L_GoPro.pth"]], "frames": ["IMAGE"], "clear_cache_after_n_frames": ["INT", {"default": 10, "min": 1, "max": 1000}], "multiplier": ["INT", {"default": 2, "min": 2, "max": 1000}], "scale_factor": [[0.25, 0.5, 1.0, 2.0, 4.0], {"default": 1.0}]}, "optional": {"optional_interpolation_states": ["INTERPOLATION_STATES"]}}, "input_order": {"required": ["ckpt_name", "frames", "clear_cache_after_n_frames", "multiplier", "scale_factor"], "optional": ["optional_interpolation_states"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "IFRNet VFI", "display_name": "IFRNet VFI", "description": "", "python_module": "custom_nodes.ComfyUI-Frame-Interpolation", "category": "ComfyUI-Frame-Interpolation/VFI", "output_node": false}, "IFUnet VFI": {"input": {"required": {"ckpt_name": [["IFUNet.pth"]], "frames": ["IMAGE"], "clear_cache_after_n_frames": ["INT", {"default": 10, "min": 1, "max": 1000}], "multiplier": ["INT", {"default": 2, "min": 2, "max": 1000}], "scale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100, "step": 0.1}], "ensemble": ["BOOLEAN", {"default": true}]}, "optional": {"optional_interpolation_states": ["INTERPOLATION_STATES"]}}, "input_order": {"required": ["ckpt_name", "frames", "clear_cache_after_n_frames", "multiplier", "scale_factor", "ensemble"], "optional": ["optional_interpolation_states"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "IFUnet VFI", "display_name": "IFUnet VFI", "description": "", "python_module": "custom_nodes.ComfyUI-Frame-Interpolation", "category": "ComfyUI-Frame-Interpolation/VFI", "output_node": false}, "M2M VFI": {"input": {"required": {"ckpt_name": [["M2M.pth"]], "frames": ["IMAGE"], "clear_cache_after_n_frames": ["INT", {"default": 10, "min": 1, "max": 1000}], "multiplier": ["INT", {"default": 2, "min": 2, "max": 1000}]}, "optional": {"optional_interpolation_states": ["INTERPOLATION_STATES"]}}, "input_order": {"required": ["ckpt_name", "frames", "clear_cache_after_n_frames", "multiplier"], "optional": ["optional_interpolation_states"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "M2M VFI", "display_name": "M2M VFI", "description": "", "python_module": "custom_nodes.ComfyUI-Frame-Interpolation", "category": "ComfyUI-Frame-Interpolation/VFI", "output_node": false}, "RIFE VFI": {"input": {"required": {"ckpt_name": [["rife40.pth", "rife41.pth", "sudo_rife4_269.662_testV1_scale1.pth", "rife42.pth", "rife43.pth", "rife44.pth", "rife45.pth", "rife46.pth", "rife47.pth", "rife48.pth", "rife49.pth"], {"default": "rife47.pth"}], "frames": ["IMAGE"], "clear_cache_after_n_frames": ["INT", {"default": 10, "min": 1, "max": 1000}], "multiplier": ["INT", {"default": 2, "min": 1}], "fast_mode": ["BOOLEAN", {"default": true}], "ensemble": ["BOOLEAN", {"default": true}], "scale_factor": [[0.25, 0.5, 1.0, 2.0, 4.0], {"default": 1.0}]}, "optional": {"optional_interpolation_states": ["INTERPOLATION_STATES"]}}, "input_order": {"required": ["ckpt_name", "frames", "clear_cache_after_n_frames", "multiplier", "fast_mode", "ensemble", "scale_factor"], "optional": ["optional_interpolation_states"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RIFE VFI", "display_name": "RIFE VFI (recommend rife47 and rife49)", "description": "", "python_module": "custom_nodes.ComfyUI-Frame-Interpolation", "category": "ComfyUI-Frame-Interpolation/VFI", "output_node": false}, "Sepconv VFI": {"input": {"required": {"ckpt_name": [["sepconv.pth"]], "frames": ["IMAGE"], "clear_cache_after_n_frames": ["INT", {"default": 10, "min": 1, "max": 1000}], "multiplier": ["INT", {"default": 2, "min": 2, "max": 1000}]}, "optional": {"optional_interpolation_states": ["INTERPOLATION_STATES"]}}, "input_order": {"required": ["ckpt_name", "frames", "clear_cache_after_n_frames", "multiplier"], "optional": ["optional_interpolation_states"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Sepconv VFI", "display_name": "Sepconv VFI", "description": "", "python_module": "custom_nodes.ComfyUI-Frame-Interpolation", "category": "ComfyUI-Frame-Interpolation/VFI", "output_node": false}, "AMT VFI": {"input": {"required": {"ckpt_name": [["amt-s.pth", "amt-l.pth", "amt-g.pth", "gopro_amt-s.pth"]], "frames": ["IMAGE"], "clear_cache_after_n_frames": ["INT", {"default": 1, "min": 1, "max": 100}], "multiplier": ["INT", {"default": 2, "min": 2, "max": 1000}]}, "optional": {"optional_interpolation_states": ["INTERPOLATION_STATES"]}}, "input_order": {"required": ["ckpt_name", "frames", "clear_cache_after_n_frames", "multiplier"], "optional": ["optional_interpolation_states"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "AMT VFI", "display_name": "AMT VFI", "description": "", "python_module": "custom_nodes.ComfyUI-Frame-Interpolation", "category": "ComfyUI-Frame-Interpolation/VFI", "output_node": false}, "FILM VFI": {"input": {"required": {"ckpt_name": [["film_net_fp32.pt"]], "frames": ["IMAGE"], "clear_cache_after_n_frames": ["INT", {"default": 10, "min": 1, "max": 1000}], "multiplier": ["INT", {"default": 2, "min": 2, "max": 1000}]}, "optional": {"optional_interpolation_states": ["INTERPOLATION_STATES"]}}, "input_order": {"required": ["ckpt_name", "frames", "clear_cache_after_n_frames", "multiplier"], "optional": ["optional_interpolation_states"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "FILM VFI", "display_name": "FILM VFI", "description": "", "python_module": "custom_nodes.ComfyUI-Frame-Interpolation", "category": "ComfyUI-Frame-Interpolation/VFI", "output_node": false}, "Make Interpolation State List": {"input": {"required": {"frame_indices": ["STRING", {"multiline": true, "default": "1,2,3"}], "is_skip_list": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["frame_indices", "is_skip_list"]}, "output": ["INTERPOLATION_STATES"], "output_is_list": [false], "output_name": ["INTERPOLATION_STATES"], "name": "Make Interpolation State List", "display_name": "Make Interpolation State List", "description": "", "python_module": "custom_nodes.ComfyUI-Frame-Interpolation", "category": "ComfyUI-Frame-Interpolation/VFI", "output_node": false}, "STMFNet VFI": {"input": {"required": {"ckpt_name": [["stmfnet.pth"]], "frames": ["IMAGE"], "clear_cache_after_n_frames": ["INT", {"default": 10, "min": 1, "max": 1000}], "multiplier": ["INT", {"default": 2, "min": 2, "max": 2}], "duplicate_first_last_frames": ["BOOLEAN", {"default": false}]}, "optional": {"optional_interpolation_states": ["INTERPOLATION_STATES"]}}, "input_order": {"required": ["ckpt_name", "frames", "clear_cache_after_n_frames", "multiplier", "duplicate_first_last_frames"], "optional": ["optional_interpolation_states"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "STMFNet VFI", "display_name": "STMFNet VFI", "description": "", "python_module": "custom_nodes.ComfyUI-Frame-Interpolation", "category": "ComfyUI-Frame-Interpolation/VFI", "output_node": false}, "FLAVR VFI": {"input": {"required": {"ckpt_name": [["FLAVR_2x.pth", "FLAVR_4x.pth", "FLAVR_8x.pth"]], "frames": ["IMAGE"], "clear_cache_after_n_frames": ["INT", {"default": 10, "min": 1, "max": 1000}], "multiplier": ["INT", {"default": 2, "min": 2, "max": 2}], "duplicate_first_last_frames": ["BOOLEAN", {"default": false}]}, "optional": {"optional_interpolation_states": ["INTERPOLATION_STATES"]}}, "input_order": {"required": ["ckpt_name", "frames", "clear_cache_after_n_frames", "multiplier", "duplicate_first_last_frames"], "optional": ["optional_interpolation_states"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "FLAVR VFI", "display_name": "FLAVR VFI", "description": "", "python_module": "custom_nodes.ComfyUI-Frame-Interpolation", "category": "ComfyUI-Frame-Interpolation/VFI", "output_node": false}, "CAIN VFI": {"input": {"required": {"ckpt_name": [["pretrained_cain.pth"]], "frames": ["IMAGE"], "clear_cache_after_n_frames": ["INT", {"default": 10, "min": 1, "max": 1000}], "multiplier": ["INT", {"default": 2, "min": 2, "max": 1000}]}, "optional": {"optional_interpolation_states": ["INTERPOLATION_STATES"]}}, "input_order": {"required": ["ckpt_name", "frames", "clear_cache_after_n_frames", "multiplier"], "optional": ["optional_interpolation_states"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CAIN VFI", "display_name": "CAIN VFI", "description": "", "python_module": "custom_nodes.ComfyUI-Frame-Interpolation", "category": "ComfyUI-Frame-Interpolation/VFI", "output_node": false}, "VFI FloatToInt": {"input": {"required": {"float": ["FLOAT", {"default": 0, "min": 0, "step": 0.01}]}}, "input_order": {"required": ["float"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "VFI FloatToInt", "display_name": "VFI FloatToInt", "description": "", "python_module": "custom_nodes.ComfyUI-Frame-Interpolation", "category": "ComfyUI-Frame-Interpolation", "output_node": false}, "OllamaVision": {"input": {"required": {"images": ["IMAGE"], "query": ["STRING", {"multiline": true, "default": "describe the image"}], "debug": [["enable", "disable"]], "url": ["STRING", {"multiline": false, "default": "http://127.0.0.1:11434"}], "model": [[], {}], "keep_alive": ["INT", {"default": 5, "min": 0, "max": 60, "step": 5}]}}, "input_order": {"required": ["images", "query", "debug", "url", "model", "keep_alive"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["description"], "name": "OllamaVision", "display_name": "Ollama Vision", "description": "", "python_module": "custom_nodes.comfyui-ollama", "category": "Ollama", "output_node": false}, "OllamaGenerate": {"input": {"required": {"prompt": ["STRING", {"multiline": true, "default": "What is Art?"}], "debug": [["enable", "disable"]], "url": ["STRING", {"multiline": false, "default": "http://127.0.0.1:11434"}], "model": [[], {}], "keep_alive": ["INT", {"default": 5, "min": 0, "max": 60, "step": 5}]}}, "input_order": {"required": ["prompt", "debug", "url", "model", "keep_alive"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["response"], "name": "OllamaGenerate", "display_name": "Ollama Generate", "description": "", "python_module": "custom_nodes.comfyui-ollama", "category": "Ollama", "output_node": false}, "OllamaGenerateAdvance": {"input": {"required": {"prompt": ["STRING", {"multiline": true, "default": "What is Art?"}], "debug": ["BOOLEAN", {"default": false}], "url": ["STRING", {"multiline": false, "default": "http://127.0.0.1:11434"}], "model": [[], {}], "system": ["STRING", {"multiline": true, "default": "You are an art expert, gracefully describing your knowledge in art domain.", "title": "system"}], "seed": ["INT", {"default": 1669851815, "min": 0, "max": 2147483648, "step": 1}], "top_k": ["INT", {"default": 40, "min": 0, "max": 100, "step": 1}], "top_p": ["FLOAT", {"default": 0.9, "min": 0, "max": 1, "step": 0.05}], "temperature": ["FLOAT", {"default": 0.8, "min": 0, "max": 1, "step": 0.05}], "num_predict": ["INT", {"default": -1, "min": -2, "max": 2048, "step": 1}], "tfs_z": ["FLOAT", {"default": 1, "min": 1, "max": 1000, "step": 0.05}], "keep_alive": ["INT", {"default": 5, "min": 0, "max": 60, "step": 5}], "keep_context": ["BOOLEAN", {"default": false}]}, "optional": {"context": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["prompt", "debug", "url", "model", "system", "seed", "top_k", "top_p", "temperature", "num_predict", "tfs_z", "keep_alive", "keep_context"], "optional": ["context"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["response", "context"], "name": "OllamaGenerateAdvance", "display_name": "Ollama Generate Advance", "description": "", "python_module": "custom_nodes.comfyui-ollama", "category": "Ollama", "output_node": false}, "OllamaSaveContext": {"input": {"required": {"context": ["STRING", {"forceInput": true}], "filename": ["STRING", {"default": "context"}]}}, "input_order": {"required": ["context", "filename"]}, "output": [], "output_is_list": [], "output_name": [], "name": "OllamaSaveContext", "display_name": "Ollama Save Context", "description": "", "python_module": "custom_nodes.comfyui-ollama", "category": "Ollama", "output_node": true}, "OllamaLoadContext": {"input": {"required": {"context_file": [[], {}]}}, "input_order": {"required": ["context_file"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["context"], "name": "OllamaLoadContext", "display_name": "Ollama Load Context", "description": "", "python_module": "custom_nodes.comfyui-ollama", "category": "Ollama", "output_node": false}, "LoadText|pysssss": {"input": {"required": {"root_dir": [["input", "output", "temp"], {}], "file": [["[none]"], {"pysssss.binding": [{"source": "root_dir", "callback": [{"type": "set", "target": "$this.disabled", "value": true}, {"type": "fetch", "url": "/pysssss/text-file/{$source.value}", "then": [{"type": "set", "target": "$this.options.values", "value": "$result"}, {"type": "validate-combo"}, {"type": "set", "target": "$this.disabled", "value": false}]}]}]}]}}, "input_order": {"required": ["root_dir", "file"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "LoadText|pysssss", "display_name": "Load Text \ud83d\udc0d", "description": "", "python_module": "custom_nodes.ComfyUI-Custom-Scripts", "category": "utils", "output_node": false}, "SaveText|pysssss": {"input": {"required": {"root_dir": [["input", "output", "temp"], {}], "file": ["STRING", {"default": "file.txt"}], "append": [["append", "overwrite", "new only"], {}], "insert": ["BOOLEAN", {"default": true, "label_on": "new line", "label_off": "none", "pysssss.binding": [{"source": "append", "callback": [{"type": "if", "condition": [{"left": "$source.value", "op": "eq", "right": "\"append\""}], "true": [{"type": "set", "target": "$this.disabled", "value": false}], "false": [{"type": "set", "target": "$this.disabled", "value": true}]}]}]}], "text": ["STRING", {"forceInput": true, "multiline": true}]}}, "input_order": {"required": ["root_dir", "file", "append", "insert", "text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "SaveText|pysssss", "display_name": "Save Text \ud83d\udc0d", "description": "", "python_module": "custom_nodes.ComfyUI-Custom-Scripts", "category": "utils", "output_node": true}, "PlaySound|pysssss": {"input": {"required": {"any": ["*", {}], "mode": [["always", "on empty queue"], {}], "volume": ["FLOAT", {"min": 0, "max": 1, "step": 0.1, "default": 0.5}], "file": ["STRING", {"default": "notify.mp3"}]}}, "input_order": {"required": ["any", "mode", "volume", "file"]}, "output": ["*"], "output_is_list": [true], "output_name": ["*"], "name": "PlaySound|pysssss", "display_name": "PlaySound \ud83d\udc0d", "description": "", "python_module": "custom_nodes.ComfyUI-Custom-Scripts", "category": "utils", "output_node": true}, "Repeater|pysssss": {"input": {"required": {"source": ["*", {}], "repeats": ["INT", {"min": 0, "max": 5000, "default": 2}], "output": [["single", "multi"], {}], "node_mode": [["reuse", "create"], {}]}}, "input_order": {"required": ["source", "repeats", "output", "node_mode"]}, "output": ["*"], "output_is_list": [true], "output_name": ["*"], "name": "Repeater|pysssss", "display_name": "Repeater \ud83d\udc0d", "description": "", "python_module": "custom_nodes.ComfyUI-Custom-Scripts", "category": "utils", "output_node": false}, "ReroutePrimitive|pysssss": {"input": {"required": {"value": ["*"]}}, "input_order": {"required": ["value"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "ReroutePrimitive|pysssss", "display_name": "Reroute Primitive \ud83d\udc0d", "description": "", "python_module": "custom_nodes.ComfyUI-Custom-Scripts", "category": "__hidden__", "output_node": false}, "ConstrainImageforVideo|pysssss": {"input": {"required": {"images": ["IMAGE"], "max_width": ["INT", {"default": 1024, "min": 0}], "max_height": ["INT", {"default": 1024, "min": 0}], "min_width": ["INT", {"default": 0, "min": 0}], "min_height": ["INT", {"default": 0, "min": 0}], "crop_if_required": [["yes", "no"], {"default": "no"}]}}, "input_order": {"required": ["images", "max_width", "max_height", "min_width", "min_height", "crop_if_required"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ConstrainImageforVideo|pysssss", "display_name": "Constrain Image for Video \ud83d\udc0d", "description": "", "python_module": "custom_nodes.ComfyUI-Custom-Scripts", "category": "image", "output_node": false}, "ConstrainImage|pysssss": {"input": {"required": {"images": ["IMAGE"], "max_width": ["INT", {"default": 1024, "min": 0}], "max_height": ["INT", {"default": 1024, "min": 0}], "min_width": ["INT", {"default": 0, "min": 0}], "min_height": ["INT", {"default": 0, "min": 0}], "crop_if_required": [["yes", "no"], {"default": "no"}]}}, "input_order": {"required": ["images", "max_width", "max_height", "min_width", "min_height", "crop_if_required"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "ConstrainImage|pysssss", "display_name": "Constrain Image \ud83d\udc0d", "description": "", "python_module": "custom_nodes.ComfyUI-Custom-Scripts", "category": "image", "output_node": false}, "SystemNotification|pysssss": {"input": {"required": {"message": ["STRING", {"default": "Your notification has triggered."}], "any": ["*", {}], "mode": [["always", "on empty queue"], {}]}}, "input_order": {"required": ["message", "any", "mode"]}, "output": ["*"], "output_is_list": [true], "output_name": ["*"], "name": "SystemNotification|pysssss", "display_name": "SystemNotification \ud83d\udc0d", "description": "", "python_module": "custom_nodes.ComfyUI-Custom-Scripts", "category": "utils", "output_node": true}, "ShowText|pysssss": {"input": {"required": {"text": ["STRING", {"forceInput": true}]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["text"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["STRING"], "output_is_list": [true], "output_name": ["STRING"], "name": "ShowText|pysssss", "display_name": "\u2734\ufe0f U-NAI Get Text", "description": "", "python_module": "custom_nodes.ComfyUI-Universal-Styler", "category": "\u2734\ufe0f Universal NAI Nodes", "output_node": true}, "MathExpression|pysssss": {"input": {"required": {"expression": ["STRING", {"multiline": true, "dynamicPrompts": false, "pysssss.autocomplete": {"words": [{"text": "round", "value": "round()", "showValue": false, "hint": "number, dp? = 0", "caretOffset": -1}, {"text": "ceil", "value": "ceil()", "showValue": false, "hint": "number", "caretOffset": -1}, {"text": "floor", "value": "floor()", "showValue": false, "hint": "number", "caretOffset": -1}, {"text": "min", "value": "min()", "showValue": false, "hint": "...numbers", "caretOffset": -1}, {"text": "max", "value": "max()", "showValue": false, "hint": "...numbers", "caretOffset": -1}, {"text": "randomint", "value": "randomint()", "showValue": false, "hint": "min, max", "caretOffset": -1}, {"text": "randomchoice", "value": "randomchoice()", "showValue": false, "hint": "...numbers", "caretOffset": -1}, {"text": "sqrt", "value": "sqrt()", "showValue": false, "hint": "number", "caretOffset": -1}, {"text": "int", "value": "int()", "showValue": false, "hint": "number", "caretOffset": -1}, {"text": "iif", "value": "iif()", "showValue": false, "hint": "value, truepart, falsepart", "caretOffset": -1}], "separator": ""}}]}, "optional": {"a": ["*"], "b": ["*"], "c": ["*"]}, "hidden": {"extra_pnginfo": "EXTRA_PNGINFO", "prompt": "PROMPT"}}, "input_order": {"required": ["expression"], "optional": ["a", "b", "c"], "hidden": ["extra_pnginfo", "prompt"]}, "output": ["INT", "FLOAT"], "output_is_list": [false, false], "output_name": ["INT", "FLOAT"], "name": "MathExpression|pysssss", "display_name": "Math Expression \ud83d\udc0d", "description": "", "python_module": "custom_nodes.ComfyUI-Custom-Scripts", "category": "utils", "output_node": true}, "LoraLoader|pysssss": {"input": {"required": {"model": ["MODEL", {"tooltip": "The diffusion model the LoRA will be applied to."}], "clip": ["CLIP", {"tooltip": "The CLIP model the LoRA will be applied to."}], "lora_name": [[{"content": "add_detail.safetensors", "image": null}, {"content": "AnimateLCM_sd15_t2v_lora.safetensors", "image": null}, {"content": "anime_lora_comfy_converted.safetensors", "image": null}, {"content": "Bending_Illustartion-000007.safetensors", "image": null}, {"content": "Bending_Illustartion-000010.safetensors", "image": null}, {"content": "Bending_Illustartion-000014.safetensors", "image": null}, {"content": "CPA.safetensors", "image": null}, {"content": "disney_lora_comfy_converted.safetensors", "image": null}, {"content": "flux_realism_lora.safetensors", "image": null}, {"content": "flux_spirited_away.safetensors", "image": null}, {"content": "furry_lora.safetensors", "image": null}, {"content": "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "image": null}, {"content": "Kodak Motion Picture Film Style v5_2.safetensors", "image": null}, {"content": "lcm/SD1.5/pytorch_lora_weights.safetensors", "image": null}, {"content": "Lego_XL_v2.1.safetensors", "image": null}, {"content": "legody-v10.safetensors", "image": null}, {"content": "moonies&glorpies_lora.safetensors", "image": null}, {"content": "moonies_lora.safetensors", "image": null}, {"content": "more_details.safetensors", "image": null}, {"content": "pieter.safetensors", "image": null}, {"content": "PixarXL.safetensors", "image": null}, {"content": "ps1_style_SDXL_v2.safetensors", "image": null}, {"content": "Retro_Comic_Flux_v1_renderartist.safetensors", "image": null}, {"content": "RW_pixelart_XL_v1.safetensors", "image": null}, {"content": "RW_PS1v1.safetensors", "image": null}, {"content": "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "image": null}, {"content": "sdxl_lightning_4step_lora.safetensors", "image": null}, {"content": "v3_sd15_adapter.ckpt", "image": null}, {"content": "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "image": null}, {"content": "xl_more_art-full_v1.safetensors", "image": null}, {"content": "zavy-cntrst-sdxl.safetensors", "image": null}, {"content": "zyd232_Ink_Style_Flux1D_v1_1.safetensors", "image": null}], {"tooltip": "The name of the LoRA."}], "strength_model": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "tooltip": "How strongly to modify the diffusion model. This value can be negative."}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "tooltip": "How strongly to modify the CLIP model. This value can be negative."}]}, "optional": {"prompt": ["HIDDEN"]}}, "input_order": {"required": ["model", "clip", "lora_name", "strength_model", "strength_clip"], "optional": ["prompt"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "STRING"], "name": "LoraLoader|pysssss", "display_name": "Lora Loader \ud83d\udc0d", "description": "LoRAs are used to modify diffusion and CLIP models, altering the way in which latents are denoised such as applying styles. Multiple LoRA nodes can be linked together.", "python_module": "custom_nodes.ComfyUI-Custom-Scripts", "category": "loaders", "output_node": false, "output_tooltips": ["The modified diffusion model.", "The modified CLIP model."]}, "CheckpointLoader|pysssss": {"input": {"required": {"ckpt_name": [[{"content": "CRM.pth", "image": null}, {"content": "disneyPixarCartoon_A.safetensors", "image": null}, {"content": "disneyPixarCartoon_v10.safetensors", "image": null}, {"content": "dreamshaper_8.safetensors", "image": null}, {"content": "dreamshaperXL_alpha2Xl10.safetensors", "image": null}, {"content": "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "image": null}, {"content": "epicrealism_naturalSinRC1VAE.safetensors", "image": null}, {"content": "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "image": null}, {"content": "flat2DAnimerge_v45Sharp.safetensors", "image": null}, {"content": "flux1-dev.safetensors", "image": null}, {"content": "juggernaut_reborn.safetensors", "image": null}, {"content": "juggernautXL_juggXIByRundiffusion.safetensors", "image": null}, {"content": "juggernautXL_v9Rdphoto2Lightning.safetensors", "image": null}, {"content": "photon_v1.safetensors", "image": null}, {"content": "photonLCM_v10.safetensors", "image": null}, {"content": "realisticVisionV60B1_v51HyperVAE.safetensors", "image": null}, {"content": "realvisxlV50_v50LightningBakedvae.safetensors", "image": null}, {"content": "sdXL_v10VAEFix.safetensors", "image": null}, {"content": "SUPIR-v0F.ckpt", "image": null}, {"content": "SUPIR-v0Q.ckpt", "image": null}, {"content": "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "image": null}, {"content": "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors", "image": null}], {"tooltip": "The name of the checkpoint (model) to load."}]}, "optional": {"prompt": ["HIDDEN"]}}, "input_order": {"required": ["ckpt_name"], "optional": ["prompt"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "STRING"], "name": "CheckpointLoader|pysssss", "display_name": "Checkpoint Loader \ud83d\udc0d", "description": "Loads a diffusion model checkpoint, diffusion models are used to denoise latents.", "python_module": "custom_nodes.ComfyUI-Custom-Scripts", "category": "loaders", "output_node": false, "output_tooltips": ["The model used for denoising latents.", "The CLIP model used for encoding text prompts.", "The VAE model used for encoding and decoding images to and from latent space."]}, "StringFunction|pysssss": {"input": {"required": {"action": [["append", "replace"], {}], "tidy_tags": [["yes", "no"], {}]}, "optional": {"text_a": ["STRING", {"multiline": true, "dynamicPrompts": false}], "text_b": ["STRING", {"multiline": true, "dynamicPrompts": false}], "text_c": ["STRING", {"multiline": true, "dynamicPrompts": false}]}}, "input_order": {"required": ["action", "tidy_tags"], "optional": ["text_a", "text_b", "text_c"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "StringFunction|pysssss", "display_name": "String Function \ud83d\udc0d", "description": "", "python_module": "custom_nodes.ComfyUI-Custom-Scripts", "category": "utils", "output_node": true}, "Text_Image_Zho": {"input": {"required": {"text": ["STRING", {"default": "ZHOZHOZHO"}], "selected_font": [["Alibaba-PuHuiTi-Heavy", "Alkatra", "AlumniSansCollegiateOne-Regular", "Caveat-VariableFont_wght", "FreeMono", "FreeMonoBoldOblique", "Inconsolata", "Inter-Black-jiII8dog", "Inter-BlackItalic-1413vuen", "Inter-Bold-srYz_-1B", "Inter-BoldItalic-dE_gZyur", "Inter-ExtraBold-TduDdwUu", "Inter-ExtraBoldItalic-BJafRE5I", "Inter-ExtraLight-w5HAp5iF", "Inter-ExtraLightItalic-ZptecSuc", "Inter-Italic-f6M78thn", "Inter-Light-DFhX0qo-", "Inter-LightItalic-fu56_DRc", "Inter-Medium-dDRaJ8tM", "Inter-MediumItalic-zr3roggP", "Inter-Regular-dEFHw1tF", "Inter-SemiBold-PyS8DO2L", "Inter-SemiBoldItalic-uIDb7hsH", "Inter-Thin-eKObIkJC", "Inter-ThinItalic-L6uBn3RP", "Merienda-Black", "Merienda-Bold", "Merienda-ExtraBold", "Merienda-Light", "Merienda-Medium", "Merienda-Regular", "Merienda-SemiBold", "Merienda-VariableFont_wght", "NotoSans-Regular", "NotoSansArabic-Regular", "Oswald-Bold", "OverlockSC-Regular", "PixelifySans-Bold", "Quicksand-Bold", "Roboto-Regular", "ShareTechMono-Regular", "TTNorms-Black", "Ubuntu-Bold", "Ubuntu-BoldItalic", "Ubuntu-Italic", "Ubuntu-Light", "Ubuntu-LightItalic", "Ubuntu-Medium", "Ubuntu-MediumItalic", "Ubuntu-Regular", "UbuntuCondensed-Regular", "UbuntuMono-Bold", "UbuntuMono-BoldItalic", "UbuntuMono-Italic", "UbuntuMono-Regular", "YoungSerif-Regular", "arial", "comic", "font", "impact", "materialdesignicons-webfont", "primeicons-C6QP2o4f", "primeicons-DMOk5skT", "primeicons-MpK4pl85", "primeicons-WjwUDZjB", "\u5e9e\u95e8\u6b63\u9053\u7c97\u4e66\u4f536.0", "\u6709\u7231\u9ed1\u4f53ARHei", "\u6709\u7231\u9ed1\u4f53arheiuhk_bd", "\u738b\u6c49\u5b97\u989c\u6977\u4f53\u7e41"]], "align": [["left", "center", "right"]], "wrap": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "font_size": ["INT", {"default": 12, "min": 1, "max": 2500, "step": 1}], "color": ["COLOR", {"default": "red"}], "outline_size": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "outline_color": ["COLOR", {"default": "blue"}], "margin_x": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "margin_y": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "width": ["INT", {"default": 512, "min": 1, "max": 8096, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 8096, "step": 1}], "swap": ["BOOLEAN", {"default": false}], "arc_text": ["BOOLEAN", {"default": false}], "arc_radius": ["INT", {"default": 100, "min": 1, "max": 2500, "step": 1}], "arc_start_angle": ["INT", {"default": 180, "min": 0, "max": 360, "step": 1}], "arc_end_angle": ["INT", {"default": 360, "min": 0, "max": 360, "step": 1}]}}, "input_order": {"required": ["text", "selected_font", "align", "wrap", "font_size", "color", "outline_size", "outline_color", "margin_x", "margin_y", "width", "height", "swap", "arc_text", "arc_radius", "arc_start_angle", "arc_end_angle"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Text_Image_Zho", "display_name": "Text_Image_Zho", "description": "", "python_module": "custom_nodes.ComfyUI-Text_Image-Composite", "category": "Zho\u6a21\u5757\u7ec4/text", "output_node": false}, "Text_Image_Multiline_Zho": {"input": {"required": {"text": ["STRING", {"default": "ZHOZHOZHO", "multiline": true}], "selected_font": [["Alibaba-PuHuiTi-Heavy", "Alkatra", "AlumniSansCollegiateOne-Regular", "Caveat-VariableFont_wght", "FreeMono", "FreeMonoBoldOblique", "Inconsolata", "Inter-Black-jiII8dog", "Inter-BlackItalic-1413vuen", "Inter-Bold-srYz_-1B", "Inter-BoldItalic-dE_gZyur", "Inter-ExtraBold-TduDdwUu", "Inter-ExtraBoldItalic-BJafRE5I", "Inter-ExtraLight-w5HAp5iF", "Inter-ExtraLightItalic-ZptecSuc", "Inter-Italic-f6M78thn", "Inter-Light-DFhX0qo-", "Inter-LightItalic-fu56_DRc", "Inter-Medium-dDRaJ8tM", "Inter-MediumItalic-zr3roggP", "Inter-Regular-dEFHw1tF", "Inter-SemiBold-PyS8DO2L", "Inter-SemiBoldItalic-uIDb7hsH", "Inter-Thin-eKObIkJC", "Inter-ThinItalic-L6uBn3RP", "Merienda-Black", "Merienda-Bold", "Merienda-ExtraBold", "Merienda-Light", "Merienda-Medium", "Merienda-Regular", "Merienda-SemiBold", "Merienda-VariableFont_wght", "NotoSans-Regular", "NotoSansArabic-Regular", "Oswald-Bold", "OverlockSC-Regular", "PixelifySans-Bold", "Quicksand-Bold", "Roboto-Regular", "ShareTechMono-Regular", "TTNorms-Black", "Ubuntu-Bold", "Ubuntu-BoldItalic", "Ubuntu-Italic", "Ubuntu-Light", "Ubuntu-LightItalic", "Ubuntu-Medium", "Ubuntu-MediumItalic", "Ubuntu-Regular", "UbuntuCondensed-Regular", "UbuntuMono-Bold", "UbuntuMono-BoldItalic", "UbuntuMono-Italic", "UbuntuMono-Regular", "YoungSerif-Regular", "arial", "comic", "font", "impact", "materialdesignicons-webfont", "primeicons-C6QP2o4f", "primeicons-DMOk5skT", "primeicons-MpK4pl85", "primeicons-WjwUDZjB", "\u5e9e\u95e8\u6b63\u9053\u7c97\u4e66\u4f536.0", "\u6709\u7231\u9ed1\u4f53ARHei", "\u6709\u7231\u9ed1\u4f53arheiuhk_bd", "\u738b\u6c49\u5b97\u989c\u6977\u4f53\u7e41"]], "align": [["left", "center", "right"]], "wrap": ["INT", {"default": 120, "min": 0, "max": 8096, "step": 1}], "graphspace": ["INT", {"default": 10, "min": 0, "max": 8096, "step": 1}], "linespace": ["INT", {"default": 2, "min": 0, "max": 8096, "step": 1}], "font_size": ["INT", {"default": 12, "min": 1, "max": 2500, "step": 1}], "color": ["COLOR", {"default": "red"}], "outline_size": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "outline_color": ["COLOR", {"default": "blue"}], "margin_x": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "margin_y": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "width": ["INT", {"default": 512, "min": 1, "max": 8096, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 8096, "step": 1}], "swap": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["text", "selected_font", "align", "wrap", "graphspace", "linespace", "font_size", "color", "outline_size", "outline_color", "margin_x", "margin_y", "width", "height", "swap"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Text_Image_Multiline_Zho", "display_name": "Text_Image_Multiline_Zho", "description": "", "python_module": "custom_nodes.ComfyUI-Text_Image-Composite", "category": "Zho\u6a21\u5757\u7ec4/text", "output_node": false}, "RGB_Image_Zho": {"input": {"required": {"width": ["INT", {"default": 512, "min": 16, "max": 8160}], "height": ["INT", {"default": 512, "min": 16, "max": 8160}], "swap": ["BOOLEAN", {"default": false}], "color": ["COLOR"]}}, "input_order": {"required": ["width", "height", "swap", "color"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RGB_Image_Zho", "display_name": "RGB_Image_Zho", "description": "", "python_module": "custom_nodes.ComfyUI-Text_Image-Composite", "category": "Zho\u6a21\u5757\u7ec4/image", "output_node": false}, "ImageComposite_Zho": {"input": {"required": {"images_a": ["IMAGE"], "images_b": ["IMAGE"], "alpha_a": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "alpha_b": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "images_a_x": ["INT", {"default": 0, "step": 1}], "images_a_y": ["INT", {"default": 0, "step": 1}], "images_b_x": ["INT", {"default": 0, "step": 1}], "images_b_y": ["INT", {"default": 0, "step": 1}], "container_width": ["INT", {"default": 0, "step": 1}], "container_height": ["INT", {"default": 0, "step": 1}], "background": [["images_a", "images_b"]], "method": [["pair", "matrix"]]}}, "input_order": {"required": ["images_a", "images_b", "alpha_a", "alpha_b", "images_a_x", "images_a_y", "images_b_x", "images_b_y", "container_width", "container_height", "background", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageComposite_Zho", "display_name": "ImageComposite_Zho", "description": "", "python_module": "custom_nodes.ComfyUI-Text_Image-Composite", "category": "Zho\u6a21\u5757\u7ec4/image", "output_node": false}, "ImageComposite_BG_Zho": {"input": {"required": {"container": ["IMAGE"], "images_a": ["IMAGE"], "images_b": ["IMAGE"], "alpha_a": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "alpha_b": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "images_a_x": ["INT", {"default": 0, "step": 1}], "images_a_y": ["INT", {"default": 0, "step": 1}], "images_b_x": ["INT", {"default": 0, "step": 1}], "images_b_y": ["INT", {"default": 0, "step": 1}], "background": [["images_a", "images_b"]], "method": [["pair", "matrix"]]}}, "input_order": {"required": ["container", "images_a", "images_b", "alpha_a", "alpha_b", "images_a_x", "images_a_y", "images_b_x", "images_b_y", "background", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageComposite_BG_Zho", "display_name": "ImageComposite_BG_Zho", "description": "", "python_module": "custom_nodes.ComfyUI-Text_Image-Composite", "category": "Zho\u6a21\u5757\u7ec4/image", "output_node": false}, "ImageCompositeBy_Zho": {"input": {"required": {"images_a": ["IMAGE"], "images_b": ["IMAGE"], "alpha_a": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "alpha_b": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "images_a_x": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "images_a_y": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "images_b_x": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "images_b_y": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "background": [["images_a", "images_b"]], "container_size_type": [["max", "sum", "sum_width", "sum_height"]], "method": [["pair", "matrix"]]}}, "input_order": {"required": ["images_a", "images_b", "alpha_a", "alpha_b", "images_a_x", "images_a_y", "images_b_x", "images_b_y", "background", "container_size_type", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageCompositeBy_Zho", "display_name": "ImageCompositeBy_Zho", "description": "", "python_module": "custom_nodes.ComfyUI-Text_Image-Composite", "category": "Zho\u6a21\u5757\u7ec4/image", "output_node": false}, "ImageCompositeBy_BG_Zho": {"input": {"required": {"container": ["IMAGE"], "images_a": ["IMAGE"], "images_b": ["IMAGE"], "alpha_a": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "alpha_b": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "images_a_x": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "images_a_y": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "images_b_x": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "images_b_y": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "background": [["images_a", "images_b"]], "method": [["pair", "matrix"]]}}, "input_order": {"required": ["container", "images_a", "images_b", "alpha_a", "alpha_b", "images_a_x", "images_a_y", "images_b_x", "images_b_y", "background", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageCompositeBy_BG_Zho", "display_name": "ImageCompositeBy_BG_Zho", "description": "", "python_module": "custom_nodes.ComfyUI-Text_Image-Composite", "category": "Zho\u6a21\u5757\u7ec4/image", "output_node": false}, "AlphaChanelAddByMask": {"input": {"required": {"images": ["IMAGE"], "mask": ["MASK"], "method": [["default", "invert"]]}}, "input_order": {"required": ["images", "mask", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "AlphaChanelAddByMask", "display_name": "AlphaChanelAddByMask", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/alpha", "output_node": false}, "Text_Image_Frame_Zho": {"input": {"required": {"number": ["STRING", {"default": "0"}], "frame": ["INT", {"default": 1, "min": 1, "max": 100, "step": 1}], "step": ["INT", {"default": 1, "min": 1, "max": 100, "step": 1}], "selected_font": [["Alibaba-PuHuiTi-Heavy", "Alkatra", "AlumniSansCollegiateOne-Regular", "Caveat-VariableFont_wght", "FreeMono", "FreeMonoBoldOblique", "Inconsolata", "Inter-Black-jiII8dog", "Inter-BlackItalic-1413vuen", "Inter-Bold-srYz_-1B", "Inter-BoldItalic-dE_gZyur", "Inter-ExtraBold-TduDdwUu", "Inter-ExtraBoldItalic-BJafRE5I", "Inter-ExtraLight-w5HAp5iF", "Inter-ExtraLightItalic-ZptecSuc", "Inter-Italic-f6M78thn", "Inter-Light-DFhX0qo-", "Inter-LightItalic-fu56_DRc", "Inter-Medium-dDRaJ8tM", "Inter-MediumItalic-zr3roggP", "Inter-Regular-dEFHw1tF", "Inter-SemiBold-PyS8DO2L", "Inter-SemiBoldItalic-uIDb7hsH", "Inter-Thin-eKObIkJC", "Inter-ThinItalic-L6uBn3RP", "Merienda-Black", "Merienda-Bold", "Merienda-ExtraBold", "Merienda-Light", "Merienda-Medium", "Merienda-Regular", "Merienda-SemiBold", "Merienda-VariableFont_wght", "NotoSans-Regular", "NotoSansArabic-Regular", "Oswald-Bold", "OverlockSC-Regular", "PixelifySans-Bold", "Quicksand-Bold", "Roboto-Regular", "ShareTechMono-Regular", "TTNorms-Black", "Ubuntu-Bold", "Ubuntu-BoldItalic", "Ubuntu-Italic", "Ubuntu-Light", "Ubuntu-LightItalic", "Ubuntu-Medium", "Ubuntu-MediumItalic", "Ubuntu-Regular", "UbuntuCondensed-Regular", "UbuntuMono-Bold", "UbuntuMono-BoldItalic", "UbuntuMono-Italic", "UbuntuMono-Regular", "YoungSerif-Regular", "arial", "comic", "font", "impact", "materialdesignicons-webfont", "primeicons-C6QP2o4f", "primeicons-DMOk5skT", "primeicons-MpK4pl85", "primeicons-WjwUDZjB", "\u5e9e\u95e8\u6b63\u9053\u7c97\u4e66\u4f536.0", "\u6709\u7231\u9ed1\u4f53ARHei", "\u6709\u7231\u9ed1\u4f53arheiuhk_bd", "\u738b\u6c49\u5b97\u989c\u6977\u4f53\u7e41"]], "align": [["left", "center", "right"]], "wrap": ["INT", {"default": 10, "min": 0, "max": 8096, "step": 1}], "font_size": ["INT", {"default": 50, "min": 1, "max": 2500, "step": 1}], "color": ["COLOR", {"default": "red"}], "outline_size": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "outline_color": ["COLOR", {"default": "blue"}], "margin_x": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "margin_y": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "width": ["INT", {"default": 512, "min": 1, "max": 8096, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 8096, "step": 1}], "swap": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["number", "frame", "step", "selected_font", "align", "wrap", "font_size", "color", "outline_size", "outline_color", "margin_x", "margin_y", "width", "height", "swap"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Text_Image_Frame_Zho", "display_name": "Text_Image_Frame_Zho", "description": "", "python_module": "custom_nodes.ComfyUI-Text_Image-Composite", "category": "Zho\u6a21\u5757\u7ec4/text", "output_node": false}, "BLIP Model Loader": {"input": {"required": {"blip_model": ["STRING", {"default": "Salesforce/blip-image-captioning-base"}], "vqa_model_id": ["STRING", {"default": "Salesforce/blip-vqa-base"}], "device": [["cuda", "cpu"]]}}, "input_order": {"required": ["blip_model", "vqa_model_id", "device"]}, "output": ["BLIP_MODEL"], "output_is_list": [false], "output_name": ["BLIP_MODEL"], "name": "BLIP Model Loader", "display_name": "BLIP Model Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders", "output_node": false}, "Blend Latents": {"input": {"required": {"latent_a": ["LATENT"], "latent_b": ["LATENT"], "operation": [["add", "multiply", "divide", "subtract", "overlay", "hard_light", "soft_light", "screen", "linear_dodge", "difference", "exclusion", "random"]], "blend": ["FLOAT", {"default": 0.5, "min": 0.01, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["latent_a", "latent_b", "operation", "blend"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "Blend Latents", "display_name": "Blend Latents", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Latent", "output_node": false}, "Bus Node": {"input": {"required": {}, "optional": {"bus": ["BUS"], "model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"]}}, "input_order": {"required": [], "optional": ["bus", "model", "clip", "vae", "positive", "negative"]}, "output": ["BUS", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["bus", "model", "clip", "vae", "positive", "negative"], "name": "Bus Node", "display_name": "Bus Node", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Utilities", "output_node": false}, "Cache Node": {"input": {"required": {"latent_suffix": ["STRING", {"default": "32559048_cache", "multiline": false}], "image_suffix": ["STRING", {"default": "10498380_cache", "multiline": false}], "conditioning_suffix": ["STRING", {"default": "28595396_cache", "multiline": false}]}, "optional": {"output_path": ["STRING", {"default": "/home/ubuntu/Playbook/ComfyUI/custom_nodes/was-node-suite-comfyui/cache", "multiline": false}], "latent": ["LATENT"], "image": ["IMAGE"], "conditioning": ["CONDITIONING"]}}, "input_order": {"required": ["latent_suffix", "image_suffix", "conditioning_suffix"], "optional": ["output_path", "latent", "image", "conditioning"]}, "output": ["STRING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["latent_filename", "image_filename", "conditioning_filename"], "name": "Cache Node", "display_name": "Cache Node", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/IO", "output_node": true}, "Checkpoint Loader": {"input": {"required": {"config_name": [["anything_v3.yaml", "v1-inference.yaml", "v1-inference_clip_skip_2.yaml", "v1-inference_clip_skip_2_fp16.yaml", "v1-inference_fp16.yaml", "v1-inpainting-inference.yaml", "v2-inference-v.yaml", "v2-inference-v_fp32.yaml", "v2-inference.yaml", "v2-inference_fp32.yaml", "v2-inpainting-inference.yaml"]], "ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]]}}, "input_order": {"required": ["config_name", "ckpt_name"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "NAME_STRING"], "name": "Checkpoint Loader", "display_name": "Checkpoint Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders/Advanced", "output_node": false}, "Checkpoint Loader (Simple)": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]]}}, "input_order": {"required": ["ckpt_name"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "NAME_STRING"], "name": "Checkpoint Loader (Simple)", "display_name": "Checkpoint Loader (Simple)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders", "output_node": false}, "CLIPTextEncode (NSP)": {"input": {"required": {"mode": [["Noodle Soup Prompts", "Wildcards"]], "noodle_key": ["STRING", {"default": "__", "multiline": false}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "text": ["STRING", {"multiline": true}], "clip": ["CLIP"]}}, "input_order": {"required": ["mode", "noodle_key", "seed", "text", "clip"]}, "output": ["CONDITIONING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["conditioning", "parsed_text", "raw_text"], "name": "CLIPTextEncode (NSP)", "display_name": "CLIPTextEncode (NSP)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Conditioning", "output_node": true}, "CLIP Input Switch": {"input": {"required": {"clip_a": ["CLIP"], "clip_b": ["CLIP"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["clip_a", "clip_b", "boolean"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIP Input Switch", "display_name": "CLIP Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "CLIP Vision Input Switch": {"input": {"required": {"clip_vision_a": ["CLIP_VISION"], "clip_vision_b": ["CLIP_VISION"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["clip_vision_a", "clip_vision_b", "boolean"]}, "output": ["CLIP_VISION"], "output_is_list": [false], "output_name": ["CLIP_VISION"], "name": "CLIP Vision Input Switch", "display_name": "CLIP Vision Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Conditioning Input Switch": {"input": {"required": {"conditioning_a": ["CONDITIONING"], "conditioning_b": ["CONDITIONING"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["conditioning_a", "conditioning_b", "boolean"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "Conditioning Input Switch", "display_name": "Conditioning Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Constant Number": {"input": {"required": {"number_type": [["integer", "float", "bool"]], "number": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 0.01}]}, "optional": {"number_as_text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["number_type", "number"], "optional": ["number_as_text"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "Constant Number", "display_name": "Constant Number", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number", "output_node": false}, "Create Grid Image": {"input": {"required": {"images_path": ["STRING", {"default": "./ComfyUI/input/", "multiline": false}], "pattern_glob": ["STRING", {"default": "*", "multiline": false}], "include_subfolders": [["false", "true"]], "border_width": ["INT", {"default": 3, "min": 0, "max": 100, "step": 1}], "number_of_columns": ["INT", {"default": 6, "min": 1, "max": 24, "step": 1}], "max_cell_size": ["INT", {"default": 256, "min": 32, "max": 1280, "step": 1}], "border_red": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "border_green": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "border_blue": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["images_path", "pattern_glob", "include_subfolders", "border_width", "number_of_columns", "max_cell_size", "border_red", "border_green", "border_blue"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Create Grid Image", "display_name": "Create Grid Image", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Create Grid Image from Batch": {"input": {"required": {"images": ["IMAGE"], "border_width": ["INT", {"default": 3, "min": 0, "max": 100, "step": 1}], "number_of_columns": ["INT", {"default": 6, "min": 1, "max": 24, "step": 1}], "max_cell_size": ["INT", {"default": 256, "min": 32, "max": 2048, "step": 1}], "border_red": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "border_green": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "border_blue": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["images", "border_width", "number_of_columns", "max_cell_size", "border_red", "border_green", "border_blue"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Create Grid Image from Batch", "display_name": "Create Grid Image from Batch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Create Morph Image": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "transition_frames": ["INT", {"default": 30, "min": 2, "max": 60, "step": 1}], "still_image_delay_ms": ["FLOAT", {"default": 2500.0, "min": 0.1, "max": 60000.0, "step": 0.1}], "duration_ms": ["FLOAT", {"default": 0.1, "min": 0.1, "max": 60000.0, "step": 0.1}], "loops": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "max_size": ["INT", {"default": 512, "min": 128, "max": 1280, "step": 1}], "output_path": ["STRING", {"default": "./ComfyUI/output", "multiline": false}], "filename": ["STRING", {"default": "morph", "multiline": false}], "filetype": [["GIF", "APNG"]]}}, "input_order": {"required": ["image_a", "image_b", "transition_frames", "still_image_delay_ms", "duration_ms", "loops", "max_size", "output_path", "filename", "filetype"]}, "output": ["IMAGE", "IMAGE", "STRING", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["image_a_pass", "image_b_pass", "filepath_text", "filename_text"], "name": "Create Morph Image", "display_name": "Create Morph Image", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Animation", "output_node": false}, "Create Morph Image from Path": {"input": {"required": {"transition_frames": ["INT", {"default": 30, "min": 2, "max": 60, "step": 1}], "still_image_delay_ms": ["FLOAT", {"default": 2500.0, "min": 0.1, "max": 60000.0, "step": 0.1}], "duration_ms": ["FLOAT", {"default": 0.1, "min": 0.1, "max": 60000.0, "step": 0.1}], "loops": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "max_size": ["INT", {"default": 512, "min": 128, "max": 1280, "step": 1}], "input_path": ["STRING", {"default": "./ComfyUI", "multiline": false}], "input_pattern": ["STRING", {"default": "*", "multiline": false}], "output_path": ["STRING", {"default": "./ComfyUI/output", "multiline": false}], "filename": ["STRING", {"default": "morph", "multiline": false}], "filetype": [["GIF", "APNG"]]}}, "input_order": {"required": ["transition_frames", "still_image_delay_ms", "duration_ms", "loops", "max_size", "input_path", "input_pattern", "output_path", "filename", "filetype"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["filepath_text", "filename_text"], "name": "Create Morph Image from Path", "display_name": "Create Morph Image from Path", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Animation", "output_node": false}, "Create Video from Path": {"input": {"required": {"transition_frames": ["INT", {"default": 30, "min": 0, "max": 120, "step": 1}], "image_delay_sec": ["FLOAT", {"default": 2.5, "min": 0.01, "max": 60000.0, "step": 0.01}], "fps": ["INT", {"default": 30, "min": 1, "max": 60.0, "step": 1}], "max_size": ["INT", {"default": 512, "min": 128, "max": 1920, "step": 1}], "input_path": ["STRING", {"default": "./ComfyUI/input", "multiline": false}], "output_path": ["STRING", {"default": "./ComfyUI/output", "multiline": false}], "filename": ["STRING", {"default": "comfy_video", "multiline": false}], "codec": [["AVC1", "FFV1", "H264", "MP4V"]]}}, "input_order": {"required": ["transition_frames", "image_delay_sec", "fps", "max_size", "input_path", "output_path", "filename", "codec"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["filepath_text", "filename_text"], "name": "Create Video from Path", "display_name": "Create Video from Path", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Animation", "output_node": false}, "CLIPSeg Masking": {"input": {"required": {"image": ["IMAGE"], "text": ["STRING", {"default": "", "multiline": false}]}, "optional": {"clipseg_model": ["CLIPSEG_MODEL"]}}, "input_order": {"required": ["image", "text"], "optional": ["clipseg_model"]}, "output": ["MASK", "IMAGE"], "output_is_list": [false, false], "output_name": ["MASK", "MASK_IMAGE"], "name": "CLIPSeg Masking", "display_name": "CLIPSeg Masking", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "CLIPSeg Model Loader": {"input": {"required": {"model": ["STRING", {"default": "CIDAS/clipseg-rd64-refined", "multiline": false}]}}, "input_order": {"required": ["model"]}, "output": ["CLIPSEG_MODEL"], "output_is_list": [false], "output_name": ["clipseg_model"], "name": "CLIPSeg Model Loader", "display_name": "CLIPSeg Model Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders", "output_node": false}, "CLIPSeg Batch Masking": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "text_a": ["STRING", {"default": "", "multiline": false}], "text_b": ["STRING", {"default": "", "multiline": false}]}, "optional": {"image_c": ["IMAGE"], "image_d": ["IMAGE"], "image_e": ["IMAGE"], "image_f": ["IMAGE"], "text_c": ["STRING", {"default": "", "multiline": false}], "text_d": ["STRING", {"default": "", "multiline": false}], "text_e": ["STRING", {"default": "", "multiline": false}], "text_f": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["image_a", "image_b", "text_a", "text_b"], "optional": ["image_c", "image_d", "image_e", "image_f", "text_c", "text_d", "text_e", "text_f"]}, "output": ["IMAGE", "MASK", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["IMAGES_BATCH", "MASKS_BATCH", "MASK_IMAGES_BATCH"], "name": "CLIPSeg Batch Masking", "display_name": "CLIPSeg Batch Masking", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Convert Masks to Images": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGES"], "name": "Convert Masks to Images", "display_name": "Convert Masks to Images", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Control Net Model Input Switch": {"input": {"required": {"control_net_a": ["CONTROL_NET"], "control_net_b": ["CONTROL_NET"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["control_net_a", "control_net_b", "boolean"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "Control Net Model Input Switch", "display_name": "Control Net Model Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Debug Number to Console": {"input": {"required": {"number": ["NUMBER"], "label": ["STRING", {"default": "Debug to Console", "multiline": false}]}}, "input_order": {"required": ["number", "label"]}, "output": ["NUMBER"], "output_is_list": [false], "output_name": ["NUMBER"], "name": "Debug Number to Console", "display_name": "Debug Number to Console", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Debug", "output_node": true}, "Dictionary to Console": {"input": {"required": {"dictionary": ["DICT"], "label": ["STRING", {"default": "Dictionary Output", "multiline": false}]}}, "input_order": {"required": ["dictionary", "label"]}, "output": ["DICT"], "output_is_list": [false], "output_name": ["DICT"], "name": "Dictionary to Console", "display_name": "Dictionary to Console", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Debug", "output_node": true}, "Diffusers Model Loader": {"input": {"required": {"model_path": [["Marigold"]]}}, "input_order": {"required": ["model_path"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "NAME_STRING"], "name": "Diffusers Model Loader", "display_name": "Diffusers Model Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders/Advanced", "output_node": false}, "Diffusers Hub Model Down-Loader": {"input": {"required": {"repo_id": ["STRING", {"multiline": false}], "revision": ["STRING", {"default": "None", "multiline": false}]}}, "input_order": {"required": ["repo_id", "revision"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "NAME_STRING"], "name": "Diffusers Hub Model Down-Loader", "display_name": "Diffusers Hub Model Down-Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders/Advanced", "output_node": false}, "Export API": {"input": {"required": {"save_prompt_api": [["true", "true"]], "output_path": ["STRING", {"default": "./ComfyUI/output/", "multiline": false}], "filename_prefix": ["STRING", {"default": "ComfyUI_Prompt"}], "filename_delimiter": ["STRING", {"default": "_"}], "filename_number_padding": ["INT", {"default": 4, "min": 2, "max": 9, "step": 1}], "parse_text_tokens": ["BOOLEAN", {"default": false}]}, "hidden": {"prompt": "PROMPT"}}, "input_order": {"required": ["save_prompt_api", "output_path", "filename_prefix", "filename_delimiter", "filename_number_padding", "parse_text_tokens"], "hidden": ["prompt"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Export API", "display_name": "Export API", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Debug", "output_node": true}, "Latent Input Switch": {"input": {"required": {"latent_a": ["LATENT"], "latent_b": ["LATENT"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["latent_a", "latent_b", "boolean"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "Latent Input Switch", "display_name": "Latent Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Load Cache": {"input": {"required": {"latent_path": ["STRING", {"default": "", "multiline": false}], "image_path": ["STRING", {"default": "", "multiline": false}], "conditioning_path": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["latent_path", "image_path", "conditioning_path"]}, "output": ["LATENT", "IMAGE", "CONDITIONING"], "output_is_list": [false, false, false], "output_name": ["LATENT", "IMAGE", "CONDITIONING"], "name": "Load Cache", "display_name": "Load Cache", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/IO", "output_node": false}, "Logic Boolean": {"input": {"required": {"boolean": ["FLOAT", {"default": 1, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["boolean"]}, "output": ["BOOLEAN", "NUMBER", "INT", "FLOAT"], "output_is_list": [false, false, false, false], "output_name": ["BOOLEAN", "NUMBER", "INT", "FLOAT"], "name": "Logic Boolean", "display_name": "Logic Boolean", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Logic Boolean Primitive": {"input": {"required": {"boolean": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["boolean"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Logic Boolean Primitive", "display_name": "Logic Boolean Primitive", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Logic Comparison OR": {"input": {"required": {"boolean_a": ["BOOLEAN", {"default": false}], "boolean_b": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["boolean_a", "boolean_b"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Logic Comparison OR", "display_name": "Logic Comparison OR", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Logic Comparison AND": {"input": {"required": {"boolean_a": ["BOOLEAN", {"default": false}], "boolean_b": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["boolean_a", "boolean_b"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Logic Comparison AND", "display_name": "Logic Comparison AND", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Logic Comparison XOR": {"input": {"required": {"boolean_a": ["BOOLEAN", {"default": false}], "boolean_b": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["boolean_a", "boolean_b"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Logic Comparison XOR", "display_name": "Logic Comparison XOR", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Logic NOT": {"input": {"required": {"boolean": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["boolean"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Logic NOT", "display_name": "Logic NOT", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Lora Loader": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "lora_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "clip", "lora_name", "strength_model", "strength_clip"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "NAME_STRING"], "name": "Lora Loader", "display_name": "Lora Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders", "output_node": false}, "Hex to HSL": {"input": {"required": {"hex_color": ["STRING", {"default": "#FF0000"}]}, "optional": {"include_alpha": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["hex_color"], "optional": ["include_alpha"]}, "output": ["INT", "INT", "INT", "FLOAT", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["hue", "saturation", "lightness", "alpha", "hsl"], "name": "Hex to HSL", "display_name": "Hex to HSL", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Utilities", "output_node": false}, "HSL to Hex": {"input": {"required": {"hsl_color": ["STRING", {"default": "hsl(0, 100%, 50%)"}]}}, "input_order": {"required": ["hsl_color"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["hex_color"], "name": "HSL to Hex", "display_name": "HSL to Hex", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Utilities", "output_node": false}, "Image SSAO (Ambient Occlusion)": {"input": {"required": {"images": ["IMAGE"], "depth_images": ["IMAGE"], "strength": ["FLOAT", {"min": 0.0, "max": 5.0, "default": 1.0, "step": 0.01}], "radius": ["FLOAT", {"min": 0.01, "max": 1024, "default": 30, "step": 0.01}], "ao_blur": ["FLOAT", {"min": 0.01, "max": 1024, "default": 2.5, "step": 0.01}], "specular_threshold": ["INT", {"min": 0, "max": 255, "default": 25, "step": 1}], "enable_specular_masking": [["True", "False"]], "tile_size": ["INT", {"min": 1, "max": 512, "default": 1, "step": 1}]}}, "input_order": {"required": ["images", "depth_images", "strength", "radius", "ao_blur", "specular_threshold", "enable_specular_masking", "tile_size"]}, "output": ["IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["composited_images", "ssao_images", "specular_mask_images"], "name": "Image SSAO (Ambient Occlusion)", "display_name": "Image SSAO (Ambient Occlusion)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image SSDO (Direct Occlusion)": {"input": {"required": {"images": ["IMAGE"], "depth_images": ["IMAGE"], "strength": ["FLOAT", {"min": 0.0, "max": 5.0, "default": 1.0, "step": 0.01}], "radius": ["FLOAT", {"min": 0.01, "max": 1024, "default": 30, "step": 0.01}], "specular_threshold": ["INT", {"min": 0, "max": 255, "default": 128, "step": 1}], "colored_occlusion": [["True", "False"]]}}, "input_order": {"required": ["images", "depth_images", "strength", "radius", "specular_threshold", "colored_occlusion"]}, "output": ["IMAGE", "IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false, false], "output_name": ["composited_images", "ssdo_images", "ssdo_image_masks", "light_source_image_masks"], "name": "Image SSDO (Direct Occlusion)", "display_name": "Image SSDO (Direct Occlusion)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Analyze": {"input": {"required": {"image": ["IMAGE"], "mode": [["Black White Levels", "RGB Levels"]]}}, "input_order": {"required": ["image", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Analyze", "display_name": "Image Analyze", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Analyze", "output_node": false}, "Image Aspect Ratio": {"input": {"required": {}, "optional": {"image": ["IMAGE"], "width": ["NUMBER"], "height": ["NUMBER"]}}, "input_order": {"required": [], "optional": ["image", "width", "height"]}, "output": ["NUMBER", "FLOAT", "NUMBER", "STRING", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["aspect_number", "aspect_float", "is_landscape_bool", "aspect_ratio_common", "aspect_type"], "name": "Image Aspect Ratio", "display_name": "Image Aspect Ratio", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Image Batch": {"input": {"required": {}, "optional": {"images_a": ["IMAGE"], "images_b": ["IMAGE"], "images_c": ["IMAGE"], "images_d": ["IMAGE"]}}, "input_order": {"required": [], "optional": ["images_a", "images_b", "images_c", "images_d"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Batch", "display_name": "Image Batch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image", "output_node": false}, "Image Blank": {"input": {"required": {"width": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 1}], "red": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["width", "height", "red", "green", "blue"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Blank", "display_name": "Image Blank", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image", "output_node": false}, "Image Blend by Mask": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "mask": ["IMAGE"], "blend_percentage": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image_a", "image_b", "mask", "blend_percentage"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Blend by Mask", "display_name": "Image Blend by Mask", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image", "output_node": false}, "Image Blend": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "blend_percentage": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image_a", "image_b", "blend_percentage"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Blend", "display_name": "Image Blend", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image", "output_node": false}, "Image Blending Mode": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "mode": [["add", "color", "color_burn", "color_dodge", "darken", "difference", "exclusion", "hard_light", "hue", "lighten", "multiply", "overlay", "screen", "soft_light"]], "blend_percentage": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image_a", "image_b", "mode", "blend_percentage"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Blending Mode", "display_name": "Image Blending Mode", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image", "output_node": false}, "Image Bloom Filter": {"input": {"required": {"image": ["IMAGE"], "radius": ["FLOAT", {"default": 10, "min": 0.0, "max": 1024, "step": 0.1}], "intensity": ["FLOAT", {"default": 1, "min": 0.0, "max": 1.0, "step": 0.1}]}}, "input_order": {"required": ["image", "radius", "intensity"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Bloom Filter", "display_name": "Image Bloom Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Canny Filter": {"input": {"required": {"images": ["IMAGE"], "enable_threshold": [["false", "true"]], "threshold_low": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "threshold_high": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["images", "enable_threshold", "threshold_low", "threshold_high"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Canny Filter", "display_name": "Image Canny Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Chromatic Aberration": {"input": {"required": {"image": ["IMAGE"], "red_offset": ["INT", {"default": 2, "min": -255, "max": 255, "step": 1}], "green_offset": ["INT", {"default": -1, "min": -255, "max": 255, "step": 1}], "blue_offset": ["INT", {"default": 1, "min": -255, "max": 255, "step": 1}], "intensity": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "fade_radius": ["INT", {"default": 12, "min": 0, "max": 1024, "step": 1}]}}, "input_order": {"required": ["image", "red_offset", "green_offset", "blue_offset", "intensity", "fade_radius"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Chromatic Aberration", "display_name": "Image Chromatic Aberration", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Color Palette": {"input": {"required": {"image": ["IMAGE"], "colors": ["INT", {"default": 16, "min": 8, "max": 256, "step": 1}], "mode": [["Chart", "back_to_back"]]}}, "input_order": {"required": ["image", "colors", "mode"]}, "output": ["IMAGE", "LIST"], "output_is_list": [false, false], "output_name": ["image", "color_palettes"], "name": "Image Color Palette", "display_name": "Image Color Palette", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Analyze", "output_node": false}, "Image Crop Face": {"input": {"required": {"image": ["IMAGE"], "crop_padding_factor": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 2.0, "step": 0.01}], "cascade_xml": [["lbpcascade_animeface.xml", "haarcascade_frontalface_default.xml", "haarcascade_frontalface_alt.xml", "haarcascade_frontalface_alt2.xml", "haarcascade_frontalface_alt_tree.xml", "haarcascade_profileface.xml", "haarcascade_upperbody.xml", "haarcascade_eye.xml"]]}}, "input_order": {"required": ["image", "crop_padding_factor", "cascade_xml"]}, "output": ["IMAGE", "CROP_DATA"], "output_is_list": [false, false], "output_name": ["IMAGE", "CROP_DATA"], "name": "Image Crop Face", "display_name": "Image Crop Face", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Crop Location": {"input": {"required": {"image": ["IMAGE"], "top": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "left": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "right": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}], "bottom": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}]}}, "input_order": {"required": ["image", "top", "left", "right", "bottom"]}, "output": ["IMAGE", "CROP_DATA"], "output_is_list": [false, false], "output_name": ["IMAGE", "CROP_DATA"], "name": "Image Crop Location", "display_name": "Image Crop Location", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Crop Square Location": {"input": {"required": {"image": ["IMAGE"], "x": ["INT", {"default": 0, "max": 24576, "min": 0, "step": 1}], "y": ["INT", {"default": 0, "max": 24576, "min": 0, "step": 1}], "size": ["INT", {"default": 256, "max": 4096, "min": 5, "step": 1}]}}, "input_order": {"required": ["image", "x", "y", "size"]}, "output": ["IMAGE", "CROP_DATA"], "output_is_list": [false, false], "output_name": ["IMAGE", "CROP_DATA"], "name": "Image Crop Square Location", "display_name": "Image Crop Square Location", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Displacement Warp": {"input": {"required": {"images": ["IMAGE"], "displacement_maps": ["IMAGE"], "amplitude": ["FLOAT", {"default": 25.0, "min": -4096, "max": 4096, "step": 0.1}]}}, "input_order": {"required": ["images", "displacement_maps", "amplitude"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Displacement Warp", "display_name": "Image Displacement Warp", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image Lucy Sharpen": {"input": {"required": {"images": ["IMAGE"], "iterations": ["INT", {"default": 2, "min": 1, "max": 12, "step": 1}], "kernel_size": ["INT", {"default": 3, "min": 1, "max": 16, "step": 1}]}}, "input_order": {"required": ["images", "iterations", "kernel_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Lucy Sharpen", "display_name": "Image Lucy Sharpen", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Paste Face": {"input": {"required": {"image": ["IMAGE"], "crop_image": ["IMAGE"], "crop_data": ["CROP_DATA"], "crop_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "crop_sharpening": ["INT", {"default": 0, "min": 0, "max": 3, "step": 1}]}}, "input_order": {"required": ["image", "crop_image", "crop_data", "crop_blending", "crop_sharpening"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK_IMAGE"], "name": "Image Paste Face", "display_name": "Image Paste Face", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Paste Crop": {"input": {"required": {"image": ["IMAGE"], "crop_image": ["IMAGE"], "crop_data": ["CROP_DATA"], "crop_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "crop_sharpening": ["INT", {"default": 0, "min": 0, "max": 3, "step": 1}]}}, "input_order": {"required": ["image", "crop_image", "crop_data", "crop_blending", "crop_sharpening"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["IMAGE", "IMAGE"], "name": "Image Paste Crop", "display_name": "Image Paste Crop", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Paste Crop by Location": {"input": {"required": {"image": ["IMAGE"], "crop_image": ["IMAGE"], "top": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "left": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "right": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}], "bottom": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}], "crop_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "crop_sharpening": ["INT", {"default": 0, "min": 0, "max": 3, "step": 1}]}}, "input_order": {"required": ["image", "crop_image", "top", "left", "right", "bottom", "crop_blending", "crop_sharpening"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["IMAGE", "IMAGE"], "name": "Image Paste Crop by Location", "display_name": "Image Paste Crop by Location", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Pixelate": {"input": {"required": {"images": ["IMAGE"], "pixelation_size": ["FLOAT", {"default": 164, "min": 16, "max": 480, "step": 1}], "num_colors": ["FLOAT", {"default": 16, "min": 2, "max": 256, "step": 1}], "init_mode": [["k-means++", "random", "none"]], "max_iterations": ["FLOAT", {"default": 100, "min": 1, "max": 256, "step": 1}], "dither": [["False", "True"]], "dither_mode": [["FloydSteinberg", "Ordered"]]}, "optional": {"color_palettes": ["LIST", {"forceInput": true}], "color_palette_mode": [["Brightness", "BrightnessAndTonal", "Linear", "Tonal"]], "reverse_palette": [["False", "True"]]}}, "input_order": {"required": ["images", "pixelation_size", "num_colors", "init_mode", "max_iterations", "dither", "dither_mode"], "optional": ["color_palettes", "color_palette_mode", "reverse_palette"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Pixelate", "display_name": "Image Pixelate", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Power Noise": {"input": {"required": {"width": ["INT", {"default": 512, "max": 4096, "min": 64, "step": 1}], "height": ["INT", {"default": 512, "max": 4096, "min": 64, "step": 1}], "frequency": ["FLOAT", {"default": 0.5, "max": 10.0, "min": 0.0, "step": 0.01}], "attenuation": ["FLOAT", {"default": 0.5, "max": 10.0, "min": 0.0, "step": 0.01}], "noise_type": [["grey", "white", "pink", "blue", "green", "mix"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["width", "height", "frequency", "attenuation", "noise_type", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Power Noise", "display_name": "Image Power Noise", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Generate/Noise", "output_node": false}, "Image Dragan Photography Filter": {"input": {"required": {"image": ["IMAGE"], "saturation": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 16.0, "step": 0.01}], "contrast": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 16.0, "step": 0.01}], "brightness": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 16.0, "step": 0.01}], "sharpness": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 6.0, "step": 0.01}], "highpass_radius": ["FLOAT", {"default": 6.0, "min": 0.0, "max": 255.0, "step": 0.01}], "highpass_samples": ["INT", {"default": 1, "min": 0, "max": 6.0, "step": 1}], "highpass_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 3.0, "step": 0.01}], "colorize": [["true", "false"]]}}, "input_order": {"required": ["image", "saturation", "contrast", "brightness", "sharpness", "highpass_radius", "highpass_samples", "highpass_strength", "colorize"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Dragan Photography Filter", "display_name": "Image Dragan Photography Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Edge Detection Filter": {"input": {"required": {"image": ["IMAGE"], "mode": [["normal", "laplacian"]]}}, "input_order": {"required": ["image", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Edge Detection Filter", "display_name": "Image Edge Detection Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Film Grain": {"input": {"required": {"image": ["IMAGE"], "density": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 1.0, "step": 0.01}], "intensity": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 1.0, "step": 0.01}], "highlights": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 255.0, "step": 0.01}], "supersample_factor": ["INT", {"default": 4, "min": 1, "max": 8, "step": 1}]}}, "input_order": {"required": ["image", "density", "intensity", "highlights", "supersample_factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Film Grain", "display_name": "Image Film Grain", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Filter Adjustments": {"input": {"required": {"image": ["IMAGE"], "brightness": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.01}], "contrast": ["FLOAT", {"default": 1.0, "min": -1.0, "max": 2.0, "step": 0.01}], "saturation": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "sharpness": ["FLOAT", {"default": 1.0, "min": -5.0, "max": 5.0, "step": 0.01}], "blur": ["INT", {"default": 0, "min": 0, "max": 16, "step": 1}], "gaussian_blur": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1024.0, "step": 0.1}], "edge_enhance": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "detail_enhance": [["false", "true"]]}}, "input_order": {"required": ["image", "brightness", "contrast", "saturation", "sharpness", "blur", "gaussian_blur", "edge_enhance", "detail_enhance"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Filter Adjustments", "display_name": "Image Filter Adjustments", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Flip": {"input": {"required": {"images": ["IMAGE"], "mode": [["horizontal", "vertical"]]}}, "input_order": {"required": ["images", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Flip", "display_name": "Image Flip", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image Gradient Map": {"input": {"required": {"image": ["IMAGE"], "gradient_image": ["IMAGE"], "flip_left_right": [["false", "true"]]}}, "input_order": {"required": ["image", "gradient_image", "flip_left_right"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Gradient Map", "display_name": "Image Gradient Map", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Generate Gradient": {"input": {"required": {"width": ["INT", {"default": 512, "max": 4096, "min": 64, "step": 1}], "height": ["INT", {"default": 512, "max": 4096, "min": 64, "step": 1}], "direction": [["horizontal", "vertical"]], "tolerance": ["INT", {"default": 0, "max": 255, "min": 0, "step": 1}], "gradient_stops": ["STRING", {"default": "0:255,0,0\n25:255,255,255\n50:0,255,0\n75:0,0,255", "multiline": true}]}}, "input_order": {"required": ["width", "height", "direction", "tolerance", "gradient_stops"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Generate Gradient", "display_name": "Image Generate Gradient", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Generate", "output_node": false}, "Image High Pass Filter": {"input": {"required": {"images": ["IMAGE"], "radius": ["INT", {"default": 10, "min": 1, "max": 500, "step": 1}], "strength": ["FLOAT", {"default": 1.5, "min": 0.0, "max": 255.0, "step": 0.1}], "color_output": [["true", "false"]], "neutral_background": [["true", "false"]]}}, "input_order": {"required": ["images", "radius", "strength", "color_output", "neutral_background"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image High Pass Filter", "display_name": "Image High Pass Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image History Loader": {"input": {"required": {"image": [["No History"]]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "filename_text"], "name": "Image History Loader", "display_name": "Image History Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/History", "output_node": false}, "Image Input Switch": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["image_a", "image_b", "boolean"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Input Switch", "display_name": "Image Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Image Levels Adjustment": {"input": {"required": {"image": ["IMAGE"], "black_level": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 255.0, "step": 0.1}], "mid_level": ["FLOAT", {"default": 127.5, "min": 0.0, "max": 255.0, "step": 0.1}], "white_level": ["FLOAT", {"default": 255, "min": 0.0, "max": 255.0, "step": 0.1}]}}, "input_order": {"required": ["image", "black_level", "mid_level", "white_level"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Levels Adjustment", "display_name": "Image Levels Adjustment", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Adjustment", "output_node": false}, "Image Load": {"input": {"required": {"image_path": ["STRING", {"default": "./ComfyUI/input/example.png", "multiline": false}], "RGBA": [["false", "true"]]}, "optional": {"filename_text_extension": [["true", "false"]]}}, "input_order": {"required": ["image_path", "RGBA"], "optional": ["filename_text_extension"]}, "output": ["IMAGE", "MASK", "STRING"], "output_is_list": [false, false, false], "output_name": ["image", "mask", "filename_text"], "name": "Image Load", "display_name": "Image Load", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/IO", "output_node": false}, "Image Median Filter": {"input": {"required": {"image": ["IMAGE"], "diameter": ["INT", {"default": 2.0, "min": 0.1, "max": 255, "step": 1}], "sigma_color": ["FLOAT", {"default": 10.0, "min": -255.0, "max": 255.0, "step": 0.1}], "sigma_space": ["FLOAT", {"default": 10.0, "min": -255.0, "max": 255.0, "step": 0.1}]}}, "input_order": {"required": ["image", "diameter", "sigma_color", "sigma_space"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Median Filter", "display_name": "Image Median Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Mix RGB Channels": {"input": {"required": {"red_channel": ["IMAGE"], "green_channel": ["IMAGE"], "blue_channel": ["IMAGE"]}}, "input_order": {"required": ["red_channel", "green_channel", "blue_channel"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Mix RGB Channels", "display_name": "Image Mix RGB Channels", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Monitor Effects Filter": {"input": {"required": {"image": ["IMAGE"], "mode": [["Digital Distortion", "Signal Distortion", "TV Distortion"]], "amplitude": ["INT", {"default": 5, "min": 1, "max": 255, "step": 1}], "offset": ["INT", {"default": 10, "min": 1, "max": 255, "step": 1}]}}, "input_order": {"required": ["image", "mode", "amplitude", "offset"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Monitor Effects Filter", "display_name": "Image Monitor Effects Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Nova Filter": {"input": {"required": {"image": ["IMAGE"], "amplitude": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.001}], "frequency": ["FLOAT", {"default": 3.14, "min": 0.0, "max": 100.0, "step": 0.001}]}}, "input_order": {"required": ["image", "amplitude", "frequency"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Nova Filter", "display_name": "Image Nova Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Padding": {"input": {"required": {"image": ["IMAGE"], "feathering": ["INT", {"default": 120, "min": 0, "max": 2048, "step": 1}], "feather_second_pass": [["true", "false"]], "left_padding": ["INT", {"default": 512, "min": 8, "max": 48000, "step": 1}], "right_padding": ["INT", {"default": 512, "min": 8, "max": 48000, "step": 1}], "top_padding": ["INT", {"default": 512, "min": 8, "max": 48000, "step": 1}], "bottom_padding": ["INT", {"default": 512, "min": 8, "max": 48000, "step": 1}]}}, "input_order": {"required": ["image", "feathering", "feather_second_pass", "left_padding", "right_padding", "top_padding", "bottom_padding"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["IMAGE", "IMAGE"], "name": "Image Padding", "display_name": "Image Padding", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image Perlin Noise": {"input": {"required": {"width": ["INT", {"default": 512, "max": 2048, "min": 64, "step": 1}], "height": ["INT", {"default": 512, "max": 2048, "min": 64, "step": 1}], "scale": ["INT", {"default": 100, "max": 2048, "min": 2, "step": 1}], "octaves": ["INT", {"default": 4, "max": 8, "min": 0, "step": 1}], "persistence": ["FLOAT", {"default": 0.5, "max": 100.0, "min": 0.01, "step": 0.01}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["width", "height", "scale", "octaves", "persistence", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Perlin Noise", "display_name": "Image Perlin Noise", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Generate/Noise", "output_node": false}, "Image Rembg (Remove Background)": {"input": {"required": {"images": ["IMAGE"], "transparency": ["BOOLEAN", {"default": true}], "model": [["u2net", "u2netp", "u2net_human_seg", "silueta", "isnet-general-use", "isnet-anime"]], "post_processing": ["BOOLEAN", {"default": false}], "only_mask": ["BOOLEAN", {"default": false}], "alpha_matting": ["BOOLEAN", {"default": false}], "alpha_matting_foreground_threshold": ["INT", {"default": 240, "min": 0, "max": 255}], "alpha_matting_background_threshold": ["INT", {"default": 10, "min": 0, "max": 255}], "alpha_matting_erode_size": ["INT", {"default": 10, "min": 0, "max": 255}], "background_color": [["none", "black", "white", "magenta", "chroma green", "chroma blue"]]}}, "input_order": {"required": ["images", "transparency", "model", "post_processing", "only_mask", "alpha_matting", "alpha_matting_foreground_threshold", "alpha_matting_background_threshold", "alpha_matting_erode_size", "background_color"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Rembg (Remove Background)", "display_name": "Image Rembg (Remove Background)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/AI", "output_node": false}, "Image Perlin Power Fractal": {"input": {"required": {"width": ["INT", {"default": 512, "max": 8192, "min": 64, "step": 1}], "height": ["INT", {"default": 512, "max": 8192, "min": 64, "step": 1}], "scale": ["INT", {"default": 100, "max": 2048, "min": 2, "step": 1}], "octaves": ["INT", {"default": 4, "max": 8, "min": 0, "step": 1}], "persistence": ["FLOAT", {"default": 0.5, "max": 100.0, "min": 0.01, "step": 0.01}], "lacunarity": ["FLOAT", {"default": 2.0, "max": 100.0, "min": 0.01, "step": 0.01}], "exponent": ["FLOAT", {"default": 2.0, "max": 100.0, "min": 0.01, "step": 0.01}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["width", "height", "scale", "octaves", "persistence", "lacunarity", "exponent", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Perlin Power Fractal", "display_name": "Image Perlin Power Fractal", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Generate/Noise", "output_node": false}, "Image Remove Background (Alpha)": {"input": {"required": {"images": ["IMAGE"], "mode": [["background", "foreground"]], "threshold": ["INT", {"default": 127, "min": 0, "max": 255, "step": 1}], "threshold_tolerance": ["INT", {"default": 2, "min": 1, "max": 24, "step": 1}]}}, "input_order": {"required": ["images", "mode", "threshold", "threshold_tolerance"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Remove Background (Alpha)", "display_name": "Image Remove Background (Alpha)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Remove Color": {"input": {"required": {"image": ["IMAGE"], "target_red": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "target_green": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "target_blue": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "replace_red": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "replace_green": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "replace_blue": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "clip_threshold": ["INT", {"default": 10, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["image", "target_red", "target_green", "target_blue", "replace_red", "replace_green", "replace_blue", "clip_threshold"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Remove Color", "display_name": "Image Remove Color", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Resize": {"input": {"required": {"image": ["IMAGE"], "mode": [["rescale", "resize"]], "supersample": [["true", "false"]], "resampling": [["lanczos", "nearest", "bilinear", "bicubic"]], "rescale_factor": ["FLOAT", {"default": 2, "min": 0.01, "max": 16.0, "step": 0.01}], "resize_width": ["INT", {"default": 1024, "min": 1, "max": 48000, "step": 1}], "resize_height": ["INT", {"default": 1536, "min": 1, "max": 48000, "step": 1}]}}, "input_order": {"required": ["image", "mode", "supersample", "resampling", "rescale_factor", "resize_width", "resize_height"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Resize", "display_name": "Image Resize", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image Rotate": {"input": {"required": {"images": ["IMAGE"], "mode": [["transpose", "internal"]], "rotation": ["INT", {"default": 0, "min": 0, "max": 360, "step": 90}], "sampler": [["nearest", "bilinear", "bicubic"]]}}, "input_order": {"required": ["images", "mode", "rotation", "sampler"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Rotate", "display_name": "Image Rotate", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image Rotate Hue": {"input": {"required": {"image": ["IMAGE"], "hue_shift": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["image", "hue_shift"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Rotate Hue", "display_name": "Image Rotate Hue", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Adjustment", "output_node": false}, "Image Send HTTP": {"input": {"required": {"images": ["IMAGE"], "url": ["STRING", {"default": "example.com"}], "method_type": [["post", "put", "patch"], {"default": "post"}], "request_field_name": ["STRING", {"default": "image"}]}, "optional": {"additional_request_headers": ["DICT"]}}, "input_order": {"required": ["images", "url", "method_type", "request_field_name"], "optional": ["additional_request_headers"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["status_code", "result_text"], "name": "Image Send HTTP", "display_name": "Image Send HTTP", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/IO", "output_node": true}, "Image Save": {"input": {"required": {"images": ["IMAGE"], "output_path": ["STRING", {"default": "[time(%Y-%m-%d)]", "multiline": false}], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "filename_delimiter": ["STRING", {"default": "_"}], "filename_number_padding": ["INT", {"default": 4, "min": 1, "max": 9, "step": 1}], "filename_number_start": [["false", "true"]], "extension": [["png", "jpg", "jpeg", "gif", "tiff", "webp", "bmp"]], "dpi": ["INT", {"default": 300, "min": 1, "max": 2400, "step": 1}], "quality": ["INT", {"default": 100, "min": 1, "max": 100, "step": 1}], "optimize_image": [["true", "false"]], "lossless_webp": [["false", "true"]], "overwrite_mode": [["false", "prefix_as_filename"]], "show_history": [["false", "true"]], "show_history_by_prefix": [["true", "false"]], "embed_workflow": [["true", "false"]], "show_previews": [["true", "false"]]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "output_path", "filename_prefix", "filename_delimiter", "filename_number_padding", "filename_number_start", "extension", "dpi", "quality", "optimize_image", "lossless_webp", "overwrite_mode", "show_history", "show_history_by_prefix", "embed_workflow", "show_previews"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["images", "files"], "name": "Image Save", "display_name": "Image Save", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/IO", "output_node": true}, "Image Seamless Texture": {"input": {"required": {"images": ["IMAGE"], "blending": ["FLOAT", {"default": 0.4, "max": 1.0, "min": 0.0, "step": 0.01}], "tiled": [["true", "false"]], "tiles": ["INT", {"default": 2, "max": 6, "min": 2, "step": 2}]}}, "input_order": {"required": ["images", "blending", "tiled", "tiles"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Seamless Texture", "display_name": "Image Seamless Texture", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Select Channel": {"input": {"required": {"image": ["IMAGE"], "channel": [["red", "green", "blue"]]}}, "input_order": {"required": ["image", "channel"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Select Channel", "display_name": "Image Select Channel", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Select Color": {"input": {"required": {"image": ["IMAGE"], "red": ["INT", {"default": 255.0, "min": 0.0, "max": 255.0, "step": 0.1}], "green": ["INT", {"default": 255.0, "min": 0.0, "max": 255.0, "step": 0.1}], "blue": ["INT", {"default": 255.0, "min": 0.0, "max": 255.0, "step": 0.1}], "variance": ["INT", {"default": 10, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["image", "red", "green", "blue", "variance"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Select Color", "display_name": "Image Select Color", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Shadows and Highlights": {"input": {"required": {"image": ["IMAGE"], "shadow_threshold": ["FLOAT", {"default": 75, "min": 0.0, "max": 255.0, "step": 0.1}], "shadow_factor": ["FLOAT", {"default": 1.5, "min": -12.0, "max": 12.0, "step": 0.1}], "shadow_smoothing": ["FLOAT", {"default": 0.25, "min": -255.0, "max": 255.0, "step": 0.1}], "highlight_threshold": ["FLOAT", {"default": 175, "min": 0.0, "max": 255.0, "step": 0.1}], "highlight_factor": ["FLOAT", {"default": 0.5, "min": -12.0, "max": 12.0, "step": 0.1}], "highlight_smoothing": ["FLOAT", {"default": 0.25, "min": -255.0, "max": 255.0, "step": 0.1}], "simplify_isolation": ["FLOAT", {"default": 0, "min": -255.0, "max": 255.0, "step": 0.1}]}}, "input_order": {"required": ["image", "shadow_threshold", "shadow_factor", "shadow_smoothing", "highlight_threshold", "highlight_factor", "highlight_smoothing", "simplify_isolation"]}, "output": ["IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["image", "shadow_map", "highlight_map"], "name": "Image Shadows and Highlights", "display_name": "Image Shadows and Highlights", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Adjustment", "output_node": false}, "Image Size to Number": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["NUMBER", "NUMBER", "FLOAT", "FLOAT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["width_num", "height_num", "width_float", "height_float", "width_int", "height_int"], "name": "Image Size to Number", "display_name": "Image Size to Number", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number/Operations", "output_node": false}, "Image Stitch": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "stitch": [["top", "left", "bottom", "right"]], "feathering": ["INT", {"default": 50, "min": 0, "max": 2048, "step": 1}]}}, "input_order": {"required": ["image_a", "image_b", "stitch", "feathering"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Stitch", "display_name": "Image Stitch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image Style Filter": {"input": {"required": {"image": ["IMAGE"], "style": [["1977", "aden", "brannan", "brooklyn", "clarendon", "earlybird", "fairy tale", "gingham", "hudson", "inkwell", "kelvin", "lark", "lofi", "maven", "mayfair", "moon", "nashville", "perpetua", "reyes", "rise", "slumber", "stinson", "toaster", "valencia", "walden", "willow", "xpro2"]]}}, "input_order": {"required": ["image", "style"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Style Filter", "display_name": "Image Style Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Threshold": {"input": {"required": {"image": ["IMAGE"], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "threshold"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Threshold", "display_name": "Image Threshold", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Tiled": {"input": {"required": {"image": ["IMAGE"], "num_tiles": ["INT", {"default": 4, "max": 64, "min": 2, "step": 1}]}}, "input_order": {"required": ["image", "num_tiles"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGES"], "name": "Image Tiled", "display_name": "Image Tiled", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Transpose": {"input": {"required": {"image": ["IMAGE"], "image_overlay": ["IMAGE"], "width": ["INT", {"default": 512, "min": -48000, "max": 48000, "step": 1}], "height": ["INT", {"default": 512, "min": -48000, "max": 48000, "step": 1}], "X": ["INT", {"default": 0, "min": -48000, "max": 48000, "step": 1}], "Y": ["INT", {"default": 0, "min": -48000, "max": 48000, "step": 1}], "rotation": ["INT", {"default": 0, "min": -360, "max": 360, "step": 1}], "feathering": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}]}}, "input_order": {"required": ["image", "image_overlay", "width", "height", "X", "Y", "rotation", "feathering"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Transpose", "display_name": "Image Transpose", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image fDOF Filter": {"input": {"required": {"image": ["IMAGE"], "depth": ["IMAGE"], "mode": [["mock", "gaussian", "box"]], "radius": ["INT", {"default": 8, "min": 1, "max": 128, "step": 1}], "samples": ["INT", {"default": 1, "min": 1, "max": 3, "step": 1}]}}, "input_order": {"required": ["image", "depth", "mode", "radius", "samples"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image fDOF Filter", "display_name": "Image fDOF Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image to Latent Mask": {"input": {"required": {"images": ["IMAGE"], "channel": [["alpha", "red", "green", "blue"]]}}, "input_order": {"required": ["images", "channel"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Image to Latent Mask", "display_name": "Image to Latent Mask", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Image to Noise": {"input": {"required": {"images": ["IMAGE"], "num_colors": ["INT", {"default": 16, "max": 256, "min": 2, "step": 2}], "black_mix": ["INT", {"default": 0, "max": 20, "min": 0, "step": 1}], "gaussian_mix": ["FLOAT", {"default": 0.0, "max": 1024, "min": 0, "step": 0.1}], "brightness": ["FLOAT", {"default": 1.0, "max": 2.0, "min": 0.0, "step": 0.01}], "output_mode": [["batch", "list"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["images", "num_colors", "black_mix", "gaussian_mix", "brightness", "output_mode", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image to Noise", "display_name": "Image to Noise", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Generate/Noise", "output_node": false}, "Image to Seed": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["INT"], "output_is_list": [true], "output_name": ["INT"], "name": "Image to Seed", "display_name": "Image to Seed", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Analyze", "output_node": false}, "Images to RGB": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Images to RGB", "display_name": "Images to RGB", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image", "output_node": false}, "Images to Linear": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Images to Linear", "display_name": "Images to Linear", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image", "output_node": false}, "Integer place counter": {"input": {"required": {"int_input": ["INT", {"default": 0, "min": 0, "max": 10000000, "step": 1}]}}, "input_order": {"required": ["int_input"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT_PLACES"], "name": "Integer place counter", "display_name": "Integer place counter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Integer", "output_node": false}, "Image Voronoi Noise Filter": {"input": {"required": {"width": ["INT", {"default": 512, "max": 4096, "min": 64, "step": 1}], "height": ["INT", {"default": 512, "max": 4096, "min": 64, "step": 1}], "density": ["INT", {"default": 50, "max": 256, "min": 10, "step": 2}], "modulator": ["INT", {"default": 0, "max": 8, "min": 0, "step": 1}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"flat": [["False", "True"]], "RGB_output": [["True", "False"]]}}, "input_order": {"required": ["width", "height", "density", "modulator", "seed"], "optional": ["flat", "RGB_output"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Voronoi Noise Filter", "display_name": "Image Voronoi Noise Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Generate/Noise", "output_node": false}, "KSampler (WAS)": {"input": {"required": {"model": ["MODEL"], "seed": ["SEED"], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "denoise"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "KSampler (WAS)", "display_name": "KSampler (WAS)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Sampling", "output_node": false}, "KSampler Cycle": {"input": {"required": {"model": ["MODEL"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "tiled_vae": [["disable", "enable"]], "latent_upscale": [["disable", "nearest-exact", "bilinear", "area", "bicubic", "bislerp"]], "upscale_factor": ["FLOAT", {"default": 2.0, "min": 0.1, "max": 8.0, "step": 0.1}], "upscale_cycles": ["INT", {"default": 2, "min": 2, "max": 12, "step": 1}], "starting_denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "cycle_denoise": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "scale_denoise": [["enable", "disable"]], "scale_sampling": [["bilinear", "bicubic", "nearest", "lanczos"]], "vae": ["VAE"]}, "optional": {"secondary_model": ["MODEL"], "secondary_start_cycle": ["INT", {"default": 2, "min": 2, "max": 16, "step": 1}], "upscale_model": ["UPSCALE_MODEL"], "processor_model": ["UPSCALE_MODEL"], "pos_additive": ["CONDITIONING"], "neg_additive": ["CONDITIONING"], "pos_add_mode": [["increment", "decrement"]], "pos_add_strength": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 1.0, "step": 0.01}], "pos_add_strength_scaling": [["enable", "disable"]], "pos_add_strength_cutoff": ["FLOAT", {"default": 2.0, "min": 0.01, "max": 10.0, "step": 0.01}], "neg_add_mode": [["increment", "decrement"]], "neg_add_strength": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 1.0, "step": 0.01}], "neg_add_strength_scaling": [["enable", "disable"]], "neg_add_strength_cutoff": ["FLOAT", {"default": 2.0, "min": 0.01, "max": 10.0, "step": 0.01}], "sharpen_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01}], "sharpen_radius": ["INT", {"default": 2, "min": 1, "max": 12, "step": 1}], "steps_scaling": [["enable", "disable"]], "steps_control": [["decrement", "increment"]], "steps_scaling_value": ["INT", {"default": 10, "min": 1, "max": 20, "step": 1}], "steps_cutoff": ["INT", {"default": 20, "min": 4, "max": 1000, "step": 1}], "denoise_cutoff": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "tiled_vae", "latent_upscale", "upscale_factor", "upscale_cycles", "starting_denoise", "cycle_denoise", "scale_denoise", "scale_sampling", "vae"], "optional": ["secondary_model", "secondary_start_cycle", "upscale_model", "processor_model", "pos_additive", "neg_additive", "pos_add_mode", "pos_add_strength", "pos_add_strength_scaling", "pos_add_strength_cutoff", "neg_add_mode", "neg_add_strength", "neg_add_strength_scaling", "neg_add_strength_cutoff", "sharpen_strength", "sharpen_radius", "steps_scaling", "steps_control", "steps_scaling_value", "steps_cutoff", "denoise_cutoff"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent(s)"], "name": "KSampler Cycle", "display_name": "KSampler Cycle", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Sampling", "output_node": false}, "Latent Batch": {"input": {"required": {}, "optional": {"latent_a": ["LATENT"], "latent_b": ["LATENT"], "latent_c": ["LATENT"], "latent_d": ["LATENT"]}}, "input_order": {"required": [], "optional": ["latent_a", "latent_b", "latent_c", "latent_d"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "Latent Batch", "display_name": "Latent Batch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Latent", "output_node": false}, "Latent Noise Injection": {"input": {"required": {"samples": ["LATENT"], "noise_std": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["samples", "noise_std"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "Latent Noise Injection", "display_name": "Latent Noise Injection", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Latent/Generate", "output_node": false}, "Latent Size to Number": {"input": {"required": {"samples": ["LATENT"]}}, "input_order": {"required": ["samples"]}, "output": ["NUMBER", "NUMBER", "FLOAT", "FLOAT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["tensor_w_num", "tensor_h_num"], "name": "Latent Size to Number", "display_name": "Latent Size to Number", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number/Operations", "output_node": false}, "Latent Upscale by Factor (WAS)": {"input": {"required": {"samples": ["LATENT"], "mode": [["area", "bicubic", "bilinear", "nearest"]], "factor": ["FLOAT", {"default": 2.0, "min": 0.1, "max": 8.0, "step": 0.01}], "align": [["true", "false"]]}}, "input_order": {"required": ["samples", "mode", "factor", "align"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "Latent Upscale by Factor (WAS)", "display_name": "Latent Upscale by Factor (WAS)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Latent/Transform", "output_node": false}, "Load Image Batch": {"input": {"required": {"mode": [["single_image", "incremental_image", "random"]], "index": ["INT", {"default": 0, "min": 0, "max": 150000, "step": 1}], "label": ["STRING", {"default": "Batch 001", "multiline": false}], "path": ["STRING", {"default": "", "multiline": false}], "pattern": ["STRING", {"default": "*", "multiline": false}], "allow_RGBA_output": [["false", "true"]]}, "optional": {"filename_text_extension": [["true", "false"]]}}, "input_order": {"required": ["mode", "index", "label", "path", "pattern", "allow_RGBA_output"], "optional": ["filename_text_extension"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "filename_text"], "name": "Load Image Batch", "display_name": "Load Image Batch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/IO", "output_node": false}, "Load Text File": {"input": {"required": {"file_path": ["STRING", {"default": "", "multiline": false}], "dictionary_name": ["STRING", {"default": "[filename]", "multiline": false}]}}, "input_order": {"required": ["file_path", "dictionary_name"]}, "output": ["STRING", "DICT"], "output_is_list": [false, false], "output_name": ["STRING", "DICT"], "name": "Load Text File", "display_name": "Load Text File", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/IO", "output_node": false}, "Load Lora": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "lora_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "clip", "lora_name", "strength_model", "strength_clip"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "NAME_STRING"], "name": "Load Lora", "display_name": "Load Lora", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders", "output_node": false}, "Lora Input Switch": {"input": {"required": {"model_a": ["MODEL"], "clip_a": ["CLIP"], "model_b": ["MODEL"], "clip_b": ["CLIP"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["model_a", "clip_a", "model_b", "clip_b", "boolean"]}, "output": ["MODEL", "CLIP"], "output_is_list": [false, false], "output_name": ["MODEL", "CLIP"], "name": "Lora Input Switch", "display_name": "Lora Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Masks Add": {"input": {"required": {"masks_a": ["MASK"], "masks_b": ["MASK"]}}, "input_order": {"required": ["masks_a", "masks_b"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Masks Add", "display_name": "Masks Add", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Masks Subtract": {"input": {"required": {"masks_a": ["MASK"], "masks_b": ["MASK"]}}, "input_order": {"required": ["masks_a", "masks_b"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Masks Subtract", "display_name": "Masks Subtract", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Arbitrary Region": {"input": {"required": {"masks": ["MASK"], "size": ["INT", {"default": 256, "min": 1, "max": 4096, "step": 1}], "threshold": ["INT", {"default": 128, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["masks", "size", "threshold"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Arbitrary Region", "display_name": "Mask Arbitrary Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Batch to Mask": {"input": {"required": {"masks": ["MASK"], "batch_number": ["INT", {"default": 0, "min": 0, "max": 64, "step": 1}]}}, "input_order": {"required": ["masks", "batch_number"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "Mask Batch to Mask", "display_name": "Mask Batch to Mask", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Batch": {"input": {"optional": {"masks_a": ["MASK"], "masks_b": ["MASK"], "masks_c": ["MASK"], "masks_d": ["MASK"]}}, "input_order": {"optional": ["masks_a", "masks_b", "masks_c", "masks_d"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["masks"], "name": "Mask Batch", "display_name": "Mask Batch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Ceiling Region": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Ceiling Region", "display_name": "Mask Ceiling Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Crop Dominant Region": {"input": {"required": {"masks": ["MASK"], "padding": ["INT", {"default": 24, "min": 0, "max": 4096, "step": 1}]}}, "input_order": {"required": ["masks", "padding"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Crop Dominant Region", "display_name": "Mask Crop Dominant Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Crop Minority Region": {"input": {"required": {"masks": ["MASK"], "padding": ["INT", {"default": 24, "min": 0, "max": 4096, "step": 1}]}}, "input_order": {"required": ["masks", "padding"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Crop Minority Region", "display_name": "Mask Crop Minority Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Crop Region": {"input": {"required": {"mask": ["MASK"], "padding": ["INT", {"default": 24, "min": 0, "max": 4096, "step": 1}], "region_type": [["dominant", "minority"]]}}, "input_order": {"required": ["mask", "padding", "region_type"]}, "output": ["MASK", "CROP_DATA", "INT", "INT", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["cropped_mask", "crop_data", "top_int", "left_int", "right_int", "bottom_int", "width_int", "height_int"], "name": "Mask Crop Region", "display_name": "Mask Crop Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Paste Region": {"input": {"required": {"mask": ["MASK"], "crop_mask": ["MASK"], "crop_data": ["CROP_DATA"], "crop_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "crop_sharpening": ["INT", {"default": 0, "min": 0, "max": 3, "step": 1}]}}, "input_order": {"required": ["mask", "crop_mask", "crop_data", "crop_blending", "crop_sharpening"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["MASK", "MASK"], "name": "Mask Paste Region", "display_name": "Mask Paste Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Dilate Region": {"input": {"required": {"masks": ["MASK"], "iterations": ["INT", {"default": 5, "min": 1, "max": 64, "step": 1}]}}, "input_order": {"required": ["masks", "iterations"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Dilate Region", "display_name": "Mask Dilate Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Dominant Region": {"input": {"required": {"masks": ["MASK"], "threshold": ["INT", {"default": 128, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["masks", "threshold"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Dominant Region", "display_name": "Mask Dominant Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Erode Region": {"input": {"required": {"masks": ["MASK"], "iterations": ["INT", {"default": 5, "min": 1, "max": 64, "step": 1}]}}, "input_order": {"required": ["masks", "iterations"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Erode Region", "display_name": "Mask Erode Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Fill Holes": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Fill Holes", "display_name": "Mask Fill Holes", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Floor Region": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Floor Region", "display_name": "Mask Floor Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Gaussian Region": {"input": {"required": {"masks": ["MASK"], "radius": ["FLOAT", {"default": 5.0, "min": 0.0, "max": 1024, "step": 0.1}]}}, "input_order": {"required": ["masks", "radius"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Gaussian Region", "display_name": "Mask Gaussian Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Invert": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Invert", "display_name": "Mask Invert", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Minority Region": {"input": {"required": {"masks": ["MASK"], "threshold": ["INT", {"default": 128, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["masks", "threshold"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Minority Region", "display_name": "Mask Minority Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Smooth Region": {"input": {"required": {"masks": ["MASK"], "sigma": ["FLOAT", {"default": 5.0, "min": 0.0, "max": 128.0, "step": 0.1}]}}, "input_order": {"required": ["masks", "sigma"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Smooth Region", "display_name": "Mask Smooth Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Threshold Region": {"input": {"required": {"masks": ["MASK"], "black_threshold": ["INT", {"default": 75, "min": 0, "max": 255, "step": 1}], "white_threshold": ["INT", {"default": 175, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["masks", "black_threshold", "white_threshold"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Threshold Region", "display_name": "Mask Threshold Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Masks Combine Regions": {"input": {"required": {"mask_a": ["MASK"], "mask_b": ["MASK"]}, "optional": {"mask_c": ["MASK"], "mask_d": ["MASK"], "mask_e": ["MASK"], "mask_f": ["MASK"]}}, "input_order": {"required": ["mask_a", "mask_b"], "optional": ["mask_c", "mask_d", "mask_e", "mask_f"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "Masks Combine Regions", "display_name": "Masks Combine Regions", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Masks Combine Batch": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "Masks Combine Batch", "display_name": "Masks Combine Batch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "MiDaS Model Loader": {"input": {"required": {"midas_model": [["DPT_Large", "DPT_Hybrid"]]}}, "input_order": {"required": ["midas_model"]}, "output": ["MIDAS_MODEL"], "output_is_list": [false], "output_name": ["midas_model"], "name": "MiDaS Model Loader", "display_name": "MiDaS Model Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders", "output_node": false}, "MiDaS Depth Approximation": {"input": {"required": {"image": ["IMAGE"], "use_cpu": [["false", "true"]], "midas_type": [["DPT_Large", "DPT_Hybrid"]], "invert_depth": [["false", "true"]]}, "optional": {"midas_model": ["MIDAS_MODEL"]}}, "input_order": {"required": ["image", "use_cpu", "midas_type", "invert_depth"], "optional": ["midas_model"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "MiDaS Depth Approximation", "display_name": "MiDaS Depth Approximation", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/AI", "output_node": false}, "MiDaS Mask Image": {"input": {"required": {"image": ["IMAGE"], "use_cpu": [["false", "true"]], "midas_model": [["DPT_Large", "DPT_Hybrid", "DPT_Small"]], "remove": [["background", "foregroud"]], "threshold": [["false", "true"]], "threshold_low": ["FLOAT", {"default": 10, "min": 0, "max": 255, "step": 1}], "threshold_mid": ["FLOAT", {"default": 200, "min": 0, "max": 255, "step": 1}], "threshold_high": ["FLOAT", {"default": 210, "min": 0, "max": 255, "step": 1}], "smoothing": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 16.0, "step": 0.01}], "background_red": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "background_green": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "background_blue": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["image", "use_cpu", "midas_model", "remove", "threshold", "threshold_low", "threshold_mid", "threshold_high", "smoothing", "background_red", "background_green", "background_blue"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["IMAGE", "IMAGE"], "name": "MiDaS Mask Image", "display_name": "MiDaS Mask Image", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/AI", "output_node": false}, "Model Input Switch": {"input": {"required": {"model_a": ["MODEL"], "model_b": ["MODEL"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["model_a", "model_b", "boolean"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "Model Input Switch", "display_name": "Model Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Number Counter": {"input": {"required": {"number_type": [["integer", "float"]], "mode": [["increment", "decrement", "increment_to_stop", "decrement_to_stop"]], "start": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 0.01}], "stop": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 0.01}], "step": ["FLOAT", {"default": 1, "min": 0, "max": 99999, "step": 0.01}]}, "optional": {"reset_bool": ["NUMBER"]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["number_type", "mode", "start", "stop", "step"], "optional": ["reset_bool"], "hidden": ["unique_id"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["number", "float", "int"], "name": "Number Counter", "display_name": "Number Counter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number", "output_node": false}, "Number Operation": {"input": {"required": {"number_a": ["NUMBER"], "number_b": ["NUMBER"], "operation": [["addition", "subtraction", "division", "floor division", "multiplication", "exponentiation", "modulus", "greater-than", "greater-than or equals", "less-than", "less-than or equals", "equals", "does not equal"]]}}, "input_order": {"required": ["number_a", "number_b", "operation"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "Number Operation", "display_name": "Number Operation", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number/Operations", "output_node": false}, "Number to Float": {"input": {"required": {"number": ["NUMBER"]}}, "input_order": {"required": ["number"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "Number to Float", "display_name": "Number to Float", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number/Operations", "output_node": false}, "Number Input Switch": {"input": {"required": {"number_a": ["NUMBER"], "number_b": ["NUMBER"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["number_a", "number_b", "boolean"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "Number Input Switch", "display_name": "Number Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Number Input Condition": {"input": {"required": {"number_a": ["NUMBER"], "number_b": ["NUMBER"], "return_boolean": [["false", "true"]], "comparison": [["and", "or", "greater-than", "greater-than or equals", "less-than", "less-than or equals", "equals", "does not equal", "divisible by", "if A odd", "if A even", "if A prime", "factor of"]]}}, "input_order": {"required": ["number_a", "number_b", "return_boolean", "comparison"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "Number Input Condition", "display_name": "Number Input Condition", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Number Multiple Of": {"input": {"required": {"number": ["NUMBER"], "multiple": ["INT", {"default": 8, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["number", "multiple"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "Number Multiple Of", "display_name": "Number Multiple Of", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number/Functions", "output_node": false}, "Number PI": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["NUMBER", "FLOAT"], "output_is_list": [false, false], "output_name": ["NUMBER", "FLOAT"], "name": "Number PI", "display_name": "Number PI", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number", "output_node": false}, "Number to Int": {"input": {"required": {"number": ["NUMBER"]}}, "input_order": {"required": ["number"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "Number to Int", "display_name": "Number to Int", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number/Operations", "output_node": false}, "Number to Seed": {"input": {"required": {"number": ["NUMBER"]}}, "input_order": {"required": ["number"]}, "output": ["SEED"], "output_is_list": [false], "output_name": ["SEED"], "name": "Number to Seed", "display_name": "Number to Seed", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number/Operations", "output_node": false}, "Number to String": {"input": {"required": {"number": ["NUMBER"]}}, "input_order": {"required": ["number"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Number to String", "display_name": "Number to String", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number/Operations", "output_node": false}, "Number to Text": {"input": {"required": {"number": ["NUMBER"]}}, "input_order": {"required": ["number"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Number to Text", "display_name": "Number to Text", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number/Operations", "output_node": false}, "Boolean To Text": {"input": {"required": {"boolean": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["boolean"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Boolean To Text", "display_name": "Boolean To Text", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Prompt Styles Selector": {"input": {"required": {"style": [["None"]]}}, "input_order": {"required": ["style"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["positive_string", "negative_string"], "name": "Prompt Styles Selector", "display_name": "Prompt Styles Selector", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Prompt Multiple Styles Selector": {"input": {"required": {"style1": [["None"]], "style2": [["None"]], "style3": [["None"]], "style4": [["None"]]}}, "input_order": {"required": ["style1", "style2", "style3", "style4"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["positive_string", "negative_string"], "name": "Prompt Multiple Styles Selector", "display_name": "Prompt Multiple Styles Selector", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Random Number": {"input": {"required": {"number_type": [["integer", "float", "bool"]], "minimum": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "maximum": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["number_type", "minimum", "maximum", "seed"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "Random Number", "display_name": "Random Number", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number", "output_node": false}, "Save Text File": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "path": ["STRING", {"default": "./ComfyUI/output/[time(%Y-%m-%d)]", "multiline": false}], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "filename_delimiter": ["STRING", {"default": "_"}], "filename_number_padding": ["INT", {"default": 4, "min": 0, "max": 9, "step": 1}]}, "optional": {"file_extension": ["STRING", {"default": ".txt"}], "encoding": ["STRING", {"default": "utf-8"}]}}, "input_order": {"required": ["text", "path", "filename_prefix", "filename_delimiter", "filename_number_padding"], "optional": ["file_extension", "encoding"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Save Text File", "display_name": "Save Text File", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/IO", "output_node": true}, "Seed": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["seed"]}, "output": ["SEED", "NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["seed", "number", "float", "int"], "name": "Seed", "display_name": "Seed", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number", "output_node": false}, "Tensor Batch to Image": {"input": {"required": {"images_batch": ["IMAGE"], "batch_image_number": ["INT", {"default": 0, "min": 0, "max": 64, "step": 1}]}}, "input_order": {"required": ["images_batch", "batch_image_number"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Tensor Batch to Image", "display_name": "Tensor Batch to Image", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Latent/Transform", "output_node": false}, "BLIP Analyze Image": {"input": {"required": {"images": ["IMAGE"], "mode": [["caption", "interrogate"]], "question": ["STRING", {"default": "What does the background consist of?", "multiline": true, "dynamicPrompts": false}], "blip_model": ["BLIP_MODEL"]}, "optional": {"min_length": ["INT", {"min": 1, "max": 1024, "default": 24}], "max_length": ["INT", {"min": 2, "max": 1024, "default": 64}], "num_beams": ["INT", {"min": 1, "max": 12, "default": 5}], "no_repeat_ngram_size": ["INT", {"min": 1, "max": 12, "default": 3}], "early_stopping": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["images", "mode", "question", "blip_model"], "optional": ["min_length", "max_length", "num_beams", "no_repeat_ngram_size", "early_stopping"]}, "output": ["STRING", "STRING"], "output_is_list": [false, true], "output_name": ["STRING", "STRING"], "name": "BLIP Analyze Image", "display_name": "BLIP Analyze Image", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/AI", "output_node": false}, "SAM Model Loader": {"input": {"required": {"model_size": [["ViT-H", "ViT-L", "ViT-B"]]}}, "input_order": {"required": ["model_size"]}, "output": ["SAM_MODEL"], "output_is_list": [false], "output_name": ["SAM_MODEL"], "name": "SAM Model Loader", "display_name": "SAM Model Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "SAM Parameters": {"input": {"required": {"points": ["STRING", {"default": "[128, 128]; [0, 0]", "multiline": false}], "labels": ["STRING", {"default": "[1, 0]", "multiline": false}]}}, "input_order": {"required": ["points", "labels"]}, "output": ["SAM_PARAMETERS"], "output_is_list": [false], "output_name": ["SAM_PARAMETERS"], "name": "SAM Parameters", "display_name": "SAM Parameters", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "SAM Parameters Combine": {"input": {"required": {"sam_parameters_a": ["SAM_PARAMETERS"], "sam_parameters_b": ["SAM_PARAMETERS"]}}, "input_order": {"required": ["sam_parameters_a", "sam_parameters_b"]}, "output": ["SAM_PARAMETERS"], "output_is_list": [false], "output_name": ["SAM_PARAMETERS"], "name": "SAM Parameters Combine", "display_name": "SAM Parameters Combine", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "SAM Image Mask": {"input": {"required": {"sam_model": ["SAM_MODEL"], "sam_parameters": ["SAM_PARAMETERS"], "image": ["IMAGE"]}}, "input_order": {"required": ["sam_model", "sam_parameters", "image"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "SAM Image Mask", "display_name": "SAM Image Mask", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Samples Passthrough (Stat System)": {"input": {"required": {"samples": ["LATENT"]}}, "input_order": {"required": ["samples"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["samples"], "name": "Samples Passthrough (Stat System)", "display_name": "Samples Passthrough (Stat System)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Debug", "output_node": false}, "String to Text": {"input": {"required": {"string": ["STRING", {}]}}, "input_order": {"required": ["string"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "String to Text", "display_name": "String to Text", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Operations", "output_node": false}, "Image Bounds": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE_BOUNDS"], "output_is_list": [false], "output_name": ["IMAGE_BOUNDS"], "name": "Image Bounds", "display_name": "Image Bounds", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Bound", "output_node": false}, "Inset Image Bounds": {"input": {"required": {"image_bounds": ["IMAGE_BOUNDS"], "inset_left": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}], "inset_right": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}], "inset_top": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}], "inset_bottom": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["image_bounds", "inset_left", "inset_right", "inset_top", "inset_bottom"]}, "output": ["IMAGE_BOUNDS"], "output_is_list": [false], "output_name": ["IMAGE_BOUNDS"], "name": "Inset Image Bounds", "display_name": "Inset Image Bounds", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Bound", "output_node": false}, "Bounded Image Blend": {"input": {"required": {"target": ["IMAGE"], "target_bounds": ["IMAGE_BOUNDS"], "source": ["IMAGE"], "blend_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0}], "feathering": ["INT", {"default": 16, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["target", "target_bounds", "source", "blend_factor", "feathering"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Bounded Image Blend", "display_name": "Bounded Image Blend", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Bound", "output_node": false}, "Bounded Image Blend with Mask": {"input": {"required": {"target": ["IMAGE"], "target_mask": ["MASK"], "target_bounds": ["IMAGE_BOUNDS"], "source": ["IMAGE"], "blend_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0}], "feathering": ["INT", {"default": 16, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["target", "target_mask", "target_bounds", "source", "blend_factor", "feathering"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Bounded Image Blend with Mask", "display_name": "Bounded Image Blend with Mask", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Bound", "output_node": false}, "Bounded Image Crop": {"input": {"required": {"image": ["IMAGE"], "image_bounds": ["IMAGE_BOUNDS"]}}, "input_order": {"required": ["image", "image_bounds"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Bounded Image Crop", "display_name": "Bounded Image Crop", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Bound", "output_node": false}, "Bounded Image Crop with Mask": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "padding_left": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}], "padding_right": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}], "padding_top": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}], "padding_bottom": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["image", "mask", "padding_left", "padding_right", "padding_top", "padding_bottom"]}, "output": ["IMAGE", "IMAGE_BOUNDS"], "output_is_list": [false, false], "output_name": ["IMAGE", "IMAGE_BOUNDS"], "name": "Bounded Image Crop with Mask", "display_name": "Bounded Image Crop with Mask", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Bound", "output_node": false}, "Image Bounds to Console": {"input": {"required": {"image_bounds": ["IMAGE_BOUNDS"], "label": ["STRING", {"default": "Debug to Console", "multiline": false}]}}, "input_order": {"required": ["image_bounds", "label"]}, "output": ["IMAGE_BOUNDS"], "output_is_list": [false], "output_name": ["IMAGE_BOUNDS"], "name": "Image Bounds to Console", "display_name": "Image Bounds to Console", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Debug", "output_node": true}, "Text Dictionary Update": {"input": {"required": {"dictionary_a": ["DICT"], "dictionary_b": ["DICT"]}, "optional": {"dictionary_c": ["DICT"], "dictionary_d": ["DICT"]}}, "input_order": {"required": ["dictionary_a", "dictionary_b"], "optional": ["dictionary_c", "dictionary_d"]}, "output": ["DICT"], "output_is_list": [false], "output_name": ["DICT"], "name": "Text Dictionary Update", "display_name": "Text Dictionary Update", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Dictionary Get": {"input": {"required": {"dictionary": ["DICT"], "key": ["STRING", {"default": "", "multiline": false}]}, "optional": {"default_value": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["dictionary", "key"], "optional": ["default_value"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Dictionary Get", "display_name": "Text Dictionary Get", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Dictionary Convert": {"input": {"required": {"dictionary_text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["dictionary_text"]}, "output": ["DICT"], "output_is_list": [false], "output_name": ["DICT"], "name": "Text Dictionary Convert", "display_name": "Text Dictionary Convert", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Dictionary New": {"input": {"required": {"key_1": ["STRING", {"default": "", "multiline": false}], "value_1": ["STRING", {"default": "", "multiline": false}]}, "optional": {"key_2": ["STRING", {"default": "", "multiline": false}], "value_2": ["STRING", {"default": "", "multiline": false}], "key_3": ["STRING", {"default": "", "multiline": false}], "value_3": ["STRING", {"default": "", "multiline": false}], "key_4": ["STRING", {"default": "", "multiline": false}], "value_4": ["STRING", {"default": "", "multiline": false}], "key_5": ["STRING", {"default": "", "multiline": false}], "value_5": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["key_1", "value_1"], "optional": ["key_2", "value_2", "key_3", "value_3", "key_4", "value_4", "key_5", "value_5"]}, "output": ["DICT"], "output_is_list": [false], "output_name": ["DICT"], "name": "Text Dictionary New", "display_name": "Text Dictionary New", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Dictionary Keys": {"input": {"required": {"dictionary": ["DICT"]}, "optional": {}}, "input_order": {"required": ["dictionary"], "optional": []}, "output": ["LIST"], "output_is_list": [false], "output_name": ["LIST"], "name": "Text Dictionary Keys", "display_name": "Text Dictionary Keys", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Dictionary To Text": {"input": {"required": {"dictionary": ["DICT"]}, "optional": {}}, "input_order": {"required": ["dictionary"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Dictionary To Text", "display_name": "Text Dictionary To Text", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Add Tokens": {"input": {"required": {"tokens": ["STRING", {"default": "[hello]: world", "multiline": true}], "print_current_tokens": [["false", "true"]]}}, "input_order": {"required": ["tokens", "print_current_tokens"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Text Add Tokens", "display_name": "Text Add Tokens", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Tokens", "output_node": true}, "Text Add Token by Input": {"input": {"required": {"token_name": ["STRING", {"forceInput": true}], "token_value": ["STRING", {"forceInput": true}], "print_current_tokens": [["false", "true"]]}}, "input_order": {"required": ["token_name", "token_value", "print_current_tokens"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Text Add Token by Input", "display_name": "Text Add Token by Input", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Tokens", "output_node": true}, "Text Compare": {"input": {"required": {"text_a": ["STRING", {"forceInput": true}], "text_b": ["STRING", {"forceInput": true}], "mode": [["similarity", "difference"]], "tolerance": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["text_a", "text_b", "mode", "tolerance"]}, "output": ["STRING", "STRING", "BOOLEAN", "NUMBER", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["TEXT_A_PASS", "TEXT_B_PASS", "BOOLEAN", "SCORE_NUMBER", "COMPARISON_TEXT"], "name": "Text Compare", "display_name": "Text Compare", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Search", "output_node": false}, "Text Concatenate": {"input": {"required": {"delimiter": ["STRING", {"default": ", "}], "clean_whitespace": [["true", "false"]]}, "optional": {"text_a": ["STRING", {"forceInput": true}], "text_b": ["STRING", {"forceInput": true}], "text_c": ["STRING", {"forceInput": true}], "text_d": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["delimiter", "clean_whitespace"], "optional": ["text_a", "text_b", "text_c", "text_d"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Concatenate", "display_name": "Text Concatenate", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text File History Loader": {"input": {"required": {"file": [["No History"]], "dictionary_name": ["STRING", {"default": "[filename]", "multiline": true}]}}, "input_order": {"required": ["file", "dictionary_name"]}, "output": ["STRING", "DICT"], "output_is_list": [false, false], "output_name": ["STRING", "DICT"], "name": "Text File History Loader", "display_name": "Text File History Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/History", "output_node": false}, "Text Find and Replace by Dictionary": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "dictionary": ["DICT"], "replacement_key": ["STRING", {"default": "__", "multiline": false}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["text", "dictionary", "replacement_key", "seed"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Find and Replace by Dictionary", "display_name": "Text Find and Replace by Dictionary", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Search", "output_node": false}, "Text Find and Replace Input": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "find": ["STRING", {"forceInput": true}], "replace": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text", "find", "replace"]}, "output": ["STRING", "NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["result_text", "replacement_count_number", "replacement_count_float", "replacement_count_int"], "name": "Text Find and Replace Input", "display_name": "Text Find and Replace Input", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Search", "output_node": false}, "Text Find and Replace": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "find": ["STRING", {"default": "", "multiline": false}], "replace": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["text", "find", "replace"]}, "output": ["STRING", "NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["result_text", "replacement_count_number", "replacement_count_float", "replacement_count_int"], "name": "Text Find and Replace", "display_name": "Text Find and Replace", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Search", "output_node": false}, "Text Find": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "substring": ["STRING", {"default": "", "multiline": false}], "pattern": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["text", "substring", "pattern"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["found"], "name": "Text Find", "display_name": "Text Find", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Search", "output_node": false}, "Text Input Switch": {"input": {"required": {"text_a": ["STRING", {"forceInput": true}], "text_b": ["STRING", {"forceInput": true}], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["text_a", "text_b", "boolean"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Input Switch", "display_name": "Text Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Text List": {"input": {"required": {}, "optional": {"text_a": ["STRING", {"forceInput": true}], "text_b": ["STRING", {"forceInput": true}], "text_c": ["STRING", {"forceInput": true}], "text_d": ["STRING", {"forceInput": true}], "text_e": ["STRING", {"forceInput": true}], "text_f": ["STRING", {"forceInput": true}], "text_g": ["STRING", {"forceInput": true}]}}, "input_order": {"required": [], "optional": ["text_a", "text_b", "text_c", "text_d", "text_e", "text_f", "text_g"]}, "output": ["LIST"], "output_is_list": [false], "output_name": ["LIST"], "name": "Text List", "display_name": "Text List", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text List Concatenate": {"input": {"required": {}, "optional": {"list_a": ["LIST", {"forceInput": true}], "list_b": ["LIST", {"forceInput": true}], "list_c": ["LIST", {"forceInput": true}], "list_d": ["LIST", {"forceInput": true}]}}, "input_order": {"required": [], "optional": ["list_a", "list_b", "list_c", "list_d"]}, "output": ["LIST"], "output_is_list": [false], "output_name": ["LIST"], "name": "Text List Concatenate", "display_name": "Text List Concatenate", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text List to Text": {"input": {"required": {"delimiter": ["STRING", {"default": ", "}], "text_list": ["LIST", {"forceInput": true}]}}, "input_order": {"required": ["delimiter", "text_list"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text List to Text", "display_name": "Text List to Text", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Load Line From File": {"input": {"required": {"file_path": ["STRING", {"default": "", "multiline": false}], "dictionary_name": ["STRING", {"default": "[filename]", "multiline": false}], "label": ["STRING", {"default": "TextBatch", "multiline": false}], "mode": [["automatic", "index"]], "index": ["INT", {"default": 0, "min": 0, "step": 1}]}, "optional": {"multiline_text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["file_path", "dictionary_name", "label", "mode", "index"], "optional": ["multiline_text"]}, "output": ["STRING", "DICT"], "output_is_list": [false, false], "output_name": ["line_text", "dictionary"], "name": "Text Load Line From File", "display_name": "Text Load Line From File", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Multiline": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true, "dynamicPrompts": true}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Multiline", "display_name": "Text Multiline", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Multiline (Code Compatible)": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true, "dynamicPrompts": false}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Multiline (Code Compatible)", "display_name": "Text Multiline (Code Compatible)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Parse A1111 Embeddings": {"input": {"required": {"text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Parse A1111 Embeddings", "display_name": "Text Parse A1111 Embeddings", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Parse", "output_node": false}, "Text Parse Noodle Soup Prompts": {"input": {"required": {"mode": [["Noodle Soup Prompts", "Wildcards"]], "noodle_key": ["STRING", {"default": "__", "multiline": false}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["mode", "noodle_key", "seed", "text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Parse Noodle Soup Prompts", "display_name": "Text Parse Noodle Soup Prompts", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Parse", "output_node": true}, "Text Parse Tokens": {"input": {"required": {"text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Parse Tokens", "display_name": "Text Parse Tokens", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Tokens", "output_node": false}, "Text Random Line": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["text", "seed"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Random Line", "display_name": "Text Random Line", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Random Prompt": {"input": {"required": {"search_seed": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["search_seed"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Random Prompt", "display_name": "Text Random Prompt", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text String": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": false}]}, "optional": {"text_b": ["STRING", {"default": "", "multiline": false}], "text_c": ["STRING", {"default": "", "multiline": false}], "text_d": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["text"], "optional": ["text_b", "text_c", "text_d"]}, "output": ["STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["STRING", "STRING", "STRING", "STRING"], "name": "Text String", "display_name": "Text String", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Contains": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": false}], "sub_text": ["STRING", {"default": "", "multiline": false}]}, "optional": {"case_insensitive": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["text", "sub_text"], "optional": ["case_insensitive"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Text Contains", "display_name": "Text Contains", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Text Shuffle": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "separator": ["STRING", {"default": ",", "multiline": false}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["text", "separator", "seed"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Shuffle", "display_name": "Text Shuffle", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Operations", "output_node": false}, "Text Sort": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "separator": ["STRING", {"default": ", ", "multiline": false}]}}, "input_order": {"required": ["text", "separator"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Sort", "display_name": "Text Sort", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Operations", "output_node": false}, "Text to Conditioning": {"input": {"required": {"clip": ["CLIP"], "text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["clip", "text"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "Text to Conditioning", "display_name": "Text to Conditioning", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Operations", "output_node": false}, "Text to Console": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "label": ["STRING", {"default": "Text Output", "multiline": false}]}}, "input_order": {"required": ["text", "label"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text to Console", "display_name": "Text to Console", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Debug", "output_node": true}, "Text to Number": {"input": {"required": {"text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["NUMBER"], "output_is_list": [false], "output_name": ["NUMBER"], "name": "Text to Number", "display_name": "Text to Number", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Operations", "output_node": false}, "Text to String": {"input": {"required": {"text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text to String", "display_name": "Text to String", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Operations", "output_node": false}, "Text String Truncate": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "truncate_by": [["characters", "words"]], "truncate_from": [["end", "beginning"]], "truncate_to": ["INT", {"default": 10, "min": -99999999, "max": 99999999, "step": 1}]}, "optional": {"text_b": ["STRING", {"forceInput": true}], "text_c": ["STRING", {"forceInput": true}], "text_d": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text", "truncate_by", "truncate_from", "truncate_to"], "optional": ["text_b", "text_c", "text_d"]}, "output": ["STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["STRING", "STRING", "STRING", "STRING"], "name": "Text String Truncate", "display_name": "Text String Truncate", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Operations", "output_node": false}, "True Random.org Number Generator": {"input": {"required": {"api_key": ["STRING", {"default": "00000000-0000-0000-0000-000000000000", "multiline": false}], "minimum": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "maximum": ["FLOAT", {"default": 10000000, "min": -18446744073709551615, "max": 18446744073709551615}], "mode": [["random", "fixed"]]}}, "input_order": {"required": ["api_key", "minimum", "maximum", "mode"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "True Random.org Number Generator", "display_name": "True Random.org Number Generator", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number", "output_node": false}, "unCLIP Checkpoint Loader": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]]}}, "input_order": {"required": ["ckpt_name"]}, "output": ["MODEL", "CLIP", "VAE", "CLIP_VISION", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "CLIP_VISION", "NAME_STRING"], "name": "unCLIP Checkpoint Loader", "display_name": "unCLIP Checkpoint Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders", "output_node": false}, "Upscale Model Loader": {"input": {"required": {"model_name": [["4x-UltraSharp.pth", "ESRGAN_4x.pth", "RealESRGAN_x2.pth", "RealESRGAN_x4.pth", "ldsr/last.ckpt"]]}}, "input_order": {"required": ["model_name"]}, "output": ["UPSCALE_MODEL", "STRING"], "output_is_list": [false, false], "output_name": ["UPSCALE_MODEL", "MODEL_NAME_TEXT"], "name": "Upscale Model Loader", "display_name": "Upscale Model Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders", "output_node": false}, "Upscale Model Switch": {"input": {"required": {"upscale_model_a": ["UPSCALE_MODEL"], "upscale_model_b": ["UPSCALE_MODEL"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["upscale_model_a", "upscale_model_b", "boolean"]}, "output": ["UPSCALE_MODEL"], "output_is_list": [false], "output_name": ["UPSCALE_MODEL"], "name": "Upscale Model Switch", "display_name": "Upscale Model Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Write to GIF": {"input": {"required": {"image": ["IMAGE"], "transition_frames": ["INT", {"default": 30, "min": 2, "max": 60, "step": 1}], "image_delay_ms": ["FLOAT", {"default": 2500.0, "min": 0.1, "max": 60000.0, "step": 0.1}], "duration_ms": ["FLOAT", {"default": 0.1, "min": 0.1, "max": 60000.0, "step": 0.1}], "loops": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "max_size": ["INT", {"default": 512, "min": 128, "max": 1280, "step": 1}], "output_path": ["STRING", {"default": "/home/ubuntu/Playbook/ComfyUI/output", "multiline": false}], "filename": ["STRING", {"default": "morph_writer", "multiline": false}]}}, "input_order": {"required": ["image", "transition_frames", "image_delay_ms", "duration_ms", "loops", "max_size", "output_path", "filename"]}, "output": ["IMAGE", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["image_pass", "filepath_text", "filename_text"], "name": "Write to GIF", "display_name": "Write to GIF", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Animation/Writer", "output_node": false}, "Write to Video": {"input": {"required": {"image": ["IMAGE"], "transition_frames": ["INT", {"default": 30, "min": 0, "max": 120, "step": 1}], "image_delay_sec": ["FLOAT", {"default": 2.5, "min": 0.1, "max": 60000.0, "step": 0.1}], "fps": ["INT", {"default": 30, "min": 1, "max": 60.0, "step": 1}], "max_size": ["INT", {"default": 512, "min": 128, "max": 1920, "step": 1}], "output_path": ["STRING", {"default": "./ComfyUI/output", "multiline": false}], "filename": ["STRING", {"default": "comfy_writer", "multiline": false}], "codec": [["AVC1", "FFV1", "H264", "MP4V"]]}}, "input_order": {"required": ["image", "transition_frames", "image_delay_sec", "fps", "max_size", "output_path", "filename", "codec"]}, "output": ["IMAGE", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["IMAGE_PASS", "filepath_text", "filename_text"], "name": "Write to Video", "display_name": "Write to Video", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Animation/Writer", "output_node": false}, "VAE Input Switch": {"input": {"required": {"vae_a": ["VAE"], "vae_b": ["VAE"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["vae_a", "vae_b", "boolean"]}, "output": ["VAE"], "output_is_list": [false], "output_name": ["VAE"], "name": "VAE Input Switch", "display_name": "VAE Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Video Dump Frames": {"input": {"required": {"video_path": ["STRING", {"default": "./ComfyUI/input/MyVideo.mp4", "multiline": false}], "output_path": ["STRING", {"default": "./ComfyUI/input/MyVideo", "multiline": false}], "prefix": ["STRING", {"default": "frame_", "multiline": false}], "filenumber_digits": ["INT", {"default": 4, "min": -1, "max": 8, "step": 1}], "extension": [["png", "jpg", "gif", "tiff"]]}}, "input_order": {"required": ["video_path", "output_path", "prefix", "filenumber_digits", "extension"]}, "output": ["STRING", "NUMBER"], "output_is_list": [false, false], "output_name": ["output_path", "processed_count"], "name": "Video Dump Frames", "display_name": "Video Dump Frames", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Animation", "output_node": false}, "CLIPSEG2": {"input": {"required": {"image": ["IMAGE"], "text": ["STRING", {"default": "", "multiline": false}], "use_cuda": ["BOOLEAN", {"default": false}]}, "optional": {"clipseg_model": ["CLIPSEG_MODEL"]}}, "input_order": {"required": ["image", "text", "use_cuda"], "optional": ["clipseg_model"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CLIPSEG2", "display_name": "CLIPSEG2", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "image/transformation", "output_node": false}, "Loader": {"input": {"required": {"Checkpoint": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "Vae": [["Included", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "stop_at_clip_layer": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "width": ["INT", {"default": 512, "min": 16, "max": 32768, "step": 8}], "height": ["INT", {"default": 512, "min": 16, "max": 32768, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["Checkpoint", "Vae", "stop_at_clip_layer", "width", "height", "batch_size"]}, "output": ["MODEL", "VAE", "CLIP", "LATENT"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "VAE", "CLIP", "LATENT"], "name": "Loader", "display_name": "Loader", "description": "", "python_module": "custom_nodes.ComfyUI-Chibi-Nodes", "category": "Chibi-Nodes", "output_node": false}, "SimpleSampler": {"input": {"required": {"model": ["MODEL"], "sampler": [["Normal - euler", "Normal - uni_pc", "LCM Lora - lcm", "SDXL Turbo - dpmpp_sde karras"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latents": ["LATENT"], "mode": [["txt2img", "img2img"]]}, "optional": {"seed": ["INT", {"forceInput": true}]}}, "input_order": {"required": ["model", "sampler", "positive", "negative", "latents", "mode"], "optional": ["seed"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "SimpleSampler", "display_name": "SimpleSampler", "description": "", "python_module": "custom_nodes.ComfyUI-Chibi-Nodes", "category": "Chibi-Nodes", "output_node": false}, "Prompts": {"input": {"required": {"Positive": ["STRING", {"default": "Positive Prompt", "multiline": true}], "Negative": ["STRING", {"default": "Negative Prompt", "multiline": true}]}, "optional": {"clip": ["CLIP"]}}, "input_order": {"required": ["Positive", "Negative"], "optional": ["clip"]}, "output": ["CONDITIONING", "CONDITIONING", "CLIP", "STRING", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["Positive CONDITIONING", "Negative CONDITIONING", "CLIP", "Positive text", "Negative text"], "name": "Prompts", "display_name": "Prompts", "description": "", "python_module": "custom_nodes.ComfyUI-Chibi-Nodes", "category": "Chibi-Nodes", "output_node": false}, "ImageTool": {"input": {"required": {"image": ["IMAGE"], "width": ["INT", {"default": 1920, "min": 16, "max": 32768, "step": 1}], "height": ["INT", {"default": 1080, "min": 16, "max": 32768, "step": 1}], "crop": [[false, true]], "rotate": ["INT", {"default": 0, "min": 0, "max": 360, "step": 1}], "mirror": [[false, true]], "flip": [[false, true]], "bgcolor": [["black", "white"]]}}, "input_order": {"required": ["image", "width", "height", "crop", "rotate", "mirror", "flip", "bgcolor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageTool", "display_name": "ImageTool", "description": "", "python_module": "custom_nodes.ComfyUI-Chibi-Nodes", "category": "Chibi-Nodes/Image", "output_node": false}, "Wildcards": {"input": {"required": {"textfile": [["animals.txt", "art-styles.txt", "clothes.txt", "colours.txt", "descriptors.txt", "fabrics.txt", "foods.txt", "household-objects.txt", "landscapes.txt", "poses.txt"]], "keyword": ["STRING", {"default": "__wildcard__", "multiline": false}], "entries_returned": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"clip": ["CLIP"], "seed": ["INT", {"forceInput": true}], "text": ["STRING", {"default": "", "multiline": false, "forceInput": true}]}}, "input_order": {"required": ["textfile", "keyword", "entries_returned"], "optional": ["clip", "seed", "text"]}, "output": ["CONDITIONING", "STRING"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "text"], "name": "Wildcards", "display_name": "Wildcards", "description": "", "python_module": "custom_nodes.ComfyUI-Chibi-Nodes", "category": "Chibi-Nodes", "output_node": false}, "LoadEmbedding": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": false, "forceInput": true}], "embedding": [[]], "weight": ["FLOAT", {"default": 1.0, "min": -2, "max": 2, "step": 0.1, "round": 0.01}]}}, "input_order": {"required": ["text", "embedding", "weight"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "LoadEmbedding", "display_name": "LoadEmbedding", "description": "", "python_module": "custom_nodes.ComfyUI-Chibi-Nodes", "category": "Chibi-Nodes", "output_node": false}, "ConditionText": {"input": {"required": {"clip": ["CLIP"], "text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["clip", "text"]}, "output": ["CLIP", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["CLIP", "CONDITIONING"], "name": "ConditionText", "display_name": "ConditionText", "description": "", "python_module": "custom_nodes.ComfyUI-Chibi-Nodes", "category": "Chibi-Nodes/Text", "output_node": false}, "ConditionTextPrompts": {"input": {"required": {"clip": ["CLIP"], "positive": ["STRING", {"default": "", "multiline": false, "forceInput": true}], "negative": ["STRING", {"default": "", "multiline": false, "forceInput": true}]}}, "input_order": {"required": ["clip", "positive", "negative"]}, "output": ["CLIP", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false], "output_name": ["CLIP", "positive", "negative"], "name": "ConditionTextPrompts", "display_name": "ConditionTextPrompts", "description": "", "python_module": "custom_nodes.ComfyUI-Chibi-Nodes", "category": "Chibi-Nodes/Text", "output_node": false}, "ConditionTextMulti": {"input": {"required": {"clip": ["CLIP"]}, "optional": {"first": ["STRING", {"default": "", "multiline": false, "forceInput": true}], "second": ["STRING", {"default": "", "multiline": false, "forceInput": true}], "third": ["STRING", {"default": "", "multiline": false, "forceInput": true}], "fourth": ["STRING", {"default": "", "multiline": false, "forceInput": true}]}}, "input_order": {"required": ["clip"], "optional": ["first", "second", "third", "fourth"]}, "output": ["CLIP", "CONDITIONING", "CONDITIONING", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false, false, false], "output_name": ["CLIP", "first", "second", "third", "fourth"], "name": "ConditionTextMulti", "display_name": "ConditionTextMulti", "description": "", "python_module": "custom_nodes.ComfyUI-Chibi-Nodes", "category": "Chibi-Nodes/Text", "output_node": false}, "Textbox": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true, "forceInput": false, "print_to_screen": true}]}, "optional": {"passthrough": ["STRING", {"default": "", "multiline": true, "forceInput": true}]}}, "input_order": {"required": ["text"], "optional": ["passthrough"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "Textbox", "display_name": "Textbox", "description": "", "python_module": "custom_nodes.ComfyUI-Chibi-Nodes", "category": "Chibi-Nodes/Text", "output_node": true}, "ImageSizeInfo": {"input": {"required": {"image": ["IMAGE"]}, "hidden": {"width": ["INT"], "height": ["INT"]}}, "input_order": {"required": ["image"], "hidden": ["width", "height"]}, "output": ["IMAGE", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "width", "height"], "name": "ImageSizeInfo", "display_name": "ImageSizeInfo", "description": "", "python_module": "custom_nodes.ComfyUI-Chibi-Nodes", "category": "Chibi-Nodes/Image", "output_node": true}, "ImageSimpleResize": {"input": {"required": {"image": ["IMAGE"], "size": ["INT", {"default": 512, "min": 16, "max": 32768, "step": 1}], "edge": [["largest", "smallest", "all", "width", "height"]]}, "optional": {"size_override": ["INT", {"forceInput": true}], "vae": ["VAE"]}}, "input_order": {"required": ["image", "size", "edge"], "optional": ["size_override", "vae"]}, "output": ["IMAGE", "LATENT"], "output_is_list": [false, false], "output_name": ["IMAGE", "LATENT"], "name": "ImageSimpleResize", "display_name": "ImageSimpleResize", "description": "", "python_module": "custom_nodes.ComfyUI-Chibi-Nodes", "category": "Chibi-Nodes/Image", "output_node": false}, "ImageAddText": {"input": {"required": {"text": ["STRING", {"default": "Chibi-Nodes", "multiline": true}], "font": [["Ubuntu-Bold.ttf", "Ubuntu-BoldItalic.ttf", "Ubuntu-Italic.ttf", "Ubuntu-Light.ttf", "Ubuntu-LightItalic.ttf", "Ubuntu-Medium.ttf", "Ubuntu-MediumItalic.ttf", "Ubuntu-Regular.ttf", "UbuntuCondensed-Regular.ttf", "UbuntuMono-Bold.ttf", "UbuntuMono-BoldItalic.ttf", "UbuntuMono-Italic.ttf", "UbuntuMono-Regular.ttf"]], "font_size": ["INT", {"default": 24, "min": 0, "max": 200, "step": 1}], "font_colour": [["black", "white", "red", "green", "blue"]], "invert_mask": [[false, true]], "position_x": ["INT", {"default": 0, "min": 0, "max": 32768, "step": 1}], "position_y": ["INT", {"default": 0, "min": 0, "max": 32768, "step": 1}], "width": ["INT", {"default": 512, "min": 0, "max": 32768, "step": 1}], "height": ["INT", {"default": 512, "min": 0, "max": 32768, "step": 1}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["text", "font", "font_size", "font_colour", "invert_mask", "position_x", "position_y", "width", "height"], "optional": ["image"]}, "output": ["IMAGE", "MASK", "STRING"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "MASK", "text"], "name": "ImageAddText", "display_name": "ImageAddText", "description": "", "python_module": "custom_nodes.ComfyUI-Chibi-Nodes", "category": "Chibi-Nodes/Image", "output_node": false}, "Int2String": {"input": {"required": {"Int": ["INT", {"forceInput": true}]}}, "input_order": {"required": ["Int"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Int2String", "display_name": "Int2String", "description": "", "python_module": "custom_nodes.ComfyUI-Chibi-Nodes", "category": "Chibi-Nodes/Text", "output_node": false}, "LoadImageExtended": {"input": {"required": {"image": [["00100-3444294236.png", "01115-3441384736-mature ginger guy, laying on field, armpit, sunburnt, blushing, blued eyes, smile, tank top, muscular, facial hair, moustache ,.png", "0c42073e550d6ae9cb7624ad1b2ee53d1d4e8c69_high.webp", "11121_158078841563e50810b30c1.jpg", "1313766545.png", "2024-08-14ComfyUI_00004_.png", "33097901.jpg", "33246906.jpg", "360_F_562816292_d7bYLVGfttt68HKFkOc4f2QKtWUg8Q5n.jpg", "381543ce-3045-4381-9b52-676686caed8f.jpg", "AnimateDiff_00037.mp4", "BGDK748BV7YGRQNF7P3CDK8910 (1).jpeg", "ComfyUI_00074_.png", "ComfyUI_00078_.png", "ComfyUI_00091_.png", "ComfyUI_00219_.png", "ComfyUI_00222_.png", "ComfyUI_00808_.png", "ComfyUI_00809_.png", "ComfyUI_00810_.png", "ComfyUI_00813_.png", "ComfyUI_00815_.png", "ComfyUI_00818_.png", "ComfyUI_00819_.png", "ComfyUI_00842_.png", "ComfyUI_temp_alxcm_00001_.png", "ComfyUI_temp_ayutp_00001_.png", "ComfyUI_temp_bvpdk_00001_.png", "ComfyUI_temp_bvpdk_00004_.png", "ComfyUI_temp_cgbmm_00001_.png", "ComfyUI_temp_chusq_00001_.png", "ComfyUI_temp_doxtg_00002_.png", "ComfyUI_temp_ecxhs_00001_.png", "ComfyUI_temp_ecxhs_00004_.png", "ComfyUI_temp_ecxhs_00006_ (1).png", "ComfyUI_temp_ecxhs_00006_.png", "ComfyUI_temp_ecxhs_00008_.png", "ComfyUI_temp_ecxhs_00010_.png", "ComfyUI_temp_fqjhe_00001_.png", "ComfyUI_temp_fqjhe_00016_.png", "ComfyUI_temp_gxxzz_00001_.png", "ComfyUI_temp_hlvpl_00001_.png", "ComfyUI_temp_ipugi_00131_.png", "ComfyUI_temp_jluvj_00001_.png", "ComfyUI_temp_kteza_00001_.png", "ComfyUI_temp_kubpn_00003_.png", "ComfyUI_temp_lviic_00009_.png", "ComfyUI_temp_lzhyu_00004_.png", "ComfyUI_temp_nmjmf_00001_.png", "ComfyUI_temp_oqypc_00001_.png", "ComfyUI_temp_oqypc_00004_ (1).png", "ComfyUI_temp_oufve_00001_.png", "ComfyUI_temp_pukae_00002_.png", "ComfyUI_temp_qakbs_00001_.png", "ComfyUI_temp_rdanj_00004_.png", "ComfyUI_temp_rqrpi_00001_.png", "ComfyUI_temp_rsiuu_00005_.png", "ComfyUI_temp_rtbjq_00004_.png", "ComfyUI_temp_toyue_00002_.png", "ComfyUI_temp_tqaav_00002_.png", "ComfyUI_temp_txndi_00002_.png", "Guy_Mask_5.png", "Guy_Matcap_5.png", "Guy_Outline_5.png", "H100Test_00015_.png", "H100Test_00016_.png", "H100Test_00034_.png", "IMG_3440.png", "IMG_6129.png", "MAsk.png", "Mario.webp", "MarkuryFLUX_00003_.png", "MarkuryFLUX_00005_.png", "MarkuryFLUX_00022_.png", "MarkuryFLUX_00036_.png", "MarkuryFLUX_00037_.png", "Mask_2 (1).png", "Mask_2.png", "Matcap.png", "Outline.png", "Outline_2.png", "PB-_temp_bxspr_00001_.png", "PNG image.jpeg", "Playbook_00.png", "Playbook_22.png", "Playbook_47.png", "Playbook__00001_ (1) (1).png", "Playbook__00001_ (1).png", "Playbook__00001_ (2).png", "Playbook__00001_.png", "Playbook__00003_ (4).png", "Playbook__00016_.png", "Playbook__00018_.png", "Playbook__00031_.png", "Playbook__00034_.png", "Playbook__00045_.png", "Playbook__00058_.png", "Playbook__00065_.png", "Playbook__00113_.png", "Playbook__00178_.png", "Playbook__00183_.png", "Playbook__00184_.png", "Playbook__00205_.png", "Playbook__00314.mp4", "Playbook__00348_.png", "Playbook__00417_.png", "Playbook__00419_ (1).png", "Playbook__00419_.png", "SDXL-Lightning_00012_.png", "SDXL_ControlNet_Image.png", "archivs_upscalewithflux.png", "beauty (1).png", "beauty (2).png", "beauty (3).png", "beauty (4).png", "beauty-0 (11).png", "beauty-0 (21).png", "beauty-0 (36).png", "beauty-0 (9).png", "beauty-0 - 2024-07-02T105656.553.png", "beauty.png", "ca-times.brightspotcdn.jpg", "canny.png", "canny_res_00003_ (1).png", "canny_res_00003_.png", "canny_res_00014_.png", "canny_res_00038_.png", "canny_res_00040_.png", "dancer-front-depth.png", "dancer-front-mask.png", "dancer-front-outline.png", "depth (1).png", "depth (2).png", "depth (3).png", "depth (4).png", "depth (5).png", "depth-0 (16).png", "depth-0 (18).png", "depth-0 (19).png", "depth-0 (31).png", "depth-0 (38).png", "depth-0 - 2024-07-02T105656.499.png", "depth.png", "depth0000 (1).png", "depth0000 (2).png", "depth0000 (3).png", "depth0000.png", "depth0001.png", "depth0043.png", "download.png", "example.png", "file.txt", "img_BmzB6PyCLHnFfVvV.png", "img_DpgERK4DxUAwLftG.png", "img_QYLbD1uzHC1nFbAE.png", "img_ULjhfQdRpzpEnmug.png", "img_Xipc5yPPxgtt1QGj.png", "img_iBZAGHnJ2Bv3f1XS.png", "inputs_img_DLe7eAeVKcd5aihb copy.png", "inputs_img_DLe7eAeVKcd5aihb.png", "inputs_img_EPMSddrLooFQ1YVD.png", "inputs_img_JLRRUVkofX1vCmjx.png", "inputs_img_Jvze5V927RFFAHX5.png", "inputs_img_KiPSrfifuNwC54ep.png", "inputs_img_UBc9tSV7cFAx87FQ.png", "inputs_img_Uf1LEsrNL4ovoWpz copy.png", "inputs_img_Uf1LEsrNL4ovoWpz.png", "inputs_img_Yhq6WtF5vDhoS4r5.png", "inputs_img_bG6odzGr8EZUPK1u.png", "inputs_img_fp87ttHy7b3hLkDg.png", "inputs_img_pKYznktDTwbYPGcL.png", "inputs_img_qyyvpcueAihTw9YV.png", "istockphoto-1325701162-612x612.jpg", "large-elephant-herd-walking-dust-savuti-botswana-towards-camera-196186738.webp", "manwithsign-depth.png", "manwithsign-mask.png", "manwithsign-outline.png", "mask (1).png", "mask (10).png", "mask (2).png", "mask (3).png", "mask (4).png", "mask (5).png", "mask (6).png", "mask (7).png", "mask (8).png", "mask (9).png", "mask-0 (11).png", "mask-0 (24).png", "mask-0 (28).png", "mask-0 (9).png", "mask-0 - 2024-07-02T105656.507.png", "mask.png", "masks.png", "night vision.jpg", "outline (1).png", "outline (2).png", "outline (3).png", "outline (4).png", "outline-0 (11).png", "outline-0 (31).png", "outline-0 (9).png", "outline-0 - 2024-07-02T105656.503.png", "outline.png", "outline0000 (1).png", "outline0000 (2).png", "outline0000 (3).png", "outline0000.png", "outline0001.png", "outline0043.png", "playbook_59b784a6-af19-4b44-9a45-1e98bae3c9e5.png", "playbook_e2a76fa6-15a6-41d2-922a-29dd68bfd3e3.png", "refernece.jpg", "result_14.png", "rgthree.compare._temp_rzpfz_00007_.png", "safari.jpg", "undefined_image (1).png", "walking-depth.png", "walking-mask.png", "walking-outline.png"], {"image_upload": true}]}, "optional": {"vae": ["VAE"]}}, "input_order": {"required": ["image"], "optional": ["vae"]}, "output": ["IMAGE", "MASK", "LATENT", "STRING", "STRING", "INT", "INT"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["IMAGE", "MASK", "LATENT", "filename", "image Info", "width", "height"], "name": "LoadImageExtended", "display_name": "LoadImageExtended", "description": "", "python_module": "custom_nodes.ComfyUI-Chibi-Nodes", "category": "Chibi-Nodes/Image", "output_node": false}, "SeedGenerator": {"input": {"required": {"mode": [["Random", "Fixed"]], "fixed_seed": ["INT", {"default": 8008135, "min": 0, "max": 18446744073709551615, "step": 1}]}}, "input_order": {"required": ["mode", "fixed_seed"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["seed", "text"], "name": "SeedGenerator", "display_name": "SeedGenerator", "description": "", "python_module": "custom_nodes.ComfyUI-Chibi-Nodes", "category": "Chibi-Nodes/Numbers", "output_node": false}, "SaveImages": {"input": {"required": {"filename_type": [["Timestamp", "Fixed", "Fixed Single"]], "fixed_filename": ["STRING", {"default": "output"}]}, "optional": {"images": ["IMAGE"], "latents": ["LATENT"], "vae": ["VAE"], "fixed_filename_override": ["STRING", {"forceInput": true}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["filename_type", "fixed_filename"], "optional": ["images", "latents", "vae", "fixed_filename_override"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["images", "filename_list"], "name": "SaveImages", "display_name": "SaveImages", "description": "", "python_module": "custom_nodes.ComfyUI-Chibi-Nodes", "category": "Chibi-Nodes", "output_node": true}, "TextSplit": {"input": {"required": {"text": ["STRING", {"default": "", "forceInput": true}], "separator": ["STRING", {"default": "."}], "reverse": [[false, true]], "return_half": [["First Half", "Second Half"]]}}, "input_order": {"required": ["text", "separator", "reverse", "return_half"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "TextSplit", "display_name": "TextSplit", "description": "", "python_module": "custom_nodes.ComfyUI-Chibi-Nodes", "category": "Chibi-Nodes/Text", "output_node": true}, "RandomResolutionLatent": {"input": {"required": {"batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["batch_size"]}, "output": ["LATENT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["LATENT", "width", "height"], "name": "RandomResolutionLatent", "display_name": "RandomResolutionLatent", "description": "", "python_module": "custom_nodes.ComfyUI-Chibi-Nodes", "category": "Chibi-Nodes/Numbers", "output_node": true}, "Load Nai Styles Complex CSV": {"input": {"required": {"naifilters": [["Error loading naistyles.csv, check the console"]], "naistyles": [["Error loading naistyles.csv, check the console"]], "naitypes": [["Error loading naistyles.csv, check the console"]]}}, "input_order": {"required": ["naifilters", "naistyles", "naitypes"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["Full prompt", "Short prompt"], "name": "Load Nai Styles Complex CSV", "display_name": "\u2734\ufe0f U-NAI Styles Launcher", "description": "", "python_module": "custom_nodes.ComfyUI-Universal-Styler", "category": "\u2734\ufe0f Universal NAI Nodes", "output_node": false}, "Universal_Styler_Node": {"input": {"required": {"clip": ["CLIP"], "mute": [["On", "Off"]], "mix": ["INT", {"default": 50, "min": 0, "max": 100, "step": 1, "display": "slider"}], "float_field": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01, "round": 0.001, "display": "slider"}], "string_field": ["STRING", {"multiline": true, "default": "Define Object"}], "string_field2": ["STRING", {"multiline": true, "default": "Define Background"}]}}, "input_order": {"required": ["clip", "mute", "mix", "float_field", "string_field", "string_field2"]}, "output": ["CONDITIONING", "STRING", "STRING", "INT"], "output_is_list": [false, false, false, false], "output_name": ["Compiled prompt", "Value", "Value2", "mix"], "name": "Universal_Styler_Node", "display_name": "\u2734\ufe0f U-NAI Styler - v0.2.1", "description": "", "python_module": "custom_nodes.ComfyUI-Universal-Styler", "category": "\u2734\ufe0f Universal NAI Nodes", "output_node": false}, "concat": {"input": {"required": {"text1": ["STRING", {"multiline": false, "default": "Hello"}], "text2": ["STRING", {"multiline": false, "default": "World"}]}}, "input_order": {"required": ["text1", "text2"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "concat", "display_name": "\u2734\ufe0f U-NAI Fields Concatenate", "description": "", "python_module": "custom_nodes.ComfyUI-Universal-Styler", "category": "\u2734\ufe0f Universal NAI Nodes", "output_node": false}, "ReActorFaceSwap": {"input": {"required": {"enabled": ["BOOLEAN", {"default": true, "label_off": "OFF", "label_on": "ON"}], "input_image": ["IMAGE"], "swap_model": [["inswapper_128.onnx"]], "facedetection": [["retinaface_resnet50", "retinaface_mobile0.25", "YOLOv5l", "YOLOv5n"]], "face_restore_model": [["none", "codeformer-v0.1.0.pth", "GFPGANv1.3.pth", "GFPGANv1.4.pth", "GPEN-BFR-1024.onnx", "GPEN-BFR-2048.onnx", "GPEN-BFR-512.onnx"]], "face_restore_visibility": ["FLOAT", {"default": 1, "min": 0.1, "max": 1, "step": 0.05}], "codeformer_weight": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1, "step": 0.05}], "detect_gender_input": [["no", "female", "male"], {"default": "no"}], "detect_gender_source": [["no", "female", "male"], {"default": "no"}], "input_faces_index": ["STRING", {"default": "0"}], "source_faces_index": ["STRING", {"default": "0"}], "console_log_level": [[0, 1, 2], {"default": 1}]}, "optional": {"source_image": ["IMAGE"], "face_model": ["FACE_MODEL"], "face_boost": ["FACE_BOOST"]}, "hidden": {"faces_order": "FACES_ORDER"}}, "input_order": {"required": ["enabled", "input_image", "swap_model", "facedetection", "face_restore_model", "face_restore_visibility", "codeformer_weight", "detect_gender_input", "detect_gender_source", "input_faces_index", "source_faces_index", "console_log_level"], "optional": ["source_image", "face_model", "face_boost"], "hidden": ["faces_order"]}, "output": ["IMAGE", "FACE_MODEL"], "output_is_list": [false, false], "output_name": ["IMAGE", "FACE_MODEL"], "name": "ReActorFaceSwap", "display_name": "ReActor \ud83c\udf0c Fast Face Swap", "description": "", "python_module": "custom_nodes.comfyui-reactor-node", "category": "\ud83c\udf0c ReActor", "output_node": false}, "ReActorFaceSwapOpt": {"input": {"required": {"enabled": ["BOOLEAN", {"default": true, "label_off": "OFF", "label_on": "ON"}], "input_image": ["IMAGE"], "swap_model": [["inswapper_128.onnx"]], "facedetection": [["retinaface_resnet50", "retinaface_mobile0.25", "YOLOv5l", "YOLOv5n"]], "face_restore_model": [["none", "codeformer-v0.1.0.pth", "GFPGANv1.3.pth", "GFPGANv1.4.pth", "GPEN-BFR-1024.onnx", "GPEN-BFR-2048.onnx", "GPEN-BFR-512.onnx"]], "face_restore_visibility": ["FLOAT", {"default": 1, "min": 0.1, "max": 1, "step": 0.05}], "codeformer_weight": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1, "step": 0.05}]}, "optional": {"source_image": ["IMAGE"], "face_model": ["FACE_MODEL"], "options": ["OPTIONS"], "face_boost": ["FACE_BOOST"]}}, "input_order": {"required": ["enabled", "input_image", "swap_model", "facedetection", "face_restore_model", "face_restore_visibility", "codeformer_weight"], "optional": ["source_image", "face_model", "options", "face_boost"]}, "output": ["IMAGE", "FACE_MODEL"], "output_is_list": [false, false], "output_name": ["IMAGE", "FACE_MODEL"], "name": "ReActorFaceSwapOpt", "display_name": "ReActor \ud83c\udf0c Fast Face Swap [OPTIONS]", "description": "", "python_module": "custom_nodes.comfyui-reactor-node", "category": "\ud83c\udf0c ReActor", "output_node": false}, "ReActorOptions": {"input": {"required": {"input_faces_order": [["left-right", "right-left", "top-bottom", "bottom-top", "small-large", "large-small"], {"default": "large-small"}], "input_faces_index": ["STRING", {"default": "0"}], "detect_gender_input": [["no", "female", "male"], {"default": "no"}], "source_faces_order": [["left-right", "right-left", "top-bottom", "bottom-top", "small-large", "large-small"], {"default": "large-small"}], "source_faces_index": ["STRING", {"default": "0"}], "detect_gender_source": [["no", "female", "male"], {"default": "no"}], "console_log_level": [[0, 1, 2], {"default": 1}]}}, "input_order": {"required": ["input_faces_order", "input_faces_index", "detect_gender_input", "source_faces_order", "source_faces_index", "detect_gender_source", "console_log_level"]}, "output": ["OPTIONS"], "output_is_list": [false], "output_name": ["OPTIONS"], "name": "ReActorOptions", "display_name": "ReActor \ud83c\udf0c Options", "description": "", "python_module": "custom_nodes.comfyui-reactor-node", "category": "\ud83c\udf0c ReActor", "output_node": false}, "ReActorFaceBoost": {"input": {"required": {"enabled": ["BOOLEAN", {"default": true, "label_off": "OFF", "label_on": "ON"}], "boost_model": [["none", "codeformer-v0.1.0.pth", "GFPGANv1.3.pth", "GFPGANv1.4.pth", "GPEN-BFR-1024.onnx", "GPEN-BFR-2048.onnx", "GPEN-BFR-512.onnx"]], "interpolation": [["Nearest", "Bilinear", "Bicubic", "Lanczos"], {"default": "Bicubic"}], "visibility": ["FLOAT", {"default": 1, "min": 0.1, "max": 1, "step": 0.05}], "codeformer_weight": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1, "step": 0.05}], "restore_with_main_after": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["enabled", "boost_model", "interpolation", "visibility", "codeformer_weight", "restore_with_main_after"]}, "output": ["FACE_BOOST"], "output_is_list": [false], "output_name": ["FACE_BOOST"], "name": "ReActorFaceBoost", "display_name": "ReActor \ud83c\udf0c Face Booster", "description": "", "python_module": "custom_nodes.comfyui-reactor-node", "category": "\ud83c\udf0c ReActor", "output_node": false}, "ReActorMaskHelper": {"input": {"required": {"image": ["IMAGE"], "swapped_image": ["IMAGE"], "bbox_model_name": [["bbox/face_yolov8m.pt", "bbox/hand_yolov8s.pt", "segm/person_yolov8m-seg.pt"]], "bbox_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "bbox_dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}], "bbox_crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 100, "step": 0.1}], "bbox_drop_size": ["INT", {"min": 1, "max": 8192, "step": 1, "default": 10}], "sam_model_name": [["sam_vit_b_01ec64.pth", "sam_vit_h_4b8939.pth", "sam_vit_l_0b3195.pth"]], "sam_dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "sam_threshold": ["FLOAT", {"default": 0.93, "min": 0.0, "max": 1.0, "step": 0.01}], "bbox_expansion": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1}], "mask_hint_threshold": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01}], "mask_hint_use_negative": [["False", "Small", "Outter"]], "morphology_operation": [["dilate", "erode", "open", "close"]], "morphology_distance": ["INT", {"default": 0, "min": 0, "max": 128, "step": 1}], "blur_radius": ["INT", {"default": 9, "min": 0, "max": 48, "step": 1}], "sigma_factor": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 3.0, "step": 0.01}]}, "optional": {"mask_optional": ["MASK"]}}, "input_order": {"required": ["image", "swapped_image", "bbox_model_name", "bbox_threshold", "bbox_dilation", "bbox_crop_factor", "bbox_drop_size", "sam_model_name", "sam_dilation", "sam_threshold", "bbox_expansion", "mask_hint_threshold", "mask_hint_use_negative", "morphology_operation", "morphology_distance", "blur_radius", "sigma_factor"], "optional": ["mask_optional"]}, "output": ["IMAGE", "MASK", "IMAGE", "IMAGE"], "output_is_list": [false, false, false, false], "output_name": ["IMAGE", "MASK", "MASK_PREVIEW", "SWAPPED_FACE"], "name": "ReActorMaskHelper", "display_name": "ReActor \ud83c\udf0c Masking Helper", "description": "", "python_module": "custom_nodes.comfyui-reactor-node", "category": "\ud83c\udf0c ReActor", "output_node": false}, "ReActorSaveFaceModel": {"input": {"required": {"save_mode": ["BOOLEAN", {"default": true, "label_off": "OFF", "label_on": "ON"}], "face_model_name": ["STRING", {"default": "default"}], "select_face_index": ["INT", {"default": 0, "min": 0}]}, "optional": {"image": ["IMAGE"], "face_model": ["FACE_MODEL"]}}, "input_order": {"required": ["save_mode", "face_model_name", "select_face_index"], "optional": ["image", "face_model"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ReActorSaveFaceModel", "display_name": "Save Face Model \ud83c\udf0c ReActor", "description": "", "python_module": "custom_nodes.comfyui-reactor-node", "category": "\ud83c\udf0c ReActor", "output_node": true}, "ReActorLoadFaceModel": {"input": {"required": {"face_model": [["none"]]}}, "input_order": {"required": ["face_model"]}, "output": ["FACE_MODEL"], "output_is_list": [false], "output_name": ["FACE_MODEL"], "name": "ReActorLoadFaceModel", "display_name": "Load Face Model \ud83c\udf0c ReActor", "description": "", "python_module": "custom_nodes.comfyui-reactor-node", "category": "\ud83c\udf0c ReActor", "output_node": false}, "ReActorBuildFaceModel": {"input": {"required": {"save_mode": ["BOOLEAN", {"default": true, "label_off": "OFF", "label_on": "ON"}], "send_only": ["BOOLEAN", {"default": false, "label_off": "NO", "label_on": "YES"}], "face_model_name": ["STRING", {"default": "default"}], "compute_method": [["Mean", "Median", "Mode"], {"default": "Mean"}]}, "optional": {"images": ["IMAGE"], "face_models": ["FACE_MODEL"]}}, "input_order": {"required": ["save_mode", "send_only", "face_model_name", "compute_method"], "optional": ["images", "face_models"]}, "output": ["FACE_MODEL"], "output_is_list": [false], "output_name": ["FACE_MODEL"], "name": "ReActorBuildFaceModel", "display_name": "Build Blended Face Model \ud83c\udf0c ReActor", "description": "", "python_module": "custom_nodes.comfyui-reactor-node", "category": "\ud83c\udf0c ReActor", "output_node": true}, "ReActorMakeFaceModelBatch": {"input": {"required": {"face_model1": ["FACE_MODEL"]}, "optional": {"face_model2": ["FACE_MODEL"], "face_model3": ["FACE_MODEL"], "face_model4": ["FACE_MODEL"], "face_model5": ["FACE_MODEL"], "face_model6": ["FACE_MODEL"], "face_model7": ["FACE_MODEL"], "face_model8": ["FACE_MODEL"], "face_model9": ["FACE_MODEL"], "face_model10": ["FACE_MODEL"]}}, "input_order": {"required": ["face_model1"], "optional": ["face_model2", "face_model3", "face_model4", "face_model5", "face_model6", "face_model7", "face_model8", "face_model9", "face_model10"]}, "output": ["FACE_MODEL"], "output_is_list": [false], "output_name": ["FACE_MODELS"], "name": "ReActorMakeFaceModelBatch", "display_name": "Make Face Model Batch \ud83c\udf0c ReActor", "description": "", "python_module": "custom_nodes.comfyui-reactor-node", "category": "\ud83c\udf0c ReActor", "output_node": false}, "ReActorRestoreFace": {"input": {"required": {"image": ["IMAGE"], "facedetection": [["retinaface_resnet50", "retinaface_mobile0.25", "YOLOv5l", "YOLOv5n"]], "model": [["none", "codeformer-v0.1.0.pth", "GFPGANv1.3.pth", "GFPGANv1.4.pth", "GPEN-BFR-1024.onnx", "GPEN-BFR-2048.onnx", "GPEN-BFR-512.onnx"]], "visibility": ["FLOAT", {"default": 1, "min": 0.0, "max": 1, "step": 0.05}], "codeformer_weight": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1, "step": 0.05}]}}, "input_order": {"required": ["image", "facedetection", "model", "visibility", "codeformer_weight"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ReActorRestoreFace", "display_name": "Restore Face \ud83c\udf0c ReActor", "description": "", "python_module": "custom_nodes.comfyui-reactor-node", "category": "\ud83c\udf0c ReActor", "output_node": false}, "ReActorImageDublicator": {"input": {"required": {"image": ["IMAGE"], "count": ["INT", {"default": 1, "min": 0}]}}, "input_order": {"required": ["image", "count"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGES"], "name": "ReActorImageDublicator", "display_name": "Image Dublicator (List) \ud83c\udf0c ReActor", "description": "", "python_module": "custom_nodes.comfyui-reactor-node", "category": "\ud83c\udf0c ReActor", "output_node": false}, "ImageRGBA2RGB": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageRGBA2RGB", "display_name": "Convert RGBA to RGB \ud83c\udf0c ReActor", "description": "", "python_module": "custom_nodes.comfyui-reactor-node", "category": "\ud83c\udf0c ReActor", "output_node": false}, "FaceEmbedDistance": {"input": {"required": {"analysis_models": ["ANALYSIS_MODELS"], "reference": ["IMAGE"], "image": ["IMAGE"], "similarity_metric": [["L2_norm", "cosine", "euclidean"]], "filter_thresh": ["FLOAT", {"default": 100.0, "min": 0.001, "max": 100.0, "step": 0.001}], "filter_best": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "generate_image_overlay": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["analysis_models", "reference", "image", "similarity_metric", "filter_thresh", "filter_best", "generate_image_overlay"]}, "output": ["IMAGE", "FLOAT"], "output_is_list": [false, false], "output_name": ["IMAGE", "distance"], "name": "FaceEmbedDistance", "display_name": "Face Embeds Distance", "description": "", "python_module": "custom_nodes.ComfyUI_FaceAnalysis", "category": "FaceAnalysis", "output_node": false}, "FaceAnalysisModels": {"input": {"required": {"library": [["insightface", "auraface", "dlib"]], "provider": [["CPU", "CUDA", "DirectML", "OpenVINO", "ROCM", "CoreML"]]}}, "input_order": {"required": ["library", "provider"]}, "output": ["ANALYSIS_MODELS"], "output_is_list": [false], "output_name": ["ANALYSIS_MODELS"], "name": "FaceAnalysisModels", "display_name": "Face Analysis Models", "description": "", "python_module": "custom_nodes.ComfyUI_FaceAnalysis", "category": "FaceAnalysis", "output_node": false}, "FaceBoundingBox": {"input": {"required": {"analysis_models": ["ANALYSIS_MODELS"], "image": ["IMAGE"], "padding": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "padding_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 2.0, "step": 0.05}], "index": ["INT", {"default": -1, "min": -1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["analysis_models", "image", "padding", "padding_percent", "index"]}, "output": ["IMAGE", "INT", "INT", "INT", "INT"], "output_is_list": [true, true, true, true, true], "output_name": ["IMAGE", "x", "y", "width", "height"], "name": "FaceBoundingBox", "display_name": "Face Bounding Box", "description": "", "python_module": "custom_nodes.ComfyUI_FaceAnalysis", "category": "FaceAnalysis", "output_node": false}, "FaceAlign": {"input": {"required": {"analysis_models": ["ANALYSIS_MODELS"], "image_from": ["IMAGE"]}, "optional": {"image_to": ["IMAGE"]}}, "input_order": {"required": ["analysis_models", "image_from"], "optional": ["image_to"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "FaceAlign", "display_name": "Face Align", "description": "", "python_module": "custom_nodes.ComfyUI_FaceAnalysis", "category": "FaceAnalysis", "output_node": false}, "FaceSegmentation": {"input": {"required": {"analysis_models": ["ANALYSIS_MODELS"], "image": ["IMAGE"], "area": [["face", "main_features", "eyes", "left_eye", "right_eye", "nose", "mouth", "face+forehead (if available)"]], "grow": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1}], "grow_tapered": ["BOOLEAN", {"default": false}], "blur": ["INT", {"default": 13, "min": 1, "max": 4096, "step": 2}]}}, "input_order": {"required": ["analysis_models", "image", "area", "grow", "grow_tapered", "blur"]}, "output": ["MASK", "IMAGE", "MASK", "IMAGE", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["mask", "image", "seg_mask", "seg_image", "x", "y", "width", "height"], "name": "FaceSegmentation", "display_name": "Face Segmentation", "description": "", "python_module": "custom_nodes.ComfyUI_FaceAnalysis", "category": "FaceAnalysis", "output_node": false}, "FaceWarp": {"input": {"required": {"analysis_models": ["ANALYSIS_MODELS"], "image_from": ["IMAGE"], "image_to": ["IMAGE"], "keypoints": [["main features", "full face", "full face+forehead (if available)"]], "grow": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1}], "blur": ["INT", {"default": 13, "min": 1, "max": 4096, "step": 2}]}}, "input_order": {"required": ["analysis_models", "image_from", "image_to", "keypoints", "grow", "blur"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "FaceWarp", "display_name": "Face Warp", "description": "", "python_module": "custom_nodes.ComfyUI_FaceAnalysis", "category": "FaceAnalysis", "output_node": false}, "KSampler (Efficient)": {"input": {"required": {"model": ["MODEL"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 7.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "preview_method": [["auto", "latent2rgb", "taesd", "vae_decoded_only", "none"]], "vae_decode": [["true", "true (tiled)", "false"]]}, "optional": {"optional_vae": ["VAE"], "script": ["SCRIPT"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["model", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "denoise", "preview_method", "vae_decode"], "optional": ["optional_vae", "script"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "IMAGE"], "output_is_list": [false, false, false, false, false, false], "output_name": ["MODEL", "CONDITIONING+", "CONDITIONING-", "LATENT", "VAE", "IMAGE"], "name": "KSampler (Efficient)", "display_name": "KSampler (Efficient)", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/Sampling", "output_node": true}, "KSampler Adv. (Efficient)": {"input": {"required": {"model": ["MODEL"], "add_noise": [["enable", "disable"]], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 7.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at_step": ["INT", {"default": 10000, "min": 0, "max": 10000}], "return_with_leftover_noise": [["disable", "enable"]], "preview_method": [["auto", "latent2rgb", "taesd", "none"]], "vae_decode": [["true", "true (tiled)", "false", "output only", "output only (tiled)"]]}, "optional": {"optional_vae": ["VAE"], "script": ["SCRIPT"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["model", "add_noise", "noise_seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "start_at_step", "end_at_step", "return_with_leftover_noise", "preview_method", "vae_decode"], "optional": ["optional_vae", "script"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "IMAGE"], "output_is_list": [false, false, false, false, false, false], "output_name": ["MODEL", "CONDITIONING+", "CONDITIONING-", "LATENT", "VAE", "IMAGE"], "name": "KSampler Adv. (Efficient)", "display_name": "KSampler Adv. (Efficient)", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/Sampling", "output_node": true}, "KSampler SDXL (Eff.)": {"input": {"required": {"sdxl_tuple": ["SDXL_TUPLE"], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 7.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "latent_image": ["LATENT"], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "refine_at_step": ["INT", {"default": -1, "min": -1, "max": 10000}], "preview_method": [["auto", "latent2rgb", "taesd", "none"]], "vae_decode": [["true", "true (tiled)", "false", "output only", "output only (tiled)"]]}, "optional": {"optional_vae": ["VAE"], "script": ["SCRIPT"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["sdxl_tuple", "noise_seed", "steps", "cfg", "sampler_name", "scheduler", "latent_image", "start_at_step", "refine_at_step", "preview_method", "vae_decode"], "optional": ["optional_vae", "script"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["SDXL_TUPLE", "LATENT", "VAE", "IMAGE"], "output_is_list": [false, false, false, false], "output_name": ["SDXL_TUPLE", "LATENT", "VAE", "IMAGE"], "name": "KSampler SDXL (Eff.)", "display_name": "KSampler SDXL (Eff.)", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/Sampling", "output_node": true}, "Efficient Loader": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "vae_name": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "clip_skip": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "lora_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "positive": ["STRING", {"default": "CLIP_POSITIVE", "multiline": true}], "negative": ["STRING", {"default": "CLIP_NEGATIVE", "multiline": true}], "token_normalization": [["none", "mean", "length", "length+mean"]], "weight_interpretation": [["comfy", "A1111", "compel", "comfy++", "down_weight"]], "empty_latent_width": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}], "empty_latent_height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 262144}]}, "optional": {"lora_stack": ["LORA_STACK"], "cnet_stack": ["CONTROL_NET_STACK"]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "vae_name", "clip_skip", "lora_name", "lora_model_strength", "lora_clip_strength", "positive", "negative", "token_normalization", "weight_interpretation", "empty_latent_width", "empty_latent_height", "batch_size"], "optional": ["lora_stack", "cnet_stack"], "hidden": ["prompt", "my_unique_id"]}, "output": ["MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "CLIP", "DEPENDENCIES"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["MODEL", "CONDITIONING+", "CONDITIONING-", "LATENT", "VAE", "CLIP", "DEPENDENCIES"], "name": "Efficient Loader", "display_name": "Efficient Loader", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/Loaders", "output_node": false}, "Eff. Loader SDXL": {"input": {"required": {"base_ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "base_clip_skip": ["INT", {"default": -2, "min": -24, "max": -1, "step": 1}], "refiner_ckpt_name": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "refiner_clip_skip": ["INT", {"default": -2, "min": -24, "max": -1, "step": 1}], "positive_ascore": ["FLOAT", {"default": 6.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "negative_ascore": ["FLOAT", {"default": 2.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "vae_name": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "positive": ["STRING", {"default": "CLIP_POSITIVE", "multiline": true}], "negative": ["STRING", {"default": "CLIP_NEGATIVE", "multiline": true}], "token_normalization": [["none", "mean", "length", "length+mean"]], "weight_interpretation": [["comfy", "A1111", "compel", "comfy++", "down_weight"]], "empty_latent_width": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 64}], "empty_latent_height": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 64}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}, "optional": {"lora_stack": ["LORA_STACK"], "cnet_stack": ["CONTROL_NET_STACK"]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["base_ckpt_name", "base_clip_skip", "refiner_ckpt_name", "refiner_clip_skip", "positive_ascore", "negative_ascore", "vae_name", "positive", "negative", "token_normalization", "weight_interpretation", "empty_latent_width", "empty_latent_height", "batch_size"], "optional": ["lora_stack", "cnet_stack"], "hidden": ["prompt", "my_unique_id"]}, "output": ["SDXL_TUPLE", "LATENT", "VAE", "DEPENDENCIES"], "output_is_list": [false, false, false, false], "output_name": ["SDXL_TUPLE", "LATENT", "VAE", "DEPENDENCIES"], "name": "Eff. Loader SDXL", "display_name": "Eff. Loader SDXL", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/Loaders", "output_node": false}, "LoRA Stacker": {"input": {"required": {"input_mode": [["simple", "advanced"]], "lora_count": ["INT", {"default": 3, "min": 0, "max": 50, "step": 1}], "lora_name_1": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_2": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_3": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_4": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_4": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_4": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_4": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_5": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_5": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_5": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_5": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_6": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_6": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_6": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_6": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_7": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_7": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_7": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_7": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_8": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_8": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_8": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_8": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_9": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_9": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_9": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_9": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_10": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_10": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_10": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_10": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_11": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_11": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_11": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_11": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_12": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_12": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_12": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_12": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_13": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_13": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_13": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_13": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_14": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_14": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_14": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_14": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_15": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_15": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_15": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_15": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_16": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_16": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_16": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_16": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_17": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_17": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_17": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_17": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_18": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_18": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_18": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_18": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_19": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_19": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_19": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_19": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_20": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_20": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_20": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_20": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_21": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_21": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_21": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_21": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_22": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_22": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_22": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_22": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_23": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_23": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_23": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_23": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_24": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_24": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_24": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_24": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_25": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_25": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_25": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_25": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_26": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_26": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_26": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_26": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_27": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_27": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_27": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_27": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_28": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_28": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_28": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_28": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_29": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_29": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_29": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_29": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_30": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_30": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_30": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_30": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_31": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_31": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_31": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_31": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_32": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_32": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_32": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_32": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_33": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_33": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_33": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_33": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_34": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_34": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_34": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_34": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_35": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_35": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_35": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_35": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_36": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_36": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_36": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_36": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_37": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_37": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_37": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_37": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_38": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_38": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_38": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_38": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_39": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_39": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_39": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_39": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_40": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_40": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_40": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_40": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_41": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_41": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_41": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_41": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_42": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_42": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_42": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_42": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_43": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_43": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_43": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_43": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_44": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_44": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_44": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_44": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_45": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_45": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_45": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_45": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_46": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_46": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_46": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_46": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_47": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_47": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_47": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_47": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_48": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_48": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_48": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_48": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_49": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_wt_49": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "model_str_49": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_49": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}, "optional": {"lora_stack": ["LORA_STACK"]}}, "input_order": {"required": ["input_mode", "lora_count", "lora_name_1", "lora_wt_1", "model_str_1", "clip_str_1", "lora_name_2", "lora_wt_2", "model_str_2", "clip_str_2", "lora_name_3", "lora_wt_3", "model_str_3", "clip_str_3", "lora_name_4", "lora_wt_4", "model_str_4", "clip_str_4", "lora_name_5", "lora_wt_5", "model_str_5", "clip_str_5", "lora_name_6", "lora_wt_6", "model_str_6", "clip_str_6", "lora_name_7", "lora_wt_7", "model_str_7", "clip_str_7", "lora_name_8", "lora_wt_8", "model_str_8", "clip_str_8", "lora_name_9", "lora_wt_9", "model_str_9", "clip_str_9", "lora_name_10", "lora_wt_10", "model_str_10", "clip_str_10", "lora_name_11", "lora_wt_11", "model_str_11", "clip_str_11", "lora_name_12", "lora_wt_12", "model_str_12", "clip_str_12", "lora_name_13", "lora_wt_13", "model_str_13", "clip_str_13", "lora_name_14", "lora_wt_14", "model_str_14", "clip_str_14", "lora_name_15", "lora_wt_15", "model_str_15", "clip_str_15", "lora_name_16", "lora_wt_16", "model_str_16", "clip_str_16", "lora_name_17", "lora_wt_17", "model_str_17", "clip_str_17", "lora_name_18", "lora_wt_18", "model_str_18", "clip_str_18", "lora_name_19", "lora_wt_19", "model_str_19", "clip_str_19", "lora_name_20", "lora_wt_20", "model_str_20", "clip_str_20", "lora_name_21", "lora_wt_21", "model_str_21", "clip_str_21", "lora_name_22", "lora_wt_22", "model_str_22", "clip_str_22", "lora_name_23", "lora_wt_23", "model_str_23", "clip_str_23", "lora_name_24", "lora_wt_24", "model_str_24", "clip_str_24", "lora_name_25", "lora_wt_25", "model_str_25", "clip_str_25", "lora_name_26", "lora_wt_26", "model_str_26", "clip_str_26", "lora_name_27", "lora_wt_27", "model_str_27", "clip_str_27", "lora_name_28", "lora_wt_28", "model_str_28", "clip_str_28", "lora_name_29", "lora_wt_29", "model_str_29", "clip_str_29", "lora_name_30", "lora_wt_30", "model_str_30", "clip_str_30", "lora_name_31", "lora_wt_31", "model_str_31", "clip_str_31", "lora_name_32", "lora_wt_32", "model_str_32", "clip_str_32", "lora_name_33", "lora_wt_33", "model_str_33", "clip_str_33", "lora_name_34", "lora_wt_34", "model_str_34", "clip_str_34", "lora_name_35", "lora_wt_35", "model_str_35", "clip_str_35", "lora_name_36", "lora_wt_36", "model_str_36", "clip_str_36", "lora_name_37", "lora_wt_37", "model_str_37", "clip_str_37", "lora_name_38", "lora_wt_38", "model_str_38", "clip_str_38", "lora_name_39", "lora_wt_39", "model_str_39", "clip_str_39", "lora_name_40", "lora_wt_40", "model_str_40", "clip_str_40", "lora_name_41", "lora_wt_41", "model_str_41", "clip_str_41", "lora_name_42", "lora_wt_42", "model_str_42", "clip_str_42", "lora_name_43", "lora_wt_43", "model_str_43", "clip_str_43", "lora_name_44", "lora_wt_44", "model_str_44", "clip_str_44", "lora_name_45", "lora_wt_45", "model_str_45", "clip_str_45", "lora_name_46", "lora_wt_46", "model_str_46", "clip_str_46", "lora_name_47", "lora_wt_47", "model_str_47", "clip_str_47", "lora_name_48", "lora_wt_48", "model_str_48", "clip_str_48", "lora_name_49", "lora_wt_49", "model_str_49", "clip_str_49"], "optional": ["lora_stack"]}, "output": ["LORA_STACK"], "output_is_list": [false], "output_name": ["LORA_STACK"], "name": "LoRA Stacker", "display_name": "LoRA Stacker", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/Stackers", "output_node": false}, "Control Net Stacker": {"input": {"required": {"control_net": ["CONTROL_NET"], "image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"cnet_stack": ["CONTROL_NET_STACK"]}}, "input_order": {"required": ["control_net", "image", "strength", "start_percent", "end_percent"], "optional": ["cnet_stack"]}, "output": ["CONTROL_NET_STACK"], "output_is_list": [false], "output_name": ["CNET_STACK"], "name": "Control Net Stacker", "display_name": "Control Net Stacker", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/Stackers", "output_node": false}, "Apply ControlNet Stack": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"]}, "optional": {"cnet_stack": ["CONTROL_NET_STACK"]}}, "input_order": {"required": ["positive", "negative"], "optional": ["cnet_stack"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["CONDITIONING+", "CONDITIONING-"], "name": "Apply ControlNet Stack", "display_name": "Apply ControlNet Stack", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/Stackers", "output_node": false}, "Unpack SDXL Tuple": {"input": {"required": {"sdxl_tuple": ["SDXL_TUPLE"]}}, "input_order": {"required": ["sdxl_tuple"]}, "output": ["MODEL", "CLIP", "CONDITIONING", "CONDITIONING", "MODEL", "CLIP", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["BASE_MODEL", "BASE_CLIP", "BASE_CONDITIONING+", "BASE_CONDITIONING-", "REFINER_MODEL", "REFINER_CLIP", "REFINER_CONDITIONING+", "REFINER_CONDITIONING-"], "name": "Unpack SDXL Tuple", "display_name": "Unpack SDXL Tuple", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/Misc", "output_node": false}, "Pack SDXL Tuple": {"input": {"required": {"base_model": ["MODEL"], "base_clip": ["CLIP"], "base_positive": ["CONDITIONING"], "base_negative": ["CONDITIONING"], "refiner_model": ["MODEL"], "refiner_clip": ["CLIP"], "refiner_positive": ["CONDITIONING"], "refiner_negative": ["CONDITIONING"]}}, "input_order": {"required": ["base_model", "base_clip", "base_positive", "base_negative", "refiner_model", "refiner_clip", "refiner_positive", "refiner_negative"]}, "output": ["SDXL_TUPLE"], "output_is_list": [false], "output_name": ["SDXL_TUPLE"], "name": "Pack SDXL Tuple", "display_name": "Pack SDXL Tuple", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/Misc", "output_node": false}, "XY Plot": {"input": {"required": {"grid_spacing": ["INT", {"default": 0, "min": 0, "max": 500, "step": 5}], "XY_flip": [["False", "True"]], "Y_label_orientation": [["Horizontal", "Vertical"]], "cache_models": [["True", "False"]], "ksampler_output_image": [["Images", "Plot"]]}, "optional": {"dependencies": ["DEPENDENCIES"], "X": ["XY"], "Y": ["XY"]}, "hidden": {"my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["grid_spacing", "XY_flip", "Y_label_orientation", "cache_models", "ksampler_output_image"], "optional": ["dependencies", "X", "Y"], "hidden": ["my_unique_id"]}, "output": ["SCRIPT"], "output_is_list": [false], "output_name": ["SCRIPT"], "name": "XY Plot", "display_name": "XY Plot", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/Scripts", "output_node": false}, "XY Input: Seeds++ Batch": {"input": {"required": {"batch_count": ["INT", {"default": 3, "min": 0, "max": 50}]}}, "input_order": {"required": ["batch_count"]}, "output": ["XY"], "output_is_list": [false], "output_name": ["X or Y"], "name": "XY Input: Seeds++ Batch", "display_name": "XY Input: Seeds++ Batch", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/XY Inputs", "output_node": false}, "XY Input: Add/Return Noise": {"input": {"required": {"XY_type": [["add_noise", "return_with_leftover_noise"]]}}, "input_order": {"required": ["XY_type"]}, "output": ["XY"], "output_is_list": [false], "output_name": ["X or Y"], "name": "XY Input: Add/Return Noise", "display_name": "XY Input: Add/Return Noise", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/XY Inputs", "output_node": false}, "XY Input: Steps": {"input": {"required": {"target_parameter": [["steps", "start_at_step", "end_at_step", "refine_at_step"]], "batch_count": ["INT", {"default": 3, "min": 0, "max": 50}], "first_step": ["INT", {"default": 10, "min": 1, "max": 10000}], "last_step": ["INT", {"default": 20, "min": 1, "max": 10000}], "first_start_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "last_start_step": ["INT", {"default": 10, "min": 0, "max": 10000}], "first_end_step": ["INT", {"default": 10, "min": 0, "max": 10000}], "last_end_step": ["INT", {"default": 20, "min": 0, "max": 10000}], "first_refine_step": ["INT", {"default": 10, "min": 0, "max": 10000}], "last_refine_step": ["INT", {"default": 20, "min": 0, "max": 10000}]}}, "input_order": {"required": ["target_parameter", "batch_count", "first_step", "last_step", "first_start_step", "last_start_step", "first_end_step", "last_end_step", "first_refine_step", "last_refine_step"]}, "output": ["XY"], "output_is_list": [false], "output_name": ["X or Y"], "name": "XY Input: Steps", "display_name": "XY Input: Steps", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/XY Inputs", "output_node": false}, "XY Input: CFG Scale": {"input": {"required": {"batch_count": ["INT", {"default": 3, "min": 0, "max": 50}], "first_cfg": ["FLOAT", {"default": 7.0, "min": 0.0, "max": 100.0}], "last_cfg": ["FLOAT", {"default": 9.0, "min": 0.0, "max": 100.0}]}}, "input_order": {"required": ["batch_count", "first_cfg", "last_cfg"]}, "output": ["XY"], "output_is_list": [false], "output_name": ["X or Y"], "name": "XY Input: CFG Scale", "display_name": "XY Input: CFG Scale", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/XY Inputs", "output_node": false}, "XY Input: Sampler/Scheduler": {"input": {"required": {"target_parameter": [["sampler", "scheduler", "sampler & scheduler"]], "input_count": ["INT", {"default": 3, "min": 0, "max": 50, "step": 1}], "sampler_1": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_1": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_2": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_2": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_3": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_3": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_4": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_4": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_5": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_5": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_6": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_6": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_7": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_7": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_8": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_8": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_9": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_9": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_10": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_10": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_11": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_11": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_12": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_12": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_13": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_13": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_14": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_14": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_15": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_15": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_16": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_16": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_17": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_17": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_18": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_18": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_19": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_19": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_20": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_20": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_21": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_21": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_22": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_22": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_23": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_23": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_24": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_24": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_25": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_25": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_26": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_26": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_27": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_27": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_28": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_28": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_29": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_29": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_30": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_30": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_31": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_31": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_32": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_32": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_33": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_33": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_34": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_34": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_35": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_35": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_36": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_36": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_37": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_37": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_38": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_38": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_39": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_39": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_40": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_40": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_41": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_41": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_42": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_42": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_43": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_43": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_44": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_44": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_45": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_45": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_46": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_46": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_47": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_47": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_48": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_48": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_49": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_49": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]], "sampler_50": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_50": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "AYS SD1", "AYS SDXL", "AYS SVD"]]}}, "input_order": {"required": ["target_parameter", "input_count", "sampler_1", "scheduler_1", "sampler_2", "scheduler_2", "sampler_3", "scheduler_3", "sampler_4", "scheduler_4", "sampler_5", "scheduler_5", "sampler_6", "scheduler_6", "sampler_7", "scheduler_7", "sampler_8", "scheduler_8", "sampler_9", "scheduler_9", "sampler_10", "scheduler_10", "sampler_11", "scheduler_11", "sampler_12", "scheduler_12", "sampler_13", "scheduler_13", "sampler_14", "scheduler_14", "sampler_15", "scheduler_15", "sampler_16", "scheduler_16", "sampler_17", "scheduler_17", "sampler_18", "scheduler_18", "sampler_19", "scheduler_19", "sampler_20", "scheduler_20", "sampler_21", "scheduler_21", "sampler_22", "scheduler_22", "sampler_23", "scheduler_23", "sampler_24", "scheduler_24", "sampler_25", "scheduler_25", "sampler_26", "scheduler_26", "sampler_27", "scheduler_27", "sampler_28", "scheduler_28", "sampler_29", "scheduler_29", "sampler_30", "scheduler_30", "sampler_31", "scheduler_31", "sampler_32", "scheduler_32", "sampler_33", "scheduler_33", "sampler_34", "scheduler_34", "sampler_35", "scheduler_35", "sampler_36", "scheduler_36", "sampler_37", "scheduler_37", "sampler_38", "scheduler_38", "sampler_39", "scheduler_39", "sampler_40", "scheduler_40", "sampler_41", "scheduler_41", "sampler_42", "scheduler_42", "sampler_43", "scheduler_43", "sampler_44", "scheduler_44", "sampler_45", "scheduler_45", "sampler_46", "scheduler_46", "sampler_47", "scheduler_47", "sampler_48", "scheduler_48", "sampler_49", "scheduler_49", "sampler_50", "scheduler_50"]}, "output": ["XY"], "output_is_list": [false], "output_name": ["X or Y"], "name": "XY Input: Sampler/Scheduler", "display_name": "XY Input: Sampler/Scheduler", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/XY Inputs", "output_node": false}, "XY Input: Denoise": {"input": {"required": {"batch_count": ["INT", {"default": 3, "min": 0, "max": 50}], "first_denoise": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "last_denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["batch_count", "first_denoise", "last_denoise"]}, "output": ["XY"], "output_is_list": [false], "output_name": ["X or Y"], "name": "XY Input: Denoise", "display_name": "XY Input: Denoise", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/XY Inputs", "output_node": false}, "XY Input: VAE": {"input": {"required": {"input_mode": [["VAE Names", "VAE Batch"]], "batch_path": ["STRING", {"default": "/example_folder", "multiline": false}], "subdirectories": ["BOOLEAN", {"default": false}], "batch_sort": [["ascending", "descending"]], "batch_max": ["INT", {"default": -1, "min": -1, "max": 50, "step": 1}], "vae_count": ["INT", {"default": 3, "min": 0, "max": 50, "step": 1}], "vae_name_1": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_2": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_3": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_4": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_5": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_6": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_7": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_8": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_9": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_10": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_11": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_12": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_13": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_14": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_15": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_16": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_17": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_18": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_19": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_20": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_21": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_22": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_23": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_24": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_25": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_26": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_27": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_28": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_29": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_30": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_31": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_32": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_33": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_34": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_35": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_36": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_37": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_38": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_39": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_40": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_41": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_42": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_43": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_44": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_45": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_46": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_47": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_48": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_49": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "vae_name_50": [["None", "Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]]}}, "input_order": {"required": ["input_mode", "batch_path", "subdirectories", "batch_sort", "batch_max", "vae_count", "vae_name_1", "vae_name_2", "vae_name_3", "vae_name_4", "vae_name_5", "vae_name_6", "vae_name_7", "vae_name_8", "vae_name_9", "vae_name_10", "vae_name_11", "vae_name_12", "vae_name_13", "vae_name_14", "vae_name_15", "vae_name_16", "vae_name_17", "vae_name_18", "vae_name_19", "vae_name_20", "vae_name_21", "vae_name_22", "vae_name_23", "vae_name_24", "vae_name_25", "vae_name_26", "vae_name_27", "vae_name_28", "vae_name_29", "vae_name_30", "vae_name_31", "vae_name_32", "vae_name_33", "vae_name_34", "vae_name_35", "vae_name_36", "vae_name_37", "vae_name_38", "vae_name_39", "vae_name_40", "vae_name_41", "vae_name_42", "vae_name_43", "vae_name_44", "vae_name_45", "vae_name_46", "vae_name_47", "vae_name_48", "vae_name_49", "vae_name_50"]}, "output": ["XY"], "output_is_list": [false], "output_name": ["X or Y"], "name": "XY Input: VAE", "display_name": "XY Input: VAE", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/XY Inputs", "output_node": false}, "XY Input: Prompt S/R": {"input": {"required": {"target_prompt": [["positive", "negative"]], "search_txt": ["STRING", {"default": "", "multiline": false}], "replace_count": ["INT", {"default": 3, "min": 0, "max": 49}], "replace_1": ["STRING", {"default": "", "multiline": false}], "replace_2": ["STRING", {"default": "", "multiline": false}], "replace_3": ["STRING", {"default": "", "multiline": false}], "replace_4": ["STRING", {"default": "", "multiline": false}], "replace_5": ["STRING", {"default": "", "multiline": false}], "replace_6": ["STRING", {"default": "", "multiline": false}], "replace_7": ["STRING", {"default": "", "multiline": false}], "replace_8": ["STRING", {"default": "", "multiline": false}], "replace_9": ["STRING", {"default": "", "multiline": false}], "replace_10": ["STRING", {"default": "", "multiline": false}], "replace_11": ["STRING", {"default": "", "multiline": false}], "replace_12": ["STRING", {"default": "", "multiline": false}], "replace_13": ["STRING", {"default": "", "multiline": false}], "replace_14": ["STRING", {"default": "", "multiline": false}], "replace_15": ["STRING", {"default": "", "multiline": false}], "replace_16": ["STRING", {"default": "", "multiline": false}], "replace_17": ["STRING", {"default": "", "multiline": false}], "replace_18": ["STRING", {"default": "", "multiline": false}], "replace_19": ["STRING", {"default": "", "multiline": false}], "replace_20": ["STRING", {"default": "", "multiline": false}], "replace_21": ["STRING", {"default": "", "multiline": false}], "replace_22": ["STRING", {"default": "", "multiline": false}], "replace_23": ["STRING", {"default": "", "multiline": false}], "replace_24": ["STRING", {"default": "", "multiline": false}], "replace_25": ["STRING", {"default": "", "multiline": false}], "replace_26": ["STRING", {"default": "", "multiline": false}], "replace_27": ["STRING", {"default": "", "multiline": false}], "replace_28": ["STRING", {"default": "", "multiline": false}], "replace_29": ["STRING", {"default": "", "multiline": false}], "replace_30": ["STRING", {"default": "", "multiline": false}], "replace_31": ["STRING", {"default": "", "multiline": false}], "replace_32": ["STRING", {"default": "", "multiline": false}], "replace_33": ["STRING", {"default": "", "multiline": false}], "replace_34": ["STRING", {"default": "", "multiline": false}], "replace_35": ["STRING", {"default": "", "multiline": false}], "replace_36": ["STRING", {"default": "", "multiline": false}], "replace_37": ["STRING", {"default": "", "multiline": false}], "replace_38": ["STRING", {"default": "", "multiline": false}], "replace_39": ["STRING", {"default": "", "multiline": false}], "replace_40": ["STRING", {"default": "", "multiline": false}], "replace_41": ["STRING", {"default": "", "multiline": false}], "replace_42": ["STRING", {"default": "", "multiline": false}], "replace_43": ["STRING", {"default": "", "multiline": false}], "replace_44": ["STRING", {"default": "", "multiline": false}], "replace_45": ["STRING", {"default": "", "multiline": false}], "replace_46": ["STRING", {"default": "", "multiline": false}], "replace_47": ["STRING", {"default": "", "multiline": false}], "replace_48": ["STRING", {"default": "", "multiline": false}], "replace_49": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["target_prompt", "search_txt", "replace_count", "replace_1", "replace_2", "replace_3", "replace_4", "replace_5", "replace_6", "replace_7", "replace_8", "replace_9", "replace_10", "replace_11", "replace_12", "replace_13", "replace_14", "replace_15", "replace_16", "replace_17", "replace_18", "replace_19", "replace_20", "replace_21", "replace_22", "replace_23", "replace_24", "replace_25", "replace_26", "replace_27", "replace_28", "replace_29", "replace_30", "replace_31", "replace_32", "replace_33", "replace_34", "replace_35", "replace_36", "replace_37", "replace_38", "replace_39", "replace_40", "replace_41", "replace_42", "replace_43", "replace_44", "replace_45", "replace_46", "replace_47", "replace_48", "replace_49"]}, "output": ["XY"], "output_is_list": [false], "output_name": ["X or Y"], "name": "XY Input: Prompt S/R", "display_name": "XY Input: Prompt S/R", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/XY Inputs", "output_node": false}, "XY Input: Aesthetic Score": {"input": {"required": {"target_ascore": [["positive", "negative"]], "batch_count": ["INT", {"default": 3, "min": 0, "max": 50}], "first_ascore": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "last_ascore": ["FLOAT", {"default": 10.0, "min": 0.0, "max": 1000.0, "step": 0.01}]}}, "input_order": {"required": ["target_ascore", "batch_count", "first_ascore", "last_ascore"]}, "output": ["XY"], "output_is_list": [false], "output_name": ["X or Y"], "name": "XY Input: Aesthetic Score", "display_name": "XY Input: Aesthetic Score", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/XY Inputs", "output_node": false}, "XY Input: Refiner On/Off": {"input": {"required": {"refine_at_percent": ["FLOAT", {"default": 0.8, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["refine_at_percent"]}, "output": ["XY"], "output_is_list": [false], "output_name": ["X or Y"], "name": "XY Input: Refiner On/Off", "display_name": "XY Input: Refiner On/Off", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/XY Inputs", "output_node": false}, "XY Input: Checkpoint": {"input": {"required": {"target_ckpt": [["Base", "Refiner"]], "input_mode": [["Ckpt Names", "Ckpt Names+ClipSkip", "Ckpt Names+ClipSkip+VAE", "Checkpoint Batch"]], "batch_path": ["STRING", {"default": "/example_folder", "multiline": false}], "subdirectories": ["BOOLEAN", {"default": false}], "batch_sort": [["ascending", "descending"]], "batch_max": ["INT", {"default": -1, "min": -1, "max": 50, "step": 1}], "ckpt_count": ["INT", {"default": 3, "min": 0, "max": 50, "step": 1}], "ckpt_name_1": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_1": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_1": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_2": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_2": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_2": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_3": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_3": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_3": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_4": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_4": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_4": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_5": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_5": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_5": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_6": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_6": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_6": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_7": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_7": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_7": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_8": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_8": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_8": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_9": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_9": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_9": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_10": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_10": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_10": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_11": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_11": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_11": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_12": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_12": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_12": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_13": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_13": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_13": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_14": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_14": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_14": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_15": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_15": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_15": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_16": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_16": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_16": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_17": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_17": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_17": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_18": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_18": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_18": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_19": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_19": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_19": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_20": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_20": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_20": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_21": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_21": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_21": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_22": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_22": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_22": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_23": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_23": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_23": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_24": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_24": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_24": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_25": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_25": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_25": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_26": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_26": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_26": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_27": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_27": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_27": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_28": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_28": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_28": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_29": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_29": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_29": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_30": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_30": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_30": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_31": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_31": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_31": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_32": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_32": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_32": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_33": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_33": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_33": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_34": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_34": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_34": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_35": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_35": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_35": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_36": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_36": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_36": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_37": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_37": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_37": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_38": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_38": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_38": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_39": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_39": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_39": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_40": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_40": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_40": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_41": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_41": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_41": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_42": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_42": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_42": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_43": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_43": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_43": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_44": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_44": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_44": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_45": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_45": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_45": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_46": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_46": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_46": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_47": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_47": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_47": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_48": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_48": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_48": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_49": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_49": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_49": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]], "ckpt_name_50": [["None", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "clip_skip_50": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_50": [["Baked VAE", "YOZORA.vae.pt", "ae.safetensors", "sdxl.vae.safetensors", "vae-ft-mse-840000-ema-pruned.ckpt"]]}}, "input_order": {"required": ["target_ckpt", "input_mode", "batch_path", "subdirectories", "batch_sort", "batch_max", "ckpt_count", "ckpt_name_1", "clip_skip_1", "vae_name_1", "ckpt_name_2", "clip_skip_2", "vae_name_2", "ckpt_name_3", "clip_skip_3", "vae_name_3", "ckpt_name_4", "clip_skip_4", "vae_name_4", "ckpt_name_5", "clip_skip_5", "vae_name_5", "ckpt_name_6", "clip_skip_6", "vae_name_6", "ckpt_name_7", "clip_skip_7", "vae_name_7", "ckpt_name_8", "clip_skip_8", "vae_name_8", "ckpt_name_9", "clip_skip_9", "vae_name_9", "ckpt_name_10", "clip_skip_10", "vae_name_10", "ckpt_name_11", "clip_skip_11", "vae_name_11", "ckpt_name_12", "clip_skip_12", "vae_name_12", "ckpt_name_13", "clip_skip_13", "vae_name_13", "ckpt_name_14", "clip_skip_14", "vae_name_14", "ckpt_name_15", "clip_skip_15", "vae_name_15", "ckpt_name_16", "clip_skip_16", "vae_name_16", "ckpt_name_17", "clip_skip_17", "vae_name_17", "ckpt_name_18", "clip_skip_18", "vae_name_18", "ckpt_name_19", "clip_skip_19", "vae_name_19", "ckpt_name_20", "clip_skip_20", "vae_name_20", "ckpt_name_21", "clip_skip_21", "vae_name_21", "ckpt_name_22", "clip_skip_22", "vae_name_22", "ckpt_name_23", "clip_skip_23", "vae_name_23", "ckpt_name_24", "clip_skip_24", "vae_name_24", "ckpt_name_25", "clip_skip_25", "vae_name_25", "ckpt_name_26", "clip_skip_26", "vae_name_26", "ckpt_name_27", "clip_skip_27", "vae_name_27", "ckpt_name_28", "clip_skip_28", "vae_name_28", "ckpt_name_29", "clip_skip_29", "vae_name_29", "ckpt_name_30", "clip_skip_30", "vae_name_30", "ckpt_name_31", "clip_skip_31", "vae_name_31", "ckpt_name_32", "clip_skip_32", "vae_name_32", "ckpt_name_33", "clip_skip_33", "vae_name_33", "ckpt_name_34", "clip_skip_34", "vae_name_34", "ckpt_name_35", "clip_skip_35", "vae_name_35", "ckpt_name_36", "clip_skip_36", "vae_name_36", "ckpt_name_37", "clip_skip_37", "vae_name_37", "ckpt_name_38", "clip_skip_38", "vae_name_38", "ckpt_name_39", "clip_skip_39", "vae_name_39", "ckpt_name_40", "clip_skip_40", "vae_name_40", "ckpt_name_41", "clip_skip_41", "vae_name_41", "ckpt_name_42", "clip_skip_42", "vae_name_42", "ckpt_name_43", "clip_skip_43", "vae_name_43", "ckpt_name_44", "clip_skip_44", "vae_name_44", "ckpt_name_45", "clip_skip_45", "vae_name_45", "ckpt_name_46", "clip_skip_46", "vae_name_46", "ckpt_name_47", "clip_skip_47", "vae_name_47", "ckpt_name_48", "clip_skip_48", "vae_name_48", "ckpt_name_49", "clip_skip_49", "vae_name_49", "ckpt_name_50", "clip_skip_50", "vae_name_50"]}, "output": ["XY"], "output_is_list": [false], "output_name": ["X or Y"], "name": "XY Input: Checkpoint", "display_name": "XY Input: Checkpoint", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/XY Inputs", "output_node": false}, "XY Input: Clip Skip": {"input": {"required": {"target_ckpt": [["Base", "Refiner"]], "batch_count": ["INT", {"default": 3, "min": 0, "max": 50}], "first_clip_skip": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "last_clip_skip": ["INT", {"default": -3, "min": -24, "max": -1, "step": 1}]}}, "input_order": {"required": ["target_ckpt", "batch_count", "first_clip_skip", "last_clip_skip"]}, "output": ["XY"], "output_is_list": [false], "output_name": ["X or Y"], "name": "XY Input: Clip Skip", "display_name": "XY Input: Clip Skip", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/XY Inputs", "output_node": false}, "XY Input: LoRA": {"input": {"required": {"input_mode": [["LoRA Names", "LoRA Names+Weights", "LoRA Batch"]], "batch_path": ["STRING", {"default": "/example_folder", "multiline": false}], "subdirectories": ["BOOLEAN", {"default": false}], "batch_sort": [["ascending", "descending"]], "batch_max": ["INT", {"default": -1, "min": -1, "max": 50, "step": 1}], "lora_count": ["INT", {"default": 3, "min": 0, "max": 50, "step": 1}], "model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_1": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_2": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_3": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_4": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_4": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_4": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_5": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_5": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_5": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_6": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_6": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_6": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_7": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_7": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_7": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_8": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_8": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_8": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_9": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_9": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_9": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_10": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_10": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_10": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_11": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_11": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_11": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_12": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_12": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_12": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_13": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_13": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_13": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_14": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_14": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_14": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_15": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_15": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_15": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_16": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_16": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_16": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_17": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_17": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_17": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_18": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_18": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_18": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_19": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_19": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_19": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_20": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_20": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_20": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_21": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_21": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_21": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_22": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_22": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_22": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_23": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_23": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_23": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_24": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_24": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_24": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_25": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_25": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_25": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_26": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_26": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_26": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_27": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_27": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_27": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_28": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_28": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_28": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_29": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_29": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_29": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_30": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_30": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_30": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_31": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_31": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_31": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_32": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_32": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_32": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_33": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_33": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_33": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_34": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_34": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_34": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_35": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_35": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_35": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_36": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_36": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_36": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_37": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_37": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_37": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_38": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_38": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_38": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_39": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_39": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_39": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_40": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_40": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_40": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_41": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_41": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_41": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_42": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_42": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_42": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_43": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_43": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_43": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_44": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_44": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_44": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_45": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_45": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_45": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_46": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_46": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_46": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_47": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_47": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_47": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_48": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_48": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_48": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_49": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_49": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_49": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_50": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_str_50": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_50": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}, "optional": {"lora_stack": ["LORA_STACK"]}}, "input_order": {"required": ["input_mode", "batch_path", "subdirectories", "batch_sort", "batch_max", "lora_count", "model_strength", "clip_strength", "lora_name_1", "model_str_1", "clip_str_1", "lora_name_2", "model_str_2", "clip_str_2", "lora_name_3", "model_str_3", "clip_str_3", "lora_name_4", "model_str_4", "clip_str_4", "lora_name_5", "model_str_5", "clip_str_5", "lora_name_6", "model_str_6", "clip_str_6", "lora_name_7", "model_str_7", "clip_str_7", "lora_name_8", "model_str_8", "clip_str_8", "lora_name_9", "model_str_9", "clip_str_9", "lora_name_10", "model_str_10", "clip_str_10", "lora_name_11", "model_str_11", "clip_str_11", "lora_name_12", "model_str_12", "clip_str_12", "lora_name_13", "model_str_13", "clip_str_13", "lora_name_14", "model_str_14", "clip_str_14", "lora_name_15", "model_str_15", "clip_str_15", "lora_name_16", "model_str_16", "clip_str_16", "lora_name_17", "model_str_17", "clip_str_17", "lora_name_18", "model_str_18", "clip_str_18", "lora_name_19", "model_str_19", "clip_str_19", "lora_name_20", "model_str_20", "clip_str_20", "lora_name_21", "model_str_21", "clip_str_21", "lora_name_22", "model_str_22", "clip_str_22", "lora_name_23", "model_str_23", "clip_str_23", "lora_name_24", "model_str_24", "clip_str_24", "lora_name_25", "model_str_25", "clip_str_25", "lora_name_26", "model_str_26", "clip_str_26", "lora_name_27", "model_str_27", "clip_str_27", "lora_name_28", "model_str_28", "clip_str_28", "lora_name_29", "model_str_29", "clip_str_29", "lora_name_30", "model_str_30", "clip_str_30", "lora_name_31", "model_str_31", "clip_str_31", "lora_name_32", "model_str_32", "clip_str_32", "lora_name_33", "model_str_33", "clip_str_33", "lora_name_34", "model_str_34", "clip_str_34", "lora_name_35", "model_str_35", "clip_str_35", "lora_name_36", "model_str_36", "clip_str_36", "lora_name_37", "model_str_37", "clip_str_37", "lora_name_38", "model_str_38", "clip_str_38", "lora_name_39", "model_str_39", "clip_str_39", "lora_name_40", "model_str_40", "clip_str_40", "lora_name_41", "model_str_41", "clip_str_41", "lora_name_42", "model_str_42", "clip_str_42", "lora_name_43", "model_str_43", "clip_str_43", "lora_name_44", "model_str_44", "clip_str_44", "lora_name_45", "model_str_45", "clip_str_45", "lora_name_46", "model_str_46", "clip_str_46", "lora_name_47", "model_str_47", "clip_str_47", "lora_name_48", "model_str_48", "clip_str_48", "lora_name_49", "model_str_49", "clip_str_49", "lora_name_50", "model_str_50", "clip_str_50"], "optional": ["lora_stack"]}, "output": ["XY"], "output_is_list": [false], "output_name": ["X or Y"], "name": "XY Input: LoRA", "display_name": "XY Input: LoRA", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/XY Inputs", "output_node": false}, "XY Input: LoRA Plot": {"input": {"required": {"input_mode": [["X: LoRA Batch, Y: LoRA Weight", "X: LoRA Batch, Y: Model Strength", "X: LoRA Batch, Y: Clip Strength", "X: Model Strength, Y: Clip Strength"]], "lora_name": [["None", "AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "X_batch_count": ["INT", {"default": 3, "min": 0, "max": 50}], "X_batch_path": ["STRING", {"default": "/example_folder", "multiline": false}], "X_subdirectories": ["BOOLEAN", {"default": false}], "X_batch_sort": [["ascending", "descending"]], "X_first_value": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01}], "X_last_value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "Y_batch_count": ["INT", {"default": 3, "min": 0, "max": 50}], "Y_first_value": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01}], "Y_last_value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}, "optional": {"lora_stack": ["LORA_STACK"]}}, "input_order": {"required": ["input_mode", "lora_name", "model_strength", "clip_strength", "X_batch_count", "X_batch_path", "X_subdirectories", "X_batch_sort", "X_first_value", "X_last_value", "Y_batch_count", "Y_first_value", "Y_last_value"], "optional": ["lora_stack"]}, "output": ["XY", "XY"], "output_is_list": [false, false], "output_name": ["X", "Y"], "name": "XY Input: LoRA Plot", "display_name": "XY Input: LoRA Plot", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/XY Inputs", "output_node": false}, "XY Input: LoRA Stacks": {"input": {"required": {"node_state": [["Enabled"]]}, "optional": {"lora_stack_1": ["LORA_STACK"], "lora_stack_2": ["LORA_STACK"], "lora_stack_3": ["LORA_STACK"], "lora_stack_4": ["LORA_STACK"], "lora_stack_5": ["LORA_STACK"]}}, "input_order": {"required": ["node_state"], "optional": ["lora_stack_1", "lora_stack_2", "lora_stack_3", "lora_stack_4", "lora_stack_5"]}, "output": ["XY"], "output_is_list": [false], "output_name": ["X or Y"], "name": "XY Input: LoRA Stacks", "display_name": "XY Input: LoRA Stacks", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/XY Inputs", "output_node": false}, "XY Input: Control Net": {"input": {"required": {"control_net": ["CONTROL_NET"], "image": ["IMAGE"], "target_parameter": [["strength", "start_percent", "end_percent"]], "batch_count": ["INT", {"default": 3, "min": 0, "max": 50}], "first_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01}], "last_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "first_start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "last_start_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "first_end_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "last_end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"cnet_stack": ["CONTROL_NET_STACK"]}}, "input_order": {"required": ["control_net", "image", "target_parameter", "batch_count", "first_strength", "last_strength", "first_start_percent", "last_start_percent", "first_end_percent", "last_end_percent", "strength", "start_percent", "end_percent"], "optional": ["cnet_stack"]}, "output": ["XY"], "output_is_list": [false], "output_name": ["X or Y"], "name": "XY Input: Control Net", "display_name": "XY Input: Control Net", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/XY Inputs", "output_node": false}, "XY Input: Control Net Plot": {"input": {"required": {"control_net": ["CONTROL_NET"], "image": ["IMAGE"], "plot_type": [["X: Strength, Y: Start%", "X: Strength, Y: End%", "X: Start%, Y: Strength", "X: Start%, Y: End%", "X: End%, Y: Strength", "X: End%, Y: Start%"]], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "X_batch_count": ["INT", {"default": 3, "min": 0, "max": 50}], "X_first_value": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01}], "X_last_value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "Y_batch_count": ["INT", {"default": 3, "min": 0, "max": 50}], "Y_first_value": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01}], "Y_last_value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}, "optional": {"cnet_stack": ["CONTROL_NET_STACK"]}}, "input_order": {"required": ["control_net", "image", "plot_type", "strength", "start_percent", "end_percent", "X_batch_count", "X_first_value", "X_last_value", "Y_batch_count", "Y_first_value", "Y_last_value"], "optional": ["cnet_stack"]}, "output": ["XY", "XY"], "output_is_list": [false, false], "output_name": ["X", "Y"], "name": "XY Input: Control Net Plot", "display_name": "XY Input: Control Net Plot", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/XY Inputs", "output_node": false}, "XY Input: Manual XY Entry": {"input": {"required": {"plot_type": [["Nothing", "Seeds++ Batch", "Steps", "StartStep", "EndStep", "CFG Scale", "Sampler", "Scheduler", "Denoise", "VAE", "Positive Prompt S/R", "Negative Prompt S/R", "Checkpoint", "Clip Skip", "LoRA"]], "plot_value": ["STRING", {"default": "", "multiline": true}]}}, "input_order": {"required": ["plot_type", "plot_value"]}, "output": ["XY"], "output_is_list": [false], "output_name": ["X or Y"], "name": "XY Input: Manual XY Entry", "display_name": "XY Input: Manual XY Entry", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/XY Inputs", "output_node": false}, "Manual XY Entry Info": {"input": {"required": {"notes": ["STRING", {"default": "_____________SYNTAX_____________\n(X/Y_types)     (X/Y_values)\nSeeds++ Batch   batch_count\nSteps           steps_1;steps_2;...\nStartStep       start_step_1;start_step_2;...\nEndStep         end_step_1;end_step_2;...\nCFG Scale       cfg_1;cfg_2;...\nSampler(1)      sampler_1;sampler_2;...\nSampler(2)      sampler_1,scheduler_1;...\nSampler(3)      sampler_1;...;,default_scheduler\nScheduler       scheduler_1;scheduler_2;...\nDenoise         denoise_1;denoise_2;...\nVAE             vae_1;vae_2;vae_3;...\n+Prompt S/R     search_txt;replace_1;replace_2;...\n-Prompt S/R     search_txt;replace_1;replace_2;...\nCheckpoint(1)   ckpt_1;ckpt_2;ckpt_3;...\nCheckpoint(2)   ckpt_1,clip_skip_1;...\nCheckpoint(3)   ckpt_1;ckpt_2;...;,default_clip_skip\nClip Skip       clip_skip_1;clip_skip_2;...\nLoRA(1)         lora_1;lora_2;lora_3;...\nLoRA(2)         lora_1;...;,default_model_str,default_clip_str\nLoRA(3)         lora_1,model_str_1,clip_str_1;...\n\n____________SAMPLERS____________\neuler;\neuler_cfg_pp;\neuler_ancestral;\neuler_ancestral_cfg_pp;\nheun;\nheunpp2;\ndpm_2;\ndpm_2_ancestral;\nlms;\ndpm_fast;\ndpm_adaptive;\ndpmpp_2s_ancestral;\ndpmpp_2s_ancestral_cfg_pp;\ndpmpp_sde;\ndpmpp_sde_gpu;\ndpmpp_2m;\ndpmpp_2m_cfg_pp;\ndpmpp_2m_sde;\ndpmpp_2m_sde_gpu;\ndpmpp_3m_sde;\ndpmpp_3m_sde_gpu;\nddpm;\nlcm;\nipndm;\nipndm_v;\ndeis;\nddim;\nuni_pc;\nuni_pc_bh2\n\n___________SCHEDULERS___________\nnormal;\nkarras;\nexponential;\nsgm_uniform;\nsimple;\nddim_uniform;\nbeta;\nAYS SD1;\nAYS SDXL;\nAYS SVD\n\n_____________VAES_______________\nYOZORA.vae.pt;\nae.safetensors;\nsdxl.vae.safetensors;\nvae-ft-mse-840000-ema-pruned.ckpt\n\n___________CHECKPOINTS__________\nCRM.pth;\nSUPIR-v0F.ckpt;\nSUPIR-v0Q.ckpt;\ndisneyPixarCartoon_A.safetensors;\ndisneyPixarCartoon_v10.safetensors;\ndreamshaperXL_alpha2Xl10.safetensors;\ndreamshaper_8.safetensors;\ndynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors;\nepicrealism_naturalSinRC1VAE.safetensors;\nfenrisxlFlux_fenrisxlV18THLSDXL.safetensors;\nflat2DAnimerge_v45Sharp.safetensors;\nflux1-dev.safetensors;\njuggernautXL_juggXIByRundiffusion.safetensors;\njuggernautXL_v9Rdphoto2Lightning.safetensors;\njuggernaut_reborn.safetensors;\nphotonLCM_v10.safetensors;\nphoton_v1.safetensors;\nrealisticVisionV60B1_v51HyperVAE.safetensors;\nrealvisxlV50_v50LightningBakedvae.safetensors;\nsdXL_v10VAEFix.safetensors;\nturbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors;\nwildcardxXLTURBO_wildcardxXLTURBOV10.safetensors\n\n_____________LORAS______________\nAnimateLCM_sd15_t2v_lora.safetensors;\nBending_Illustartion-000007.safetensors;\nBending_Illustartion-000010.safetensors;\nBending_Illustartion-000014.safetensors;\nCPA.safetensors;\nKodak Motion Picture Film Style v5_2.safetensors;\nLego_XL_v2.1.safetensors;\nPixarXL.safetensors;\nRW_PS1v1.safetensors;\nRW_pixelart_XL_v1.safetensors;\nRetro_Comic_Flux_v1_renderartist.safetensors;\nSDXL-Lightning/sdxl_lightning_2step_lora.safetensors;\nVivid Midjourney mimic - XL SDXL v2.0.safetensors;\nadd_detail.safetensors;\nanime_lora_comfy_converted.safetensors;\ndisney_lora_comfy_converted.safetensors;\nflux_realism_lora.safetensors;\nflux_spirited_away.safetensors;\nfurry_lora.safetensors;\nhouse_architecture_Exterior_SDlife_Chiasedamme.safetensors;\nlcm/SD1.5/pytorch_lora_weights.safetensors;\nlegody-v10.safetensors;\nmoonies&glorpies_lora.safetensors;\nmoonies_lora.safetensors;\nmore_details.safetensors;\npieter.safetensors;\nps1_style_SDXL_v2.safetensors;\nsdxl_lightning_4step_lora.safetensors;\nv3_sd15_adapter.ckpt;\nxl_more_art-full_v1.safetensors;\nzavy-cntrst-sdxl.safetensors;\nzyd232_Ink_Style_Flux1D_v1_1.safetensors\n", "multiline": true}]}}, "input_order": {"required": ["notes"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Manual XY Entry Info", "display_name": "Manual XY Entry Info", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/XY Inputs", "output_node": false}, "Join XY Inputs of Same Type": {"input": {"required": {"XY_1": ["XY"], "XY_2": ["XY"]}}, "input_order": {"required": ["XY_1", "XY_2"]}, "output": ["XY"], "output_is_list": [false], "output_name": ["X or Y"], "name": "Join XY Inputs of Same Type", "display_name": "Join XY Inputs of Same Type", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/XY Inputs", "output_node": false}, "Image Overlay": {"input": {"required": {"base_image": ["IMAGE"], "overlay_image": ["IMAGE"], "overlay_resize": [["None", "Fit", "Resize by rescale_factor", "Resize to width & heigth"]], "resize_method": [["nearest-exact", "bilinear", "area"]], "rescale_factor": ["FLOAT", {"default": 1, "min": 0.01, "max": 16.0, "step": 0.1}], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 64}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 64}], "x_offset": ["INT", {"default": 0, "min": -48000, "max": 48000, "step": 10}], "y_offset": ["INT", {"default": 0, "min": -48000, "max": 48000, "step": 10}], "rotation": ["INT", {"default": 0, "min": -180, "max": 180, "step": 5}], "opacity": ["FLOAT", {"default": 0, "min": 0, "max": 100, "step": 5}]}, "optional": {"optional_mask": ["MASK"]}}, "input_order": {"required": ["base_image", "overlay_image", "overlay_resize", "resize_method", "rescale_factor", "width", "height", "x_offset", "y_offset", "rotation", "opacity"], "optional": ["optional_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Overlay", "display_name": "Image Overlay", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/Image", "output_node": false}, "Noise Control Script": {"input": {"required": {"rng_source": [["cpu", "gpu", "nv"]], "cfg_denoiser": ["BOOLEAN", {"default": false}], "add_seed_noise": ["BOOLEAN", {"default": false}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "weight": ["FLOAT", {"default": 0.015, "min": 0, "max": 1, "step": 0.001}]}, "optional": {"script": ["SCRIPT"]}}, "input_order": {"required": ["rng_source", "cfg_denoiser", "add_seed_noise", "seed", "weight"], "optional": ["script"]}, "output": ["SCRIPT"], "output_is_list": [false], "output_name": ["SCRIPT"], "name": "Noise Control Script", "display_name": "Noise Control Script", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/Scripts", "output_node": false}, "HighRes-Fix Script": {"input": {"required": {"upscale_type": [["latent", "pixel", "both"]], "hires_ckpt_name": [["(use same)", "CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "latent_upscaler": [["nearest-exact", "bilinear", "area", "bicubic", "bislerp", "city96.v1", "city96.xl", "ttl_nn.SDXL", "ttl_nn.SD 1.x"]], "pixel_upscaler": [["4x-UltraSharp.pth", "ESRGAN_4x.pth", "RealESRGAN_x2.pth", "RealESRGAN_x4.pth", "ldsr/last.ckpt"]], "upscale_by": ["FLOAT", {"default": 1.25, "min": 0.01, "max": 8.0, "step": 0.05}], "use_same_seed": ["BOOLEAN", {"default": true}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "hires_steps": ["INT", {"default": 12, "min": 1, "max": 10000}], "denoise": ["FLOAT", {"default": 0.56, "min": 0.0, "max": 1.0, "step": 0.01}], "iterations": ["INT", {"default": 1, "min": 0, "max": 5, "step": 1}], "use_controlnet": ["BOOLEAN", {"default": false}], "control_net_name": [["canny-sdxl-1.0.safetensors", "canny-xl1.0.safetensors", "control_sd15_canny.pth", "control_sd15_depth.pth", "control_sd15_normal.pth", "controlnet11Models_tileE.safetensors", "depth-sdxl-1.0.safetensors", "depth-zoe-xl-v1.0-controlnet.safetensors", "diffusers_xl_canny_full.safetensors", "diffusers_xl_depth_full.safetensors", "flux-canny-controlnet-v3.safetensors", "flux-controlnet-union.safetensors", "flux-depth-controlnet-v3.safetensors", "jasperai_flux_depth_controlnet.safetensors", "jasperai_flux_surface_normals_controlnet.safetensors", "mistoLine_fp16.safetensors", "sai_xl_canny_256lora.safetensors", "sai_xl_depth_256lora.safetensors", "t2i-adapter-canny.safetensors", "t2i-adapter-depth.safetensors", "t2iadapter_canny_sd14v1.pth", "t2iadapter_depth_sd14v1.pth", "v3_sd15_sparsectrl_rgb.ckpt", "xinsir_canny.safetensors", "xinsir_depth.safetensors"]], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "preprocessor": [["none", "MediaPipe-FaceMeshPreprocessor", "BinaryPreprocessor", "AnimeLineArtPreprocessor", "MeshGraphormer-DepthMapPreprocessor", "ShufflePreprocessor", "BAE-NormalMapPreprocessor", "DensePosePreprocessor", "AnimeFace_SemSegPreprocessor", "Manga2Anime_LineArt_Preprocessor", "SAMPreprocessor", "LineartStandardPreprocessor", "LeReS-DepthMapPreprocessor", "TEEDPreprocessor", "M-LSDPreprocessor", "ColorPreprocessor", "Zoe-DepthMapPreprocessor", "PiDiNetPreprocessor", "UniFormer-SemSegPreprocessor", "SemSegPreprocessor", "CannyEdgePreprocessor", "DepthAnythingV2Preprocessor", "ScribblePreprocessor", "Scribble_XDoG_Preprocessor", "Scribble_PiDiNet_Preprocessor", "TilePreprocessor", "TTPlanet_TileGF_Preprocessor", "TTPlanet_TileSimple_Preprocessor", "OpenposePreprocessor", "HEDPreprocessor", "FakeScribblePreprocessor", "DSINE-NormalMapPreprocessor", "DWPreprocessor", "AnimalPosePreprocessor", "LineArtPreprocessor", "ImageLuminanceDetector", "ImageIntensityDetector", "AnyLineArtPreprocessor_aux", "OneFormer-COCO-SemSegPreprocessor", "OneFormer-ADE20K-SemSegPreprocessor", "DepthAnythingPreprocessor", "Zoe_DepthAnythingPreprocessor", "MiDaS-NormalMapPreprocessor", "MiDaS-DepthMapPreprocessor", "Metric3D-DepthMapPreprocessor", "Metric3D-NormalMapPreprocessor"], {"default": "none"}], "preprocessor_imgs": ["BOOLEAN", {"default": false}]}, "optional": {"script": ["SCRIPT"]}, "hidden": {"my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["upscale_type", "hires_ckpt_name", "latent_upscaler", "pixel_upscaler", "upscale_by", "use_same_seed", "seed", "hires_steps", "denoise", "iterations", "use_controlnet", "control_net_name", "strength", "preprocessor", "preprocessor_imgs"], "optional": ["script"], "hidden": ["my_unique_id"]}, "output": ["SCRIPT"], "output_is_list": [false], "output_name": ["SCRIPT"], "name": "HighRes-Fix Script", "display_name": "HighRes-Fix Script", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/Scripts", "output_node": false}, "Tiled Upscaler Script": {"input": {"required": {"upscale_by": ["FLOAT", {"default": 1.25, "min": 0.01, "max": 8.0, "step": 0.05}], "tile_size": ["INT", {"default": 512, "min": 256, "max": 16384, "step": 64}], "tiling_strategy": [["random", "random strict", "padded", "simple", "none"]], "tiling_steps": ["INT", {"default": 30, "min": 1, "max": 10000}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "denoise": ["FLOAT", {"default": 0.4, "min": 0.0, "max": 1.0, "step": 0.01}], "use_controlnet": ["BOOLEAN", {"default": false}], "tile_controlnet": [["canny-sdxl-1.0.safetensors", "canny-xl1.0.safetensors", "control_sd15_canny.pth", "control_sd15_depth.pth", "control_sd15_normal.pth", "controlnet11Models_tileE.safetensors", "depth-sdxl-1.0.safetensors", "depth-zoe-xl-v1.0-controlnet.safetensors", "diffusers_xl_canny_full.safetensors", "diffusers_xl_depth_full.safetensors", "flux-canny-controlnet-v3.safetensors", "flux-controlnet-union.safetensors", "flux-depth-controlnet-v3.safetensors", "jasperai_flux_depth_controlnet.safetensors", "jasperai_flux_surface_normals_controlnet.safetensors", "mistoLine_fp16.safetensors", "sai_xl_canny_256lora.safetensors", "sai_xl_depth_256lora.safetensors", "t2i-adapter-canny.safetensors", "t2i-adapter-depth.safetensors", "t2iadapter_canny_sd14v1.pth", "t2iadapter_depth_sd14v1.pth", "v3_sd15_sparsectrl_rgb.ckpt", "xinsir_canny.safetensors", "xinsir_depth.safetensors"]], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}, "optional": {"script": ["SCRIPT"]}}, "input_order": {"required": ["upscale_by", "tile_size", "tiling_strategy", "tiling_steps", "seed", "denoise", "use_controlnet", "tile_controlnet", "strength"], "optional": ["script"]}, "output": ["SCRIPT"], "output_is_list": [false], "output_name": ["SCRIPT"], "name": "Tiled Upscaler Script", "display_name": "Tiled Upscaler Script", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/Scripts", "output_node": false}, "LoRA Stack to String converter": {"input": {"required": {"lora_stack": ["LORA_STACK"]}}, "input_order": {"required": ["lora_stack"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["LoRA string"], "name": "LoRA Stack to String converter", "display_name": "LoRA Stack to String converter", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/Misc", "output_node": false}, "Evaluate Integers": {"input": {"required": {"python_expression": ["STRING", {"default": "((a + b) - c) / 2", "multiline": false}], "print_to_console": [["False", "True"]]}, "optional": {"a": ["INT", {"default": 0, "min": -48000, "max": 48000, "step": 1}], "b": ["INT", {"default": 0, "min": -48000, "max": 48000, "step": 1}], "c": ["INT", {"default": 0, "min": -48000, "max": 48000, "step": 1}]}}, "input_order": {"required": ["python_expression", "print_to_console"], "optional": ["a", "b", "c"]}, "output": ["INT", "FLOAT", "STRING"], "output_is_list": [false, false, false], "output_name": ["INT", "FLOAT", "STRING"], "name": "Evaluate Integers", "display_name": "Evaluate Integers", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/Simple Eval", "output_node": true}, "Evaluate Floats": {"input": {"required": {"python_expression": ["STRING", {"default": "((a + b) - c) / 2", "multiline": false}], "print_to_console": [["False", "True"]]}, "optional": {"a": ["FLOAT", {"default": 0, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 1}], "b": ["FLOAT", {"default": 0, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 1}], "c": ["FLOAT", {"default": 0, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 1}]}}, "input_order": {"required": ["python_expression", "print_to_console"], "optional": ["a", "b", "c"]}, "output": ["INT", "FLOAT", "STRING"], "output_is_list": [false, false, false], "output_name": ["INT", "FLOAT", "STRING"], "name": "Evaluate Floats", "display_name": "Evaluate Floats", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/Simple Eval", "output_node": true}, "Evaluate Strings": {"input": {"required": {"python_expression": ["STRING", {"default": "a + b + c", "multiline": false}], "print_to_console": [["False", "True"]]}, "optional": {"a": ["STRING", {"default": "Hello", "multiline": false}], "b": ["STRING", {"default": " World", "multiline": false}], "c": ["STRING", {"default": "!", "multiline": false}]}}, "input_order": {"required": ["python_expression", "print_to_console"], "optional": ["a", "b", "c"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Evaluate Strings", "display_name": "Evaluate Strings", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/Simple Eval", "output_node": true}, "Simple Eval Examples": {"input": {"required": {"models_text": ["STRING", {"default": "The Evaluate Integers, Floats, and Strings nodes \nnow employ the SimpleEval library, enabling secure \ncreation and execution of custom Python expressions.\n\n(https://github.com/danthedeckie/simpleeval)\n\nBelow is a short list of what is possible.\n______________________________________________\n\n\"EVALUATE INTEGERS/FLOATS\" NODE EXPRESSION EXAMPLES:\n\nAddition: a + b + c\nSubtraction: a - b - c\nMultiplication: a * b * c\nDivision: a / b / c\nModulo: a % b % c\nExponentiation: a ** b ** c\nFloor Division: a // b // c\nAbsolute Value: abs(a) + abs(b) + abs(c)\nMaximum: max(a, b, c)\nMinimum: min(a, b, c)\nSum of Squares: a**2 + b**2 + c**2\nBitwise And: a & b & c\nBitwise Or: a | b | c\nBitwise Xor: a ^ b ^ c\nLeft Shift: a << 1 + b << 1 + c << 1\nRight Shift: a >> 1 + b >> 1 + c >> 1\nGreater Than Comparison: a > b > c\nLess Than Comparison: a < b < c\nEqual To Comparison: a == b == c\nNot Equal To Comparison: a != b != c\n______________________________________________\n\n\"EVALUATE STRINGS\" NODE EXPRESSION EXAMPLES:\n\nConcatenate: a + b + c\nFormat: f'{a} {b} {c}'\nLength: len(a) + len(b) + len(c)\nUppercase: a.upper() + b.upper() + c.upper()\nLowercase: a.lower() + b.lower() + c.lower()\nCapitalize: a.capitalize() + b.capitalize() + c.capitalize()\nTitle Case: a.title() + b.title() + c.title()\nStrip: a.strip() + b.strip() + c.strip()\nFind Substring: a.find('sub') + b.find('sub') + c.find('sub')\nReplace Substring: a.replace('old', 'new') + b.replace('old', 'new') + c.replace('old', 'new')\nCount Substring: a.count('sub') + b.count('sub') + c.count('sub')\nCheck Numeric: a.isnumeric() + b.isnumeric() + c.isnumeric()\nCheck Alphabetic: a.isalpha() + b.isalpha() + c.isalpha()\nCheck Alphanumeric: a.isalnum() + b.isalnum() + c.isalnum()\nCheck Start: a.startswith('prefix') + b.startswith('prefix') + c.startswith('prefix')\nCheck End: a.endswith('suffix') + b.endswith('suffix') + c.endswith('suffix')\nSplit: a.split(' ') + b.split(' ') + c.split(' ')\nZero Fill: a.zfill(5) + b.zfill(5) + c.zfill(5)\nSlice: a[:5] + b[:5] + c[:5]\nReverse: a[::-1] + b[::-1] + c[::-1]\n______________________________________________", "multiline": true}]}}, "input_order": {"required": ["models_text"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Simple Eval Examples", "display_name": "Simple Eval Examples", "description": "", "python_module": "custom_nodes.efficiency-nodes-comfyui", "category": "Efficiency Nodes/Simple Eval", "output_node": false}, "SUPIR_Upscale": {"input": {"required": {"supir_model": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "sdxl_model": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "image": ["IMAGE"], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}], "resize_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"], {"default": "lanczos"}], "scale_by": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 20.0, "step": 0.01}], "steps": ["INT", {"default": 45, "min": 3, "max": 4096, "step": 1}], "restoration_scale": ["FLOAT", {"default": -1.0, "min": -1.0, "max": 6.0, "step": 1.0}], "cfg_scale": ["FLOAT", {"default": 4.0, "min": 0, "max": 100, "step": 0.01}], "a_prompt": ["STRING", {"multiline": true, "default": "high quality, detailed"}], "n_prompt": ["STRING", {"multiline": true, "default": "bad quality, blurry, messy"}], "s_churn": ["INT", {"default": 5, "min": 0, "max": 40, "step": 1}], "s_noise": ["FLOAT", {"default": 1.003, "min": 1.0, "max": 1.1, "step": 0.001}], "control_scale": ["FLOAT", {"default": 1.0, "min": 0, "max": 10.0, "step": 0.05}], "cfg_scale_start": ["FLOAT", {"default": 4.0, "min": 0.0, "max": 100.0, "step": 0.05}], "control_scale_start": ["FLOAT", {"default": 0.0, "min": 0, "max": 1.0, "step": 0.05}], "color_fix_type": [["None", "AdaIn", "Wavelet"], {"default": "Wavelet"}], "keep_model_loaded": ["BOOLEAN", {"default": true}], "use_tiled_vae": ["BOOLEAN", {"default": true}], "encoder_tile_size_pixels": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 64}], "decoder_tile_size_latent": ["INT", {"default": 64, "min": 32, "max": 8192, "step": 64}]}, "optional": {"captions": ["STRING", {"forceInput": true, "multiline": false, "default": ""}], "diffusion_dtype": [["fp16", "bf16", "fp32", "auto"], {"default": "auto"}], "encoder_dtype": [["bf16", "fp32", "auto"], {"default": "auto"}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 128, "step": 1}], "use_tiled_sampling": ["BOOLEAN", {"default": false}], "sampler_tile_size": ["INT", {"default": 1024, "min": 64, "max": 4096, "step": 32}], "sampler_tile_stride": ["INT", {"default": 512, "min": 32, "max": 2048, "step": 32}], "fp8_unet": ["BOOLEAN", {"default": false}], "fp8_vae": ["BOOLEAN", {"default": false}], "sampler": [["RestoreDPMPP2MSampler", "RestoreEDMSampler"], {"default": "RestoreEDMSampler"}]}}, "input_order": {"required": ["supir_model", "sdxl_model", "image", "seed", "resize_method", "scale_by", "steps", "restoration_scale", "cfg_scale", "a_prompt", "n_prompt", "s_churn", "s_noise", "control_scale", "cfg_scale_start", "control_scale_start", "color_fix_type", "keep_model_loaded", "use_tiled_vae", "encoder_tile_size_pixels", "decoder_tile_size_latent"], "optional": ["captions", "diffusion_dtype", "encoder_dtype", "batch_size", "use_tiled_sampling", "sampler_tile_size", "sampler_tile_stride", "fp8_unet", "fp8_vae", "sampler"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["upscaled_image"], "name": "SUPIR_Upscale", "display_name": "SUPIR Upscale (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI-SUPIR", "category": "SUPIR", "output_node": false}, "SUPIR_sample": {"input": {"required": {"SUPIR_model": ["SUPIRMODEL"], "latents": ["LATENT"], "positive": ["SUPIR_cond_pos"], "negative": ["SUPIR_cond_neg"], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}], "steps": ["INT", {"default": 45, "min": 3, "max": 4096, "step": 1}], "cfg_scale_start": ["FLOAT", {"default": 4.0, "min": 0.0, "max": 100.0, "step": 0.01}], "cfg_scale_end": ["FLOAT", {"default": 4.0, "min": 0, "max": 100.0, "step": 0.01}], "EDM_s_churn": ["INT", {"default": 5, "min": 0, "max": 40, "step": 1}], "s_noise": ["FLOAT", {"default": 1.003, "min": 1.0, "max": 1.1, "step": 0.001}], "DPMPP_eta": ["FLOAT", {"default": 1.0, "min": 0, "max": 10.0, "step": 0.01}], "control_scale_start": ["FLOAT", {"default": 1.0, "min": 0, "max": 10.0, "step": 0.01}], "control_scale_end": ["FLOAT", {"default": 1.0, "min": 0, "max": 10.0, "step": 0.01}], "restore_cfg": ["FLOAT", {"default": -1.0, "min": -1.0, "max": 20.0, "step": 0.01}], "keep_model_loaded": ["BOOLEAN", {"default": false}], "sampler": [["RestoreDPMPP2MSampler", "RestoreEDMSampler", "TiledRestoreDPMPP2MSampler", "TiledRestoreEDMSampler"], {"default": "RestoreEDMSampler"}]}, "optional": {"sampler_tile_size": ["INT", {"default": 1024, "min": 64, "max": 4096, "step": 32}], "sampler_tile_stride": ["INT", {"default": 512, "min": 32, "max": 2048, "step": 32}]}}, "input_order": {"required": ["SUPIR_model", "latents", "positive", "negative", "seed", "steps", "cfg_scale_start", "cfg_scale_end", "EDM_s_churn", "s_noise", "DPMPP_eta", "control_scale_start", "control_scale_end", "restore_cfg", "keep_model_loaded", "sampler"], "optional": ["sampler_tile_size", "sampler_tile_stride"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "SUPIR_sample", "display_name": "SUPIR Sampler", "description": "\n- **latent:**\nLatent to sample from, when using SUPIR latent this is just for the noise shape,  \nit's actually not used otherwise here. Identical to feeding this comfy empty latent.  \nIf fed anything else it's used as it is, no noise is added.  \n- **cfg:**\nLinearly scaled CFG is always used, first step will use the cfg_scale_start value,  \nand that is interpolated to the cfg_scale_end value at last step.  \nTo disable scaling set these values to be the same.  \n- **EDM_s_churn:**\ncontrols the rate of adaptation of the diffusion process to changes in noise levels  \nover time. Has no effect with DPMPP samplers.  \n- **s_noise:**\nThis parameter directly controls the amount of noise added to the image at each  \nstep of the diffusion process.  \n- **DPMPP_eta:**\nScaling factor that influences the diffusion process by adjusting how the denoising  \nprocess adapts to changes in noise levels over time.\nNo effect with EDM samplers.  \n- **control_scale:**\nThe strenght of the SUPIR control model, scales linearly from start to end.  \nLower values allow more freedom from the input image.  \n- **restore_cfg:**\nControls the degree of restoration towards the original image during the diffusion   \nprocess. It allows for dome fine-tuning of the process.  \n- **samplers:**\nEDM samplers need lots of steps but generally have better quality.  \nDPMPP samplers work well with lower steps, good for lightning models.  \nTiled samplers enable tiled diffusion process, this is very slow but allows higher  \nresolutions to be used by saving VRAM.  Tile size should be chosen so the image  \nis evenly tiled.  Tile stride affects the overlap of the tiles.  Check the  \nSUPIR Tiles -node for preview to understand how the image is tiled.\n\n", "python_module": "custom_nodes.ComfyUI-SUPIR", "category": "SUPIR", "output_node": false}, "SUPIR_model_loader": {"input": {"required": {"supir_model": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "sdxl_model": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "fp8_unet": ["BOOLEAN", {"default": false}], "diffusion_dtype": [["fp16", "bf16", "fp32", "auto"], {"default": "auto"}]}}, "input_order": {"required": ["supir_model", "sdxl_model", "fp8_unet", "diffusion_dtype"]}, "output": ["SUPIRMODEL", "SUPIRVAE"], "output_is_list": [false, false], "output_name": ["SUPIR_model", "SUPIR_VAE"], "name": "SUPIR_model_loader", "display_name": "SUPIR Model Loader (Legacy)", "description": "\nOld loader, not recommended to be used.  \nLoads the SUPIR model and the selected SDXL model and merges them.\n", "python_module": "custom_nodes.ComfyUI-SUPIR", "category": "SUPIR", "output_node": false}, "SUPIR_first_stage": {"input": {"required": {"SUPIR_VAE": ["SUPIRVAE"], "image": ["IMAGE"], "use_tiled_vae": ["BOOLEAN", {"default": true}], "encoder_tile_size": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 64}], "decoder_tile_size": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 64}], "encoder_dtype": [["bf16", "fp32", "auto"], {"default": "auto"}]}}, "input_order": {"required": ["SUPIR_VAE", "image", "use_tiled_vae", "encoder_tile_size", "decoder_tile_size", "encoder_dtype"]}, "output": ["SUPIRVAE", "IMAGE", "LATENT"], "output_is_list": [false, false, false], "output_name": ["SUPIR_VAE", "denoised_image", "denoised_latents"], "name": "SUPIR_first_stage", "display_name": "SUPIR First Stage (Denoiser)", "description": "\nSUPIR \"first stage\" processing.\nEncodes and decodes the image using SUPIR's \"denoise_encoder\", purpose  \nis to fix compression artifacts and such, ends up blurring the image often  \nwhich is expected. Can be replaced with any other denoiser/blur or not used at all.\n", "python_module": "custom_nodes.ComfyUI-SUPIR", "category": "SUPIR", "output_node": false}, "SUPIR_encode": {"input": {"required": {"SUPIR_VAE": ["SUPIRVAE"], "image": ["IMAGE"], "use_tiled_vae": ["BOOLEAN", {"default": true}], "encoder_tile_size": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 64}], "encoder_dtype": [["bf16", "fp32", "auto"], {"default": "auto"}]}}, "input_order": {"required": ["SUPIR_VAE", "image", "use_tiled_vae", "encoder_tile_size", "encoder_dtype"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "SUPIR_encode", "display_name": "SUPIR Encode", "description": "", "python_module": "custom_nodes.ComfyUI-SUPIR", "category": "SUPIR", "output_node": false}, "SUPIR_decode": {"input": {"required": {"SUPIR_VAE": ["SUPIRVAE"], "latents": ["LATENT"], "use_tiled_vae": ["BOOLEAN", {"default": true}], "decoder_tile_size": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 64}]}}, "input_order": {"required": ["SUPIR_VAE", "latents", "use_tiled_vae", "decoder_tile_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "SUPIR_decode", "display_name": "SUPIR Decode", "description": "", "python_module": "custom_nodes.ComfyUI-SUPIR", "category": "SUPIR", "output_node": false}, "SUPIR_conditioner": {"input": {"required": {"SUPIR_model": ["SUPIRMODEL"], "latents": ["LATENT"], "positive_prompt": ["STRING", {"multiline": true, "default": "high quality, detailed"}], "negative_prompt": ["STRING", {"multiline": true, "default": "bad quality, blurry, messy"}]}, "optional": {"captions": ["STRING", {"forceInput": true, "multiline": false, "default": ""}]}}, "input_order": {"required": ["SUPIR_model", "latents", "positive_prompt", "negative_prompt"], "optional": ["captions"]}, "output": ["SUPIR_cond_pos", "SUPIR_cond_neg"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "SUPIR_conditioner", "display_name": "SUPIR Conditioner", "description": "\nCreates the conditioning for the sampler.  \nCaption input is optional, when it receives a single caption, it's added to the positive prompt.\n    \nIf a list of caption is given for single input image, the captions need to match the number of tiles,  \nrefer to the SUPIR Tiles node.  \n  \nIf a list of captions is given and it matches the incoming image batch, each image uses corresponding caption.\n", "python_module": "custom_nodes.ComfyUI-SUPIR", "category": "SUPIR", "output_node": false}, "SUPIR_tiles": {"input": {"required": {"image": ["IMAGE"], "tile_size": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 64}], "tile_stride": ["INT", {"default": 256, "min": 64, "max": 8192, "step": 64}]}}, "input_order": {"required": ["image", "tile_size", "tile_stride"]}, "output": ["IMAGE", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["image_tiles", "tile_size", "tile_stride"], "name": "SUPIR_tiles", "display_name": "SUPIR Tiles Preview", "description": "\nTiles the image with same function as the Tiled samplers use.  \nUseful for previewing the tiling and generating captions per tile (WIP feature)\n", "python_module": "custom_nodes.ComfyUI-SUPIR", "category": "SUPIR", "output_node": false}, "SUPIR_model_loader_v2": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "supir_model": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "fp8_unet": ["BOOLEAN", {"default": false}], "diffusion_dtype": [["fp16", "bf16", "fp32", "auto"], {"default": "auto"}]}, "optional": {"high_vram": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["model", "clip", "vae", "supir_model", "fp8_unet", "diffusion_dtype"], "optional": ["high_vram"]}, "output": ["SUPIRMODEL", "SUPIRVAE"], "output_is_list": [false, false], "output_name": ["SUPIR_model", "SUPIR_VAE"], "name": "SUPIR_model_loader_v2", "display_name": "SUPIR Model Loader (v2)", "description": "\nLoads the SUPIR model and merges it with the SDXL model.  \n\nDiffusion type should be kept on auto, unless you have issues loading the model.  \nfp8_unet casts the unet weights to torch.float8_e4m3fn, which saves a lot of VRAM but has slight quality impact.  \nhigh_vram: uses Accelerate to load weights to GPU, slightly faster model loading.\n", "python_module": "custom_nodes.ComfyUI-SUPIR", "category": "SUPIR", "output_node": false}, "SUPIR_model_loader_v2_clip": {"input": {"required": {"model": ["MODEL"], "clip_l": ["CLIP"], "clip_g": ["CLIP"], "vae": ["VAE"], "supir_model": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "fp8_unet": ["BOOLEAN", {"default": false}], "diffusion_dtype": [["fp16", "bf16", "fp32", "auto"], {"default": "auto"}]}, "optional": {"high_vram": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["model", "clip_l", "clip_g", "vae", "supir_model", "fp8_unet", "diffusion_dtype"], "optional": ["high_vram"]}, "output": ["SUPIRMODEL", "SUPIRVAE"], "output_is_list": [false, false], "output_name": ["SUPIR_model", "SUPIR_VAE"], "name": "SUPIR_model_loader_v2_clip", "display_name": "SUPIR Model Loader (v2) (Clip)", "description": "\nLoads the SUPIR model and merges it with the SDXL model.  \n\nDiffusion type should be kept on auto, unless you have issues loading the model.  \nfp8_unet casts the unet weights to torch.float8_e4m3fn, which saves a lot of VRAM but has slight quality impact.  \nhigh_vram: uses Accelerate to load weights to GPU, slightly faster model loading.\n", "python_module": "custom_nodes.ComfyUI-SUPIR", "category": "SUPIR", "output_node": false}, "Checkpoint Selector": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]]}}, "input_order": {"required": ["ckpt_name"]}, "output": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "output_is_list": [false], "output_name": ["ckpt_name"], "name": "Checkpoint Selector", "display_name": "Checkpoint Selector", "description": "", "python_module": "custom_nodes.comfy-image-saver", "category": "ImageSaverTools/utils", "output_node": false}, "Save Image w/Metadata": {"input": {"required": {"images": ["IMAGE"], "filename": ["STRING", {"default": "%time_%seed", "multiline": false}], "path": ["STRING", {"default": "", "multiline": false}], "extension": [["png", "jpeg", "webp"]], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "modelname": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]]}, "optional": {"positive": ["STRING", {"default": "unknown", "multiline": true}], "negative": ["STRING", {"default": "unknown", "multiline": true}], "seed_value": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 8}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 8}], "lossless_webp": ["BOOLEAN", {"default": true}], "quality_jpeg_or_webp": ["INT", {"default": 100, "min": 1, "max": 100}], "counter": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "time_format": ["STRING", {"default": "%Y-%m-%d-%H%M%S", "multiline": false}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename", "path", "extension", "steps", "cfg", "modelname", "sampler_name", "scheduler"], "optional": ["positive", "negative", "seed_value", "width", "height", "lossless_webp", "quality_jpeg_or_webp", "counter", "time_format"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Save Image w/Metadata", "display_name": "Save Image w/Metadata", "description": "", "python_module": "custom_nodes.comfy-image-saver", "category": "ImageSaverTools", "output_node": true}, "Sampler Selector": {"input": {"required": {"sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]]}}, "input_order": {"required": ["sampler_name"]}, "output": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "output_is_list": [false], "output_name": ["sampler_name"], "name": "Sampler Selector", "display_name": "Sampler Selector", "description": "", "python_module": "custom_nodes.comfy-image-saver", "category": "ImageSaverTools/utils", "output_node": false}, "Scheduler Selector": {"input": {"required": {"scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]]}}, "input_order": {"required": ["scheduler"]}, "output": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "output_is_list": [false], "output_name": ["scheduler"], "name": "Scheduler Selector", "display_name": "Scheduler Selector", "description": "", "python_module": "custom_nodes.comfy-image-saver", "category": "ImageSaverTools/utils", "output_node": false}, "Seed Generator": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["seed"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "Seed Generator", "display_name": "Seed Generator", "description": "", "python_module": "custom_nodes.comfy-image-saver", "category": "ImageSaverTools/utils", "output_node": false}, "String Literal": {"input": {"required": {"string": ["STRING", {"default": "", "multiline": true}]}}, "input_order": {"required": ["string"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "String Literal", "display_name": "String Literal", "description": "", "python_module": "custom_nodes.comfy-image-saver", "category": "ImageSaverTools/utils", "output_node": false}, "Width/Height Literal": {"input": {"required": {"int": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 8}]}}, "input_order": {"required": ["int"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "Width/Height Literal", "display_name": "Width/Height Literal", "description": "", "python_module": "custom_nodes.comfy-image-saver", "category": "ImageSaverTools/utils", "output_node": false}, "Cfg Literal": {"input": {"required": {"float": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}]}}, "input_order": {"required": ["float"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "Cfg Literal", "display_name": "Cfg Literal", "description": "", "python_module": "custom_nodes.comfy-image-saver", "category": "ImageSaverTools/utils", "output_node": false}, "Int Literal": {"input": {"required": {"int": ["INT", {"default": 0, "min": 0, "max": 1000000}]}}, "input_order": {"required": ["int"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "Int Literal", "display_name": "Int Literal", "description": "", "python_module": "custom_nodes.comfy-image-saver", "category": "ImageSaverTools/utils", "output_node": false}, "ChannelSelector": {"input": {"required": {"image": ["IMAGE"], "channel": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1, "display": "number"}]}}, "input_order": {"required": ["image", "channel"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ChannelSelector", "display_name": "ChannelSelector", "description": "", "python_module": "custom_nodes.comfyui-tensorops", "category": "tensorops", "output_node": false}, "MaskImage": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["image", "mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "MaskImage", "display_name": "MaskImage", "description": "", "python_module": "custom_nodes.comfyui-tensorops", "category": "tensorops", "output_node": false}, "SaveImageToS3": {"input": {"required": {"database": ["STRING", {"multiline": false}], "key": ["STRING", {"multiline": false}], "image": ["IMAGE"]}}, "input_order": {"required": ["database", "key", "image"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveImageToS3", "display_name": "SaveImageToS3", "description": "", "python_module": "custom_nodes.comfyui-tensorops", "category": "database_ops", "output_node": true}, "SaveJsonToSurreal": {"input": {"required": {"database": ["STRING", {"multiline": false}], "json": ["JSON"], "id": ["STRING", {"multiline": false}], "key": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["database", "json", "id", "key"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveJsonToSurreal", "display_name": "SaveJsonToSurreal", "description": "", "python_module": "custom_nodes.comfyui-tensorops", "category": "database_ops", "output_node": true}, "SaveTextToSurreal": {"input": {"required": {"database": ["STRING", {"multiline": false}], "text": ["STRING", {"forceInput": true}], "id": ["STRING", {"multiline": false}], "key": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["database", "text", "id", "key"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveTextToSurreal", "display_name": "SaveTextToSurreal", "description": "", "python_module": "custom_nodes.comfyui-tensorops", "category": "database_ops", "output_node": true}, "FetchJsonFromSurreal": {"input": {"required": {"database": ["STRING", {"multiline": false}], "id": ["STRING", {"multiline": false}], "key": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["database", "id", "key"]}, "output": ["JSON"], "output_is_list": [false], "output_name": ["JSON"], "name": "FetchJsonFromSurreal", "display_name": "FetchJsonFromSurreal", "description": "", "python_module": "custom_nodes.comfyui-tensorops", "category": "database_ops", "output_node": true}, "ForegroundMask": {"input": {"required": {"image": ["IMAGE"], "json_data": ["JSON"]}}, "input_order": {"required": ["image", "json_data"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ForegroundMask", "display_name": "ForegroundMask", "description": "", "python_module": "custom_nodes.comfyui-tensorops", "category": "tensorops", "output_node": false}, "SaveToRedis": {"input": {"required": {"key": ["STRING", {"multiline": false}], "data": ["JSON"]}}, "input_order": {"required": ["key", "data"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveToRedis", "display_name": "SaveToRedis", "description": "", "python_module": "custom_nodes.comfyui-tensorops", "category": "database_ops", "output_node": true}, "FetchFromRedis": {"input": {"required": {"key": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["key"]}, "output": ["JSON"], "output_is_list": [false], "output_name": ["JSON"], "name": "FetchFromRedis", "display_name": "FetchFromRedis", "description": "", "python_module": "custom_nodes.comfyui-tensorops", "category": "database_ops", "output_node": true}, "FalDifferentialDiffusion": {"input": {"required": {"foreground_image": ["IMAGE"], "depth_image": ["IMAGE"], "foreground_prompt": ["STRING", {"multiline": false}], "background_prompt": ["STRING", {"multiline": false}], "strength": ["FLOAT", {"default": 1, "min": 0.01, "max": 3, "step": 0.01}], "steps": ["INT", {"default": 14, "min": 1, "max": 32, "step": 1}]}}, "input_order": {"required": ["foreground_image", "depth_image", "foreground_prompt", "background_prompt", "strength", "steps"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "FalDifferentialDiffusion", "display_name": "FalDifferentialDiffusion", "description": "", "python_module": "custom_nodes.comfyui-tensorops", "category": "external_tooling", "output_node": false}, "FalDiffusion": {"input": {"required": {"prompt": ["STRING", {"multiline": false}], "steps": ["INT", {"default": 2, "min": 1, "max": 8, "step": 1}]}}, "input_order": {"required": ["prompt", "steps"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "FalDiffusion", "display_name": "FalDiffusion", "description": "", "python_module": "custom_nodes.comfyui-tensorops", "category": "external_tooling", "output_node": false}, "BackgroundSelect": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "BackgroundSelect", "display_name": "BackgroundSelect", "description": "", "python_module": "custom_nodes.comfyui-tensorops", "category": "tensorops", "output_node": false}, "GetLayerMask": {"input": {"required": {"image": ["IMAGE"], "json_data": ["JSON"]}}, "input_order": {"required": ["image", "json_data"]}, "output": ["MASK", "MASK", "JSON"], "output_is_list": [false, false, false], "output_name": ["MASK", "MASK", "JSON"], "name": "GetLayerMask", "display_name": "GetLayerMask", "description": "", "python_module": "custom_nodes.comfyui-tensorops", "category": "tensorops", "output_node": false}, "SendImageOnWebSocket": {"input": {"required": {"event": ["STRING", {"multiline": false}], "images": ["IMAGE"]}}, "input_order": {"required": ["event", "images"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SendImageOnWebSocket", "display_name": "SendImageOnWebSocket", "description": "", "python_module": "custom_nodes.comfyui-tensorops", "category": "tensorops", "output_node": true}, "SendJsonOnWebSocket": {"input": {"required": {"event": ["STRING", {"multiline": false}], "json": ["JSON"]}}, "input_order": {"required": ["event", "json"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SendJsonOnWebSocket", "display_name": "SendJsonOnWebSocket", "description": "", "python_module": "custom_nodes.comfyui-tensorops", "category": "tensorops", "output_node": true}, "Sine Curve [Dream]": {"input": {"required": {"frame_counter": ["FRAME_COUNTER"], "max_value": ["FLOAT", {"default": 1.0, "multiline": false}], "min_value": ["FLOAT", {"default": 0.0, "multiline": false}], "periodicity_seconds": ["FLOAT", {"default": 10.0, "multiline": false, "min": 0.01}], "phase": ["FLOAT", {"default": 0.0, "multiline": false, "min": -1, "max": 1}]}}, "input_order": {"required": ["frame_counter", "max_value", "min_value", "periodicity_seconds", "phase"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "Sine Curve [Dream]", "display_name": "\ud83d\udcc8 Sine Curve", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udcc8 curves", "output_node": false}, "Linear Curve [Dream]": {"input": {"required": {"frame_counter": ["FRAME_COUNTER"], "initial_value": ["FLOAT", {"default": 0.0, "multiline": false}], "final_value": ["FLOAT", {"default": 100.0, "multiline": false}]}}, "input_order": {"required": ["frame_counter", "initial_value", "final_value"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "Linear Curve [Dream]", "display_name": "\ud83d\udcc8 Linear Curve", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udcc8 curves", "output_node": false}, "CSV Curve [Dream]": {"input": {"required": {"frame_counter": ["FRAME_COUNTER"], "csvfile": ["STRING", {"default": "", "multiline": false}], "first_column_type": [["seconds", "frames"]], "interpolate": [["true", "false"]], "csv_dialect": [["excel", "excel-tab", "unix"]]}}, "input_order": {"required": ["frame_counter", "csvfile", "first_column_type", "interpolate", "csv_dialect"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "CSV Curve [Dream]", "display_name": "\ud83d\udcc8 CSV Curve", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udcc8 curves", "output_node": false}, "Beat Curve [Dream]": {"input": {"required": {"frame_counter": ["FRAME_COUNTER"], "bpm": ["FLOAT", {"default": 100.0, "multiline": false}], "time_offset": ["FLOAT", {"default": 0.0, "multiline": false}], "measure_length": ["INT", {"default": 4, "min": 1}], "low_value": ["FLOAT", {"default": 0.0}], "high_value": ["FLOAT", {"default": 1.0}], "invert": [["no", "yes"]], "power": ["FLOAT", {"default": 2.0, "min": 0.25, "max": 4}], "accent_1": ["INT", {"default": 1, "min": 1, "max": 24}]}, "optional": {"accent_2": ["INT", {"default": 3, "min": 1, "max": 24}], "accent_3": ["INT", {"default": 0}], "accent_4": ["INT", {"default": 0}]}}, "input_order": {"required": ["frame_counter", "bpm", "time_offset", "measure_length", "low_value", "high_value", "invert", "power", "accent_1"], "optional": ["accent_2", "accent_3", "accent_4"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "Beat Curve [Dream]", "display_name": "\ud83d\udcc8 Beat Curve", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udcc8 curves", "output_node": false}, "Common Frame Dimensions [Dream]": {"input": {"required": {"size": [["3840", "1920", "1440", "1280", "768", "720", "640", "512"]], "aspect_ratio": [["16:9", "16:10", "4:3", "1:1", "5:4", "3:2", "21:9", "14:9"]], "orientation": [["wide", "tall"]], "divisor": [["8", "4", "2", "1"]], "alignment": ["INT", {"default": 64, "min": 1, "max": 512}], "alignment_type": [["ceil", "floor", "nearest"]]}}, "input_order": {"required": ["size", "aspect_ratio", "orientation", "divisor", "alignment", "alignment_type"]}, "output": ["INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["width", "height", "final_width", "final_height"], "name": "Common Frame Dimensions [Dream]", "display_name": "\u2317 Common Frame Dimensions", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils", "output_node": false}, "Image Motion [Dream]": {"input": {"required": {"image": ["IMAGE"], "zoom": ["FLOAT", {"default": 0.0, "min": -10, "max": 10, "step": 0.01}], "mask_1_feather": ["INT", {"default": 0, "min": 0}], "mask_1_overlap": ["INT", {"default": 0, "min": 0}], "mask_2_feather": ["INT", {"default": 10, "min": 0}], "mask_2_overlap": ["INT", {"default": 5, "min": 0}], "mask_3_feather": ["INT", {"default": 15, "min": 0}], "mask_3_overlap": ["INT", {"default": 5, "min": 0}], "x_translation": ["FLOAT", {"default": 0.0, "min": -10, "max": 10, "step": 0.01}], "y_translation": ["FLOAT", {"default": 0.0, "min": -10, "max": 10, "step": 0.01}], "frame_counter": ["FRAME_COUNTER"]}, "optional": {"noise": ["IMAGE"], "output_resize_width": ["INT", {"default": 0, "min": 0}], "output_resize_height": ["INT", {"default": 0, "min": 0}]}}, "input_order": {"required": ["image", "zoom", "mask_1_feather", "mask_1_overlap", "mask_2_feather", "mask_2_overlap", "mask_3_feather", "mask_3_overlap", "x_translation", "y_translation", "frame_counter"], "optional": ["noise", "output_resize_width", "output_resize_height"]}, "output": ["IMAGE", "MASK", "MASK", "MASK"], "output_is_list": [false, false, false, false], "output_name": ["image", "mask1", "mask2", "mask3"], "name": "Image Motion [Dream]", "display_name": "\ud83d\udd00 Image Motion", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udd00 transforms", "output_node": false}, "Noise from Palette [Dream]": {"input": {"required": {"palette": ["RGB_PALETTE"], "width": ["INT", {"default": 512, "min": 1, "max": 8192}], "height": ["INT", {"default": 512, "min": 1, "max": 8192}], "blur_amount": ["FLOAT", {"default": 0.3, "min": 0, "max": 1.0, "step": 0.05}], "density": ["FLOAT", {"default": 0.5, "min": 0.1, "max": 1.0, "step": 0.025}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["palette", "width", "height", "blur_amount", "density", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Noise from Palette [Dream]", "display_name": "\ud83c\udf2b Noise from Palette", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udf04 image/\u26a1 generate", "output_node": false}, "Analyze Palette [Dream]": {"input": {"required": {"palette": ["RGB_PALETTE"]}}, "input_order": {"required": ["palette"]}, "output": ["FLOAT", "FLOAT", "FLOAT", "FLOAT", "FLOAT"], "output_is_list": [false, false, false, false, false], "output_name": ["brightness", "contrast", "redness", "greenness", "blueness"], "name": "Analyze Palette [Dream]", "display_name": "\ud83d\udcca Analyze Palette", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa8 color", "output_node": false}, "Palette Color Shift [Dream]": {"input": {"required": {"palette": ["RGB_PALETTE"], "red_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.1}], "green_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.1}], "blue_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.1}], "fixed_brightness": [["yes", "no"]]}}, "input_order": {"required": ["palette", "red_multiplier", "green_multiplier", "blue_multiplier", "fixed_brightness"]}, "output": ["RGB_PALETTE"], "output_is_list": [false], "output_name": ["palette"], "name": "Palette Color Shift [Dream]", "display_name": "\ud83c\udfa8 Palette Color Shift", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa8 color", "output_node": false}, "File Count [Dream]": {"input": {"required": {"directory_path": ["STRING", {"default": "", "multiline": false}], "patterns": ["STRING", {"default": "*.jpg|*.png|*.jpeg", "multiline": false}]}}, "input_order": {"required": ["directory_path", "patterns"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["TOTAL"], "name": "File Count [Dream]", "display_name": "\ud83d\udcc2 File Count", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation", "output_node": false}, "Frame Counter Offset [Dream]": {"input": {"required": {"frame_counter": ["FRAME_COUNTER"], "offset": ["INT", {"default": -1}]}}, "input_order": {"required": ["frame_counter", "offset"]}, "output": ["FRAME_COUNTER"], "output_is_list": [false], "output_name": ["frame_counter"], "name": "Frame Counter Offset [Dream]", "display_name": "\u00b1 Frame Counter Offset", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation", "output_node": false}, "Frame Counter (Directory) [Dream]": {"input": {"required": {"directory_path": ["STRING", {"default": "", "multiline": false}], "pattern": ["STRING", {"default": "*", "multiline": false}], "indexing": [["numeric", "alphabetic order"]], "total_frames": ["INT", {"default": 100, "min": 2, "max": 5184000}], "frames_per_second": ["INT", {"min": 1, "default": 30}]}}, "input_order": {"required": ["directory_path", "pattern", "indexing", "total_frames", "frames_per_second"]}, "output": ["FRAME_COUNTER"], "output_is_list": [false], "output_name": ["frame_counter"], "name": "Frame Counter (Directory) [Dream]", "display_name": "\u268b Frame Counter (Directory)", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation", "output_node": false}, "Frame Counter (Simple) [Dream]": {"input": {"required": {"frame_index": ["INT", {"min": 0, "default": 0}], "total_frames": ["INT", {"default": 100, "min": 1, "max": 5184000}], "frames_per_second": ["INT", {"min": 1, "default": 25}]}}, "input_order": {"required": ["frame_index", "total_frames", "frames_per_second"]}, "output": ["FRAME_COUNTER"], "output_is_list": [false], "output_name": ["frame_counter"], "name": "Frame Counter (Simple) [Dream]", "display_name": "\u268b Frame Counter (Simple)", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation", "output_node": false}, "Image Sequence Loader [Dream]": {"input": {"required": {"frame_counter": ["FRAME_COUNTER"], "directory_path": ["STRING", {"default": "", "multiline": false}], "pattern": ["STRING", {"default": "*", "multiline": false}], "indexing": [["numeric", "alphabetic order"]]}, "optional": {"default_image": ["IMAGE", {"default": null}]}}, "input_order": {"required": ["frame_counter", "directory_path", "pattern", "indexing"], "optional": ["default_image"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "frame_name"], "name": "Image Sequence Loader [Dream]", "display_name": "\ud83d\udcbe Image Sequence Loader", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa5 animation", "output_node": false}, "Image Sequence Saver [Dream]": {"input": {"required": {"frame_counter": ["FRAME_COUNTER"], "image": ["IMAGE"], "directory_path": ["STRING", {"default": "/home/ubuntu/Playbook/ComfyUI/output", "multiline": false}], "prefix": ["STRING", {"default": "frame", "multiline": false}], "digits": ["INT", {"default": 5}], "at_end": [["stop output", "raise error", "keep going"]], "filetype": [["png with embedded workflow", "png", "jpg"]]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["frame_counter", "image", "directory_path", "prefix", "digits", "at_end", "filetype"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["ANIMATION_SEQUENCE", "LOG_ENTRY"], "output_is_list": [false, false], "output_name": ["sequence", "log_entry"], "name": "Image Sequence Saver [Dream]", "display_name": "\ud83d\udcbe Image Sequence Saver", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa5 animation", "output_node": true}, "CSV Generator [Dream]": {"input": {"required": {"frame_counter": ["FRAME_COUNTER"], "value": ["FLOAT", {"forceInput": true, "default": 0.0}], "csvfile": ["STRING", {"default": "", "multiline": false}], "csv_dialect": [["excel", "excel-tab", "unix"]]}}, "input_order": {"required": ["frame_counter", "value", "csvfile", "csv_dialect"]}, "output": [], "output_is_list": [], "output_name": [], "name": "CSV Generator [Dream]", "display_name": "\u2317 CSV Generator", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udcc8 curves", "output_node": true}, "Sample Image Area as Palette [Dream]": {"input": {"required": {"image": ["IMAGE"], "samples": ["INT", {"default": 256, "min": 1, "max": 4096}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "area": [["top-left", "top-center", "top-right", "center-left", "center", "center-right", "bottom-left", "bottom-center", "bottom-right"]]}}, "input_order": {"required": ["image", "samples", "seed", "area"]}, "output": ["RGB_PALETTE"], "output_is_list": [false], "output_name": ["palette"], "name": "Sample Image Area as Palette [Dream]", "display_name": "\ud83c\udfa8 Sample Image Area as Palette", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa8 color", "output_node": false}, "FFMPEG Video Encoder [Dream]": {"input": {"required": {"sequence": ["ANIMATION_SEQUENCE"], "name": ["STRING", {"default": "video", "multiline": false}], "framerate_factor": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 100.0}], "remove_images": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["sequence", "name", "framerate_factor", "remove_images"]}, "output": ["LOG_ENTRY"], "output_is_list": [false], "output_name": ["log_entry"], "name": "FFMPEG Video Encoder [Dream]", "display_name": "\ud83c\udfac Video Encoder (FFMPEG)", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation/\u2699 postprocessing", "output_node": true}, "Image Sequence Tweening [Dream]": {"input": {"required": {"sequence": ["ANIMATION_SEQUENCE"], "multiplier": ["INT", {"default": 2, "min": 2, "max": 10}]}}, "input_order": {"required": ["sequence", "multiplier"]}, "output": ["ANIMATION_SEQUENCE"], "output_is_list": [false], "output_name": ["sequence"], "name": "Image Sequence Tweening [Dream]", "display_name": "\u2699 Image Sequence Tweening", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation/\u2699 postprocessing", "output_node": false}, "Image Sequence Blend [Dream]": {"input": {"required": {"sequence": ["ANIMATION_SEQUENCE"], "fade_in": ["FLOAT", {"default": 0.1, "min": 0.01, "max": 0.5}], "fade_out": ["FLOAT", {"default": 0.1, "min": 0.01, "max": 0.5}], "iterations": ["INT", {"default": 1, "min": 1, "max": 10}]}}, "input_order": {"required": ["sequence", "fade_in", "fade_out", "iterations"]}, "output": ["ANIMATION_SEQUENCE"], "output_is_list": [false], "output_name": ["sequence"], "name": "Image Sequence Blend [Dream]", "display_name": "\u2699 Image Sequence Blend", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation/\u2699 postprocessing", "output_node": false}, "Palette Color Align [Dream]": {"input": {"required": {"palette": ["RGB_PALETTE"], "target_align": ["RGB_PALETTE"], "alignment_factor": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 10.0, "step": 0.1}]}}, "input_order": {"required": ["palette", "target_align", "alignment_factor"]}, "output": ["RGB_PALETTE"], "output_is_list": [false], "output_name": ["palette"], "name": "Palette Color Align [Dream]", "display_name": "\ud83c\udfa8 Palette Color Align", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa8 color", "output_node": false}, "Sample Image as Palette [Dream]": {"input": {"required": {"image": ["IMAGE"], "samples": ["INT", {"default": 1024, "min": 1, "max": 4096}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["image", "samples", "seed"]}, "output": ["RGB_PALETTE"], "output_is_list": [false], "output_name": ["palette"], "name": "Sample Image as Palette [Dream]", "display_name": "\ud83c\udfa8 Sample Image as Palette", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa8 color", "output_node": false}, "Noise from Area Palettes [Dream]": {"input": {"optional": {"top_left_palette": ["RGB_PALETTE"], "top_center_palette": ["RGB_PALETTE"], "top_right_palette": ["RGB_PALETTE"], "center_left_palette": ["RGB_PALETTE"], "center_palette": ["RGB_PALETTE"], "center_right_palette": ["RGB_PALETTE"], "bottom_left_palette": ["RGB_PALETTE"], "bottom_center_palette": ["RGB_PALETTE"], "bottom_right_palette": ["RGB_PALETTE"]}, "required": {"area_sharpness": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.05}], "width": ["INT", {"default": 512, "min": 1, "max": 8192}], "height": ["INT", {"default": 512, "min": 1, "max": 8192}], "blur_amount": ["FLOAT", {"default": 0.3, "min": 0, "max": 1.0, "step": 0.05}], "density": ["FLOAT", {"default": 0.5, "min": 0.1, "max": 1.0, "step": 0.025}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"optional": ["top_left_palette", "top_center_palette", "top_right_palette", "center_left_palette", "center_palette", "center_right_palette", "bottom_left_palette", "bottom_center_palette", "bottom_right_palette"], "required": ["area_sharpness", "width", "height", "blur_amount", "density", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Noise from Area Palettes [Dream]", "display_name": "\ud83c\udf2b Noise from Area Palettes", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udf04 image/\u26a1 generate", "output_node": false}, "String Input [Dream]": {"input": {"required": {"value": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["value"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "String Input [Dream]", "display_name": "\u270d String Input", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils", "output_node": false}, "Float Input [Dream]": {"input": {"required": {"value": ["FLOAT", {"default": 0.0}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "Float Input [Dream]", "display_name": "\u270d Float Input", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils", "output_node": false}, "Int Input [Dream]": {"input": {"required": {"value": ["INT", {"default": 0}]}}, "input_order": {"required": ["value"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "Int Input [Dream]", "display_name": "\u270d Int Input", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils", "output_node": false}, "Text Input [Dream]": {"input": {"required": {"value": ["STRING", {"default": "", "multiline": true}]}}, "input_order": {"required": ["value"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Input [Dream]", "display_name": "\u270d Text Input", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils", "output_node": false}, "Big Latent Switch [Dream]": {"input": {"required": {"select": ["INT", {"default": 0, "min": 0, "max": 9}], "on_missing": [["previous", "next"]]}, "optional": {"input_0": ["LATENT"], "input_1": ["LATENT"], "input_2": ["LATENT"], "input_3": ["LATENT"], "input_4": ["LATENT"], "input_5": ["LATENT"], "input_6": ["LATENT"], "input_7": ["LATENT"], "input_8": ["LATENT"], "input_9": ["LATENT"]}}, "input_order": {"required": ["select", "on_missing"], "optional": ["input_0", "input_1", "input_2", "input_3", "input_4", "input_5", "input_6", "input_7", "input_8", "input_9"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["selected"], "name": "Big Latent Switch [Dream]", "display_name": "\u2b46 Big Latent Switch", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils/\u2b46 switches", "output_node": false}, "Frame Count Calculator [Dream]": {"input": {"required": {"hours": ["INT", {"min": 0, "default": 0, "max": 23}], "minutes": ["INT", {"min": 0, "default": 0, "max": 59}], "seconds": ["INT", {"min": 0, "default": 10, "max": 59}], "milliseconds": ["INT", {"min": 0, "default": 0, "max": 59}], "frames_per_second": ["INT", {"min": 1, "default": 30}]}}, "input_order": {"required": ["hours", "minutes", "seconds", "milliseconds", "frames_per_second"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["TOTAL"], "name": "Frame Count Calculator [Dream]", "display_name": "\u231b Frame Count Calculator", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation", "output_node": false}, "Big Image Switch [Dream]": {"input": {"required": {"select": ["INT", {"default": 0, "min": 0, "max": 9}], "on_missing": [["previous", "next"]]}, "optional": {"input_0": ["IMAGE"], "input_1": ["IMAGE"], "input_2": ["IMAGE"], "input_3": ["IMAGE"], "input_4": ["IMAGE"], "input_5": ["IMAGE"], "input_6": ["IMAGE"], "input_7": ["IMAGE"], "input_8": ["IMAGE"], "input_9": ["IMAGE"]}}, "input_order": {"required": ["select", "on_missing"], "optional": ["input_0", "input_1", "input_2", "input_3", "input_4", "input_5", "input_6", "input_7", "input_8", "input_9"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["selected"], "name": "Big Image Switch [Dream]", "display_name": "\u2b46 Big Image Switch", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils/\u2b46 switches", "output_node": false}, "Big Text Switch [Dream]": {"input": {"required": {"select": ["INT", {"default": 0, "min": 0, "max": 9}], "on_missing": [["previous", "next"]]}, "optional": {"input_0": ["STRING", {"default": "\u2b46", "forceInput": true}], "input_1": ["STRING", {"default": "\u2b46", "forceInput": true}], "input_2": ["STRING", {"default": "\u2b46", "forceInput": true}], "input_3": ["STRING", {"default": "\u2b46", "forceInput": true}], "input_4": ["STRING", {"default": "\u2b46", "forceInput": true}], "input_5": ["STRING", {"default": "\u2b46", "forceInput": true}], "input_6": ["STRING", {"default": "\u2b46", "forceInput": true}], "input_7": ["STRING", {"default": "\u2b46", "forceInput": true}], "input_8": ["STRING", {"default": "\u2b46", "forceInput": true}], "input_9": ["STRING", {"default": "\u2b46", "forceInput": true}]}}, "input_order": {"required": ["select", "on_missing"], "optional": ["input_0", "input_1", "input_2", "input_3", "input_4", "input_5", "input_6", "input_7", "input_8", "input_9"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["selected"], "name": "Big Text Switch [Dream]", "display_name": "\u2b46 Big Text Switch", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils/\u2b46 switches", "output_node": false}, "Big Float Switch [Dream]": {"input": {"required": {"select": ["INT", {"default": 0, "min": 0, "max": 9}], "on_missing": [["previous", "next"]]}, "optional": {"input_0": ["FLOAT", {"default": 9.223372036854776e+18, "forceInput": true}], "input_1": ["FLOAT", {"default": 9.223372036854776e+18, "forceInput": true}], "input_2": ["FLOAT", {"default": 9.223372036854776e+18, "forceInput": true}], "input_3": ["FLOAT", {"default": 9.223372036854776e+18, "forceInput": true}], "input_4": ["FLOAT", {"default": 9.223372036854776e+18, "forceInput": true}], "input_5": ["FLOAT", {"default": 9.223372036854776e+18, "forceInput": true}], "input_6": ["FLOAT", {"default": 9.223372036854776e+18, "forceInput": true}], "input_7": ["FLOAT", {"default": 9.223372036854776e+18, "forceInput": true}], "input_8": ["FLOAT", {"default": 9.223372036854776e+18, "forceInput": true}], "input_9": ["FLOAT", {"default": 9.223372036854776e+18, "forceInput": true}]}}, "input_order": {"required": ["select", "on_missing"], "optional": ["input_0", "input_1", "input_2", "input_3", "input_4", "input_5", "input_6", "input_7", "input_8", "input_9"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["selected"], "name": "Big Float Switch [Dream]", "display_name": "\u2b46 Big Float Switch", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils/\u2b46 switches", "output_node": false}, "Big Int Switch [Dream]": {"input": {"required": {"select": ["INT", {"default": 0, "min": 0, "max": 9}], "on_missing": [["previous", "next"]]}, "optional": {"input_0": ["INT", {"default": 9223372036854775807, "forceInput": true}], "input_1": ["INT", {"default": 9223372036854775807, "forceInput": true}], "input_2": ["INT", {"default": 9223372036854775807, "forceInput": true}], "input_3": ["INT", {"default": 9223372036854775807, "forceInput": true}], "input_4": ["INT", {"default": 9223372036854775807, "forceInput": true}], "input_5": ["INT", {"default": 9223372036854775807, "forceInput": true}], "input_6": ["INT", {"default": 9223372036854775807, "forceInput": true}], "input_7": ["INT", {"default": 9223372036854775807, "forceInput": true}], "input_8": ["INT", {"default": 9223372036854775807, "forceInput": true}], "input_9": ["INT", {"default": 9223372036854775807, "forceInput": true}]}}, "input_order": {"required": ["select", "on_missing"], "optional": ["input_0", "input_1", "input_2", "input_3", "input_4", "input_5", "input_6", "input_7", "input_8", "input_9"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["selected"], "name": "Big Int Switch [Dream]", "display_name": "\u2b46 Big Int Switch", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils/\u2b46 switches", "output_node": false}, "Big Palette Switch [Dream]": {"input": {"required": {"select": ["INT", {"default": 0, "min": 0, "max": 9}], "on_missing": [["previous", "next"]]}, "optional": {"input_0": ["RGB_PALETTE"], "input_1": ["RGB_PALETTE"], "input_2": ["RGB_PALETTE"], "input_3": ["RGB_PALETTE"], "input_4": ["RGB_PALETTE"], "input_5": ["RGB_PALETTE"], "input_6": ["RGB_PALETTE"], "input_7": ["RGB_PALETTE"], "input_8": ["RGB_PALETTE"], "input_9": ["RGB_PALETTE"]}}, "input_order": {"required": ["select", "on_missing"], "optional": ["input_0", "input_1", "input_2", "input_3", "input_4", "input_5", "input_6", "input_7", "input_8", "input_9"]}, "output": ["RGB_PALETTE"], "output_is_list": [false], "output_name": ["selected"], "name": "Big Palette Switch [Dream]", "display_name": "\u2b46 Big Palette Switch", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils/\u2b46 switches", "output_node": false}, "Build Prompt [Dream]": {"input": {"optional": {"partial_prompt": ["PARTIAL_PROMPT"]}, "required": {"added_prompt": ["STRING", {"default": "", "multiline": true}], "weight": ["FLOAT", {"default": 1.0}]}}, "input_order": {"optional": ["partial_prompt"], "required": ["added_prompt", "weight"]}, "output": ["PARTIAL_PROMPT"], "output_is_list": [false], "output_name": ["partial_prompt"], "name": "Build Prompt [Dream]", "display_name": "\u2696 Build Prompt", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\u262f conditioning", "output_node": false}, "Finalize Prompt [Dream]": {"input": {"required": {"partial_prompt": ["PARTIAL_PROMPT"], "adjustment": [["raw", "by_abs_max", "by_abs_sum"]], "clamp": ["FLOAT", {"default": 2.0, "min": 0.1, "step": 0.1}], "adjustment_reference": ["FLOAT", {"default": 1.0, "min": 0.1}]}}, "input_order": {"required": ["partial_prompt", "adjustment", "clamp", "adjustment_reference"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "Finalize Prompt [Dream]", "display_name": "\ud83d\uddeb Finalize Prompt", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\u262f conditioning", "output_node": false}, "Frame Counter Info [Dream]": {"input": {"required": {"frame_counter": ["FRAME_COUNTER"]}}, "input_order": {"required": ["frame_counter"]}, "output": ["INT", "INT", "BOOLEAN", "BOOLEAN", "FLOAT", "FLOAT", "FLOAT", "FLOAT"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["frames_completed", "total_frames", "first_frame", "last_frame", "elapsed_seconds", "remaining_seconds", "total_seconds", "completion"], "name": "Frame Counter Info [Dream]", "display_name": "\u268b Frame Counter Info", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation", "output_node": false}, "Boolean To Float [Dream]": {"input": {"required": {"boolean": ["BOOLEAN", {"default": false}], "on_true": ["FLOAT", {"default": 1.0}], "on_false": ["FLOAT", {"default": 0.0}]}}, "input_order": {"required": ["boolean", "on_true", "on_false"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["result"], "name": "Boolean To Float [Dream]", "display_name": "\u2b16 Boolean To Float", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils/\u2b46 switches", "output_node": false}, "Boolean To Int [Dream]": {"input": {"required": {"boolean": ["BOOLEAN", {"default": false}], "on_true": ["INT", {"default": 1}], "on_false": ["INT", {"default": 0}]}}, "input_order": {"required": ["boolean", "on_true", "on_false"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["result"], "name": "Boolean To Int [Dream]", "display_name": "\u2b16 Boolean To Int", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils/\u2b46 switches", "output_node": false}, "Saw Curve [Dream]": {"input": {"required": {"frame_counter": ["FRAME_COUNTER"], "max_value": ["FLOAT", {"default": 1.0, "multiline": false}], "min_value": ["FLOAT", {"default": 0.0, "multiline": false}], "periodicity_seconds": ["FLOAT", {"default": 10.0, "multiline": false, "min": 0.01}], "phase": ["FLOAT", {"default": 0.0, "multiline": false, "min": -1, "max": 1}]}}, "input_order": {"required": ["frame_counter", "max_value", "min_value", "periodicity_seconds", "phase"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "Saw Curve [Dream]", "display_name": "\ud83d\udcc8 Saw Curve", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udcc8 curves", "output_node": false}, "Triangle Curve [Dream]": {"input": {"required": {"frame_counter": ["FRAME_COUNTER"], "max_value": ["FLOAT", {"default": 1.0, "multiline": false}], "min_value": ["FLOAT", {"default": 0.0, "multiline": false}], "periodicity_seconds": ["FLOAT", {"default": 10.0, "multiline": false, "min": 0.01}], "phase": ["FLOAT", {"default": 0.0, "multiline": false, "min": -1, "max": 1}]}}, "input_order": {"required": ["frame_counter", "max_value", "min_value", "periodicity_seconds", "phase"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "Triangle Curve [Dream]", "display_name": "\ud83d\udcc8 Triangle Curve", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udcc8 curves", "output_node": false}, "Triangle Event Curve [Dream]": {"input": {"required": {"frame_counter": ["FRAME_COUNTER"], "max_value": ["FLOAT", {"default": 1.0, "multiline": false}], "min_value": ["FLOAT", {"default": 0.0, "multiline": false}], "width_seconds": ["FLOAT", {"default": 1.0, "multiline": false, "min": 0.1}], "center_seconds": ["FLOAT", {"default": 10.0, "multiline": false, "min": 0.0}]}}, "input_order": {"required": ["frame_counter", "max_value", "min_value", "width_seconds", "center_seconds"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "Triangle Event Curve [Dream]", "display_name": "\ud83d\udcc8 Triangle Event Curve", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udcc8 curves", "output_node": false}, "Smooth Event Curve [Dream]": {"input": {"required": {"frame_counter": ["FRAME_COUNTER"], "max_value": ["FLOAT", {"default": 1.0, "multiline": false}], "min_value": ["FLOAT", {"default": 0.0, "multiline": false}], "width_seconds": ["FLOAT", {"default": 1.0, "multiline": false, "min": 0.1}], "center_seconds": ["FLOAT", {"default": 10.0, "multiline": false, "min": 0.0}]}}, "input_order": {"required": ["frame_counter", "max_value", "min_value", "width_seconds", "center_seconds"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "Smooth Event Curve [Dream]", "display_name": "\ud83d\udcc8 Smooth Event Curve", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udcc8 curves", "output_node": false}, "Calculation [Dream]": {"input": {"required": {"expression": ["STRING", {"default": "a + b + c - (r * s * t)", "multiline": true}]}, "optional": {"a_int": ["INT", {"default": 0, "multiline": false}], "b_int": ["INT", {"default": 0, "multiline": false}], "c_int": ["INT", {"default": 0, "multiline": false}], "r_float": ["FLOAT", {"default": 0.0, "multiline": false}], "s_float": ["FLOAT", {"default": 0.0, "multiline": false}], "t_float": ["FLOAT", {"default": 0.0, "multiline": false}]}}, "input_order": {"required": ["expression"], "optional": ["a_int", "b_int", "c_int", "r_float", "s_float", "t_float"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "Calculation [Dream]", "display_name": "\ud83d\udda9 Calculation", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils", "output_node": false}, "Image Color Shift [Dream]": {"input": {"required": {"image": ["IMAGE"], "red_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0}], "green_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0}], "blue_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0}]}}, "input_order": {"required": ["image", "red_multiplier", "green_multiplier", "blue_multiplier"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Color Shift [Dream]", "display_name": "\ud83d\uddbc Image Color Shift", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa8 color", "output_node": false}, "Compare Palettes [Dream]": {"input": {"required": {"a": ["RGB_PALETTE"], "b": ["RGB_PALETTE"]}}, "input_order": {"required": ["a", "b"]}, "output": ["FLOAT", "FLOAT", "FLOAT", "FLOAT"], "output_is_list": [false, false, false, false], "output_name": ["brightness_multiplier", "contrast_multiplier", "red_multiplier", "green_multiplier", "blue_multiplier"], "name": "Compare Palettes [Dream]", "display_name": "\ud83d\udcca Compare Palettes", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa8 color", "output_node": false}, "Image Contrast Adjustment [Dream]": {"input": {"required": {"image": ["IMAGE"], "factor": ["FLOAT", {"default": 1.0, "min": 0.0}]}}, "input_order": {"required": ["image", "factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Contrast Adjustment [Dream]", "display_name": "\u25d0 Image Contrast Adjustment", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa8 color", "output_node": false}, "Image Brightness Adjustment [Dream]": {"input": {"required": {"image": ["IMAGE"], "factor": ["FLOAT", {"default": 1.0, "min": 0.0}]}}, "input_order": {"required": ["image", "factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Brightness Adjustment [Dream]", "display_name": "\u263c Image Brightness Adjustment", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa8 color", "output_node": false}, "Log File [Dream]": {"input": {"required": {"frame_counter": ["FRAME_COUNTER"], "log_directory": ["STRING", {"default": "/home/ubuntu/Playbook/ComfyUI/output"}], "log_filename": ["STRING", {"default": "dreamlog.txt"}], "stdout": ["BOOLEAN", {"default": true}], "active": ["BOOLEAN", {"default": true}], "clock_has_24_hours": ["BOOLEAN", {"default": true}]}, "optional": {"entry_0": ["LOG_ENTRY"], "entry_1": ["LOG_ENTRY"], "entry_2": ["LOG_ENTRY"], "entry_3": ["LOG_ENTRY"], "entry_4": ["LOG_ENTRY"], "entry_5": ["LOG_ENTRY"], "entry_6": ["LOG_ENTRY"], "entry_7": ["LOG_ENTRY"]}}, "input_order": {"required": ["frame_counter", "log_directory", "log_filename", "stdout", "active", "clock_has_24_hours"], "optional": ["entry_0", "entry_1", "entry_2", "entry_3", "entry_4", "entry_5", "entry_6", "entry_7"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Log File [Dream]", "display_name": "\ud83d\uddce Log File", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils", "output_node": true}, "Laboratory [Dream]": {"input": {"required": {"frame_counter": ["FRAME_COUNTER"], "key": ["STRING", {"default": "Random value 983977"}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "renew_policy": [["every frame", "first frame"]], "min_value": ["FLOAT", {"default": 0.0}], "max_value": ["FLOAT", {"default": 1.0}], "mode": [["random uniform", "random bell", "ladder", "random walk"]]}, "optional": {"step_size": ["FLOAT", {"default": 0.1}]}}, "input_order": {"required": ["frame_counter", "key", "seed", "renew_policy", "min_value", "max_value", "mode"], "optional": ["step_size"]}, "output": ["FLOAT", "INT", "LOG_ENTRY"], "output_is_list": [false, false, false], "output_name": ["FLOAT", "INT", "log_entry"], "name": "Laboratory [Dream]", "display_name": "\ud83e\uddea Laboratory", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils", "output_node": false}, "String to Log Entry [Dream]": {"input": {"required": {"text": ["STRING", {"default": ""}]}, "optional": {"label": ["STRING", {"default": ""}]}}, "input_order": {"required": ["text"], "optional": ["label"]}, "output": ["LOG_ENTRY"], "output_is_list": [false], "output_name": ["log_entry"], "name": "String to Log Entry [Dream]", "display_name": "\ud83d\uddce String to Log Entry", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils", "output_node": true}, "Int to Log Entry [Dream]": {"input": {"required": {"value": ["INT", {"default": 0}], "label": ["STRING", {"default": ""}]}}, "input_order": {"required": ["value", "label"]}, "output": ["LOG_ENTRY"], "output_is_list": [false], "output_name": ["log_entry"], "name": "Int to Log Entry [Dream]", "display_name": "\ud83d\uddce Int to Log Entry", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils", "output_node": false}, "Float to Log Entry [Dream]": {"input": {"required": {"value": ["FLOAT", {"default": 0}], "label": ["STRING", {"default": ""}]}}, "input_order": {"required": ["value", "label"]}, "output": ["LOG_ENTRY"], "output_is_list": [false], "output_name": ["log_entry"], "name": "Float to Log Entry [Dream]", "display_name": "\ud83d\uddce Float to Log Entry", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils", "output_node": false}, "Log Entry Joiner [Dream]": {"input": {"optional": {"entry_0": ["LOG_ENTRY"], "entry_1": ["LOG_ENTRY"], "entry_2": ["LOG_ENTRY"], "entry_3": ["LOG_ENTRY"]}}, "input_order": {"optional": ["entry_0", "entry_1", "entry_2", "entry_3"]}, "output": ["LOG_ENTRY"], "output_is_list": [false], "output_name": ["log_entry"], "name": "Log Entry Joiner [Dream]", "display_name": "\ud83d\uddce Log Entry Joiner", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils", "output_node": false}, "String Tokenizer [Dream]": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true}], "separator": ["STRING", {"default": ","}], "selected": ["INT", {"default": 0, "min": 0}]}}, "input_order": {"required": ["text", "separator", "selected"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["token"], "name": "String Tokenizer [Dream]", "display_name": "\ud83e\ude99 String Tokenizer", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83d\udee0 utils", "output_node": true}, "WAV Curve [Dream]": {"input": {"required": {"frame_counter": ["FRAME_COUNTER"], "wav_path": ["STRING", {"default": "audio.wav"}], "scale": ["FLOAT", {"default": 1.0, "multiline": false}]}}, "input_order": {"required": ["frame_counter", "wav_path", "scale"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["FLOAT", "INT"], "name": "WAV Curve [Dream]", "display_name": "\u223f WAV Curve", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udcc8 curves", "output_node": false}, "Frame Counter Time Offset [Dream]": {"input": {"required": {"frame_counter": ["FRAME_COUNTER"], "offset_seconds": ["FLOAT", {"default": 0.0}]}}, "input_order": {"required": ["frame_counter", "offset_seconds"]}, "output": ["FRAME_COUNTER"], "output_is_list": [false], "output_name": ["frame_counter"], "name": "Frame Counter Time Offset [Dream]", "display_name": "\u00b1 Frame Counter Time Offset", "description": "", "python_module": "custom_nodes.comfyui-dream-project", "category": "\u2728 Dream/\ud83c\udfa5 animation", "output_node": false}, "ComfyUIDeployExternalLora": {"input": {"required": {"input_id": ["STRING", {"multiline": false, "default": "input_lora"}]}, "optional": {"default_lora_name": [["AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"]], "lora_save_name": ["STRING", {"multiline": false, "default": ""}], "display_name": ["STRING", {"multiline": false, "default": ""}], "description": ["STRING", {"multiline": true, "default": ""}], "lora_url": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["input_id"], "optional": ["default_lora_name", "lora_save_name", "display_name", "description", "lora_url"]}, "output": ["*"], "output_is_list": [false], "output_name": ["path"], "name": "ComfyUIDeployExternalLora", "display_name": "External Lora (ComfyUI Deploy)", "description": "", "python_module": "custom_nodes.comfyui-deploy", "category": "deploy", "output_node": false}, "ComfyUIDeployExternalNumber": {"input": {"required": {"input_id": ["STRING", {"multiline": false, "default": "input_number"}]}, "optional": {"default_value": ["FLOAT", {"multiline": true, "display": "number", "default": 0, "min": -2147483647, "max": 2147483647, "step": 0.01}], "display_name": ["STRING", {"multiline": false, "default": ""}], "description": ["STRING", {"multiline": true, "default": ""}]}}, "input_order": {"required": ["input_id"], "optional": ["default_value", "display_name", "description"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["value"], "name": "ComfyUIDeployExternalNumber", "display_name": "External Number (ComfyUI Deploy)", "description": "", "python_module": "custom_nodes.comfyui-deploy", "category": "number", "output_node": false}, "ComfyUIDeployExternalVid": {"input": {"required": {"input_id": ["STRING", {"multiline": false, "default": "input_video"}]}, "optional": {"meta_batch": ["VHS_BatchManager"], "default_value": [["AnimateDiff_00037.mp4", "Playbook__00314.mp4"]]}}, "input_order": {"required": ["input_id"], "optional": ["meta_batch", "default_value"]}, "output": ["STRING"], "output_is_list": [false], "output_name": "video", "name": "ComfyUIDeployExternalVid", "display_name": "External Video (ComfyUI Deploy) path", "description": "", "python_module": "custom_nodes.comfyui-deploy", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "output_node": false}, "ComfyUIDeployExternalVideo": {"input": {"required": {"input_id": ["STRING", {"multiline": false, "default": "input_video"}], "force_rate": ["INT", {"default": 0, "min": 0, "max": 60, "step": 1}], "force_size": [["Disabled", "Custom Height", "Custom Width", "Custom", "256x?", "?x256", "256x256", "512x?", "?x512", "512x512"]], "custom_width": ["INT", {"default": 512, "min": 0, "max": 8192, "step": 8}], "custom_height": ["INT", {"default": 512, "min": 0, "max": 8192, "step": 8}], "frame_load_cap": ["INT", {"default": 0, "min": 0, "max": 9007199254740991, "step": 1}], "skip_first_frames": ["INT", {"default": 0, "min": 0, "max": 9007199254740991, "step": 1}], "select_every_nth": ["INT", {"default": 1, "min": 1, "max": 9007199254740991, "step": 1}]}, "optional": {"meta_batch": ["VHS_BatchManager"], "vae": ["VAE"], "default_video": [["AnimateDiff_00037.mp4", "Playbook__00314.mp4"]], "display_name": ["STRING", {"multiline": false, "default": ""}], "description": ["STRING", {"multiline": true, "default": ""}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["input_id", "force_rate", "force_size", "custom_width", "custom_height", "frame_load_cap", "skip_first_frames", "select_every_nth"], "optional": ["meta_batch", "vae", "default_video", "display_name", "description"], "hidden": ["unique_id"]}, "output": ["IMAGE", "INT", "AUDIO", "VHS_VIDEOINFO", "LATENT"], "output_is_list": [false, false, false, false, false], "output_name": ["IMAGE", "frame_count", "audio", "video_info", "LATENT"], "name": "ComfyUIDeployExternalVideo", "display_name": "External Video (ComfyUI Deploy x VHS)", "description": "", "python_module": "custom_nodes.comfyui-deploy", "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62", "output_node": false}, "ComfyUIDeployExternalText": {"input": {"required": {"input_id": ["STRING", {"multiline": false, "default": "input_text"}]}, "optional": {"default_value": ["STRING", {"multiline": true, "default": ""}], "display_name": ["STRING", {"multiline": false, "default": ""}], "description": ["STRING", {"multiline": true, "default": ""}]}}, "input_order": {"required": ["input_id"], "optional": ["default_value", "display_name", "description"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "ComfyUIDeployExternalText", "display_name": "External Text (ComfyUI Deploy)", "description": "", "python_module": "custom_nodes.comfyui-deploy", "category": "text", "output_node": false}, "ComfyDeployWebscoketImageInput": {"input": {"required": {"input_id": ["STRING", {"multiline": false, "default": "input_id"}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"default_value": ["IMAGE"], "client_id": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["input_id", "seed"], "optional": ["default_value", "client_id"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "ComfyDeployWebscoketImageInput", "display_name": "Image Websocket Input (ComfyDeploy)", "description": "", "python_module": "custom_nodes.comfyui-deploy", "category": "sd", "output_node": true}, "ComfyUIDeployExternalImageAlpha": {"input": {"required": {"input_id": ["STRING", {"multiline": false, "default": "input_image"}]}, "optional": {"default_value": ["IMAGE"], "display_name": ["STRING", {"multiline": false, "default": ""}], "description": ["STRING", {"multiline": true, "default": ""}]}}, "input_order": {"required": ["input_id"], "optional": ["default_value", "display_name", "description"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "ComfyUIDeployExternalImageAlpha", "display_name": "External Image Alpha (ComfyUI Deploy)", "description": "", "python_module": "custom_nodes.comfyui-deploy", "category": "image", "output_node": false}, "ComfyUIDeployExternalImage": {"input": {"required": {"input_id": ["STRING", {"multiline": false, "default": "input_image"}]}, "optional": {"default_value": ["IMAGE"], "display_name": ["STRING", {"multiline": false, "default": ""}], "description": ["STRING", {"multiline": true, "default": ""}]}}, "input_order": {"required": ["input_id"], "optional": ["default_value", "display_name", "description"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "ComfyUIDeployExternalImage", "display_name": "External Image (ComfyUI Deploy)", "description": "", "python_module": "custom_nodes.comfyui-deploy", "category": "image", "output_node": false}, "ComfyUIDeployExternalNumberInt": {"input": {"required": {"input_id": ["STRING", {"multiline": false, "default": "input_number"}]}, "optional": {"default_value": ["INT", {"multiline": true, "display": "number", "min": -2147483647, "max": 2147483647, "default": 0}], "display_name": ["STRING", {"multiline": false, "default": ""}], "description": ["STRING", {"multiline": true, "default": ""}]}}, "input_order": {"required": ["input_id"], "optional": ["default_value", "display_name", "description"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["value"], "name": "ComfyUIDeployExternalNumberInt", "display_name": "External Number Int (ComfyUI Deploy)", "description": "", "python_module": "custom_nodes.comfyui-deploy", "category": "number", "output_node": false}, "ComfyUIDeployExternalFaceModel": {"input": {"required": {"input_id": ["STRING", {"multiline": false, "default": "input_reactor_face_model"}]}, "optional": {"default_face_model_name": ["STRING", {"multiline": false, "default": ""}], "face_model_save_name": ["STRING", {"multiline": false, "default": ""}], "display_name": ["STRING", {"multiline": false, "default": ""}], "description": ["STRING", {"multiline": true, "default": ""}], "face_model_url": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["input_id"], "optional": ["default_face_model_name", "face_model_save_name", "display_name", "description", "face_model_url"]}, "output": ["*"], "output_is_list": [false], "output_name": ["path"], "name": "ComfyUIDeployExternalFaceModel", "display_name": "External Face Model (ComfyUI Deploy)", "description": "", "python_module": "custom_nodes.comfyui-deploy", "category": "deploy", "output_node": false}, "ComfyUIDeployExternalTextAny": {"input": {"required": {"input_id": ["STRING", {"multiline": false, "default": "input_text"}]}, "optional": {"default_value": ["STRING", {"multiline": true, "default": ""}], "display_name": ["STRING", {"multiline": false, "default": ""}], "description": ["STRING", {"multiline": true, "default": ""}]}}, "input_order": {"required": ["input_id"], "optional": ["default_value", "display_name", "description"]}, "output": ["*"], "output_is_list": [false], "output_name": ["text"], "name": "ComfyUIDeployExternalTextAny", "display_name": "External Text Any (ComfyUI Deploy)", "description": "", "python_module": "custom_nodes.comfyui-deploy", "category": "text", "output_node": false}, "ComfyUIDeployModelList": {"input": {"required": {"model": [["diffusion_models/IC-Light/iclight_sd15_fbc.safetensors", "vae/vae-ft-mse-840000-ema-pruned.ckpt", "vae/ae.safetensors", "vae/sdxl.vae.safetensors", "inpaint/MAT_Places512_G_fp16 (1).safetensors", "facerestore_models/GPEN-BFR-512.onnx", "facerestore_models/GFPGANv1.4.pth", "facerestore_models/GPEN-BFR-1024.onnx", "facerestore_models/GFPGANv1.3.pth", "facerestore_models/GPEN-BFR-2048.onnx", "facerestore_models/codeformer-v0.1.0.pth", "diffusers/Marigold/vae/diffusion_pytorch_model.safetensors", "diffusers/Marigold/text_encoder/model.safetensors", "diffusers/Marigold/unet/diffusion_pytorch_model.safetensors", "onnx/isnet-general-use.onnx", "clip_vision/sdxl_clip.safetensors", "clip_vision/CLIP-ViT-bigG-14-laion2B-39B-b160k.safetensors", "clip_vision/CLIP-ViT-H-14-laion2B-s32B-b79K.safetensors", "animatediff_models/hotshotxl_mm_v1.pth", "animatediff_models/v3_sd15_mm.ckpt", "animatediff_models/AnimateLCM_sd15_t2v.ckpt", "animatediff_models/hsxl_temporal_layers.f16.safetensors", "xlabs/ipadapters/flux-ip-adapter.safetensors", "xlabs/loras/flux_spirited_away.safetensors", "xlabs/loras/furry_lora.safetensors", "xlabs/loras/art_nouveau_flux_lora_v1.safetensors", "xlabs/controlnets/flux-hed-controlnet.safetensors", "xlabs/controlnets/flux-depth-controlnet_v2.safetensors", "xlabs/controlnets/flux-hed-controlnet-v3.safetensors", "xlabs/controlnets/flux-canny-controlnet_v2.safetensors", "upscale_models/ldsr/last.ckpt", "upscale_models/ESRGAN_4x.pth", "upscale_models/RealESRGAN_x2.pth", "upscale_models/4x-UltraSharp.pth", "upscale_models/RealESRGAN_x4.pth", "clip/t5xxl_fp8_e4m3fn.safetensors", "clip/t5xxl_fp16.safetensors", "clip/clip_l.safetensors", "ipadapter/ip-adapter_sd15.safetensors", "ipadapter/ip-adapter-plus_sdxl_vit-h.safetensors", "ipadapter/ip-adapter_sdxl.safetensors", "ipadapter/ip-adapter-plus_sd15.safetensors", "BiRefNet/swin_base_patch4_window12_384_22kto1k.pth", "BiRefNet/swin_large_patch4_window12_384_22kto1k.pth", "BiRefNet/BiRefNet-DIS_ep580.pth", "BiRefNet/BiRefNet-ep480.pth", "BiRefNet/pvt_v2_b5.pth", "BiRefNet/pvt_v2_b2.pth", "loras/lcm/SD1.5/pytorch_lora_weights.safetensors", "loras/SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "loras/Retro_Comic_Flux_v1_renderartist.safetensors", "loras/Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "loras/AnimateLCM_sd15_t2v_lora.safetensors", "loras/add_detail.safetensors", "loras/more_details.safetensors", "loras/flux_spirited_away.safetensors", "loras/Kodak Motion Picture Film Style v5_2.safetensors", "loras/sdxl_lightning_4step_lora.safetensors", "loras/flux_realism_lora.safetensors", "loras/RW_PS1v1.safetensors", "loras/Bending_Illustartion-000014.safetensors", "loras/RW_pixelart_XL_v1.safetensors", "loras/anime_lora_comfy_converted.safetensors", "loras/house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "loras/moonies_lora.safetensors", "loras/Lego_XL_v2.1.safetensors", "loras/Bending_Illustartion-000007.safetensors", "loras/xl_more_art-full_v1.safetensors", "loras/zyd232_Ink_Style_Flux1D_v1_1.safetensors", "loras/ps1_style_SDXL_v2.safetensors", "loras/zavy-cntrst-sdxl.safetensors", "loras/furry_lora.safetensors", "loras/v3_sd15_adapter.ckpt", "loras/CPA.safetensors", "loras/PixarXL.safetensors", "loras/Bending_Illustartion-000010.safetensors", "loras/disney_lora_comfy_converted.safetensors", "loras/pieter.safetensors", "loras/legody-v10.safetensors", "loras/moonies&glorpies_lora.safetensors", "unet/IC-Light/iclight_sd15_fc.safetensors", "unet/flux1-dev-fp8.safetensors", "unet/flux1-dev.safetensors", "controlnet/depth-zoe-xl-v1.0-controlnet.safetensors", "controlnet/canny-xl1.0.safetensors", "controlnet/sai_xl_canny_256lora.safetensors", "controlnet/v3_sd15_sparsectrl_rgb.ckpt", "controlnet/sai_xl_depth_256lora.safetensors", "controlnet/mistoLine_fp16.safetensors", "controlnet/t2iadapter_canny_sd14v1.pth", "controlnet/control_sd15_depth.pth", "controlnet/jasperai_flux_depth_controlnet.safetensors", "controlnet/control_sd15_canny.pth", "controlnet/flux-depth-controlnet-v3.safetensors", "controlnet/canny-sdxl-1.0.safetensors", "controlnet/control_sd15_normal.pth", "controlnet/xinsir_depth.safetensors", "controlnet/jasperai_flux_surface_normals_controlnet.safetensors", "controlnet/diffusers_xl_depth_full.safetensors", "controlnet/t2i-adapter-depth.safetensors", "controlnet/t2i-adapter-canny.safetensors", "controlnet/flux-canny-controlnet-v3.safetensors", "controlnet/xinsir_canny.safetensors", "controlnet/flux-controlnet-union.safetensors", "controlnet/depth-sdxl-1.0.safetensors", "controlnet/controlnet11Models_tileE.safetensors", "controlnet/diffusers_xl_canny_full.safetensors", "controlnet/t2iadapter_depth_sd14v1.pth", "sams/sam_vit_l_0b3195.pth", "sams/sam_vit_h_4b8939.pth", "sams/sam_vit_b_01ec64.pth", "insightface/models/buffalo_l/2d106det.onnx", "insightface/models/buffalo_l/1k3d68.onnx", "insightface/models/buffalo_l/genderage.onnx", "insightface/models/buffalo_l/w600k_r50.onnx", "insightface/models/buffalo_l/det_10g.onnx", "insightface/inswapper_128.onnx", "checkpoints/flat2DAnimerge_v45Sharp.safetensors", "checkpoints/realvisxlV50_v50LightningBakedvae.safetensors", "checkpoints/dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "checkpoints/photon_v1.safetensors", "checkpoints/photonLCM_v10.safetensors", "checkpoints/SUPIR-v0Q.ckpt", "checkpoints/juggernautXL_juggXIByRundiffusion.safetensors", "checkpoints/fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "checkpoints/disneyPixarCartoon_A.safetensors", "checkpoints/disneyPixarCartoon_v10.safetensors", "checkpoints/juggernaut_reborn.safetensors", "checkpoints/dreamshaperXL_alpha2Xl10.safetensors", "checkpoints/turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "checkpoints/epicrealism_naturalSinRC1VAE.safetensors", "checkpoints/SUPIR-v0F.ckpt", "checkpoints/sdXL_v10VAEFix.safetensors", "checkpoints/realisticVisionV60B1_v51HyperVAE.safetensors", "checkpoints/flux1-dev.safetensors", "checkpoints/juggernautXL_v9Rdphoto2Lightning.safetensors", "checkpoints/dreamshaper_8.safetensors", "checkpoints/CRM.pth", "checkpoints/wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]]}}, "input_order": {"required": ["model"]}, "output": ["*"], "output_is_list": [false], "output_name": ["model"], "name": "ComfyUIDeployModelList", "display_name": "Model List (ComfyUI Deploy)", "description": "", "python_module": "custom_nodes.comfyui-deploy", "category": "model", "output_node": false}, "ComfyDeployWebscoketImageOutput": {"input": {"required": {"output_id": ["STRING", {"multiline": false, "default": "output_id"}], "images": ["IMAGE"], "file_type": [["WEBP", "PNG", "JPEG"]], "quality": ["INT", {"default": 80, "min": 1, "max": 100, "step": 1}]}, "optional": {"client_id": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["output_id", "images", "file_type", "quality"], "optional": ["client_id"]}, "output": [], "output_is_list": [], "output_name": ["text"], "name": "ComfyDeployWebscoketImageOutput", "display_name": "Image Websocket Output (ComfyDeploy)", "description": "", "python_module": "custom_nodes.comfyui-deploy", "category": "output", "output_node": true}, "ComfyUIDeployExternalImageBatch": {"input": {"required": {"input_id": ["STRING", {"multiline": false, "default": "input_images"}], "images": ["STRING", {"multiline": false, "default": "[]"}]}, "optional": {"default_value": ["IMAGE"], "display_name": ["STRING", {"multiline": false, "default": ""}], "description": ["STRING", {"multiline": true, "default": ""}]}}, "input_order": {"required": ["input_id", "images"], "optional": ["default_value", "display_name", "description"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "ComfyUIDeployExternalImageBatch", "display_name": "External Image Batch (ComfyUI Deploy)", "description": "", "python_module": "custom_nodes.comfyui-deploy", "category": "image", "output_node": false}, "ComfyUIDeployExternalNumberSlider": {"input": {"required": {"input_id": ["STRING", {"multiline": false, "default": "input_number_slider"}]}, "optional": {"default_value": ["FLOAT", {"multiline": true, "display": "number", "min": -2147483647, "max": 2147483647, "default": 0.5, "step": 0.01}], "min_value": ["FLOAT", {"multiline": true, "display": "number", "min": -2147483647, "max": 2147483647, "default": 0, "step": 0.01}], "max_value": ["FLOAT", {"multiline": true, "display": "number", "min": -2147483647, "max": 2147483647, "default": 1, "step": 0.01}], "display_name": ["STRING", {"multiline": false, "default": ""}], "description": ["STRING", {"multiline": true, "default": ""}]}}, "input_order": {"required": ["input_id"], "optional": ["default_value", "min_value", "max_value", "display_name", "description"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["value"], "name": "ComfyUIDeployExternalNumberSlider", "display_name": "External Number Slider (ComfyUI Deploy)", "description": "", "python_module": "custom_nodes.comfyui-deploy", "category": "number", "output_node": false}, "ComfyUIDeployExternalBoolean": {"input": {"required": {"input_id": ["STRING", {"multiline": false, "default": "input_bool"}], "default_value": ["BOOLEAN", {"default": false}]}, "optional": {"display_name": ["STRING", {"multiline": false, "default": ""}], "description": ["STRING", {"multiline": true, "default": ""}]}}, "input_order": {"required": ["input_id", "default_value"], "optional": ["display_name", "description"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["bool_value"], "name": "ComfyUIDeployExternalBoolean", "display_name": "External Boolean (ComfyUI Deploy)", "description": "", "python_module": "custom_nodes.comfyui-deploy", "category": "sd", "output_node": false}, "ComfyUIDeployExternalCheckpoint": {"input": {"required": {"input_id": ["STRING", {"multiline": false, "default": "input_checkpoint"}]}, "optional": {"default_value": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]], "display_name": ["STRING", {"multiline": false, "default": ""}], "description": ["STRING", {"multiline": true, "default": ""}]}}, "input_order": {"required": ["input_id"], "optional": ["default_value", "display_name", "description"]}, "output": ["*"], "output_is_list": [false], "output_name": ["path"], "name": "ComfyUIDeployExternalCheckpoint", "display_name": "External Checkpoint (ComfyUI Deploy)", "description": "", "python_module": "custom_nodes.comfyui-deploy", "category": "deploy", "output_node": false}, "DynamicThresholdingSimple": {"input": {"required": {"model": ["MODEL"], "mimic_scale": ["FLOAT", {"default": 7.0, "min": 0.0, "max": 100.0, "step": 0.5}], "threshold_percentile": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "mimic_scale", "threshold_percentile"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "DynamicThresholdingSimple", "display_name": "DynamicThresholdingSimple", "description": "", "python_module": "custom_nodes.sd-dynamic-thresholding", "category": "advanced/mcmonkey", "output_node": false}, "DynamicThresholdingFull": {"input": {"required": {"model": ["MODEL"], "mimic_scale": ["FLOAT", {"default": 7.0, "min": 0.0, "max": 100.0, "step": 0.5}], "threshold_percentile": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "mimic_mode": [["Constant", "Linear Down", "Cosine Down", "Half Cosine Down", "Linear Up", "Cosine Up", "Half Cosine Up", "Power Up", "Power Down", "Linear Repeating", "Cosine Repeating", "Sawtooth"]], "mimic_scale_min": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.5}], "cfg_mode": [["Constant", "Linear Down", "Cosine Down", "Half Cosine Down", "Linear Up", "Cosine Up", "Half Cosine Up", "Power Up", "Power Down", "Linear Repeating", "Cosine Repeating", "Sawtooth"]], "cfg_scale_min": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.5}], "sched_val": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01}], "separate_feature_channels": [["enable", "disable"]], "scaling_startpoint": [["MEAN", "ZERO"]], "variability_measure": [["AD", "STD"]], "interpolate_phi": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "mimic_scale", "threshold_percentile", "mimic_mode", "mimic_scale_min", "cfg_mode", "cfg_scale_min", "sched_val", "separate_feature_channels", "scaling_startpoint", "variability_measure", "interpolate_phi"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "DynamicThresholdingFull", "display_name": "DynamicThresholdingFull", "description": "", "python_module": "custom_nodes.sd-dynamic-thresholding", "category": "advanced/mcmonkey", "output_node": false}, "ChatGPT Simple _O": {"input": {"required": {"prompt": ["STRING", {"multiline": true}], "model": [["@cf/meta/llama-2-7b-chat-int8", "gpt-3.5-turbo"], {"default": "@cf/meta/llama-2-7b-chat-int8"}], "behaviour": [["tags", "description"], {"default": "description"}]}, "optional": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["prompt", "model", "behaviour"], "optional": ["seed"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "ChatGPT Simple _O", "display_name": "ChatGPT Simple _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/OpenAI", "output_node": false}, "ChatGPT compact _O": {"input": {"required": {"prompt": ["STRING", {"multiline": true}], "initMsg": ["STRING", {"multiline": true, "default": "\nact as prompt generator ,i will give you text and you describe an image that match that text in details use gelbooru  tags in your description also describe the high quality of the image, answer with one response only \n"}], "model": [["@cf/meta/llama-2-7b-chat-int8", "gpt-3.5-turbo"], {"default": "gpt-3.5-turbo"}]}, "optional": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["prompt", "initMsg", "model"], "optional": ["seed"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "ChatGPT compact _O", "display_name": "ChatGPT compact _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/OpenAI", "output_node": false}, "load_openAI _O": {"input": {"required": {"base_url": ["STRING", {"multiline": false, "default": "https://openai-cf.realnow.workers.dev/v1"}], "api_key": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["base_url", "api_key"]}, "output": ["CLIENT"], "output_is_list": [false], "output_name": ["CLIENT"], "name": "load_openAI _O", "display_name": "load_openAI _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/OpenAI/Advanced", "output_node": false}, "Chat_Message _O": {"input": {"required": {"role": [["user", "assistant", "system"], {"default": "user"}], "content": ["STRING", {"multiline": true, "default": "\nact as prompt generator ,i will give you text and you describe an image that match that text in details use gelbooru  tags in your description also describe the high quality of the image, answer with one response only \n"}]}}, "input_order": {"required": ["role", "content"]}, "output": ["OPENAI_CHAT_MESSAGES"], "output_is_list": [false], "output_name": ["OPENAI_CHAT_MESSAGES"], "name": "Chat_Message _O", "display_name": "Chat_Message _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/OpenAI/Advanced/ChatGPT", "output_node": false}, "combine_chat_messages _O": {"input": {"required": {"message1": ["OPENAI_CHAT_MESSAGES"], "message2": ["OPENAI_CHAT_MESSAGES"]}}, "input_order": {"required": ["message1", "message2"]}, "output": ["OPENAI_CHAT_MESSAGES"], "output_is_list": [false], "output_name": ["OPENAI_CHAT_MESSAGES"], "name": "combine_chat_messages _O", "display_name": "combine_chat_messages _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/OpenAI/Advanced/ChatGPT", "output_node": false}, "Chat completion _O": {"input": {"required": {"client": ["CLIENT"], "model": [["@cf/meta/llama-2-7b-chat-int8", "gpt-3.5-turbo"], {"default": "gpt-3.5-turbo"}], "messages": ["OPENAI_CHAT_MESSAGES"]}, "optional": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["client", "model", "messages"], "optional": ["seed"]}, "output": ["STRING", "OPENAI_CHAT_COMPLETION"], "output_is_list": [false, false], "output_name": ["STRING", "OPENAI_CHAT_COMPLETION"], "name": "Chat completion _O", "display_name": "Chat completion _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/OpenAI/Advanced/ChatGPT", "output_node": true}, "create image _O": {"input": {"required": {"client": ["CLIENT"], "prompt": ["STRING", {"multiline": true}], "number": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}], "size": [["256x256", "512x512", "1024x1024"], {"default": "256x256"}]}, "optional": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["client", "prompt", "number", "size"], "optional": ["seed"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "create image _O", "display_name": "create image _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/OpenAI/Advanced/Image", "output_node": true}, "variation_image _O": {"input": {"required": {"client": ["CLIENT"], "image": ["IMAGE"], "number": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}], "size": [["256x256", "512x512", "1024x1024"], {"default": "256x256"}]}, "optional": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["client", "image", "number", "size"], "optional": ["seed"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "variation_image _O", "display_name": "variation_image _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/OpenAI/Advanced/Image", "output_node": true}, "LatentUpscaleFactor _O": {"input": {"required": {"samples": ["LATENT"], "upscale_method": [["nearest-exact", "bilinear", "area"]], "WidthFactor": ["FLOAT", {"default": 1.25, "min": 0.0, "max": 10.0, "step": 0.28125}], "HeightFactor": ["FLOAT", {"default": 1.25, "min": 0.0, "max": 10.0, "step": 0.28125}], "crop": [["disabled", "center"]]}}, "input_order": {"required": ["samples", "upscale_method", "WidthFactor", "HeightFactor", "crop"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentUpscaleFactor _O", "display_name": "LatentUpscaleFactor _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/latent", "output_node": false}, "LatentUpscaleFactorSimple _O": {"input": {"required": {"samples": ["LATENT"], "upscale_method": [["nearest-exact", "bilinear", "area"]], "factor": ["FLOAT", {"default": 1.25, "min": 0.0, "max": 10.0, "step": 0.28125}], "crop": [["disabled", "center"]]}}, "input_order": {"required": ["samples", "upscale_method", "factor", "crop"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentUpscaleFactorSimple _O", "display_name": "LatentUpscaleFactorSimple _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/latent", "output_node": false}, "selectLatentFromBatch _O": {"input": {"required": {"samples": ["LATENT"], "index": ["INT", {"default": 0, "min": 0}]}}, "input_order": {"required": ["samples", "index"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "selectLatentFromBatch _O", "display_name": "selectLatentFromBatch _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/latent", "output_node": false}, "RandomNSP _O": {"input": {"required": {"terminology": [["fantasy-creature", "gen-modifier", "adj-beauty", "noun-beauty", "noun-fantasy", "adj-horror", "noun-emote", "noun-horror", "adj-architecture", "nationality", "pop-location", "pop-culture", "site", "style", "hd", "aspect-ratio", "3d-terms", "color-palette", "camera", "camera-manu", "f-stop", "iso-stop", "focal-length", "photo-term", "adj-general", "noun-general", "color", "artist", "identity", "identity-adult", "identity-young", "punk", "hair", "bodyshape", "skin-color", "eyecolor", "fantasy-setting", "details", "portrait-type", "occupation", "celeb", "neg-weight", "landscape-type", "animals", "gender", "gender-ext", "movement", "body-heavy", "body-light", "body-fit", "body-poor", "body-shape", "body-short", "body-tall", "quantity", "scenario-desc", "games", "foods", "rpg-Item", "trippy", "cosmic-star", "cosmic-nebula", "cosmic-galaxy", "cosmic-terms", "flower", "dinosaur", "natl-park", "fruit", "tree", "wh-site", "forest-type", "water", "fish", "artist-botanical", "artist-surreal", "bird", "movie", "movie-director", "comic", "penciller", "album-cover", "band"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["terminology", "seed"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "RandomNSP _O", "display_name": "RandomNSP _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/text/NSP", "output_node": false}, "ConcatRandomNSP_O": {"input": {"required": {"text": ["STRING", {"multiline": false, "defaultBehavior": "input"}], "terminology": [["fantasy-creature", "gen-modifier", "adj-beauty", "noun-beauty", "noun-fantasy", "adj-horror", "noun-emote", "noun-horror", "adj-architecture", "nationality", "pop-location", "pop-culture", "site", "style", "hd", "aspect-ratio", "3d-terms", "color-palette", "camera", "camera-manu", "f-stop", "iso-stop", "focal-length", "photo-term", "adj-general", "noun-general", "color", "artist", "identity", "identity-adult", "identity-young", "punk", "hair", "bodyshape", "skin-color", "eyecolor", "fantasy-setting", "details", "portrait-type", "occupation", "celeb", "neg-weight", "landscape-type", "animals", "gender", "gender-ext", "movement", "body-heavy", "body-light", "body-fit", "body-poor", "body-shape", "body-short", "body-tall", "quantity", "scenario-desc", "games", "foods", "rpg-Item", "trippy", "cosmic-star", "cosmic-nebula", "cosmic-galaxy", "cosmic-terms", "flower", "dinosaur", "natl-park", "fruit", "tree", "wh-site", "forest-type", "water", "fish", "artist-botanical", "artist-surreal", "bird", "movie", "movie-director", "comic", "penciller", "album-cover", "band"]], "separator": ["STRING", {"multiline": false, "default": ","}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["text", "terminology", "separator", "seed"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "ConcatRandomNSP_O", "display_name": "ConcatRandomNSP_O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/text/NSP", "output_node": false}, "Concat Text _O": {"input": {"required": {}, "optional": {"text1": ["STRING", {"multiline": false, "default": "", "defaultBehavior": "input"}], "text2": ["STRING", {"multiline": false, "default": "", "defaultBehavior": "input"}], "text3": ["STRING", {"multiline": false, "default": "", "defaultBehavior": "input"}], "text4": ["STRING", {"multiline": false, "default": "", "defaultBehavior": "input"}], "text5": ["STRING", {"multiline": false, "default": "", "defaultBehavior": "input"}], "text6": ["STRING", {"multiline": false, "default": ""}], "text7": ["STRING", {"multiline": false, "default": ""}], "text8": ["STRING", {"multiline": false, "default": ""}], "text9": ["STRING", {"multiline": false, "default": ""}], "text10": ["STRING", {"multiline": false, "default": ""}], "text11": ["STRING", {"multiline": false, "default": ""}], "text12": ["STRING", {"multiline": false, "default": ""}], "text13": ["STRING", {"multiline": false, "default": ""}], "separator": ["STRING", {"multiline": false, "default": ","}]}}, "input_order": {"required": [], "optional": ["text1", "text2", "text3", "text4", "text5", "text6", "text7", "text8", "text9", "text10", "text11", "text12", "text13", "separator"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Concat Text _O", "display_name": "Concat Text _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/text/operations", "output_node": false}, "QOL Split String": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "text"}]}, "optional": {"delimiter": ["STRING", {"multiline": false, "default": ","}]}}, "input_order": {"required": ["text"], "optional": ["delimiter"]}, "output": ["STRING", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["string_1", "string_2", "string_3", "string_4", "string_5", "string_6", "string_7", "string_8", "string_9", "string_10", "string_11", "string_12", "string_13"], "name": "QOL Split String", "display_name": "QOL Split String", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/text/operations", "output_node": false}, "Trim Text _O": {"input": {"required": {"text": ["STRING", {"multiline": false, "defaultBehavior": "input"}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Trim Text _O", "display_name": "Trim Text _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/text/operations", "output_node": false}, "Replace Text _O": {"input": {"required": {"text": ["STRING", {"multiline": true, "defaultBehavior": "input"}], "old": ["STRING", {"multiline": false}], "new": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["text", "old", "new"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Replace Text _O", "display_name": "Replace Text _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/text/operations", "output_node": false}, "saveTextToFile _O": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": false, "defaultBehavior": "input"}], "filename": ["STRING", {"default": "log.txt", "multiline": false}]}, "optional": {"append": [["true", "false"], {"default": true}]}}, "input_order": {"required": ["text", "filename"], "optional": ["append"]}, "output": [], "output_is_list": [], "output_name": [], "name": "saveTextToFile _O", "display_name": "saveTextToFile _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/text", "output_node": true}, "Text2Image _O": {"input": {"required": {"text": ["STRING", {"multiline": true}], "font": [["COMIC.TTF", "COMICZ.TTF", "Alkatra.ttf", "CALIBRI.TTF", "COMICI.TTF"], {"default": "COMIC.TTF"}], "size": ["INT", {"default": 36, "min": 0, "max": 255, "step": 1}], "font_R": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "font_G": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "font_B": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "font_A": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "background_R": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "background_G": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "background_B": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "background_A": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "width": ["INT", {"default": 128, "min": 0, "step": 1}], "height": ["INT", {"default": 128, "min": 0, "step": 1}], "expand": [["true", "false"], {"default": "true"}], "x": ["INT", {"default": 0, "min": -100, "step": 1}], "y": ["INT", {"default": 0, "min": -100, "step": 1}]}}, "input_order": {"required": ["text", "font", "size", "font_R", "font_G", "font_B", "font_A", "background_R", "background_G", "background_B", "background_A", "width", "height", "expand", "x", "y"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Text2Image _O", "display_name": "Text2Image _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/text", "output_node": false}, "ImageScaleFactor _O": {"input": {"required": {"image": ["IMAGE"], "upscale_method": [["nearest-exact", "bilinear", "area"]], "WidthFactor": ["FLOAT", {"default": 1.25, "min": 0.0, "max": 10.0, "step": 0.28125}], "HeightFactor": ["FLOAT", {"default": 1.25, "min": 0.0, "max": 10.0, "step": 0.28125}], "MulOf46": [["enabled", "disabled"], {"default": "enabled"}], "crop": [["disabled", "center"]]}}, "input_order": {"required": ["image", "upscale_method", "WidthFactor", "HeightFactor", "MulOf46", "crop"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageScaleFactor _O", "display_name": "ImageScaleFactor _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/image", "output_node": false}, "ImageScaleFactorSimple _O": {"input": {"required": {"image": ["IMAGE"], "upscale_method": [["nearest-exact", "bilinear", "area"]], "Factor": ["FLOAT", {"default": 1.25, "min": 0.0, "max": 10.0, "step": 0.28125}], "MulOf46": [["enabled", "disabled"], {"default": "enabled"}], "crop": [["disabled", "center"]]}}, "input_order": {"required": ["image", "upscale_method", "Factor", "MulOf46", "crop"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageScaleFactorSimple _O", "display_name": "ImageScaleFactorSimple _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/image", "output_node": false}, "Equation1param _O": {"input": {"required": {"x": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 18446744073709551615, "defaultBehavior": "input"}], "equation": ["STRING", {"multiline": true, "default": "x*1"}]}}, "input_order": {"required": ["x", "equation"]}, "output": ["FLOAT", "int"], "output_is_list": [false, false], "output_name": ["FLOAT", "int"], "name": "Equation1param _O", "display_name": "Equation1param _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/numbers", "output_node": false}, "Equation2params _O": {"input": {"required": {"x": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 18446744073709551615, "defaultBehavior": "input"}], "y": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 18446744073709551615, "defaultBehavior": "input"}], "equation": ["STRING", {"multiline": true, "default": "x+y"}]}, "optional": {"equation_2": ["STRING", {"multiline": true, "default": "x+y"}]}}, "input_order": {"required": ["x", "y", "equation"], "optional": ["equation_2"]}, "output": ["FLOAT", "INT", "FLOAT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["FLOAT", "INT", "FLOAT", "INT"], "name": "Equation2params _O", "display_name": "Equation2params _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/numbers", "output_node": false}, "floatToInt _O": {"input": {"required": {"float": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 18446744073709551615, "defaultBehavior": "input"}]}}, "input_order": {"required": ["float"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "floatToInt _O", "display_name": "floatToInt _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/numbers", "output_node": false}, "intToFloat _O": {"input": {"required": {"int": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "defaultBehavior": "input"}]}}, "input_order": {"required": ["int"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "intToFloat _O", "display_name": "intToFloat _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/numbers", "output_node": false}, "floatToText _O": {"input": {"required": {"float": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 18446744073709551615, "defaultBehavior": "input"}]}}, "input_order": {"required": ["float"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "floatToText _O", "display_name": "floatToText _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/numbers", "output_node": false}, "GetImage_(Width&Height) _O": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["INT", "INT"], "name": "GetImage_(Width&Height) _O", "display_name": "GetImage_(Width&Height) _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/numbers", "output_node": false}, "GetLatent_(Width&Height) _O": {"input": {"required": {"samples": ["LATENT"]}}, "input_order": {"required": ["samples"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["INT", "INT"], "name": "GetLatent_(Width&Height) _O", "display_name": "GetLatent_(Width&Height) _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/numbers", "output_node": false}, "debug messages_O": {"input": {"required": {"messages": ["OPENAI_CHAT_MESSAGES"]}}, "input_order": {"required": ["messages"]}, "output": [], "output_is_list": [], "output_name": [], "name": "debug messages_O", "display_name": "debug messages_O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/debug/OpenAI/Advanced/ChatGPT", "output_node": true}, "debug Completeion _O": {"input": {"required": {"completion": ["OPENAI_CHAT_COMPLETION"]}}, "input_order": {"required": ["completion"]}, "output": [], "output_is_list": [], "output_name": [], "name": "debug Completeion _O", "display_name": "debug Completeion _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/debug/OpenAI/Advanced/ChatGPT", "output_node": true}, "Debug Text _O": {"input": {"required": {"text": ["STRING", {"multiline": false, "defaultBehavior": "input"}], "prefix": ["STRING", {"default": "debug", "multiline": false}]}}, "input_order": {"required": ["text", "prefix"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Debug Text _O", "display_name": "Debug Text _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/debug/text", "output_node": true}, "Debug Text route _O": {"input": {"required": {"text": ["STRING", {"multiline": false, "defaultBehavior": "input"}], "prefix": ["STRING", {"default": "debug", "multiline": false}]}}, "input_order": {"required": ["text", "prefix"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Debug Text route _O", "display_name": "Debug Text route _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/debug/text", "output_node": false}, "Note _O": {"input": {"required": {"text": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["text"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Note _O", "display_name": "Note _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/utils", "output_node": true}, "Text _O": {"input": {"required": {"text": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text _O", "display_name": "Text _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/utils", "output_node": false}, "seed _O": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["seed"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "seed _O", "display_name": "seed _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/utils", "output_node": false}, "int _O": {"input": {"required": {"int": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["int"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "int _O", "display_name": "int _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/utils", "output_node": false}, "float _O": {"input": {"required": {"float": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 18446744073709551615}]}}, "input_order": {"required": ["float"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "float _O", "display_name": "float _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/utils", "output_node": false}, "ChatGPT _O": {"input": {"required": {"api_key_file": ["STRING", {"file": true, "default": "api_key.txt"}]}}, "input_order": {"required": ["api_key_file"]}, "output": ["OPENAI"], "output_is_list": [false], "output_name": ["OPENAI"], "name": "ChatGPT _O", "display_name": "ChatGPT _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/OpenAI/Advanced", "output_node": false}, "Chat_Message_fromString _O": {"input": {"required": {"role": [["user", "assistant", "system"], {"default": "user"}], "content": ["STR"]}}, "input_order": {"required": ["role", "content"]}, "output": ["OPENAI_CHAT_MESSAGES"], "output_is_list": [false], "output_name": ["OPENAI_CHAT_MESSAGES"], "name": "Chat_Message_fromString _O", "display_name": "Chat_Message_fromString _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/deprecated/OpenAI/Advanced/ChatGPT", "output_node": false}, "compine_chat_messages _O": {"input": {"required": {"message1": ["OPENAI_CHAT_MESSAGES"], "message2": ["OPENAI_CHAT_MESSAGES"]}}, "input_order": {"required": ["message1", "message2"]}, "output": ["OPENAI_CHAT_MESSAGES"], "output_is_list": [false], "output_name": ["OPENAI_CHAT_MESSAGES"], "name": "compine_chat_messages _O", "display_name": "compine_chat_messages _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/deprecated/OpenAI/Advanced/ChatGPT", "output_node": false}, "Chat_Completion _O": {"input": {"required": {"openai": ["OPENAI"], "model": ["STRING", {"multiline": false, "default": "gpt-3.5-turbo"}], "messages": ["OPENAI_CHAT_MESSAGES"]}}, "input_order": {"required": ["openai", "model", "messages"]}, "output": ["STR", "OPENAI_CHAT_COMPLETION"], "output_is_list": [false, false], "output_name": ["STR", "OPENAI_CHAT_COMPLETION"], "name": "Chat_Completion _O", "display_name": "Chat_Completion _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/deprecated/OpenAI/Advanced/ChatGPT", "output_node": true}, "create_image _O": {"input": {"required": {"openai": ["OPENAI"], "prompt": ["STR"], "number": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}], "size": [["256x256", "512x512", "1024x1024"], {"default": "256x256"}]}}, "input_order": {"required": ["openai", "prompt", "number", "size"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "create_image _O", "display_name": "create_image _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/deprecated/OpenAI/Advanced/Image", "output_node": true}, "String _O": {"input": {"required": {"string": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["string"]}, "output": ["STR"], "output_is_list": [false], "output_name": ["STR"], "name": "String _O", "display_name": "String _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/deprecated/string", "output_node": false}, "Debug String _O": {"input": {"required": {"string": ["STR"]}}, "input_order": {"required": ["string"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Debug String _O", "display_name": "Debug String _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/deprecated/string", "output_node": true}, "concat Strings _O": {"input": {"required": {"string1": ["STR"], "string2": ["STR"]}}, "input_order": {"required": ["string1", "string2"]}, "output": ["STR"], "output_is_list": [false], "output_name": ["STR"], "name": "concat Strings _O", "display_name": "concat Strings _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/deprecated/string/operations", "output_node": false}, "trim String _O": {"input": {"required": {"string": ["STR"]}}, "input_order": {"required": ["string"]}, "output": ["STR"], "output_is_list": [false], "output_name": ["STR"], "name": "trim String _O", "display_name": "trim String _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/deprecated/string/operations", "output_node": false}, "replace String _O": {"input": {"required": {"string": ["STR"], "old": ["STRING", {"multiline": false}], "new": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["string", "old", "new"]}, "output": ["STR"], "output_is_list": [false], "output_name": ["STR"], "name": "replace String _O", "display_name": "replace String _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/deprecated/string/operations", "output_node": false}, "replace String advanced _O": {"input": {"required": {"string": ["STR"], "old": ["STR"], "new": ["STR"]}}, "input_order": {"required": ["string", "old", "new"]}, "output": ["STR"], "output_is_list": [false], "output_name": ["STR"], "name": "replace String advanced _O", "display_name": "replace String advanced _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/deprecated/string/operations", "output_node": false}, "string2Image _O": {"input": {"required": {"string": ["STR"], "font": ["STRING", {"default": "CALIBRI.TTF", "multiline": false}], "size": ["INT", {"default": 36, "min": 0, "max": 255, "step": 1}], "font_R": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "font_G": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "font_B": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "background_R": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "background_G": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "background_B": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["string", "font", "size", "font_R", "font_G", "font_B", "background_R", "background_G", "background_B"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "string2Image _O", "display_name": "string2Image _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/deprecated/string", "output_node": false}, "CLIPStringEncode _O": {"input": {"required": {"string": ["STR"], "clip": ["CLIP"]}}, "input_order": {"required": ["string", "clip"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPStringEncode _O", "display_name": "CLIPStringEncode _O", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/deprecated/string", "output_node": false}, "LatentUpscaleMultiply": {"input": {"required": {"samples": ["LATENT"], "upscale_method": [["nearest-exact", "bilinear", "area"]], "WidthMul": ["FLOAT", {"default": 1.25, "min": 0.0, "max": 10.0, "step": 0.1}], "HeightMul": ["FLOAT", {"default": 1.25, "min": 0.0, "max": 10.0, "step": 0.1}], "crop": [["disabled", "center"]]}}, "input_order": {"required": ["samples", "upscale_method", "WidthMul", "HeightMul", "crop"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentUpscaleMultiply", "display_name": "LatentUpscaleMultiply", "description": "", "python_module": "custom_nodes.ComfyUI-QualityOfLifeSuit_Omar92", "category": "O/deprecated/latent", "output_node": false}, "CheckpointLoaderNF4": {"input": {"required": {"ckpt_name": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]]}}, "input_order": {"required": ["ckpt_name"]}, "output": ["MODEL", "CLIP", "VAE"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "VAE"], "name": "CheckpointLoaderNF4", "display_name": "CheckpointLoaderNF4", "description": "", "python_module": "custom_nodes.ComfyUI_bitsandbytes_NF4", "category": "loaders", "output_node": false}, "MarigoldModelLoader": {"input": {"required": {"model": [["marigold-v1-0", "marigold-lcm-v1-0", "marigold-normals-v0-1", "marigold-normals-lcm-v0-1"], {"default": "marigold-lcm-v1-0"}]}}, "input_order": {"required": ["model"]}, "output": ["MARIGOLDMODEL"], "output_is_list": [false], "output_name": ["marigold_model"], "name": "MarigoldModelLoader", "display_name": "MarigoldModelLoader", "description": "\nDiffusion-based monocular depth estimation:  \nhttps://github.com/prs-eth/Marigold  \n  \nUses Diffusers 0.28.0 Marigold pipelines.  \nModels are automatically downloaded to  \nComfyUI/models/diffusers -folder\n", "python_module": "custom_nodes.ComfyUI-Marigold", "category": "Marigold", "output_node": false}, "MarigoldDepthEstimation_v2": {"input": {"required": {"marigold_model": ["MARIGOLDMODEL"], "image": ["IMAGE"], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}], "denoise_steps": ["INT", {"default": 4, "min": 1, "max": 4096, "step": 1}], "ensemble_size": ["INT", {"default": 3, "min": 1, "max": 4096, "step": 1}], "processing_resolution": ["INT", {"default": 768, "min": 64, "max": 4096, "step": 8}], "scheduler": [["DDIMScheduler", "LCMScheduler"], {"default": "LCMScheduler"}], "use_taesd_vae": ["BOOLEAN", {"default": false}]}, "optional": {"keep_model_loaded": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["marigold_model", "image", "seed", "denoise_steps", "ensemble_size", "processing_resolution", "scheduler", "use_taesd_vae"], "optional": ["keep_model_loaded"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "MarigoldDepthEstimation_v2", "display_name": "MarigoldDepthEstimation_v2", "description": "\nDiffusion-based monocular depth estimation:  \nhttps://github.com/prs-eth/Marigold  \n  \nUses Diffusers 0.28.0 Marigold pipelines.  \n", "python_module": "custom_nodes.ComfyUI-Marigold", "category": "Marigold", "output_node": false}, "MarigoldDepthEstimation_v2_video": {"input": {"required": {"marigold_model": ["MARIGOLDMODEL"], "images": ["IMAGE"], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}], "denoise_steps": ["INT", {"default": 4, "min": 1, "max": 4096, "step": 1}], "processing_resolution": ["INT", {"default": 768, "min": 64, "max": 4096, "step": 8}], "scheduler": [["DDIMScheduler", "LCMScheduler"], {"default": "LCMScheduler"}], "blend_factor": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.01}], "use_taesd_vae": ["BOOLEAN", {"default": true}]}, "optional": {"keep_model_loaded": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["marigold_model", "images", "seed", "denoise_steps", "processing_resolution", "scheduler", "blend_factor", "use_taesd_vae"], "optional": ["keep_model_loaded"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "MarigoldDepthEstimation_v2_video", "display_name": "MarigoldDepthEstimation_v2_video", "description": "\nDiffusion-based monocular depth estimation:  \nhttps://github.com/prs-eth/Marigold  \n  \nUses Diffusers 0.28.0 Marigold pipelines.  \nThis node uses the previous frame as init latent to  \nsmooth out the video.  \n", "python_module": "custom_nodes.ComfyUI-Marigold", "category": "Marigold", "output_node": false}, "MarigoldDepthEstimation": {"input": {"required": {"image": ["IMAGE"], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}], "denoise_steps": ["INT", {"default": 10, "min": 1, "max": 4096, "step": 1}], "n_repeat": ["INT", {"default": 10, "min": 1, "max": 4096, "step": 1}], "regularizer_strength": ["FLOAT", {"default": 0.02, "min": 0.001, "max": 4096, "step": 0.001}], "reduction_method": [["median", "mean"], {"default": "median"}], "max_iter": ["INT", {"default": 5, "min": 1, "max": 4096, "step": 1}], "tol": ["FLOAT", {"default": 0.001, "min": 1e-06, "max": 0.1, "step": 1e-06}], "invert": ["BOOLEAN", {"default": true}], "keep_model_loaded": ["BOOLEAN", {"default": true}], "n_repeat_batch_size": ["INT", {"default": 2, "min": 1, "max": 4096, "step": 1}], "use_fp16": ["BOOLEAN", {"default": true}], "scheduler": [["DDIMScheduler", "DDPMScheduler", "PNDMScheduler", "DEISMultistepScheduler", "LCMScheduler"], {"default": "DDIMScheduler"}], "normalize": ["BOOLEAN", {"default": true}]}, "optional": {"model": [["Marigold", "marigold-lcm-v1-0"], {"default": "Marigold"}]}}, "input_order": {"required": ["image", "seed", "denoise_steps", "n_repeat", "regularizer_strength", "reduction_method", "max_iter", "tol", "invert", "keep_model_loaded", "n_repeat_batch_size", "use_fp16", "scheduler", "normalize"], "optional": ["model"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["ensembled_image"], "name": "MarigoldDepthEstimation", "display_name": "MarigoldDepthEstimation", "description": "\nDiffusion-based monocular depth estimation:  \nhttps://github.com/prs-eth/Marigold  \n  \n- denoise_steps: steps per depth map, increase for accuracy in exchange of processing time\n- n_repeat: amount of iterations to be ensembled into single depth map\n- n_repeat_batch_size: how many of the n_repeats are processed as a batch,  \nif you have the VRAM this can match the n_repeats for faster processing  \n- model: Marigold or it's LCM version marigold-lcm-v1-0  \nFor the LCM model use around 4 steps and the LCMScheduler  \n- scheduler: Different schedulers give bit different results  \n- invert: marigold by default produces depth map where black is front,  \nfor controlnets etc. we want the opposite.  \n- regularizer_strength, reduction_method, max_iter, tol (tolerance) are settings   \nfor the ensembling process, generally do not touch.  \n- use_fp16: if true, use fp16, if false use fp32  \nfp16 uses much less VRAM, but in some cases can lead to loss of quality.  \n", "python_module": "custom_nodes.ComfyUI-Marigold", "category": "Marigold", "output_node": false}, "MarigoldDepthEstimationVideo": {"input": {"required": {"image": ["IMAGE"], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}], "first_frame_denoise_steps": ["INT", {"default": 4, "min": 1, "max": 4096, "step": 1}], "first_frame_n_repeat": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "n_repeat_batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "invert": ["BOOLEAN", {"default": true}], "keep_model_loaded": ["BOOLEAN", {"default": true}], "scheduler": [["DDIMScheduler", "DDPMScheduler", "PNDMScheduler", "DEISMultistepScheduler", "LCMScheduler"], {"default": "DEISMultistepScheduler"}], "normalize": ["BOOLEAN", {"default": true}], "denoise_steps": ["INT", {"default": 4, "min": 1, "max": 4096, "step": 1}], "flow_warping": ["BOOLEAN", {"default": true}], "flow_depth_mix": ["FLOAT", {"default": 0.3, "min": 0.0, "max": 1.0, "step": 0.05}], "noise_ratio": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "dtype": [["fp16", "bf16", "fp32"], {"default": "fp16"}]}, "optional": {"model": [["Marigold", "marigold-lcm-v1-0"], {"default": "Marigold"}]}}, "input_order": {"required": ["image", "seed", "first_frame_denoise_steps", "first_frame_n_repeat", "n_repeat_batch_size", "invert", "keep_model_loaded", "scheduler", "normalize", "denoise_steps", "flow_warping", "flow_depth_mix", "noise_ratio", "dtype"], "optional": ["model"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["ensembled_image"], "name": "MarigoldDepthEstimationVideo", "display_name": "MarigoldDepthEstimationVideo", "description": "\nDiffusion-based monocular depth estimation:  \nhttps://github.com/prs-eth/Marigold  \n\nThis node is experimental version that includes optical flow  \nfor video consistency between frames.  \n\n- denoise_steps: steps per depth map, increase for accuracy in exchange of processing time\n- n_repeat: amount of iterations to be ensembled into single depth map\n- n_repeat_batch_size: how many of the n_repeats are processed as a batch,  \nif you have the VRAM this can match the n_repeats for faster processing  \n- model: Marigold or it's LCM version marigold-lcm-v1-0  \nFor the LCM model use around 4 steps and the LCMScheduler  \n- scheduler: Different schedulers give bit different results  \n- invert: marigold by default produces depth map where black is front,  \nfor controlnets etc. we want the opposite.  \n- regularizer_strength, reduction_method, max_iter, tol (tolerance) are settings   \nfor the ensembling process, generally do not touch.  \n", "python_module": "custom_nodes.ComfyUI-Marigold", "category": "Marigold", "output_node": false}, "ColorizeDepthmap": {"input": {"required": {"image": ["IMAGE"], "colorize_method": [["Spectral", "terrain", "viridis", "plasma", "inferno", "magma", "cividis", "twilight", "rainbow", "gist_rainbow", "gist_ncar", "gist_earth", "turbo", "jet", "afmhot", "copper", "seismic", "hsv", "brg"], {"default": "Spectral"}]}}, "input_order": {"required": ["image", "colorize_method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "ColorizeDepthmap", "display_name": "Colorize Depthmap", "description": "", "python_module": "custom_nodes.ComfyUI-Marigold", "category": "Marigold", "output_node": false}, "SaveImageOpenEXR": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ComfyUI_EXR"}]}}, "input_order": {"required": ["images", "filename_prefix"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["file_url"], "name": "SaveImageOpenEXR", "display_name": "SaveImageOpenEXR", "description": "", "python_module": "custom_nodes.ComfyUI-Marigold", "category": "Marigold", "output_node": true}, "RemapDepth": {"input": {"required": {"image": ["IMAGE"], "min": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 1.0, "step": 0.01}], "max": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "clamp": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "min", "max", "clamp"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RemapDepth", "display_name": "Remap Depth", "description": "", "python_module": "custom_nodes.ComfyUI-Marigold", "category": "Marigold", "output_node": false}, "DF_Float": {"input": {"required": {"Value": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}]}}, "input_order": {"required": ["Value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "DF_Float", "display_name": "Float", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Variables", "output_node": false}, "DF_Integer": {"input": {"required": {"Value": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 1, "forceInput": false}]}}, "input_order": {"required": ["Value"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "DF_Integer", "display_name": "Integer", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Variables", "output_node": false}, "DF_Text": {"input": {"required": {"Text": ["STRING", {"default": "", "multiline": false, "forceInput": false, "dynamicPrompts": false}]}}, "input_order": {"required": ["Text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "DF_Text", "display_name": "Text", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Variables", "output_node": false}, "DF_Text_Box": {"input": {"required": {"Text": ["STRING", {"default": "", "multiline": true, "forceInput": false, "dynamicPrompts": false}]}}, "input_order": {"required": ["Text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "DF_Text_Box", "display_name": "Text Box", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Variables", "output_node": false}, "DF_DynamicPrompts_Text_Box": {"input": {"required": {"Text": ["STRING", {"default": "", "multiline": true, "forceInput": false, "dynamicPrompts": true}]}}, "input_order": {"required": ["Text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "DF_DynamicPrompts_Text_Box", "display_name": "DynamicPrompts Text Box", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Variables", "output_node": false}, "DF_String_Concatenate": {"input": {"required": {"Prepend": ["STRING", {"default": "", "multiline": false, "forceInput": false, "dynamicPrompts": false}], "Append": ["STRING", {"default": "", "multiline": false, "forceInput": false, "dynamicPrompts": false}], "Delimiter": ["STRING", {"default": ", ", "multiline": false, "forceInput": false, "dynamicPrompts": false}]}}, "input_order": {"required": ["Prepend", "Append", "Delimiter"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["TEXT"], "name": "DF_String_Concatenate", "display_name": "String Concatenate", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Functions/String Operations", "output_node": false}, "DF_String_Replace": {"input": {"required": {"Text": ["STRING", {"default": "", "multiline": false, "forceInput": false, "dynamicPrompts": false}], "Pattern": ["STRING", {"default": "", "multiline": false, "forceInput": false, "dynamicPrompts": false}], "Replace_With": ["STRING", {"default": "", "multiline": false, "forceInput": false, "dynamicPrompts": false}], "Mode": [["Strict", "RegEx"], {"forceInput": false}]}}, "input_order": {"required": ["Text", "Pattern", "Replace_With", "Mode"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["TEXT"], "name": "DF_String_Replace", "display_name": "String Replace", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Functions/String Operations", "output_node": false}, "DF_Search_In_Text": {"input": {"required": {"Text": ["STRING", {"default": "", "multiline": false, "forceInput": false, "dynamicPrompts": false}], "Pattern": ["STRING", {"default": "", "multiline": false, "forceInput": false, "dynamicPrompts": false}], "ConsiderRegister": ["BOOLEAN", {"default": false, "force": false}], "Mode": [["Strict", "RegEx"], {"forceInput": false}]}}, "input_order": {"required": ["Text", "Pattern", "ConsiderRegister", "Mode"]}, "output": ["BOOLEAN", "INT"], "output_is_list": [false, false], "output_name": ["BOOLEAN", "OCCURRENCES"], "name": "DF_Search_In_Text", "display_name": "Search In Text", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Functions/String Operations", "output_node": false}, "DF_To_text_(Debug)": {"input": {"required": {"ANY": ["*", {"forceInput": false}]}}, "input_order": {"required": ["ANY"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["SAME AS INPUT", "STRING"], "name": "DF_To_text_(Debug)", "display_name": "To text (Debug)", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Debug", "output_node": true}, "DF_Random": {"input": {"required": {"Value_A": ["FLOAT", {"default": 0, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}], "Value_B": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}], "seed": ["INT", {"default": 0, "min": 0, "max": 4294967295, "step": 1, "forceInput": false}]}}, "input_order": {"required": ["Value_A", "Value_B", "seed"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "DF_Random", "display_name": "Random", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Functions", "output_node": false}, "DF_Int_to_Float": {"input": {"required": {"Value": ["INT", {"default": 1, "min": -9223372036854775807, "max": 9223372036854775807, "step": 1, "forceInput": false}]}}, "input_order": {"required": ["Value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "DF_Int_to_Float", "display_name": "Int to Float", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Functions/Converters", "output_node": false}, "DF_Ceil": {"input": {"required": {"Value": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}]}}, "input_order": {"required": ["Value"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "DF_Ceil", "display_name": "Ceil", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Functions/Converters", "output_node": false}, "DF_Floor": {"input": {"required": {"Value": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}]}}, "input_order": {"required": ["Value"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "DF_Floor", "display_name": "Floor", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Functions/Converters", "output_node": false}, "DF_Absolute_value": {"input": {"required": {"Value": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}], "negative_out": [[false, true]]}}, "input_order": {"required": ["Value", "negative_out"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "DF_Absolute_value", "display_name": "Absolute value", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Functions/Converters", "output_node": false}, "DF_Get_latent_size": {"input": {"required": {"latent": ["LATENT", {"forceInput": false}], "original": [[false, true]]}}, "input_order": {"required": ["latent", "original"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["WIDTH", "HEIGHT"], "name": "DF_Get_latent_size", "display_name": "Get latent size", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Functions", "output_node": false}, "DF_Get_image_size": {"input": {"required": {"image": ["IMAGE", {"forceInput": false}]}}, "input_order": {"required": ["image"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["WIDTH", "HEIGHT"], "name": "DF_Get_image_size", "display_name": "Get image size", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Functions", "output_node": false}, "DF_Sum": {"input": {"required": {"Value_A": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}], "Value_B": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}]}}, "input_order": {"required": ["Value_A", "Value_B"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "DF_Sum", "display_name": "Sum", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Math", "output_node": false}, "DF_Subtract": {"input": {"required": {"Value_A": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}], "Value_B": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}]}}, "input_order": {"required": ["Value_A", "Value_B"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "DF_Subtract", "display_name": "Subtract", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Math", "output_node": false}, "DF_Multiply": {"input": {"required": {"Value_A": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}], "Value_B": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}]}}, "input_order": {"required": ["Value_A", "Value_B"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "DF_Multiply", "display_name": "Multiply", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Math", "output_node": false}, "DF_Divide": {"input": {"required": {"Numerator": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}], "Denominator": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}]}}, "input_order": {"required": ["Numerator", "Denominator"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "DF_Divide", "display_name": "Divide", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Math", "output_node": false}, "DF_Power": {"input": {"required": {"Value": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}], "Exponent": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}]}}, "input_order": {"required": ["Value", "Exponent"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "DF_Power", "display_name": "Power", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Math", "output_node": false}, "DF_Square_root": {"input": {"required": {"Value": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}]}}, "input_order": {"required": ["Value"]}, "output": ["FLOAT", "FLOAT"], "output_is_list": [false, false], "output_name": ["FLOAT", "FLOAT"], "name": "DF_Square_root", "display_name": "Square root", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Math", "output_node": false}, "DF_Sinus": {"input": {"required": {"value": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}], "type_": [["RAD", "DEG"], {"forceInput": false}], "arcSin": [[false, true], {"forceInput": false}]}}, "input_order": {"required": ["value", "type_", "arcSin"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "DF_Sinus", "display_name": "Sinus", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Math/Trigonometry", "output_node": false}, "DF_Cosines": {"input": {"required": {"value": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}], "type_": [["RAD", "DEG"], {"forceInput": false}], "arcCos": [[false, true], {"forceInput": false}]}}, "input_order": {"required": ["value", "type_", "arcCos"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "DF_Cosines", "display_name": "Cosines", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Math/Trigonometry", "output_node": false}, "DF_Tangent": {"input": {"required": {"value": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}], "type_": [["RAD", "DEG"], {"forceInput": false}], "arcTan": [[false, true], {"forceInput": false}]}}, "input_order": {"required": ["value", "type_", "arcTan"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "DF_Tangent", "display_name": "Tangent", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Math/Trigonometry", "output_node": false}, "DF_Logic_node": {"input": {"required": {"Operation": [["A > B", "A < B", "A = B", "A AND B", "A OR B", "A XOR B"], {"forceInput": false}], "CompareValue_A": ["*", {"forceInput": false}]}, "optional": {"CompareValue_B": ["*", {"forceInput": false}], "OnTrue": ["*", {"forceInput": false}], "OnFalse": ["*", {"forceInput": false}]}}, "input_order": {"required": ["Operation", "CompareValue_A"], "optional": ["CompareValue_B", "OnTrue", "OnFalse"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "DF_Logic_node", "display_name": "Logic node", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Functions", "output_node": false}, "DF_Latent_Scale_by_ratio": {"input": {"required": {"latent": ["LATENT", {"forceInput": false}], "modifier": ["FLOAT", {"default": 1, "min": 0, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}], "scale_method": [["nearest-exact", "bilinear", "bicubic", "bislerp", "area", "lanczos"], {"forceInput": false}], "crop": [["disabled", "center"], {"forceInput": false}]}}, "input_order": {"required": ["latent", "modifier", "scale_method", "crop"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "DF_Latent_Scale_by_ratio", "display_name": "Latent Scale by ratio", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Modded nodes/Latent", "output_node": false}, "DF_Latent_Scale_to_side": {"input": {"required": {"latent": ["LATENT", {"forceInput": false}], "side_length": ["INT", {"default": 512, "min": -9223372036854775807, "max": 9223372036854775807, "step": 1, "forceInput": false}], "side": [["Longest", "Shortest", "Width", "Height"], {"forceInput": false}], "scale_method": [["nearest-exact", "bilinear", "bicubic", "bislerp", "area", "lanczos"], {"forceInput": false}], "crop": [["disabled", "center"], {"forceInput": false}]}}, "input_order": {"required": ["latent", "side_length", "side", "scale_method", "crop"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "DF_Latent_Scale_to_side", "display_name": "Latent Scale to side", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Modded nodes/Latent", "output_node": false}, "DF_Image_scale_by_ratio": {"input": {"required": {"image": ["IMAGE", {"forceInput": false}], "upscale_by": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}], "upscale_method": [["nearest-exact", "bilinear", "bicubic", "bislerp", "area", "lanczos"], {"forceInput": false}], "crop": [["disabled", "center"], {"forceInput": false}]}}, "input_order": {"required": ["image", "upscale_by", "upscale_method", "crop"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "DF_Image_scale_by_ratio", "display_name": "Image scale by ratio", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Modded nodes/Image", "output_node": false}, "DF_Image_scale_to_side": {"input": {"required": {"image": ["IMAGE", {"forceInput": false}], "side_length": ["INT", {"default": 1, "min": -9223372036854775807, "max": 9223372036854775807, "step": 1, "forceInput": false}], "side": [["Longest", "Shortest", "Width", "Height"], {"forceInput": false}], "upscale_method": [["nearest-exact", "bilinear", "bicubic", "bislerp", "area", "lanczos"], {"forceInput": false}], "crop": [["disabled", "center"], {"forceInput": false}]}}, "input_order": {"required": ["image", "side_length", "side", "upscale_method", "crop"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "DF_Image_scale_to_side", "display_name": "Image scale to side", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Modded nodes/Image", "output_node": false}, "DF_Conditioning_area_scale_by_ratio": {"input": {"required": {"conditioning": ["CONDITIONING", {"forceInput": false}], "modifier": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}], "strength_modifier": ["FLOAT", {"default": 1, "min": -1.7976931348623157e+308, "max": 1.7976931348623157e+308, "step": 0.01, "forceInput": false}]}}, "input_order": {"required": ["conditioning", "modifier", "strength_modifier"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "DF_Conditioning_area_scale_by_ratio", "display_name": "Conditioning area scale by ratio", "description": "", "python_module": "custom_nodes.Derfuu_ComfyUI_ModdedNodes", "category": "Derfuu_Nodes/Modded nodes/Conditions", "output_node": false}, "TiledDiffusion": {"input": {"required": {"model": ["MODEL"], "method": [["MultiDiffusion", "Mixture of Diffusers", "SpotDiffusion"], {"default": "Mixture of Diffusers"}], "tile_width": ["INT", {"default": 768, "min": 16, "max": 8192, "step": 16}], "tile_height": ["INT", {"default": 768, "min": 16, "max": 8192, "step": 16}], "tile_overlap": ["INT", {"default": 64, "min": 0, "max": 2048, "step": 32}], "tile_batch_size": ["INT", {"default": 4, "min": 1, "max": 8192, "step": 1}]}}, "input_order": {"required": ["model", "method", "tile_width", "tile_height", "tile_overlap", "tile_batch_size"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "TiledDiffusion", "display_name": "Tiled Diffusion", "description": "", "python_module": "custom_nodes.ComfyUI-TiledDiffusion", "category": "_for_testing", "output_node": false}, "SpotDiffusionParams_TiledDiffusion": {"input": {"required": {"model": ["MODEL"], "shift_method": [["random", "sorted", "fibonacci"], {"default": "random", "tooltip": "Samples a shift size over a uniform distribution to shift tiles."}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["model", "shift_method", "seed"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "SpotDiffusionParams_TiledDiffusion", "display_name": "SpotDiffusion Parameters", "description": "", "python_module": "custom_nodes.ComfyUI-TiledDiffusion", "category": "_for_testing", "output_node": false}, "VAEEncodeTiled_TiledDiffusion": {"input": {"required": {"pixels": ["IMAGE"], "vae": ["VAE"], "tile_size": ["INT", {"default": 3072, "min": 256, "max": 4096, "step": 16}], "fast": ["BOOLEAN", {"default": true}], "color_fix": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["pixels", "vae", "tile_size", "fast", "color_fix"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "VAEEncodeTiled_TiledDiffusion", "display_name": "Tiled VAE Encode", "description": "", "python_module": "custom_nodes.ComfyUI-TiledDiffusion", "category": "_for_testing", "output_node": false}, "VAEDecodeTiled_TiledDiffusion": {"input": {"required": {"samples": ["LATENT"], "vae": ["VAE"], "tile_size": ["INT", {"default": 1536, "min": 384, "max": 4096, "step": 16}], "fast": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["samples", "vae", "tile_size", "fast"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "VAEDecodeTiled_TiledDiffusion", "display_name": "Tiled VAE Decode", "description": "", "python_module": "custom_nodes.ComfyUI-TiledDiffusion", "category": "_for_testing", "output_node": false}, "AlphaChanelAdd": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "AlphaChanelAdd", "display_name": "AlphaChanelAdd", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/alpha", "output_node": false}, "AlphaChanelAsMask": {"input": {"required": {"images": ["IMAGE"], "method": [["default", "invert"]]}}, "input_order": {"required": ["images", "method"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "AlphaChanelAsMask", "display_name": "AlphaChanelAsMask", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/alpha", "output_node": false}, "AlphaChanelRestore": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "AlphaChanelRestore", "display_name": "AlphaChanelRestore", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/alpha", "output_node": false}, "AlphaChanelRemove": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "AlphaChanelRemove", "display_name": "AlphaChanelRemove", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/alpha", "output_node": false}, "ClipClamp": {"input": {"required": {"clip": ["CLIP"]}}, "input_order": {"required": ["clip"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "ClipClamp", "display_name": "ClipClamp", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "clamp", "output_node": false}, "ClipVisionClamp": {"input": {"required": {"clip_vision": ["CLIP_VISION"]}}, "input_order": {"required": ["clip_vision"]}, "output": ["CLIP_VISION"], "output_is_list": [false], "output_name": ["CLIP_VISION"], "name": "ClipVisionClamp", "display_name": "ClipVisionClamp", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "clamp", "output_node": false}, "ClipVisionOutputClamp": {"input": {"required": {"clip_vision_output": ["CLIP_VISION_OUTPUT"]}}, "input_order": {"required": ["clip_vision_output"]}, "output": ["CLIP_VISION_OUTPUT"], "output_is_list": [false], "output_name": ["CLIP_VISION_OUTPUT"], "name": "ClipVisionOutputClamp", "display_name": "ClipVisionOutputClamp", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "clamp", "output_node": false}, "ConditioningClamp": {"input": {"required": {"conditioning": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningClamp", "display_name": "ConditioningClamp", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "clamp", "output_node": false}, "ControlNetClamp": {"input": {"required": {"control_net_clamp": ["CONTROL_NET"]}}, "input_order": {"required": ["control_net_clamp"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "ControlNetClamp", "display_name": "ControlNetClamp", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "clamp", "output_node": false}, "GligenClamp": {"input": {"required": {"gligen": ["GLIGEN"]}}, "input_order": {"required": ["gligen"]}, "output": ["GLIGEN"], "output_is_list": [false], "output_name": ["GLIGEN"], "name": "GligenClamp", "display_name": "GligenClamp", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "clamp", "output_node": false}, "ImageClamp": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageClamp", "display_name": "ImageClamp", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "clamp", "output_node": false}, "LatentClamp": {"input": {"required": {"latent": ["LATENT"]}}, "input_order": {"required": ["latent"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentClamp", "display_name": "LatentClamp", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "clamp", "output_node": false}, "MaskClamp": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskClamp", "display_name": "MaskClamp", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "clamp", "output_node": false}, "ModelClamp": {"input": {"required": {"model": ["MODEL"]}}, "input_order": {"required": ["model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelClamp", "display_name": "ModelClamp", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "clamp", "output_node": false}, "StyleModelClamp": {"input": {"required": {"style_model": ["STYLE_MODEL"]}}, "input_order": {"required": ["style_model"]}, "output": ["STYLE_MODEL"], "output_is_list": [false], "output_name": ["STYLE_MODEL"], "name": "StyleModelClamp", "display_name": "StyleModelClamp", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "clamp", "output_node": false}, "UpscaleModelClamp": {"input": {"required": {"upscale_model": ["UPSCALE_MODEL"]}}, "input_order": {"required": ["upscale_model"]}, "output": ["UPSCALE_MODEL"], "output_is_list": [false], "output_name": ["UPSCALE_MODEL"], "name": "UpscaleModelClamp", "display_name": "UpscaleModelClamp", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "clamp", "output_node": false}, "VaeClamp": {"input": {"required": {"vae": ["VAE"]}}, "input_order": {"required": ["vae"]}, "output": ["VAE"], "output_is_list": [false], "output_name": ["VAE"], "name": "VaeClamp", "display_name": "VaeClamp", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "clamp", "output_node": false}, "ImageBatchGet": {"input": {"required": {"images": ["IMAGE"], "index": ["INT", {"default": 1, "min": 1, "step": 1}]}}, "input_order": {"required": ["images", "index"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBatchGet", "display_name": "ImageBatchGet", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/batch", "output_node": false}, "ImageBatchCopy": {"input": {"required": {"images": ["IMAGE"], "index": ["INT", {"default": 1, "min": 1, "step": 1}], "quantity": ["INT", {"default": 1, "min": 2, "step": 1}]}}, "input_order": {"required": ["images", "index", "quantity"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBatchCopy", "display_name": "ImageBatchCopy", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/batch", "output_node": false}, "ImageBatchRemove": {"input": {"required": {"images": ["IMAGE"], "index": ["INT", {"default": 1, "min": 1, "step": 1}]}}, "input_order": {"required": ["images", "index"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBatchRemove", "display_name": "ImageBatchRemove", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/batch", "output_node": false}, "ImageBatchFork": {"input": {"required": {"images": ["IMAGE"], "priority": [["first", "second"]]}}, "input_order": {"required": ["images", "priority"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["IMAGE", "IMAGE"], "name": "ImageBatchFork", "display_name": "ImageBatchFork", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/batch", "output_node": false}, "ImageBatchJoin": {"input": {"required": {"images_a": ["IMAGE"], "images_b": ["IMAGE"]}}, "input_order": {"required": ["images_a", "images_b"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBatchJoin", "display_name": "ImageBatchJoin", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/batch", "output_node": false}, "ImageBatchPermute": {"input": {"required": {"images": ["IMAGE"], "permute": ["STRING", {"multiline": false}], "start_with_zero": ["BOOLEAN"]}}, "input_order": {"required": ["images", "permute", "start_with_zero"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBatchPermute", "display_name": "ImageBatchPermute", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/batch", "output_node": false}, "ImageCompositeAbsolute": {"input": {"required": {"images_a": ["IMAGE"], "images_b": ["IMAGE"], "images_a_x": ["INT", {"default": 0, "step": 1}], "images_a_y": ["INT", {"default": 0, "step": 1}], "images_b_x": ["INT", {"default": 0, "step": 1}], "images_b_y": ["INT", {"default": 0, "step": 1}], "container_width": ["INT", {"default": 0, "step": 1}], "container_height": ["INT", {"default": 0, "step": 1}], "background": [["images_a", "images_b"]], "method": [["pair", "matrix"]]}}, "input_order": {"required": ["images_a", "images_b", "images_a_x", "images_a_y", "images_b_x", "images_b_y", "container_width", "container_height", "background", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageCompositeAbsolute", "display_name": "ImageCompositeAbsolute", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/composite", "output_node": false}, "ImageCompositeAbsoluteByContainer": {"input": {"required": {"container": ["IMAGE"], "images_a": ["IMAGE"], "images_b": ["IMAGE"], "images_a_x": ["INT", {"default": 0, "step": 1}], "images_a_y": ["INT", {"default": 0, "step": 1}], "images_b_x": ["INT", {"default": 0, "step": 1}], "images_b_y": ["INT", {"default": 0, "step": 1}], "background": [["images_a", "images_b"]], "method": [["pair", "matrix"]]}}, "input_order": {"required": ["container", "images_a", "images_b", "images_a_x", "images_a_y", "images_b_x", "images_b_y", "background", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageCompositeAbsoluteByContainer", "display_name": "ImageCompositeAbsoluteByContainer", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/composite", "output_node": false}, "ImageCompositeRelative": {"input": {"required": {"images_a": ["IMAGE"], "images_b": ["IMAGE"], "images_a_x": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "images_a_y": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "images_b_x": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "images_b_y": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "background": [["images_a", "images_b"]], "container_size_type": [["max", "sum", "sum_width", "sum_height"]], "method": [["pair", "matrix"]]}}, "input_order": {"required": ["images_a", "images_b", "images_a_x", "images_a_y", "images_b_x", "images_b_y", "background", "container_size_type", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageCompositeRelative", "display_name": "ImageCompositeRelative", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/composite", "output_node": false}, "ImageCompositeRelativeByContainer": {"input": {"required": {"container": ["IMAGE"], "images_a": ["IMAGE"], "images_b": ["IMAGE"], "images_a_x": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "images_a_y": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "images_b_x": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "images_b_y": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "background": [["images_a", "images_b"]], "method": [["pair", "matrix"]]}}, "input_order": {"required": ["container", "images_a", "images_b", "images_a_x", "images_a_y", "images_b_x", "images_b_y", "background", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageCompositeRelativeByContainer", "display_name": "ImageCompositeRelativeByContainer", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/composite", "output_node": false}, "ImageContainer": {"input": {"required": {"width": ["INT", {"default": 512, "min": 1, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "step": 1}], "red": ["INT", {"default": 255, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "max": 255, "step": 1}], "alpha": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["width", "height", "red", "green", "blue", "alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageContainer", "display_name": "ImageContainer", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/container", "output_node": false}, "ImageContainerInheritanceAdd": {"input": {"required": {"images": ["IMAGE"], "add_width": ["INT", {"default": 0, "step": 1}], "add_height": ["INT", {"default": 0, "step": 1}], "red": ["INT", {"default": 255, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "max": 255, "step": 1}], "alpha": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "method": [["single", "for_each"]]}}, "input_order": {"required": ["images", "add_width", "add_height", "red", "green", "blue", "alpha", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageContainerInheritanceAdd", "display_name": "ImageContainerInheritanceAdd", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/container", "output_node": false}, "ImageContainerInheritanceScale": {"input": {"required": {"images": ["IMAGE"], "scale_width": ["FLOAT", {"default": 1.0, "step": 0.1}], "scale_height": ["FLOAT", {"default": 1.0, "step": 0.1}], "red": ["INT", {"default": 255, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "max": 255, "step": 1}], "alpha": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "method": [["single", "for_each"]]}}, "input_order": {"required": ["images", "scale_width", "scale_height", "red", "green", "blue", "alpha", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageContainerInheritanceScale", "display_name": "ImageContainerInheritanceScale", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/container", "output_node": false}, "ImageContainerInheritanceMax": {"input": {"required": {"images_a": ["IMAGE"], "images_b": ["IMAGE"], "red": ["INT", {"default": 255, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "max": 255, "step": 1}], "alpha": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "method": [["single", "for_each_pair", "for_each_matrix"]]}}, "input_order": {"required": ["images_a", "images_b", "red", "green", "blue", "alpha", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageContainerInheritanceMax", "display_name": "ImageContainerInheritanceMax", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/container", "output_node": false}, "ImageContainerInheritanceSum": {"input": {"required": {"images_a": ["IMAGE"], "images_b": ["IMAGE"], "red": ["INT", {"default": 255, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "max": 255, "step": 1}], "alpha": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "container_size_type": [["sum", "sum_width", "sum_height"]], "method": [["single", "for_each_pair", "for_each_matrix"]]}}, "input_order": {"required": ["images_a", "images_b", "red", "green", "blue", "alpha", "container_size_type", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageContainerInheritanceSum", "display_name": "ImageContainerInheritanceSum", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/container", "output_node": false}, "ImageDrawArc": {"input": {"required": {"width": ["INT", {"default": 256, "min": 1, "step": 1}], "height": ["INT", {"default": 256, "min": 1, "step": 1}], "size": ["INT", {"default": 1, "min": 1, "step": 1}], "start_x": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "start_y": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "end_x": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "end_y": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "start": ["INT", {"default": 0, "max": 360, "step": 1}], "end": ["INT", {"default": 180, "max": 360, "step": 1}], "red": ["INT", {"default": 255, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "max": 255, "step": 1}], "alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "SSAA": ["INT", {"default": 4, "min": 1, "max": 16, "step": 1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}}, "input_order": {"required": ["width", "height", "size", "start_x", "start_y", "end_x", "end_y", "start", "end", "red", "green", "blue", "alpha", "SSAA", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageDrawArc", "display_name": "ImageDrawArc", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/draw", "output_node": false}, "ImageDrawArcByContainer": {"input": {"required": {"container": ["IMAGE"], "size": ["INT", {"default": 1, "min": 1, "step": 1}], "start_x": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "start_y": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "end_x": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "end_y": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "start": ["INT", {"default": 0, "max": 360, "step": 1}], "end": ["INT", {"default": 180, "max": 360, "step": 1}], "red": ["INT", {"default": 255, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "max": 255, "step": 1}], "alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "SSAA": ["INT", {"default": 4, "min": 1, "max": 16, "step": 1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}}, "input_order": {"required": ["container", "size", "start_x", "start_y", "end_x", "end_y", "start", "end", "red", "green", "blue", "alpha", "SSAA", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageDrawArcByContainer", "display_name": "ImageDrawArcByContainer", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/draw", "output_node": false}, "ImageDrawChord": {"input": {"required": {"width": ["INT", {"default": 256, "min": 1, "step": 1}], "height": ["INT", {"default": 256, "min": 1, "step": 1}], "size": ["INT", {"default": 1, "min": 1, "step": 1}], "start_x": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "start_y": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "end_x": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "end_y": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "start": ["INT", {"default": 0, "max": 360, "step": 1}], "end": ["INT", {"default": 180, "max": 360, "step": 1}], "red": ["INT", {"default": 255, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "max": 255, "step": 1}], "alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "SSAA": ["INT", {"default": 4, "min": 1, "max": 16, "step": 1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}}, "input_order": {"required": ["width", "height", "size", "start_x", "start_y", "end_x", "end_y", "start", "end", "red", "green", "blue", "alpha", "SSAA", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageDrawChord", "display_name": "ImageDrawChord", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/draw", "output_node": false}, "ImageDrawChordByContainer": {"input": {"required": {"container": ["IMAGE"], "size": ["INT", {"default": 1, "min": 1, "step": 1}], "start_x": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "start_y": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "end_x": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "end_y": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "start": ["INT", {"default": 0, "max": 360, "step": 1}], "end": ["INT", {"default": 180, "max": 360, "step": 1}], "red": ["INT", {"default": 255, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "max": 255, "step": 1}], "alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "SSAA": ["INT", {"default": 4, "min": 1, "max": 16, "step": 1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}}, "input_order": {"required": ["container", "size", "start_x", "start_y", "end_x", "end_y", "start", "end", "red", "green", "blue", "alpha", "SSAA", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageDrawChordByContainer", "display_name": "ImageDrawChordByContainer", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/draw", "output_node": false}, "ImageDrawEllipse": {"input": {"required": {"width": ["INT", {"default": 256, "min": 1, "step": 1}], "height": ["INT", {"default": 256, "min": 1, "step": 1}], "start_x": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "start_y": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "end_x": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "end_y": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "outline_size": ["INT", {"default": 1, "step": 1}], "outline_red": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_green": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_blue": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "fill_red": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_green": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_blue": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "SSAA": ["INT", {"default": 4, "min": 1, "max": 16, "step": 1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}}, "input_order": {"required": ["width", "height", "start_x", "start_y", "end_x", "end_y", "outline_size", "outline_red", "outline_green", "outline_blue", "outline_alpha", "fill_red", "fill_green", "fill_blue", "fill_alpha", "SSAA", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageDrawEllipse", "display_name": "ImageDrawEllipse", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/draw", "output_node": false}, "ImageDrawEllipseByContainer": {"input": {"required": {"container": ["IMAGE"], "start_x": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "start_y": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "end_x": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "end_y": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "outline_size": ["INT", {"default": 1, "step": 1}], "outline_red": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_green": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_blue": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "fill_red": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_green": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_blue": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "SSAA": ["INT", {"default": 4, "min": 1, "max": 16, "step": 1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}}, "input_order": {"required": ["container", "start_x", "start_y", "end_x", "end_y", "outline_size", "outline_red", "outline_green", "outline_blue", "outline_alpha", "fill_red", "fill_green", "fill_blue", "fill_alpha", "SSAA", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageDrawEllipseByContainer", "display_name": "ImageDrawEllipseByContainer", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/draw", "output_node": false}, "ImageDrawLine": {"input": {"required": {"width": ["INT", {"default": 256, "min": 1, "step": 1}], "height": ["INT", {"default": 256, "min": 1, "step": 1}], "size": ["INT", {"default": 1, "min": 1, "step": 1}], "start_x": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "start_y": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "end_x": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "end_y": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "red": ["INT", {"default": 255, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "max": 255, "step": 1}], "alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "SSAA": ["INT", {"default": 4, "min": 1, "max": 16, "step": 1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}}, "input_order": {"required": ["width", "height", "size", "start_x", "start_y", "end_x", "end_y", "red", "green", "blue", "alpha", "SSAA", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageDrawLine", "display_name": "ImageDrawLine", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/draw", "output_node": false}, "ImageDrawLineByContainer": {"input": {"required": {"container": ["IMAGE"], "size": ["INT", {"default": 1, "min": 1, "step": 1}], "start_x": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "start_y": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "end_x": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "end_y": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "red": ["INT", {"default": 255, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "max": 255, "step": 1}], "alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "SSAA": ["INT", {"default": 4, "min": 1, "max": 16, "step": 1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}}, "input_order": {"required": ["container", "size", "start_x", "start_y", "end_x", "end_y", "red", "green", "blue", "alpha", "SSAA", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageDrawLineByContainer", "display_name": "ImageDrawLineByContainer", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/draw", "output_node": false}, "ImageDrawPieslice": {"input": {"required": {"width": ["INT", {"default": 256, "min": 1, "step": 1}], "height": ["INT", {"default": 256, "min": 1, "step": 1}], "start_x": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "start_y": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "end_x": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "end_y": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "start": ["INT", {"default": 0, "max": 360, "step": 1}], "end": ["INT", {"default": 240, "max": 360, "step": 1}], "outline_size": ["INT", {"default": 1, "step": 1}], "outline_red": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_green": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_blue": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "fill_red": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_green": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_blue": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "SSAA": ["INT", {"default": 4, "min": 1, "max": 16, "step": 1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}}, "input_order": {"required": ["width", "height", "start_x", "start_y", "end_x", "end_y", "start", "end", "outline_size", "outline_red", "outline_green", "outline_blue", "outline_alpha", "fill_red", "fill_green", "fill_blue", "fill_alpha", "SSAA", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageDrawPieslice", "display_name": "ImageDrawPieslice", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/draw", "output_node": false}, "ImageDrawPiesliceByContainer": {"input": {"required": {"container": ["IMAGE"], "start_x": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "start_y": ["FLOAT", {"default": 0.0, "max": 1.0, "step": 0.01}], "end_x": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "end_y": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "start": ["INT", {"default": 0, "max": 360, "step": 1}], "end": ["INT", {"default": 240, "max": 360, "step": 1}], "outline_size": ["INT", {"default": 1, "step": 1}], "outline_red": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_green": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_blue": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "fill_red": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_green": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_blue": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "SSAA": ["INT", {"default": 4, "min": 1, "max": 16, "step": 1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}}, "input_order": {"required": ["container", "start_x", "start_y", "end_x", "end_y", "start", "end", "outline_size", "outline_red", "outline_green", "outline_blue", "outline_alpha", "fill_red", "fill_green", "fill_blue", "fill_alpha", "SSAA", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageDrawPiesliceByContainer", "display_name": "ImageDrawPiesliceByContainer", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/draw", "output_node": false}, "ImageDrawRectangle": {"input": {"required": {"width": ["INT", {"default": 256, "min": 1, "step": 1}], "height": ["INT", {"default": 256, "min": 1, "step": 1}], "start_x": ["FLOAT", {"default": 0.1, "max": 1.0, "step": 0.01}], "start_y": ["FLOAT", {"default": 0.2, "max": 1.0, "step": 0.01}], "end_x": ["FLOAT", {"default": 0.9, "max": 1.0, "step": 0.01}], "end_y": ["FLOAT", {"default": 0.8, "max": 1.0, "step": 0.01}], "outline_size": ["INT", {"default": 1, "step": 1}], "outline_red": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_green": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_blue": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "fill_red": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_green": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_blue": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "SSAA": ["INT", {"default": 4, "min": 1, "max": 16, "step": 1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}}, "input_order": {"required": ["width", "height", "start_x", "start_y", "end_x", "end_y", "outline_size", "outline_red", "outline_green", "outline_blue", "outline_alpha", "fill_red", "fill_green", "fill_blue", "fill_alpha", "SSAA", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageDrawRectangle", "display_name": "ImageDrawRectangle", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/draw", "output_node": false}, "ImageDrawRectangleByContainer": {"input": {"required": {"container": ["IMAGE"], "start_x": ["FLOAT", {"default": 0.1, "max": 1.0, "step": 0.01}], "start_y": ["FLOAT", {"default": 0.2, "max": 1.0, "step": 0.01}], "end_x": ["FLOAT", {"default": 0.9, "max": 1.0, "step": 0.01}], "end_y": ["FLOAT", {"default": 0.8, "max": 1.0, "step": 0.01}], "outline_size": ["INT", {"default": 1, "step": 1}], "outline_red": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_green": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_blue": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "fill_red": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_green": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_blue": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "SSAA": ["INT", {"default": 4, "min": 1, "max": 16, "step": 1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}}, "input_order": {"required": ["container", "start_x", "start_y", "end_x", "end_y", "outline_size", "outline_red", "outline_green", "outline_blue", "outline_alpha", "fill_red", "fill_green", "fill_blue", "fill_alpha", "SSAA", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageDrawRectangleByContainer", "display_name": "ImageDrawRectangleByContainer", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/draw", "output_node": false}, "ImageDrawRectangleRounded": {"input": {"required": {"width": ["INT", {"default": 256, "min": 1, "step": 1}], "height": ["INT", {"default": 256, "min": 1, "step": 1}], "start_x": ["FLOAT", {"default": 0.1, "max": 1.0, "step": 0.01}], "start_y": ["FLOAT", {"default": 0.2, "max": 1.0, "step": 0.01}], "end_x": ["FLOAT", {"default": 0.9, "max": 1.0, "step": 0.01}], "end_y": ["FLOAT", {"default": 0.8, "max": 1.0, "step": 0.01}], "radius": ["INT", {"default": 180, "max": 360, "step": 1}], "outline_size": ["INT", {"default": 1, "step": 1}], "outline_red": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_green": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_blue": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "fill_red": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_green": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_blue": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "top_left_corner": [["true", "false"]], "top_right_corner": [["true", "false"]], "bottom_right_corner": [["true", "false"]], "bottom_left_corner": [["true", "false"]], "SSAA": ["INT", {"default": 4, "min": 1, "max": 16, "step": 1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}}, "input_order": {"required": ["width", "height", "start_x", "start_y", "end_x", "end_y", "radius", "outline_size", "outline_red", "outline_green", "outline_blue", "outline_alpha", "fill_red", "fill_green", "fill_blue", "fill_alpha", "top_left_corner", "top_right_corner", "bottom_right_corner", "bottom_left_corner", "SSAA", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageDrawRectangleRounded", "display_name": "ImageDrawRectangleRounded", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/draw", "output_node": false}, "ImageDrawRectangleRoundedByContainer": {"input": {"required": {"container": ["IMAGE"], "start_x": ["FLOAT", {"default": 0.1, "max": 1.0, "step": 0.01}], "start_y": ["FLOAT", {"default": 0.2, "max": 1.0, "step": 0.01}], "end_x": ["FLOAT", {"default": 0.9, "max": 1.0, "step": 0.01}], "end_y": ["FLOAT", {"default": 0.8, "max": 1.0, "step": 0.01}], "radius": ["INT", {"default": 180, "max": 360, "step": 1}], "outline_size": ["INT", {"default": 1, "step": 1}], "outline_red": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_green": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_blue": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "fill_red": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_green": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_blue": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "top_left_corner": [["true", "false"]], "top_right_corner": [["true", "false"]], "bottom_right_corner": [["true", "false"]], "bottom_left_corner": [["true", "false"]], "SSAA": ["INT", {"default": 4, "min": 1, "max": 16, "step": 1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}}, "input_order": {"required": ["container", "start_x", "start_y", "end_x", "end_y", "radius", "outline_size", "outline_red", "outline_green", "outline_blue", "outline_alpha", "fill_red", "fill_green", "fill_blue", "fill_alpha", "top_left_corner", "top_right_corner", "bottom_right_corner", "bottom_left_corner", "SSAA", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageDrawRectangleRoundedByContainer", "display_name": "ImageDrawRectangleRoundedByContainer", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/draw", "output_node": false}, "ImageDrawPolygon": {"input": {"required": {"size": ["INT", {"default": 256, "min": 1, "step": 1}], "sides": ["INT", {"default": 5, "min": 3, "step": 1}], "rotation": ["INT", {"default": 0, "max": 360, "step": 1}], "outline_size": ["INT", {"default": 1, "step": 1}], "outline_red": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_green": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_blue": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "fill_red": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_green": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_blue": ["INT", {"default": 255, "max": 255, "step": 1}], "fill_alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "SSAA": ["INT", {"default": 4, "min": 1, "max": 16, "step": 1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}}, "input_order": {"required": ["size", "sides", "rotation", "outline_size", "outline_red", "outline_green", "outline_blue", "outline_alpha", "fill_red", "fill_green", "fill_blue", "fill_alpha", "SSAA", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageDrawPolygon", "display_name": "ImageDrawPolygon", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/draw", "output_node": false}, "ImageEffectsAdjustment": {"input": {"required": {"images": ["IMAGE"], "brightness": ["FLOAT", {"default": 1.0, "step": 0.01}], "contrast": ["FLOAT", {"default": 1.0, "step": 0.01}], "saturation": ["FLOAT", {"default": 1.0, "step": 0.01}], "hue": ["FLOAT", {"default": 0.5, "max": 1.0, "step": 0.01}], "gamma": ["FLOAT", {"default": 1.0, "step": 0.01}], "sharpness": ["FLOAT", {"default": 1.0, "step": 0.01}], "red": ["FLOAT", {"default": 1.0, "step": 0.01}], "green": ["FLOAT", {"default": 1.0, "step": 0.01}], "blue": ["FLOAT", {"default": 1.0, "step": 0.01}]}}, "input_order": {"required": ["images", "brightness", "contrast", "saturation", "hue", "gamma", "sharpness", "red", "green", "blue"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageEffectsAdjustment", "display_name": "ImageEffectsAdjustment", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/effects", "output_node": false}, "ImageEffectsGrayscale": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageEffectsGrayscale", "display_name": "ImageEffectsGrayscale", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/effects", "output_node": false}, "ImageEffectsNegative": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageEffectsNegative", "display_name": "ImageEffectsNegative", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/effects", "output_node": false}, "ImageEffectsSepia": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageEffectsSepia", "display_name": "ImageEffectsSepia", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/effects", "output_node": false}, "ImageEffectsLensZoomBurst": {"input": {"required": {"images": ["IMAGE"], "scale": ["FLOAT", {"default": 1.5, "min": 1.0, "step": 0.01}], "samples": ["INT", {"default": 100, "min": 1}], "position_x": ["FLOAT", {"default": 0.5, "max": 1.0, "step": 0.01}], "position_y": ["FLOAT", {"default": 0.5, "max": 1.0, "step": 0.01}], "rotation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 360.0}], "method": [["circle", "point"]], "stabilization": [["true", "false"]]}}, "input_order": {"required": ["images", "scale", "samples", "position_x", "position_y", "rotation", "method", "stabilization"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageEffectsLensZoomBurst", "display_name": "ImageEffectsLensZoomBurst", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/effects/lens", "output_node": false}, "ImageEffectsLensChromaticAberration": {"input": {"required": {"images": ["IMAGE"], "shift": ["INT", {"default": 10, "step": 1}], "method": [["reflect", "edge", "constant"]], "shift_type": ["INT", {"default": 1, "min": 1, "max": 4, "step": 1}], "mixing_type": ["INT", {"default": 1, "min": 1, "max": 4, "step": 1}], "transpose": [["none", "rotate", "reflect"]], "colors": [["rb", "rg", "gb"]], "lens_curvy": ["FLOAT", {"default": 1.0, "max": 15.0, "step": 0.1}]}}, "input_order": {"required": ["images", "shift", "method", "shift_type", "mixing_type", "transpose", "colors", "lens_curvy"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageEffectsLensChromaticAberration", "display_name": "ImageEffectsLensChromaticAberration", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/effects/lens", "output_node": false}, "ImageEffectsLensBokeh": {"input": {"required": {"images": ["IMAGE"], "blades_shape": ["INT", {"default": 5, "min": 3}], "blades_radius": ["INT", {"default": 10, "min": 1}], "blades_rotation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 360.0}], "blur_size": ["INT", {"default": 10, "min": 1, "step": 2}], "blur_type": [["bilateral", "stack", "none"]], "method": [["dilate", "filter"]]}}, "input_order": {"required": ["images", "blades_shape", "blades_radius", "blades_rotation", "blur_size", "blur_type", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageEffectsLensBokeh", "display_name": "ImageEffectsLensBokeh", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/effects/lens", "output_node": false}, "ImageEffectsLensOpticAxis": {"input": {"required": {"images": ["IMAGE"], "lens_shape": [["circle", "square", "rectangle", "corners"]], "lens_edge": [["around", "symmetric"]], "lens_curvy": ["FLOAT", {"default": 4.0, "max": 15.0, "step": 0.1}], "lens_zoom": ["FLOAT", {"default": 2.0, "step": 0.1}], "lens_aperture": ["FLOAT", {"default": 0.5, "max": 10.0, "step": 0.1}], "blur_intensity": ["INT", {"default": 30, "min": 2, "step": 2}]}}, "input_order": {"required": ["images", "lens_shape", "lens_edge", "lens_curvy", "lens_zoom", "lens_aperture", "blur_intensity"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImageEffectsLensOpticAxis", "display_name": "ImageEffectsLensOpticAxis", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/effects/lens", "output_node": false}, "ImageEffectsLensVignette": {"input": {"required": {"images": ["IMAGE"], "lens_shape": [["circle", "rectangle"]], "lens_edge": [["around", "symmetric"]], "lens_curvy": ["FLOAT", {"default": 3.0, "max": 15.0, "step": 0.1}], "lens_zoom": ["FLOAT", {"default": 0.0, "step": 0.1}], "brightness": ["FLOAT", {"default": 0.25, "max": 1.0, "step": 0.01}], "saturation": ["FLOAT", {"default": 0.5, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["images", "lens_shape", "lens_edge", "lens_curvy", "lens_zoom", "brightness", "saturation"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImageEffectsLensVignette", "display_name": "ImageEffectsLensVignette", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/effects/lens", "output_node": false}, "ImageFilterSmooth": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFilterSmooth", "display_name": "ImageFilterSmooth", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/filter", "output_node": false}, "ImageFilterSmoothMore": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFilterSmoothMore", "display_name": "ImageFilterSmoothMore", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/filter", "output_node": false}, "ImageFilterBlur": {"input": {"required": {"images": ["IMAGE"], "size_x": ["INT", {"default": 10, "min": 1}], "size_y": ["INT", {"default": 10, "min": 1}]}}, "input_order": {"required": ["images", "size_x", "size_y"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFilterBlur", "display_name": "ImageFilterBlur", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/filter", "output_node": false}, "ImageFilterBoxBlur": {"input": {"required": {"images": ["IMAGE"], "size_x": ["INT", {"default": 10, "min": 1}], "size_y": ["INT", {"default": 10, "min": 1}]}}, "input_order": {"required": ["images", "size_x", "size_y"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFilterBoxBlur", "display_name": "ImageFilterBoxBlur", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/filter", "output_node": false}, "ImageFilterGaussianBlur": {"input": {"required": {"images": ["IMAGE"], "size_x": ["INT", {"default": 10, "min": 2, "step": 2}], "size_y": ["INT", {"default": 10, "min": 2, "step": 2}]}}, "input_order": {"required": ["images", "size_x", "size_y"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFilterGaussianBlur", "display_name": "ImageFilterGaussianBlur", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/filter", "output_node": false}, "ImageFilterGaussianBlurAdvanced": {"input": {"required": {"images": ["IMAGE"], "size_x": ["INT", {"default": 10, "min": 2, "step": 2}], "size_y": ["INT", {"default": 10, "min": 2, "step": 2}], "sigma_x": ["INT", {"default": 0}], "sigma_y": ["INT", {"default": 0}]}}, "input_order": {"required": ["images", "size_x", "size_y", "sigma_x", "sigma_y"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFilterGaussianBlurAdvanced", "display_name": "ImageFilterGaussianBlurAdvanced", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/filter", "output_node": false}, "ImageFilterStackBlur": {"input": {"required": {"images": ["IMAGE"], "size_x": ["INT", {"default": 10, "min": 1, "step": 2}], "size_y": ["INT", {"default": 10, "min": 1, "step": 2}]}}, "input_order": {"required": ["images", "size_x", "size_y"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFilterStackBlur", "display_name": "ImageFilterStackBlur", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/filter", "output_node": false}, "ImageFilterMedianBlur": {"input": {"required": {"images": ["IMAGE"], "size": ["INT", {"default": 10, "min": 1, "step": 2}]}}, "input_order": {"required": ["images", "size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFilterMedianBlur", "display_name": "ImageFilterMedianBlur", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/filter", "output_node": false}, "ImageFilterBilateralBlur": {"input": {"required": {"images": ["IMAGE"], "size": ["INT", {"default": 10, "min": 1, "step": 2}], "sigma_color": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "sigma_intensity": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["images", "size", "sigma_color", "sigma_intensity"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFilterBilateralBlur", "display_name": "ImageFilterBilateralBlur", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/filter", "output_node": false}, "ImageFilterContour": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFilterContour", "display_name": "ImageFilterContour", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/filter", "output_node": false}, "ImageFilterDetail": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFilterDetail", "display_name": "ImageFilterDetail", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/filter", "output_node": false}, "ImageFilterEdgeEnhance": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFilterEdgeEnhance", "display_name": "ImageFilterEdgeEnhance", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/filter", "output_node": false}, "ImageFilterEdgeEnhanceMore": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFilterEdgeEnhanceMore", "display_name": "ImageFilterEdgeEnhanceMore", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/filter", "output_node": false}, "ImageFilterEmboss": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFilterEmboss", "display_name": "ImageFilterEmboss", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/filter", "output_node": false}, "ImageFilterFindEdges": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFilterFindEdges", "display_name": "ImageFilterFindEdges", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/filter", "output_node": false}, "ImageFilterSharpen": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFilterSharpen", "display_name": "ImageFilterSharpen", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/filter", "output_node": false}, "ImageFilterRank": {"input": {"required": {"images": ["IMAGE"], "size": ["INT", {"default": 2, "min": 0, "step": 2}], "rank": ["INT", {"default": 1, "step": 1}]}}, "input_order": {"required": ["images", "size", "rank"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFilterRank", "display_name": "ImageFilterRank", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/filter", "output_node": false}, "ImageFilterMin": {"input": {"required": {"images": ["IMAGE"], "size": ["INT", {"default": 2, "min": 0, "step": 2}]}}, "input_order": {"required": ["images", "size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFilterMin", "display_name": "ImageFilterMin", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/filter", "output_node": false}, "ImageFilterMax": {"input": {"required": {"images": ["IMAGE"], "size": ["INT", {"default": 2, "min": 0, "step": 2}]}}, "input_order": {"required": ["images", "size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFilterMax", "display_name": "ImageFilterMax", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/filter", "output_node": false}, "ImageFilterMode": {"input": {"required": {"images": ["IMAGE"], "size": ["INT", {"default": 2, "min": 0, "step": 2}]}}, "input_order": {"required": ["images", "size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFilterMode", "display_name": "ImageFilterMode", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/filter", "output_node": false}, "ImageNoiseBeta": {"input": {"required": {"images": ["IMAGE"], "a": ["INT", {"default": 1, "min": 1}], "b": ["INT", {"default": 1, "min": 1}], "monochromatic": [["false", "true"]], "invert": [["false", "true"]], "channels": [["rgb", "rgba", "rg", "rb", "ra", "gb", "ga", "ba", "r", "g", "b", "a"]]}}, "input_order": {"required": ["images", "a", "b", "monochromatic", "invert", "channels"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageNoiseBeta", "display_name": "ImageNoiseBeta", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/noise", "output_node": false}, "ImageNoiseBinomial": {"input": {"required": {"images": ["IMAGE"], "n": ["INT", {"default": 128, "min": 1, "max": 255}], "p": ["FLOAT", {"default": 0.5, "max": 1.0, "step": 0.01}], "monochromatic": [["false", "true"]], "invert": [["false", "true"]], "channels": [["rgb", "rgba", "rg", "rb", "ra", "gb", "ga", "ba", "r", "g", "b", "a"]]}}, "input_order": {"required": ["images", "n", "p", "monochromatic", "invert", "channels"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageNoiseBinomial", "display_name": "ImageNoiseBinomial", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/noise", "output_node": false}, "ImageNoiseBytes": {"input": {"required": {"images": ["IMAGE"], "monochromatic": [["false", "true"]], "invert": [["false", "true"]], "channels": [["rgb", "rgba", "rg", "rb", "ra", "gb", "ga", "ba", "r", "g", "b", "a"]]}}, "input_order": {"required": ["images", "monochromatic", "invert", "channels"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageNoiseBytes", "display_name": "ImageNoiseBytes", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/noise", "output_node": false}, "ImageNoiseGaussian": {"input": {"required": {"images": ["IMAGE"], "strength": ["FLOAT", {"default": 0.5, "step": 0.01}], "monochromatic": [["false", "true"]], "invert": [["false", "true"]], "channels": [["rgb", "rgba", "rg", "rb", "ra", "gb", "ga", "ba", "r", "g", "b", "a"]]}}, "input_order": {"required": ["images", "strength", "monochromatic", "invert", "channels"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageNoiseGaussian", "display_name": "ImageNoiseGaussian", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/noise", "output_node": false}, "ImageSegmentation": {"input": {"required": {"images": ["IMAGE"], "model": [["u2net", "u2netp", "u2net_human_seg", "u2net_cloth_seg", "silueta", "isnet-general-use", "isnetis", "modnet-p", "modnet-w"]], "alpha_matting": [["true", "false"]], "alpha_matting_foreground_threshold": ["INT", {"default": 240, "max": 250, "step": 5}], "alpha_matting_background_threshold": ["INT", {"default": 20, "max": 250, "step": 5}], "alpha_matting_erode_size": ["INT", {"default": 10, "step": 1}], "post_process_mask": [["false", "true"]]}}, "input_order": {"required": ["images", "model", "alpha_matting", "alpha_matting_foreground_threshold", "alpha_matting_background_threshold", "alpha_matting_erode_size", "post_process_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageSegmentation", "display_name": "ImageSegmentation", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/segmentation", "output_node": false}, "ImageSegmentationCustom": {"input": {"required": {"images": ["IMAGE"], "model": [["isnet-general-use.onnx"]], "alpha_matting": [["true", "false"]], "alpha_matting_foreground_threshold": ["INT", {"default": 240, "max": 250, "step": 5}], "alpha_matting_background_threshold": ["INT", {"default": 20, "max": 250, "step": 5}], "alpha_matting_erode_size": ["INT", {"default": 10, "step": 1}], "post_process_mask": [["false", "true"]], "mean": ["FLOAT", {"default": 0.485, "max": 1.0, "step": 0.01}], "std": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "size": ["INT", {"default": 1024, "step": 8}]}}, "input_order": {"required": ["images", "model", "alpha_matting", "alpha_matting_foreground_threshold", "alpha_matting_background_threshold", "alpha_matting_erode_size", "post_process_mask", "mean", "std", "size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageSegmentationCustom", "display_name": "ImageSegmentationCustom", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/segmentation", "output_node": false}, "ImageSegmentationCustomAdvanced": {"input": {"required": {"images": ["IMAGE"], "model": [["isnet-general-use.onnx"]], "alpha_matting": [["true", "false"]], "alpha_matting_foreground_threshold": ["INT", {"default": 240, "max": 250, "step": 5}], "alpha_matting_background_threshold": ["INT", {"default": 20, "max": 250, "step": 5}], "alpha_matting_erode_size": ["INT", {"default": 10, "step": 1}], "post_process_mask": [["false", "true"]], "mean_r": ["FLOAT", {"default": 0.485, "max": 1.0, "step": 0.01}], "mean_g": ["FLOAT", {"default": 0.456, "max": 1.0, "step": 0.01}], "mean_b": ["FLOAT", {"default": 0.406, "max": 1.0, "step": 0.01}], "std_r": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "std_g": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "std_b": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "width": ["INT", {"default": 1024, "step": 8}], "height": ["INT", {"default": 1024, "step": 8}]}}, "input_order": {"required": ["images", "model", "alpha_matting", "alpha_matting_foreground_threshold", "alpha_matting_background_threshold", "alpha_matting_erode_size", "post_process_mask", "mean_r", "mean_g", "mean_b", "std_r", "std_g", "std_b", "width", "height"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageSegmentationCustomAdvanced", "display_name": "ImageSegmentationCustomAdvanced", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/segmentation", "output_node": false}, "ImageText": {"input": {"required": {"text": ["STRING", {"multiline": false}], "font": [[]], "size": ["INT", {"default": 28, "min": 1, "step": 1}], "red": ["INT", {"default": 255, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "max": 255, "step": 1}], "alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "margin_x": ["INT", {"default": 0, "step": 1}], "margin_y": ["INT", {"default": 0, "step": 1}]}}, "input_order": {"required": ["text", "font", "size", "red", "green", "blue", "alpha", "margin_x", "margin_y"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageText", "display_name": "ImageText", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/draw", "output_node": false}, "ImageTextOutlined": {"input": {"required": {"text": ["STRING", {"multiline": false}], "font": [[]], "size": ["INT", {"default": 28, "min": 1, "step": 1}], "red": ["INT", {"default": 255, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "max": 255, "step": 1}], "outline_size": ["INT", {"default": 1, "step": 1}], "outline_red": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_green": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_blue": ["INT", {"default": 0, "max": 255, "step": 1}], "alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "margin_x": ["INT", {"default": 0, "step": 1}], "margin_y": ["INT", {"default": 0, "step": 1}]}}, "input_order": {"required": ["text", "font", "size", "red", "green", "blue", "outline_size", "outline_red", "outline_green", "outline_blue", "alpha", "margin_x", "margin_y"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageTextOutlined", "display_name": "ImageTextOutlined", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/draw", "output_node": false}, "ImageTextMultiline": {"input": {"required": {"text": ["STRING", {"multiline": true}], "font": [[]], "align": [["left", "center", "right"]], "size": ["INT", {"default": 28, "min": 1, "step": 1}], "red": ["INT", {"default": 255, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "max": 255, "step": 1}], "alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "margin_x": ["INT", {"default": 0, "step": 1}], "margin_y": ["INT", {"default": 0, "step": 1}]}}, "input_order": {"required": ["text", "font", "align", "size", "red", "green", "blue", "alpha", "margin_x", "margin_y"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageTextMultiline", "display_name": "ImageTextMultiline", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/draw", "output_node": false}, "ImageTextMultilineOutlined": {"input": {"required": {"text": ["STRING", {"multiline": true}], "font": [[]], "align": [["left", "center", "right"]], "size": ["INT", {"default": 28, "min": 1, "step": 1}], "red": ["INT", {"default": 255, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "max": 255, "step": 1}], "outline_size": ["INT", {"default": 1, "step": 1}], "outline_red": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_green": ["INT", {"default": 0, "max": 255, "step": 1}], "outline_blue": ["INT", {"default": 0, "max": 255, "step": 1}], "alpha": ["FLOAT", {"default": 1.0, "max": 1.0, "step": 0.01}], "margin_x": ["INT", {"default": 0, "step": 1}], "margin_y": ["INT", {"default": 0, "step": 1}]}}, "input_order": {"required": ["text", "font", "align", "size", "red", "green", "blue", "outline_size", "outline_red", "outline_green", "outline_blue", "alpha", "margin_x", "margin_y"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageTextMultilineOutlined", "display_name": "ImageTextMultilineOutlined", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/draw", "output_node": false}, "ImageTransformResizeAbsolute": {"input": {"required": {"images": ["IMAGE"], "width": ["INT", {"default": 256, "min": 1, "step": 1}], "height": ["INT", {"default": 256, "min": 1, "step": 1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}}, "input_order": {"required": ["images", "width", "height", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageTransformResizeAbsolute", "display_name": "ImageTransformResizeAbsolute", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/transform", "output_node": false}, "ImageTransformResizeRelative": {"input": {"required": {"images": ["IMAGE"], "scale_width": ["FLOAT", {"default": 1.0, "step": 0.1}], "scale_height": ["FLOAT", {"default": 1.0, "step": 0.1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}}, "input_order": {"required": ["images", "scale_width", "scale_height", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageTransformResizeRelative", "display_name": "ImageTransformResizeRelative", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/transform", "output_node": false}, "ImageTransformResizeClip": {"input": {"required": {"images": ["IMAGE"], "max_width": ["INT", {"default": 1024}], "max_height": ["INT", {"default": 1024}], "min_width": ["INT", {"default": 0}], "min_height": ["INT", {"default": 0}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}}, "input_order": {"required": ["images", "max_width", "max_height", "min_width", "min_height", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageTransformResizeClip", "display_name": "ImageTransformResizeClip", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/transform", "output_node": false}, "ImageTransformCropAbsolute": {"input": {"required": {"images": ["IMAGE"], "start_x": ["INT", {"default": 0, "step": 1}], "start_y": ["INT", {"default": 0, "step": 1}], "end_x": ["INT", {"default": 128, "step": 1}], "end_y": ["INT", {"default": 128, "step": 1}]}}, "input_order": {"required": ["images", "start_x", "start_y", "end_x", "end_y"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageTransformCropAbsolute", "display_name": "ImageTransformCropAbsolute", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/transform", "output_node": false}, "ImageTransformCropRelative": {"input": {"required": {"images": ["IMAGE"], "start_x": ["FLOAT", {"default": 0.25, "max": 1.0, "step": 0.01}], "start_y": ["FLOAT", {"default": 0.25, "max": 1.0, "step": 0.01}], "end_x": ["FLOAT", {"default": 0.75, "max": 1.0, "step": 0.01}], "end_y": ["FLOAT", {"default": 0.75, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["images", "start_x", "start_y", "end_x", "end_y"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageTransformCropRelative", "display_name": "ImageTransformCropRelative", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/transform", "output_node": false}, "ImageTransformCropCorners": {"input": {"required": {"images": ["IMAGE"], "radius": ["INT", {"default": 180, "max": 360, "step": 1}], "top_left_corner": [["true", "false"]], "top_right_corner": [["true", "false"]], "bottom_right_corner": [["true", "false"]], "bottom_left_corner": [["true", "false"]], "SSAA": ["INT", {"default": 4, "min": 1, "max": 16, "step": 1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}}, "input_order": {"required": ["images", "radius", "top_left_corner", "top_right_corner", "bottom_right_corner", "bottom_left_corner", "SSAA", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageTransformCropCorners", "display_name": "ImageTransformCropCorners", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/transform", "output_node": false}, "ImageTransformPaddingAbsolute": {"input": {"required": {"images": ["IMAGE"], "add_width": ["INT", {"default": 64, "min": 0}], "add_height": ["INT", {"default": 64, "min": 0}], "method": [["reflect", "edge", "constant"]]}}, "input_order": {"required": ["images", "add_width", "add_height", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageTransformPaddingAbsolute", "display_name": "ImageTransformPaddingAbsolute", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/transform", "output_node": false}, "ImageTransformPaddingRelative": {"input": {"required": {"images": ["IMAGE"], "scale_width": ["FLOAT", {"default": 0.25, "step": 0.1}], "scale_height": ["FLOAT", {"default": 0.25, "step": 0.1}], "method": [["reflect", "edge", "constant"]]}}, "input_order": {"required": ["images", "scale_width", "scale_height", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageTransformPaddingRelative", "display_name": "ImageTransformPaddingRelative", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/transform", "output_node": false}, "ImageTransformRotate": {"input": {"required": {"images": ["IMAGE"], "angle": ["FLOAT", {"default": 35.0, "max": 360.0, "step": 0.1}], "expand": [["true", "false"]], "SSAA": ["INT", {"default": 4, "min": 1, "max": 16, "step": 1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}}, "input_order": {"required": ["images", "angle", "expand", "SSAA", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageTransformRotate", "display_name": "ImageTransformRotate", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/transform", "output_node": false}, "ImageTransformTranspose": {"input": {"required": {"images": ["IMAGE"], "method": [["flip_horizontally", "flip_vertically", "rotate_90", "rotate_180", "rotate_270", "transpose", "transverse"]]}}, "input_order": {"required": ["images", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageTransformTranspose", "display_name": "ImageTransformTranspose", "description": "", "python_module": "custom_nodes.ComfyUI-Allor", "category": "image/transform", "output_node": false}, "RecommendedResCalc": {"input": {"required": {"desiredXSIZE": ["INT", {"default": 1024, "min": 0, "max": 8192, "step": 2}], "desiredYSIZE": ["INT", {"default": 1024, "min": 0, "max": 8192, "step": 2}]}}, "input_order": {"required": ["desiredXSIZE", "desiredYSIZE"]}, "output": ["INT", "INT", "FLOAT", "FLOAT", "FLOAT"], "output_is_list": [false, false, false, false, false], "output_name": ["recomm width", "recomm height", "upscale factor", "reverse upscale for 4x", "reverse upscale for 2x"], "name": "RecommendedResCalc", "display_name": "Recommended Resolution Calculator", "description": "", "python_module": "custom_nodes.sdxl-recommended-res-calc", "category": "utils", "output_node": false}, "IF_PromptMkr": {"input": {"required": {"input_prompt": ["STRING", {"multiline": true, "default": "Ancient mega-structure, small lone figure in the foreground"}], "base_ip": ["STRING", {"default": "localhost"}], "port": ["STRING", {"default": "11434"}], "engine": [["ollama", "openai", "anthropic"], {"default": "ollama"}], "selected_model": [[], {}], "profile": [["Cortana", "Yuka", "Dr_claudia", "Dilia", "MissEmily", "IF_PromptMKR", "IF_PromptMKR_IMG", "None"], {"default": "IF_PromptMKR"}], "embellish_prompt": [["None", "Award", "Beautiful", "Fashion", "Epic", "Simple", "Studio", "Portrait", "Portrai_CloseUP", "Product", "ProductMacro", "Fullbodyshot", "Horror", "CloseUp", "WideShot", "LowAngle", "BirdEye", "FishEye", "Tilt-Shift", "LongExposure", "Sketch", "Painting", "DigitalArt"], {}], "style_prompt": [["None", "3DcartoonStyle", "Adverts", "Analog", "Anime", "Arquitechture", "Cinematic", "DigitalArt", "FantasyArt", "Horror", "Minimalist", "NeonPunk", "Photographic", "Realstate", "Reinassance", "Tilt-Shift", "LongExposure", "Painting", "Sketch", "watercolor", "Vaporwave", "Steampunk", "Ukiyo-e", "LowPoly", "Pixelart", "Storybook", "Surrealism", "Cubism", "SpaceConcept", "ComicBook", "Impressionism", "Expressionism", "PopArt", "StreetArt", "ConceptArt", "TattooArt", "Calligraphy", "Psychedelic", "Botanical", "Isometric", "GlassArt", "Mosaic", "Sculpture", "Typography", "IconicPop", "PosterArt", "Editorial", "Caricature", "MapArt", "Silhouette", "Predator", "Conan", "Terminator", "LordOfTheRings", "HarryPotter", "InTheMoodForLove", "ChungkingExpress", "BladeRunner", "TheGrandBudapestHotel", "Inception", "MadMax", "TheMatrix"], {}], "neg_prompt": [["None", "AnimeTI", "AtomeaseNoWaifus", "BadChill", "BadChill2", "BadDream_scene", "BadMacho", "Neutral", "noTI_neg", "FantasyArt", "ReliberateNeg", "Simple_negative", "Standard", "PortraitNeg", "LandscapeNeg", "AbstractNeg", "FoodNeg", "FashionNeg", "ArchitectureNeg", "VehicleNeg", "AnimalNeg", "SportsNeg", "TechnologyNeg"], {}], "temperature": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.1}]}, "optional": {"max_tokens": ["INT", {"default": 256, "min": 1, "max": 8192}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "random": ["BOOLEAN", {"default": false, "label_on": "Seed", "label_off": "Temperature"}], "keep_alive": ["BOOLEAN", {"default": false, "label_on": "Keeps_Model", "label_off": "Unloads_Model"}]}, "hidden": {"model": ["STRING", {"default": ""}]}}, "input_order": {"required": ["input_prompt", "base_ip", "port", "engine", "selected_model", "profile", "embellish_prompt", "style_prompt", "neg_prompt", "temperature"], "optional": ["max_tokens", "seed", "random", "keep_alive"], "hidden": ["model"]}, "output": ["STRING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["Question", "Response", "Negative"], "name": "IF_PromptMkr", "display_name": "IF Prompt to Prompt\ud83d\udcac", "description": "", "python_module": "custom_nodes.ComfyUI-IF_AI_tools", "category": "ImpactFrames\ud83d\udca5\ud83c\udf9e\ufe0f", "output_node": false}, "IF_ImagePrompt": {"input": {"required": {"image": ["IMAGE"], "image_prompt": ["STRING", {"multiline": true, "default": ""}], "base_ip": ["STRING", {"default": "localhost"}], "port": ["STRING", {"default": "11434"}], "engine": [["ollama", "openai", "anthropic"], {"default": "ollama"}], "selected_model": [[], {}], "profile": [["Cortana", "Yuka", "Dr_claudia", "Dilia", "MissEmily", "IF_PromptMKR", "IF_PromptMKR_IMG", "None"], {"default": "IF_PromptMKR_IMG"}], "embellish_prompt": [["None", "Award", "Beautiful", "Fashion", "Epic", "Simple", "Studio", "Portrait", "Portrai_CloseUP", "Product", "ProductMacro", "Fullbodyshot", "Horror", "CloseUp", "WideShot", "LowAngle", "BirdEye", "FishEye", "Tilt-Shift", "LongExposure", "Sketch", "Painting", "DigitalArt"], {}], "style_prompt": [["None", "3DcartoonStyle", "Adverts", "Analog", "Anime", "Arquitechture", "Cinematic", "DigitalArt", "FantasyArt", "Horror", "Minimalist", "NeonPunk", "Photographic", "Realstate", "Reinassance", "Tilt-Shift", "LongExposure", "Painting", "Sketch", "watercolor", "Vaporwave", "Steampunk", "Ukiyo-e", "LowPoly", "Pixelart", "Storybook", "Surrealism", "Cubism", "SpaceConcept", "ComicBook", "Impressionism", "Expressionism", "PopArt", "StreetArt", "ConceptArt", "TattooArt", "Calligraphy", "Psychedelic", "Botanical", "Isometric", "GlassArt", "Mosaic", "Sculpture", "Typography", "IconicPop", "PosterArt", "Editorial", "Caricature", "MapArt", "Silhouette", "Predator", "Conan", "Terminator", "LordOfTheRings", "HarryPotter", "InTheMoodForLove", "ChungkingExpress", "BladeRunner", "TheGrandBudapestHotel", "Inception", "MadMax", "TheMatrix"], {}], "neg_prompt": [["None", "AnimeTI", "AtomeaseNoWaifus", "BadChill", "BadChill2", "BadDream_scene", "BadMacho", "Neutral", "noTI_neg", "FantasyArt", "ReliberateNeg", "Simple_negative", "Standard", "PortraitNeg", "LandscapeNeg", "AbstractNeg", "FoodNeg", "FashionNeg", "ArchitectureNeg", "VehicleNeg", "AnimalNeg", "SportsNeg", "TechnologyNeg"], {}], "temperature": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.1}]}, "optional": {"max_tokens": ["INT", {"default": 160, "min": 1, "max": 8192}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "random": ["BOOLEAN", {"default": false, "label_on": "Seed", "label_off": "Temperature"}], "keep_alive": ["BOOLEAN", {"default": false, "label_on": "Keeps_Model", "label_off": "Unloads_Model"}]}, "hidden": {"model": ["STRING", {"default": ""}]}}, "input_order": {"required": ["image", "image_prompt", "base_ip", "port", "engine", "selected_model", "profile", "embellish_prompt", "style_prompt", "neg_prompt", "temperature"], "optional": ["max_tokens", "seed", "random", "keep_alive"], "hidden": ["model"]}, "output": ["STRING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["Question", "Response", "Negative"], "name": "IF_ImagePrompt", "display_name": "IF Image to Prompt\ud83d\uddbc\ufe0f", "description": "", "python_module": "custom_nodes.ComfyUI-IF_AI_tools", "category": "ImpactFrames\ud83d\udca5\ud83c\udf9e\ufe0f", "output_node": true}, "IF_SaveText": {"input": {"required": {"question_input": ["STRING", {"forceInput": true}], "response_input": ["STRING", {"forceInput": true}], "negative_input": ["STRING", {"forceInput": true}]}, "optional": {"save_file": ["BOOLEAN", {"default": false, "label_on": "Save Text", "label_off": "Don't Save"}], "file_format": [["csv", "txt", "json"]], "save_mode": [["create", "overwrite", "append"]]}}, "input_order": {"required": ["question_input", "response_input", "negative_input"], "optional": ["save_file", "file_format", "save_mode"]}, "output": ["STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["Question", "Response", "Negative", "Turn"], "name": "IF_SaveText", "display_name": "IF Save Text\ud83d\udcdd", "description": "", "python_module": "custom_nodes.ComfyUI-IF_AI_tools", "category": "ImpactFrames\ud83d\udca5\ud83c\udf9e\ufe0f", "output_node": true}, "IF_DisplayText": {"input": {"required": {"text": ["STRING", {"forceInput": true}]}, "hidden": {}}, "input_order": {"required": ["text"], "hidden": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "IF_DisplayText", "display_name": "IF Display Text\ud83d\udcdf", "description": "", "python_module": "custom_nodes.ComfyUI-IF_AI_tools", "category": "ImpactFrames\ud83d\udca5\ud83c\udf9e\ufe0f", "output_node": true}, "IF_DisplayOmni": {"input": {"required": {}, "optional": {"omni_input": ["OMNI", {}]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": [], "optional": ["omni_input"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["OMOST_CANVAS_CONDITIONING", "STRING"], "output_is_list": [false, false], "output_name": ["canvas_conditioning", "text_output"], "name": "IF_DisplayOmni", "display_name": "IF Display Omni\ud83d\udd0d", "description": "", "python_module": "custom_nodes.ComfyUI-IF_AI_tools", "category": "ImpactFrames\ud83d\udca5\ud83c\udf9e\ufe0f", "output_node": true}, "IF_TextTyper": {"input": {"required": {"text": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "IF_TextTyper", "display_name": "IF Text Typer\u270d\ufe0f", "description": "", "python_module": "custom_nodes.ComfyUI-IF_AI_tools", "category": "ImpactFrames\ud83d\udca5\ud83c\udf9e\ufe0f", "output_node": true}, "PixelResolutionCalculator": {"input": {"required": {"megapixels": ["FLOAT", {"default": 2.0, "min": 0.1, "max": 100.0}], "aspect_ratio_width": ["INT", {"default": 3, "min": 1, "max": 100}], "aspect_ratio_height": ["INT", {"default": 4, "min": 1, "max": 100}], "divided_by": ["INT", {"default": 8, "min": 1, "max": 100}]}}, "input_order": {"required": ["megapixels", "aspect_ratio_width", "aspect_ratio_height", "divided_by"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["width", "height"], "name": "PixelResolutionCalculator", "display_name": "PixelResolutionCalculator", "description": "", "python_module": "custom_nodes.ComfyUI-PixelResolutionCalculator", "category": "image", "output_node": false}, "LatentSizeToPixelSize": {"input": {"required": {"samples": ["LATENT"], "latent_block_size": ["INT", {"default": 8, "min": 1, "max": 100}]}}, "input_order": {"required": ["samples", "latent_block_size"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["pixel_width", "pixel_height"], "name": "LatentSizeToPixelSize", "display_name": "LatentSizeToPixelSize", "description": "", "python_module": "custom_nodes.ComfyUI-PixelResolutionCalculator", "category": "image", "output_node": false}, "TimestepKeyframe": {"input": {"required": {"start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"prev_timestep_kf": ["TIMESTEP_KEYFRAME"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "cn_weights": ["CONTROL_NET_WEIGHTS"], "latent_keyframe": ["LATENT_KEYFRAME"], "null_latent_kf_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.001}], "inherit_missing": ["BOOLEAN", {"default": true}], "guarantee_steps": ["INT", {"default": 1, "min": 0, "max": 9007199254740991}], "mask_optional": ["MASK"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["start_percent"], "optional": ["prev_timestep_kf", "strength", "cn_weights", "latent_keyframe", "null_latent_kf_strength", "inherit_missing", "guarantee_steps", "mask_optional", "autosize"]}, "output": ["TIMESTEP_KEYFRAME"], "output_is_list": [false], "output_name": ["TIMESTEP_KF"], "name": "TimestepKeyframe", "display_name": "Timestep Keyframe \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes", "output_node": false}, "ACN_TimestepKeyframeInterpolation": {"input": {"required": {"start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "strength_start": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "strength_end": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "interpolation": [["linear", "ease-in", "ease-out", "ease-in-out"]], "intervals": ["INT", {"default": 50, "min": 2, "max": 100, "step": 1}]}, "optional": {"prev_timestep_kf": ["TIMESTEP_KEYFRAME"], "cn_weights": ["CONTROL_NET_WEIGHTS"], "latent_keyframe": ["LATENT_KEYFRAME"], "null_latent_kf_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.001}], "inherit_missing": ["BOOLEAN", {"default": true}], "mask_optional": ["MASK"], "print_keyframes": ["BOOLEAN", {"default": false}], "autosize": ["ACNAUTOSIZE", {"padding": 50}]}}, "input_order": {"required": ["start_percent", "end_percent", "strength_start", "strength_end", "interpolation", "intervals"], "optional": ["prev_timestep_kf", "cn_weights", "latent_keyframe", "null_latent_kf_strength", "inherit_missing", "mask_optional", "print_keyframes", "autosize"]}, "output": ["TIMESTEP_KEYFRAME"], "output_is_list": [false], "output_name": ["TIMESTEP_KF"], "name": "ACN_TimestepKeyframeInterpolation", "display_name": "Timestep Keyframe Interp. \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes", "output_node": false}, "ACN_TimestepKeyframeFromStrengthList": {"input": {"required": {"float_strengths": ["FLOAT", {"default": -1, "min": -1, "step": 0.001, "forceInput": true}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"prev_timestep_kf": ["TIMESTEP_KEYFRAME"], "cn_weights": ["CONTROL_NET_WEIGHTS"], "latent_keyframe": ["LATENT_KEYFRAME"], "null_latent_kf_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.001}], "inherit_missing": ["BOOLEAN", {"default": true}], "mask_optional": ["MASK"], "print_keyframes": ["BOOLEAN", {"default": false}], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["float_strengths", "start_percent", "end_percent"], "optional": ["prev_timestep_kf", "cn_weights", "latent_keyframe", "null_latent_kf_strength", "inherit_missing", "mask_optional", "print_keyframes", "autosize"]}, "output": ["TIMESTEP_KEYFRAME"], "output_is_list": [false], "output_name": ["TIMESTEP_KF"], "name": "ACN_TimestepKeyframeFromStrengthList", "display_name": "Timestep Keyframe From List \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes", "output_node": false}, "LatentKeyframe": {"input": {"required": {"batch_index": ["INT", {"default": 0, "min": -9007199254740991, "max": 9007199254740991, "step": 1}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}]}, "optional": {"prev_latent_kf": ["LATENT_KEYFRAME"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["batch_index", "strength"], "optional": ["prev_latent_kf", "autosize"]}, "output": ["LATENT_KEYFRAME"], "output_is_list": [false], "output_name": ["LATENT_KF"], "name": "LatentKeyframe", "display_name": "Latent Keyframe \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes", "output_node": false}, "LatentKeyframeTiming": {"input": {"required": {"batch_index_from": ["INT", {"default": 0, "min": -9007199254740991, "max": 9007199254740991, "step": 1}], "batch_index_to_excl": ["INT", {"default": 0, "min": -9007199254740991, "max": 9007199254740991, "step": 1}], "strength_from": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "strength_to": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "interpolation": [["linear", "ease-in", "ease-out", "ease-in-out"]]}, "optional": {"prev_latent_kf": ["LATENT_KEYFRAME"], "print_keyframes": ["BOOLEAN", {"default": false}], "autosize": ["ACNAUTOSIZE", {"padding": 50}]}}, "input_order": {"required": ["batch_index_from", "batch_index_to_excl", "strength_from", "strength_to", "interpolation"], "optional": ["prev_latent_kf", "print_keyframes", "autosize"]}, "output": ["LATENT_KEYFRAME"], "output_is_list": [false], "output_name": ["LATENT_KF"], "name": "LatentKeyframeTiming", "display_name": "Latent Keyframe Interp. \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes", "output_node": false}, "LatentKeyframeBatchedGroup": {"input": {"required": {"float_strengths": ["FLOAT", {"default": -1, "min": -1, "step": 0.001, "forceInput": true}]}, "optional": {"prev_latent_kf": ["LATENT_KEYFRAME"], "print_keyframes": ["BOOLEAN", {"default": false}], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["float_strengths"], "optional": ["prev_latent_kf", "print_keyframes", "autosize"]}, "output": ["LATENT_KEYFRAME"], "output_is_list": [false], "output_name": ["LATENT_KF"], "name": "LatentKeyframeBatchedGroup", "display_name": "Latent Keyframe From List \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes", "output_node": false}, "LatentKeyframeGroup": {"input": {"required": {"index_strengths": ["STRING", {"multiline": true, "default": ""}]}, "optional": {"prev_latent_kf": ["LATENT_KEYFRAME"], "latent_optional": ["LATENT"], "print_keyframes": ["BOOLEAN", {"default": false}], "autosize": ["ACNAUTOSIZE", {"padding": 35}]}}, "input_order": {"required": ["index_strengths"], "optional": ["prev_latent_kf", "latent_optional", "print_keyframes", "autosize"]}, "output": ["LATENT_KEYFRAME"], "output_is_list": [false], "output_name": ["LATENT_KF"], "name": "LatentKeyframeGroup", "display_name": "Latent Keyframe Group \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes", "output_node": false}, "ACN_AdvancedControlNetApply": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "control_net": ["CONTROL_NET"], "image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"mask_optional": ["MASK"], "timestep_kf": ["TIMESTEP_KEYFRAME"], "latent_kf_override": ["LATENT_KEYFRAME"], "weights_override": ["CONTROL_NET_WEIGHTS"], "model_optional": ["MODEL"], "vae_optional": ["VAE"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["positive", "negative", "control_net", "image", "strength", "start_percent", "end_percent"], "optional": ["mask_optional", "timestep_kf", "latent_kf_override", "weights_override", "model_optional", "vae_optional", "autosize"]}, "output": ["CONDITIONING", "CONDITIONING", "MODEL"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "model_opt"], "name": "ACN_AdvancedControlNetApply", "display_name": "Apply Advanced ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "output_node": false}, "ACN_AdvancedControlNetApplySingle": {"input": {"required": {"conditioning": ["CONDITIONING"], "control_net": ["CONTROL_NET"], "image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"mask_optional": ["MASK"], "timestep_kf": ["TIMESTEP_KEYFRAME"], "latent_kf_override": ["LATENT_KEYFRAME"], "weights_override": ["CONTROL_NET_WEIGHTS"], "model_optional": ["MODEL"], "vae_optional": ["VAE"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["conditioning", "control_net", "image", "strength", "start_percent", "end_percent"], "optional": ["mask_optional", "timestep_kf", "latent_kf_override", "weights_override", "model_optional", "vae_optional", "autosize"]}, "output": ["CONDITIONING", "MODEL"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "model_opt"], "name": "ACN_AdvancedControlNetApplySingle", "display_name": "Apply Advanced ControlNet(1) \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "output_node": false}, "ControlNetLoaderAdvanced": {"input": {"required": {"control_net_name": [["canny-sdxl-1.0.safetensors", "canny-xl1.0.safetensors", "control_sd15_canny.pth", "control_sd15_depth.pth", "control_sd15_normal.pth", "controlnet11Models_tileE.safetensors", "depth-sdxl-1.0.safetensors", "depth-zoe-xl-v1.0-controlnet.safetensors", "diffusers_xl_canny_full.safetensors", "diffusers_xl_depth_full.safetensors", "flux-canny-controlnet-v3.safetensors", "flux-controlnet-union.safetensors", "flux-depth-controlnet-v3.safetensors", "jasperai_flux_depth_controlnet.safetensors", "jasperai_flux_surface_normals_controlnet.safetensors", "mistoLine_fp16.safetensors", "sai_xl_canny_256lora.safetensors", "sai_xl_depth_256lora.safetensors", "t2i-adapter-canny.safetensors", "t2i-adapter-depth.safetensors", "t2iadapter_canny_sd14v1.pth", "t2iadapter_depth_sd14v1.pth", "v3_sd15_sparsectrl_rgb.ckpt", "xinsir_canny.safetensors", "xinsir_depth.safetensors"]]}, "optional": {"tk_optional": ["TIMESTEP_KEYFRAME"]}}, "input_order": {"required": ["control_net_name"], "optional": ["tk_optional"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "ControlNetLoaderAdvanced", "display_name": "Load Advanced ControlNet Model \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "output_node": false}, "DiffControlNetLoaderAdvanced": {"input": {"required": {"model": ["MODEL"], "control_net_name": [["canny-sdxl-1.0.safetensors", "canny-xl1.0.safetensors", "control_sd15_canny.pth", "control_sd15_depth.pth", "control_sd15_normal.pth", "controlnet11Models_tileE.safetensors", "depth-sdxl-1.0.safetensors", "depth-zoe-xl-v1.0-controlnet.safetensors", "diffusers_xl_canny_full.safetensors", "diffusers_xl_depth_full.safetensors", "flux-canny-controlnet-v3.safetensors", "flux-controlnet-union.safetensors", "flux-depth-controlnet-v3.safetensors", "jasperai_flux_depth_controlnet.safetensors", "jasperai_flux_surface_normals_controlnet.safetensors", "mistoLine_fp16.safetensors", "sai_xl_canny_256lora.safetensors", "sai_xl_depth_256lora.safetensors", "t2i-adapter-canny.safetensors", "t2i-adapter-depth.safetensors", "t2iadapter_canny_sd14v1.pth", "t2iadapter_depth_sd14v1.pth", "v3_sd15_sparsectrl_rgb.ckpt", "xinsir_canny.safetensors", "xinsir_depth.safetensors"]]}, "optional": {"tk_optional": ["TIMESTEP_KEYFRAME"], "autosize": ["ACNAUTOSIZE", {"padding": 160}]}}, "input_order": {"required": ["model", "control_net_name"], "optional": ["tk_optional", "autosize"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "DiffControlNetLoaderAdvanced", "display_name": "Load Advanced ControlNet Model (diff) \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "output_node": false}, "ACN_ScaledSoftControlNetWeights": {"input": {"required": {"base_multiplier": ["FLOAT", {"default": 0.825, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"uncond_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "cn_extras": ["CN_WEIGHTS_EXTRAS"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["base_multiplier"], "optional": ["uncond_multiplier", "cn_extras", "autosize"]}, "output": ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"], "output_is_list": [false, false], "output_name": ["CN_WEIGHTS", "TK_SHORTCUT"], "name": "ACN_ScaledSoftControlNetWeights", "display_name": "Scaled Soft Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights", "output_node": false}, "ScaledSoftMaskedUniversalWeights": {"input": {"required": {"mask": ["MASK"], "min_base_multiplier": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "max_base_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"uncond_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "cn_extras": ["CN_WEIGHTS_EXTRAS"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["mask", "min_base_multiplier", "max_base_multiplier"], "optional": ["uncond_multiplier", "cn_extras", "autosize"]}, "output": ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"], "output_is_list": [false, false], "output_name": ["CN_WEIGHTS", "TK_SHORTCUT"], "name": "ScaledSoftMaskedUniversalWeights", "display_name": "Scaled Soft Masked Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights", "output_node": false}, "ACN_SoftControlNetWeightsSD15": {"input": {"required": {"output_0": ["FLOAT", {"default": 0.09941396206337118, "min": 0.0, "max": 10.0, "step": 0.001}], "output_1": ["FLOAT", {"default": 0.12050177219802567, "min": 0.0, "max": 10.0, "step": 0.001}], "output_2": ["FLOAT", {"default": 0.14606275417942507, "min": 0.0, "max": 10.0, "step": 0.001}], "output_3": ["FLOAT", {"default": 0.17704576264172736, "min": 0.0, "max": 10.0, "step": 0.001}], "output_4": ["FLOAT", {"default": 0.214600924414215, "min": 0.0, "max": 10.0, "step": 0.001}], "output_5": ["FLOAT", {"default": 0.26012233262329093, "min": 0.0, "max": 10.0, "step": 0.001}], "output_6": ["FLOAT", {"default": 0.3152997971191405, "min": 0.0, "max": 10.0, "step": 0.001}], "output_7": ["FLOAT", {"default": 0.3821815722656249, "min": 0.0, "max": 10.0, "step": 0.001}], "output_8": ["FLOAT", {"default": 0.4632503906249999, "min": 0.0, "max": 10.0, "step": 0.001}], "output_9": ["FLOAT", {"default": 0.561515625, "min": 0.0, "max": 10.0, "step": 0.001}], "output_10": ["FLOAT", {"default": 0.6806249999999999, "min": 0.0, "max": 10.0, "step": 0.001}], "output_11": ["FLOAT", {"default": 0.825, "min": 0.0, "max": 10.0, "step": 0.001}], "middle_0": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}]}, "optional": {"uncond_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "cn_extras": ["CN_WEIGHTS_EXTRAS"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["output_0", "output_1", "output_2", "output_3", "output_4", "output_5", "output_6", "output_7", "output_8", "output_9", "output_10", "output_11", "middle_0"], "optional": ["uncond_multiplier", "cn_extras", "autosize"]}, "output": ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"], "output_is_list": [false, false], "output_name": ["CN_WEIGHTS", "TK_SHORTCUT"], "name": "ACN_SoftControlNetWeightsSD15", "display_name": "ControlNet Soft Weights [SD1.5] \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights/ControlNet", "output_node": false}, "ACN_CustomControlNetWeightsSD15": {"input": {"required": {"output_0": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "output_1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "output_2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "output_3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "output_4": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "output_5": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "output_6": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "output_7": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "output_8": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "output_9": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "output_10": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "output_11": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "middle_0": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}]}, "optional": {"uncond_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "cn_extras": ["CN_WEIGHTS_EXTRAS"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["output_0", "output_1", "output_2", "output_3", "output_4", "output_5", "output_6", "output_7", "output_8", "output_9", "output_10", "output_11", "middle_0"], "optional": ["uncond_multiplier", "cn_extras", "autosize"]}, "output": ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"], "output_is_list": [false, false], "output_name": ["CN_WEIGHTS", "TK_SHORTCUT"], "name": "ACN_CustomControlNetWeightsSD15", "display_name": "ControlNet Custom Weights [SD1.5] \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights/ControlNet", "output_node": false}, "ACN_CustomControlNetWeightsFlux": {"input": {"required": {"input_0": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_4": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_5": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_6": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_7": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_8": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_9": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_10": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_11": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_12": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_13": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_14": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_15": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_16": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_17": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_18": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}]}, "optional": {"uncond_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "cn_extras": ["CN_WEIGHTS_EXTRAS"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["input_0", "input_1", "input_2", "input_3", "input_4", "input_5", "input_6", "input_7", "input_8", "input_9", "input_10", "input_11", "input_12", "input_13", "input_14", "input_15", "input_16", "input_17", "input_18"], "optional": ["uncond_multiplier", "cn_extras", "autosize"]}, "output": ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"], "output_is_list": [false, false], "output_name": ["CN_WEIGHTS", "TK_SHORTCUT"], "name": "ACN_CustomControlNetWeightsFlux", "display_name": "ControlNet Custom Weights [Flux] \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights/ControlNet", "output_node": false}, "ACN_SoftT2IAdapterWeights": {"input": {"required": {"input_0": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 10.0, "step": 0.001}], "input_1": ["FLOAT", {"default": 0.62, "min": 0.0, "max": 10.0, "step": 0.001}], "input_2": ["FLOAT", {"default": 0.825, "min": 0.0, "max": 10.0, "step": 0.001}], "input_3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}]}, "optional": {"uncond_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "cn_extras": ["CN_WEIGHTS_EXTRAS"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["input_0", "input_1", "input_2", "input_3"], "optional": ["uncond_multiplier", "cn_extras", "autosize"]}, "output": ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"], "output_is_list": [false, false], "output_name": ["CN_WEIGHTS", "TK_SHORTCUT"], "name": "ACN_SoftT2IAdapterWeights", "display_name": "T2IAdapter Soft Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights/T2IAdapter", "output_node": false}, "ACN_CustomT2IAdapterWeights": {"input": {"required": {"input_0": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "input_3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}]}, "optional": {"uncond_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "cn_extras": ["CN_WEIGHTS_EXTRAS"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["input_0", "input_1", "input_2", "input_3"], "optional": ["uncond_multiplier", "cn_extras", "autosize"]}, "output": ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"], "output_is_list": [false, false], "output_name": ["CN_WEIGHTS", "TK_SHORTCUT"], "name": "ACN_CustomT2IAdapterWeights", "display_name": "T2IAdapter Custom Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights/T2IAdapter", "output_node": false}, "ACN_DefaultUniversalWeights": {"input": {"optional": {"cn_extras": ["CN_WEIGHTS_EXTRAS"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"optional": ["cn_extras", "autosize"]}, "output": ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"], "output_is_list": [false, false], "output_name": ["CN_WEIGHTS", "TK_SHORTCUT"], "name": "ACN_DefaultUniversalWeights", "display_name": "Default Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights", "output_node": false}, "ACN_SparseCtrlRGBPreprocessor": {"input": {"required": {"image": ["IMAGE"], "vae": ["VAE"], "latent_size": ["LATENT"]}, "optional": {"autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["image", "vae", "latent_size"], "optional": ["autosize"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["proc_IMAGE"], "name": "ACN_SparseCtrlRGBPreprocessor", "display_name": "RGB SparseCtrl \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl/preprocess", "output_node": false}, "ACN_SparseCtrlLoaderAdvanced": {"input": {"required": {"sparsectrl_name": [["canny-sdxl-1.0.safetensors", "canny-xl1.0.safetensors", "control_sd15_canny.pth", "control_sd15_depth.pth", "control_sd15_normal.pth", "controlnet11Models_tileE.safetensors", "depth-sdxl-1.0.safetensors", "depth-zoe-xl-v1.0-controlnet.safetensors", "diffusers_xl_canny_full.safetensors", "diffusers_xl_depth_full.safetensors", "flux-canny-controlnet-v3.safetensors", "flux-controlnet-union.safetensors", "flux-depth-controlnet-v3.safetensors", "jasperai_flux_depth_controlnet.safetensors", "jasperai_flux_surface_normals_controlnet.safetensors", "mistoLine_fp16.safetensors", "sai_xl_canny_256lora.safetensors", "sai_xl_depth_256lora.safetensors", "t2i-adapter-canny.safetensors", "t2i-adapter-depth.safetensors", "t2iadapter_canny_sd14v1.pth", "t2iadapter_depth_sd14v1.pth", "v3_sd15_sparsectrl_rgb.ckpt", "xinsir_canny.safetensors", "xinsir_depth.safetensors"]], "use_motion": ["BOOLEAN", {"default": true}], "motion_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "motion_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}]}, "optional": {"sparse_method": ["SPARSE_METHOD"], "tk_optional": ["TIMESTEP_KEYFRAME"], "context_aware": [["nearest_hint", "off"]], "sparse_hint_mult": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "sparse_nonhint_mult": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "sparse_mask_mult": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}]}}, "input_order": {"required": ["sparsectrl_name", "use_motion", "motion_strength", "motion_scale"], "optional": ["sparse_method", "tk_optional", "context_aware", "sparse_hint_mult", "sparse_nonhint_mult", "sparse_mask_mult"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "ACN_SparseCtrlLoaderAdvanced", "display_name": "Load SparseCtrl Model \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl", "output_node": false}, "ACN_SparseCtrlMergedLoaderAdvanced": {"input": {"required": {"sparsectrl_name": [["canny-sdxl-1.0.safetensors", "canny-xl1.0.safetensors", "control_sd15_canny.pth", "control_sd15_depth.pth", "control_sd15_normal.pth", "controlnet11Models_tileE.safetensors", "depth-sdxl-1.0.safetensors", "depth-zoe-xl-v1.0-controlnet.safetensors", "diffusers_xl_canny_full.safetensors", "diffusers_xl_depth_full.safetensors", "flux-canny-controlnet-v3.safetensors", "flux-controlnet-union.safetensors", "flux-depth-controlnet-v3.safetensors", "jasperai_flux_depth_controlnet.safetensors", "jasperai_flux_surface_normals_controlnet.safetensors", "mistoLine_fp16.safetensors", "sai_xl_canny_256lora.safetensors", "sai_xl_depth_256lora.safetensors", "t2i-adapter-canny.safetensors", "t2i-adapter-depth.safetensors", "t2iadapter_canny_sd14v1.pth", "t2iadapter_depth_sd14v1.pth", "v3_sd15_sparsectrl_rgb.ckpt", "xinsir_canny.safetensors", "xinsir_depth.safetensors"]], "control_net_name": [["canny-sdxl-1.0.safetensors", "canny-xl1.0.safetensors", "control_sd15_canny.pth", "control_sd15_depth.pth", "control_sd15_normal.pth", "controlnet11Models_tileE.safetensors", "depth-sdxl-1.0.safetensors", "depth-zoe-xl-v1.0-controlnet.safetensors", "diffusers_xl_canny_full.safetensors", "diffusers_xl_depth_full.safetensors", "flux-canny-controlnet-v3.safetensors", "flux-controlnet-union.safetensors", "flux-depth-controlnet-v3.safetensors", "jasperai_flux_depth_controlnet.safetensors", "jasperai_flux_surface_normals_controlnet.safetensors", "mistoLine_fp16.safetensors", "sai_xl_canny_256lora.safetensors", "sai_xl_depth_256lora.safetensors", "t2i-adapter-canny.safetensors", "t2i-adapter-depth.safetensors", "t2iadapter_canny_sd14v1.pth", "t2iadapter_depth_sd14v1.pth", "v3_sd15_sparsectrl_rgb.ckpt", "xinsir_canny.safetensors", "xinsir_depth.safetensors"]], "use_motion": ["BOOLEAN", {"default": true}], "motion_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "motion_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}]}, "optional": {"sparse_method": ["SPARSE_METHOD"], "tk_optional": ["TIMESTEP_KEYFRAME"]}}, "input_order": {"required": ["sparsectrl_name", "control_net_name", "use_motion", "motion_strength", "motion_scale"], "optional": ["sparse_method", "tk_optional"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "ACN_SparseCtrlMergedLoaderAdvanced", "display_name": "\ud83e\uddeaLoad Merged SparseCtrl Model \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl/experimental", "output_node": false}, "ACN_SparseCtrlIndexMethodNode": {"input": {"required": {"indexes": ["STRING", {"default": "0"}]}}, "input_order": {"required": ["indexes"]}, "output": ["SPARSE_METHOD"], "output_is_list": [false], "output_name": ["SPARSE_METHOD"], "name": "ACN_SparseCtrlIndexMethodNode", "display_name": "SparseCtrl Index Method \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl", "output_node": false}, "ACN_SparseCtrlSpreadMethodNode": {"input": {"required": {"spread": [["uniform", "starting", "ending", "center"]]}}, "input_order": {"required": ["spread"]}, "output": ["SPARSE_METHOD"], "output_is_list": [false], "output_name": ["SPARSE_METHOD"], "name": "ACN_SparseCtrlSpreadMethodNode", "display_name": "SparseCtrl Spread Method \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl", "output_node": false}, "ACN_SparseCtrlWeightExtras": {"input": {"optional": {"cn_extras": ["CN_WEIGHTS_EXTRAS"], "sparse_hint_mult": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "sparse_nonhint_mult": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "sparse_mask_mult": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "autosize": ["ACNAUTOSIZE", {"padding": 50}]}}, "input_order": {"optional": ["cn_extras", "sparse_hint_mult", "sparse_nonhint_mult", "sparse_mask_mult", "autosize"]}, "output": ["CN_WEIGHTS_EXTRAS"], "output_is_list": [false], "output_name": ["cn_extras"], "name": "ACN_SparseCtrlWeightExtras", "display_name": "SparseCtrl Weight Extras \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl/extras", "output_node": false}, "ACN_ControlNet++LoaderSingle": {"input": {"required": {"name": [["canny-sdxl-1.0.safetensors", "canny-xl1.0.safetensors", "control_sd15_canny.pth", "control_sd15_depth.pth", "control_sd15_normal.pth", "controlnet11Models_tileE.safetensors", "depth-sdxl-1.0.safetensors", "depth-zoe-xl-v1.0-controlnet.safetensors", "diffusers_xl_canny_full.safetensors", "diffusers_xl_depth_full.safetensors", "flux-canny-controlnet-v3.safetensors", "flux-controlnet-union.safetensors", "flux-depth-controlnet-v3.safetensors", "jasperai_flux_depth_controlnet.safetensors", "jasperai_flux_surface_normals_controlnet.safetensors", "mistoLine_fp16.safetensors", "sai_xl_canny_256lora.safetensors", "sai_xl_depth_256lora.safetensors", "t2i-adapter-canny.safetensors", "t2i-adapter-depth.safetensors", "t2iadapter_canny_sd14v1.pth", "t2iadapter_depth_sd14v1.pth", "v3_sd15_sparsectrl_rgb.ckpt", "xinsir_canny.safetensors", "xinsir_depth.safetensors"]], "control_type": [["openpose", "depth", "hed/pidi/scribble/ted", "canny/lineart/mlsd", "normal", "segment", "tile", "inpaint/outpaint", "none"], {"default": "none"}]}}, "input_order": {"required": ["name", "control_type"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "ACN_ControlNet++LoaderSingle", "display_name": "Load ControlNet++ Model (Single) \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/ControlNet++", "output_node": false}, "ACN_ControlNet++LoaderAdvanced": {"input": {"required": {"plus_input": ["PLUS_INPUT"], "name": [["canny-sdxl-1.0.safetensors", "canny-xl1.0.safetensors", "control_sd15_canny.pth", "control_sd15_depth.pth", "control_sd15_normal.pth", "controlnet11Models_tileE.safetensors", "depth-sdxl-1.0.safetensors", "depth-zoe-xl-v1.0-controlnet.safetensors", "diffusers_xl_canny_full.safetensors", "diffusers_xl_depth_full.safetensors", "flux-canny-controlnet-v3.safetensors", "flux-controlnet-union.safetensors", "flux-depth-controlnet-v3.safetensors", "jasperai_flux_depth_controlnet.safetensors", "jasperai_flux_surface_normals_controlnet.safetensors", "mistoLine_fp16.safetensors", "sai_xl_canny_256lora.safetensors", "sai_xl_depth_256lora.safetensors", "t2i-adapter-canny.safetensors", "t2i-adapter-depth.safetensors", "t2iadapter_canny_sd14v1.pth", "t2iadapter_depth_sd14v1.pth", "v3_sd15_sparsectrl_rgb.ckpt", "xinsir_canny.safetensors", "xinsir_depth.safetensors"]]}}, "input_order": {"required": ["plus_input", "name"]}, "output": ["CONTROL_NET", "IMAGE"], "output_is_list": [false, false], "output_name": ["CONTROL_NET", "IMAGE"], "name": "ACN_ControlNet++LoaderAdvanced", "display_name": "Load ControlNet++ Model (Multi) \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/ControlNet++", "output_node": false}, "ACN_ControlNet++InputNode": {"input": {"required": {"image": ["IMAGE"], "control_type": [["openpose", "depth", "hed/pidi/scribble/ted", "canny/lineart/mlsd", "normal", "segment", "tile", "inpaint/outpaint"]]}, "optional": {"prev_plus_input": ["PLUS_INPUT"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["image", "control_type"], "optional": ["prev_plus_input", "autosize"]}, "output": ["PLUS_INPUT"], "output_is_list": [false], "output_name": ["PLUS_INPUT"], "name": "ACN_ControlNet++InputNode", "display_name": "ControlNet++ Input \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/ControlNet++", "output_node": false}, "ACN_ReferencePreprocessor": {"input": {"required": {"image": ["IMAGE"], "vae": ["VAE"], "latent_size": ["LATENT"]}}, "input_order": {"required": ["image", "vae", "latent_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["proc_IMAGE"], "name": "ACN_ReferencePreprocessor", "display_name": "Reference Preproccessor \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/Reference/preprocess", "output_node": false}, "ACN_ReferenceControlNet": {"input": {"required": {"reference_type": [["reference_attn", "reference_adain", "reference_attn+adain"]], "style_fidelity": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "ref_weight": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["reference_type", "style_fidelity", "ref_weight"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "ACN_ReferenceControlNet", "display_name": "Reference ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/Reference", "output_node": false}, "ACN_ReferenceControlNetFinetune": {"input": {"required": {"attn_style_fidelity": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "attn_ref_weight": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "attn_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "adain_style_fidelity": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "adain_ref_weight": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "adain_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["attn_style_fidelity", "attn_ref_weight", "attn_strength", "adain_style_fidelity", "adain_ref_weight", "adain_strength"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "ACN_ReferenceControlNetFinetune", "display_name": "Reference ControlNet (Finetune) \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/Reference", "output_node": false}, "LoadImagesFromDirectory": {"input": {"required": {"directory": ["STRING", {"default": ""}]}, "optional": {"image_load_cap": ["INT", {"default": 0, "min": 0, "max": 9007199254740991, "step": 1}], "start_index": ["INT", {"default": 0, "min": 0, "max": 9007199254740991, "step": 1}]}}, "input_order": {"required": ["directory"], "optional": ["image_load_cap", "start_index"]}, "output": ["IMAGE", "MASK", "INT"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "MASK", "INT"], "name": "LoadImagesFromDirectory", "display_name": "\ud83d\udeabLoad Images [DEPRECATED] \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "", "output_node": false}, "ScaledSoftControlNetWeights": {"input": {"required": {"base_multiplier": ["FLOAT", {"default": 0.825, "min": 0.0, "max": 1.0, "step": 0.001}], "flip_weights": ["BOOLEAN", {"default": false}]}, "optional": {"uncond_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "cn_extras": ["CN_WEIGHTS_EXTRAS"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["base_multiplier", "flip_weights"], "optional": ["uncond_multiplier", "cn_extras", "autosize"]}, "output": ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"], "output_is_list": [false, false], "output_name": ["CN_WEIGHTS", "TK_SHORTCUT"], "name": "ScaledSoftControlNetWeights", "display_name": "Scaled Soft Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "", "output_node": false}, "SoftControlNetWeights": {"input": {"required": {"weight_00": ["FLOAT", {"default": 0.09941396206337118, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_01": ["FLOAT", {"default": 0.12050177219802567, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_02": ["FLOAT", {"default": 0.14606275417942507, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_03": ["FLOAT", {"default": 0.17704576264172736, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_04": ["FLOAT", {"default": 0.214600924414215, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_05": ["FLOAT", {"default": 0.26012233262329093, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_06": ["FLOAT", {"default": 0.3152997971191405, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_07": ["FLOAT", {"default": 0.3821815722656249, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_08": ["FLOAT", {"default": 0.4632503906249999, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_09": ["FLOAT", {"default": 0.561515625, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_10": ["FLOAT", {"default": 0.6806249999999999, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_11": ["FLOAT", {"default": 0.825, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_12": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "flip_weights": ["BOOLEAN", {"default": false}]}, "optional": {"uncond_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "cn_extras": ["CN_WEIGHTS_EXTRAS"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["weight_00", "weight_01", "weight_02", "weight_03", "weight_04", "weight_05", "weight_06", "weight_07", "weight_08", "weight_09", "weight_10", "weight_11", "weight_12", "flip_weights"], "optional": ["uncond_multiplier", "cn_extras", "autosize"]}, "output": ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"], "output_is_list": [false, false], "output_name": ["CN_WEIGHTS", "TK_SHORTCUT"], "name": "SoftControlNetWeights", "display_name": "ControlNet Soft Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "", "output_node": false, "deprecated": true}, "CustomControlNetWeights": {"input": {"required": {"weight_00": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_01": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_02": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_03": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_04": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_05": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_06": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_07": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_08": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_09": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_10": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_11": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_12": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "flip_weights": ["BOOLEAN", {"default": false}]}, "optional": {"uncond_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "cn_extras": ["CN_WEIGHTS_EXTRAS"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["weight_00", "weight_01", "weight_02", "weight_03", "weight_04", "weight_05", "weight_06", "weight_07", "weight_08", "weight_09", "weight_10", "weight_11", "weight_12", "flip_weights"], "optional": ["uncond_multiplier", "cn_extras", "autosize"]}, "output": ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"], "output_is_list": [false, false], "output_name": ["CN_WEIGHTS", "TK_SHORTCUT"], "name": "CustomControlNetWeights", "display_name": "ControlNet Custom Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "", "output_node": false, "deprecated": true}, "SoftT2IAdapterWeights": {"input": {"required": {"weight_00": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_01": ["FLOAT", {"default": 0.62, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_02": ["FLOAT", {"default": 0.825, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_03": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "flip_weights": ["BOOLEAN", {"default": false}]}, "optional": {"uncond_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "cn_extras": ["CN_WEIGHTS_EXTRAS"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["weight_00", "weight_01", "weight_02", "weight_03", "flip_weights"], "optional": ["uncond_multiplier", "cn_extras", "autosize"]}, "output": ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"], "output_is_list": [false, false], "output_name": ["CN_WEIGHTS", "TK_SHORTCUT"], "name": "SoftT2IAdapterWeights", "display_name": "T2IAdapter Soft Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "", "output_node": false, "deprecated": true}, "CustomT2IAdapterWeights": {"input": {"required": {"weight_00": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_01": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_02": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "weight_03": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "flip_weights": ["BOOLEAN", {"default": false}]}, "optional": {"uncond_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "cn_extras": ["CN_WEIGHTS_EXTRAS"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["weight_00", "weight_01", "weight_02", "weight_03", "flip_weights"], "optional": ["uncond_multiplier", "cn_extras", "autosize"]}, "output": ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"], "output_is_list": [false, false], "output_name": ["CN_WEIGHTS", "TK_SHORTCUT"], "name": "CustomT2IAdapterWeights", "display_name": "T2IAdapter Custom Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d", "description": "", "python_module": "custom_nodes.ComfyUI-Advanced-ControlNet", "category": "", "output_node": false, "deprecated": true}, "BOOLConstant": {"input": {"required": {"value": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["value"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["value"], "name": "BOOLConstant", "display_name": "BOOL Constant", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/constants", "output_node": false}, "INTConstant": {"input": {"required": {"value": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["value"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["value"], "name": "INTConstant", "display_name": "INT Constant", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/constants", "output_node": false}, "FloatConstant": {"input": {"required": {"value": ["FLOAT", {"default": 0.0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 0.001}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["value"], "name": "FloatConstant", "display_name": "Float Constant", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/constants", "output_node": false}, "StringConstant": {"input": {"required": {"string": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["string"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "StringConstant", "display_name": "String Constant", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/constants", "output_node": false}, "StringConstantMultiline": {"input": {"required": {"string": ["STRING", {"default": "", "multiline": true}], "strip_newlines": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["string", "strip_newlines"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "StringConstantMultiline", "display_name": "String Constant Multiline", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/constants", "output_node": false}, "ConditioningMultiCombine": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 20, "step": 1}], "conditioning_1": ["CONDITIONING"], "conditioning_2": ["CONDITIONING"]}}, "input_order": {"required": ["inputcount", "conditioning_1", "conditioning_2"]}, "output": ["CONDITIONING", "INT"], "output_is_list": [false, false], "output_name": ["combined", "inputcount"], "name": "ConditioningMultiCombine", "display_name": "Conditioning Multi Combine", "description": "\nCombines multiple conditioning nodes into one\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking/conditioning", "output_node": false}, "ConditioningSetMaskAndCombine": {"input": {"required": {"positive_1": ["CONDITIONING"], "negative_1": ["CONDITIONING"], "positive_2": ["CONDITIONING"], "negative_2": ["CONDITIONING"], "mask_1": ["MASK"], "mask_2": ["MASK"], "mask_1_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_2_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}}, "input_order": {"required": ["positive_1", "negative_1", "positive_2", "negative_2", "mask_1", "mask_2", "mask_1_strength", "mask_2_strength", "set_cond_area"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["combined_positive", "combined_negative"], "name": "ConditioningSetMaskAndCombine", "display_name": "ConditioningSetMaskAndCombine", "description": "\nBundles multiple conditioning mask and combine nodes into one,functionality is identical to ComfyUI native nodes\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking/conditioning", "output_node": false}, "ConditioningSetMaskAndCombine3": {"input": {"required": {"positive_1": ["CONDITIONING"], "negative_1": ["CONDITIONING"], "positive_2": ["CONDITIONING"], "negative_2": ["CONDITIONING"], "positive_3": ["CONDITIONING"], "negative_3": ["CONDITIONING"], "mask_1": ["MASK"], "mask_2": ["MASK"], "mask_3": ["MASK"], "mask_1_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_2_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_3_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}}, "input_order": {"required": ["positive_1", "negative_1", "positive_2", "negative_2", "positive_3", "negative_3", "mask_1", "mask_2", "mask_3", "mask_1_strength", "mask_2_strength", "mask_3_strength", "set_cond_area"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["combined_positive", "combined_negative"], "name": "ConditioningSetMaskAndCombine3", "display_name": "ConditioningSetMaskAndCombine3", "description": "\nBundles multiple conditioning mask and combine nodes into one,functionality is identical to ComfyUI native nodes\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking/conditioning", "output_node": false}, "ConditioningSetMaskAndCombine4": {"input": {"required": {"positive_1": ["CONDITIONING"], "negative_1": ["CONDITIONING"], "positive_2": ["CONDITIONING"], "negative_2": ["CONDITIONING"], "positive_3": ["CONDITIONING"], "negative_3": ["CONDITIONING"], "positive_4": ["CONDITIONING"], "negative_4": ["CONDITIONING"], "mask_1": ["MASK"], "mask_2": ["MASK"], "mask_3": ["MASK"], "mask_4": ["MASK"], "mask_1_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_2_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_3_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_4_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}}, "input_order": {"required": ["positive_1", "negative_1", "positive_2", "negative_2", "positive_3", "negative_3", "positive_4", "negative_4", "mask_1", "mask_2", "mask_3", "mask_4", "mask_1_strength", "mask_2_strength", "mask_3_strength", "mask_4_strength", "set_cond_area"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["combined_positive", "combined_negative"], "name": "ConditioningSetMaskAndCombine4", "display_name": "ConditioningSetMaskAndCombine4", "description": "\nBundles multiple conditioning mask and combine nodes into one,functionality is identical to ComfyUI native nodes\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking/conditioning", "output_node": false}, "ConditioningSetMaskAndCombine5": {"input": {"required": {"positive_1": ["CONDITIONING"], "negative_1": ["CONDITIONING"], "positive_2": ["CONDITIONING"], "negative_2": ["CONDITIONING"], "positive_3": ["CONDITIONING"], "negative_3": ["CONDITIONING"], "positive_4": ["CONDITIONING"], "negative_4": ["CONDITIONING"], "positive_5": ["CONDITIONING"], "negative_5": ["CONDITIONING"], "mask_1": ["MASK"], "mask_2": ["MASK"], "mask_3": ["MASK"], "mask_4": ["MASK"], "mask_5": ["MASK"], "mask_1_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_2_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_3_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_4_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_5_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}}, "input_order": {"required": ["positive_1", "negative_1", "positive_2", "negative_2", "positive_3", "negative_3", "positive_4", "negative_4", "positive_5", "negative_5", "mask_1", "mask_2", "mask_3", "mask_4", "mask_5", "mask_1_strength", "mask_2_strength", "mask_3_strength", "mask_4_strength", "mask_5_strength", "set_cond_area"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["combined_positive", "combined_negative"], "name": "ConditioningSetMaskAndCombine5", "display_name": "ConditioningSetMaskAndCombine5", "description": "\nBundles multiple conditioning mask and combine nodes into one,functionality is identical to ComfyUI native nodes\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking/conditioning", "output_node": false}, "CondPassThrough": {"input": {"required": {}, "optional": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"]}}, "input_order": {"required": [], "optional": ["positive", "negative"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "CondPassThrough", "display_name": "CondPassThrough", "description": "\n    Simply passes through the positive and negative conditioning,\n    workaround for Set node not allowing bypassed inputs.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/misc", "output_node": false}, "DownloadAndLoadCLIPSeg": {"input": {"required": {"model": [["Kijai/clipseg-rd64-refined-fp16", "CIDAS/clipseg-rd64-refined"]]}}, "input_order": {"required": ["model"]}, "output": ["CLIPSEGMODEL"], "output_is_list": [false], "output_name": ["clipseg_model"], "name": "DownloadAndLoadCLIPSeg", "display_name": "(Down)load CLIPSeg", "description": "\nDownloads and loads CLIPSeg model with huggingface_hub,  \nto ComfyUI/models/clip_seg\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking", "output_node": false}, "BatchCLIPSeg": {"input": {"required": {"images": ["IMAGE"], "text": ["STRING", {"multiline": false}], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 10.0, "step": 0.001}], "binary_mask": ["BOOLEAN", {"default": true}], "combine_mask": ["BOOLEAN", {"default": false}], "use_cuda": ["BOOLEAN", {"default": true}]}, "optional": {"blur_sigma": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.1}], "opt_model": ["CLIPSEGMODEL"], "prev_mask": ["MASK", {"default": null}], "image_bg_level": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "invert": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["images", "text", "threshold", "binary_mask", "combine_mask", "use_cuda"], "optional": ["blur_sigma", "opt_model", "prev_mask", "image_bg_level", "invert"]}, "output": ["MASK", "IMAGE"], "output_is_list": [false, false], "output_name": ["Mask", "Image"], "name": "BatchCLIPSeg", "display_name": "Batch CLIPSeg", "description": "\nSegments an image or batch of images using CLIPSeg.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking", "output_node": false}, "ColorToMask": {"input": {"required": {"images": ["IMAGE"], "invert": ["BOOLEAN", {"default": false}], "red": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "green": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "blue": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "threshold": ["INT", {"default": 10, "min": 0, "max": 255, "step": 1}], "per_batch": ["INT", {"default": 16, "min": 1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["images", "invert", "red", "green", "blue", "threshold", "per_batch"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ColorToMask", "display_name": "Color To Mask", "description": "\nConverts chosen RGB value to a mask.  \nWith batch inputs, the **per_batch**  \ncontrols the number of images processed at once.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking", "output_node": false}, "CreateGradientMask": {"input": {"required": {"invert": ["BOOLEAN", {"default": false}], "frames": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "width": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}]}}, "input_order": {"required": ["invert", "frames", "width", "height"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "CreateGradientMask", "display_name": "Create Gradient Mask", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking/generate", "output_node": false}, "CreateTextMask": {"input": {"required": {"invert": ["BOOLEAN", {"default": false}], "frames": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "text_x": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "text_y": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "font_size": ["INT", {"default": 32, "min": 8, "max": 4096, "step": 1}], "font_color": ["STRING", {"default": "white"}], "text": ["STRING", {"default": "HELLO!", "multiline": true}], "font": [["FreeMono.ttf", "FreeMonoBoldOblique.otf", "TTNorms-Black.otf"]], "width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "start_rotation": ["INT", {"default": 0, "min": 0, "max": 359, "step": 1}], "end_rotation": ["INT", {"default": 0, "min": -359, "max": 359, "step": 1}]}}, "input_order": {"required": ["invert", "frames", "text_x", "text_y", "font_size", "font_color", "text", "font", "width", "height", "start_rotation", "end_rotation"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "CreateTextMask", "display_name": "Create Text Mask", "description": "\nCreates a text image and mask.  \nLooks for fonts from this folder:  \nComfyUI/custom_nodes/ComfyUI-KJNodes/fonts\n  \nIf start_rotation and/or end_rotation are different values,  \ncreates animation between them.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/text", "output_node": false}, "CreateAudioMask": {"input": {"required": {"invert": ["BOOLEAN", {"default": false}], "frames": ["INT", {"default": 16, "min": 1, "max": 255, "step": 1}], "scale": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 2.0, "step": 0.01}], "audio_path": ["STRING", {"default": "audio.wav"}], "width": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}]}}, "input_order": {"required": ["invert", "frames", "scale", "audio_path", "width", "height"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CreateAudioMask", "display_name": "Create Audio Mask", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/deprecated", "output_node": false}, "CreateFadeMask": {"input": {"required": {"invert": ["BOOLEAN", {"default": false}], "frames": ["INT", {"default": 2, "min": 2, "max": 255, "step": 1}], "width": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out"]], "start_level": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "midpoint_level": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "end_level": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "midpoint_frame": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}]}}, "input_order": {"required": ["invert", "frames", "width", "height", "interpolation", "start_level", "midpoint_level", "end_level", "midpoint_frame"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "CreateFadeMask", "display_name": "Create Fade Mask", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/deprecated", "output_node": false}, "CreateFadeMaskAdvanced": {"input": {"required": {"points_string": ["STRING", {"default": "0:(0.0),\n7:(1.0),\n15:(0.0)\n", "multiline": true}], "invert": ["BOOLEAN", {"default": false}], "frames": ["INT", {"default": 16, "min": 2, "max": 255, "step": 1}], "width": ["INT", {"default": 512, "min": 1, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 4096, "step": 1}], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out"]]}}, "input_order": {"required": ["points_string", "invert", "frames", "width", "height", "interpolation"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "CreateFadeMaskAdvanced", "display_name": "Create Fade Mask Advanced", "description": "\nCreate a batch of masks interpolated between given frames and values. \nUses same syntax as Fizz' BatchValueSchedule.\nFirst value is the frame index (not that this starts from 0, not 1) \nand the second value inside the brackets is the float value of the mask in range 0.0 - 1.0  \n\nFor example the default values:  \n0:(0.0)  \n7:(1.0)  \n15:(0.0)  \n  \nWould create a mask batch fo 16 frames, starting from black, \ninterpolating with the chosen curve to fully white at the 8th frame, \nand interpolating from that to fully black at the 16th frame.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking/generate", "output_node": false}, "CreateFluidMask": {"input": {"required": {"invert": ["BOOLEAN", {"default": false}], "frames": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "width": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}], "inflow_count": ["INT", {"default": 3, "min": 0, "max": 255, "step": 1}], "inflow_velocity": ["INT", {"default": 1, "min": 0, "max": 255, "step": 1}], "inflow_radius": ["INT", {"default": 8, "min": 0, "max": 255, "step": 1}], "inflow_padding": ["INT", {"default": 50, "min": 0, "max": 255, "step": 1}], "inflow_duration": ["INT", {"default": 60, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["invert", "frames", "width", "height", "inflow_count", "inflow_velocity", "inflow_radius", "inflow_padding", "inflow_duration"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "CreateFluidMask", "display_name": "Create Fluid Mask", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking/generate", "output_node": false}, "CreateShapeMask": {"input": {"required": {"shape": [["circle", "square", "triangle"], {"default": "circle"}], "frames": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "location_x": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 1}], "location_y": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 1}], "grow": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "shape_width": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 1}], "shape_height": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 1}]}}, "input_order": {"required": ["shape", "frames", "location_x", "location_y", "grow", "frame_width", "frame_height", "shape_width", "shape_height"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["mask", "mask_inverted"], "name": "CreateShapeMask", "display_name": "Create Shape Mask", "description": "\nCreates a mask or batch of masks with the specified shape.  \nLocations are center locations.  \nGrow value is the amount to grow the shape on each frame, creating animated masks.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking/generate", "output_node": false}, "CreateVoronoiMask": {"input": {"required": {"frames": ["INT", {"default": 16, "min": 2, "max": 4096, "step": 1}], "num_points": ["INT", {"default": 15, "min": 1, "max": 4096, "step": 1}], "line_width": ["INT", {"default": 4, "min": 1, "max": 4096, "step": 1}], "speed": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}]}}, "input_order": {"required": ["frames", "num_points", "line_width", "speed", "frame_width", "frame_height"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["mask", "mask_inverted"], "name": "CreateVoronoiMask", "display_name": "Create Voronoi Mask", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking/generate", "output_node": false}, "CreateMagicMask": {"input": {"required": {"frames": ["INT", {"default": 16, "min": 2, "max": 4096, "step": 1}], "depth": ["INT", {"default": 12, "min": 1, "max": 500, "step": 1}], "distortion": ["FLOAT", {"default": 1.5, "min": 0.0, "max": 100.0, "step": 0.01}], "seed": ["INT", {"default": 123, "min": 0, "max": 99999999, "step": 1}], "transitions": ["INT", {"default": 1, "min": 1, "max": 20, "step": 1}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}]}}, "input_order": {"required": ["frames", "depth", "distortion", "seed", "transitions", "frame_width", "frame_height"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["mask", "mask_inverted"], "name": "CreateMagicMask", "display_name": "Create Magic Mask", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking/generate", "output_node": false}, "GetMaskSizeAndCount": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": ["MASK", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["mask", "width", "height", "count"], "name": "GetMaskSizeAndCount", "display_name": "Get Mask Size & Count", "description": "\nReturns the width, height and batch size of the mask,  \nand passes it through unchanged.  \n\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking", "output_node": false}, "GrowMaskWithBlur": {"input": {"required": {"mask": ["MASK"], "expand": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}], "incremental_expandrate": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.1}], "tapered_corners": ["BOOLEAN", {"default": true}], "flip_input": ["BOOLEAN", {"default": false}], "blur_radius": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100, "step": 0.1}], "lerp_alpha": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "decay_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"fill_holes": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["mask", "expand", "incremental_expandrate", "tapered_corners", "flip_input", "blur_radius", "lerp_alpha", "decay_factor"], "optional": ["fill_holes"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["mask", "mask_inverted"], "name": "GrowMaskWithBlur", "display_name": "Grow Mask With Blur", "description": "\n# GrowMaskWithBlur\n- mask: Input mask or mask batch\n- expand: Expand or contract mask or mask batch by a given amount\n- incremental_expandrate: increase expand rate by a given amount per frame\n- tapered_corners: use tapered corners\n- flip_input: flip input mask\n- blur_radius: value higher than 0 will blur the mask\n- lerp_alpha: alpha value for interpolation between frames\n- decay_factor: decay value for interpolation between frames\n- fill_holes: fill holes in the mask (slow)", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking", "output_node": false}, "MaskBatchMulti": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 1000, "step": 1}], "mask_1": ["MASK"], "mask_2": ["MASK"]}}, "input_order": {"required": ["inputcount", "mask_1", "mask_2"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["masks"], "name": "MaskBatchMulti", "display_name": "Mask Batch Multi", "description": "\nCreates an image batch from multiple masks.  \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking", "output_node": false}, "OffsetMask": {"input": {"required": {"mask": ["MASK"], "x": ["INT", {"default": 0, "min": -4096, "max": 16384, "step": 1, "display": "number"}], "y": ["INT", {"default": 0, "min": -4096, "max": 16384, "step": 1, "display": "number"}], "angle": ["INT", {"default": 0, "min": -360, "max": 360, "step": 1, "display": "number"}], "duplication_factor": ["INT", {"default": 1, "min": 1, "max": 1000, "step": 1, "display": "number"}], "roll": ["BOOLEAN", {"default": false}], "incremental": ["BOOLEAN", {"default": false}], "padding_mode": [["empty", "border", "reflection"], {"default": "empty"}]}}, "input_order": {"required": ["mask", "x", "y", "angle", "duplication_factor", "roll", "incremental", "padding_mode"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "OffsetMask", "display_name": "Offset Mask", "description": "\nOffsets the mask by the specified amount.  \n - mask: Input mask or mask batch\n - x: Horizontal offset\n - y: Vertical offset\n - angle: Angle in degrees\n - roll: roll edge wrapping\n - duplication_factor: Number of times to duplicate the mask to form a batch\n - border padding_mode: Padding mode for the mask\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking", "output_node": false}, "RemapMaskRange": {"input": {"required": {"mask": ["MASK"], "min": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 1.0, "step": 0.01}], "max": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["mask", "min", "max"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "RemapMaskRange", "display_name": "Remap Mask Range", "description": "\nSets new min and max values for the mask.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking", "output_node": false}, "ResizeMask": {"input": {"required": {"mask": ["MASK"], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8, "display": "number"}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8, "display": "number"}], "keep_proportions": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["mask", "width", "height", "keep_proportions"]}, "output": ["MASK", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["mask", "width", "height"], "name": "ResizeMask", "display_name": "Resize Mask", "description": "\nResizes the mask or batch of masks to the specified width and height.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking", "output_node": false}, "RoundMask": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "RoundMask", "display_name": "Round Mask", "description": "\nRounds the mask or batch of masks to a binary mask.  \n<img src=\"https://github.com/kijai/ComfyUI-KJNodes/assets/40791699/52c85202-f74e-4b96-9dac-c8bda5ddcc40\" width=\"300\" height=\"250\" alt=\"RoundMask example\">\n\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking", "output_node": false}, "AddLabel": {"input": {"required": {"image": ["IMAGE"], "text_x": ["INT", {"default": 10, "min": 0, "max": 4096, "step": 1}], "text_y": ["INT", {"default": 2, "min": 0, "max": 4096, "step": 1}], "height": ["INT", {"default": 48, "min": 0, "max": 4096, "step": 1}], "font_size": ["INT", {"default": 32, "min": 0, "max": 4096, "step": 1}], "font_color": ["STRING", {"default": "white"}], "label_color": ["STRING", {"default": "black"}], "font": [["FreeMono.ttf", "FreeMonoBoldOblique.otf", "TTNorms-Black.otf"]], "text": ["STRING", {"default": "Text"}], "direction": [["up", "down", "left", "right", "overlay"], {"default": "up"}]}, "optional": {"caption": ["STRING", {"default": "", "forceInput": true}]}}, "input_order": {"required": ["image", "text_x", "text_y", "height", "font_size", "font_color", "label_color", "font", "text", "direction"], "optional": ["caption"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "AddLabel", "display_name": "Add Label", "description": "\nCreates a new with the given text, and concatenates it to  \neither above or below the input image.  \nNote that this changes the input image's height!  \nFonts are loaded from this folder:  \nComfyUI/custom_nodes/ComfyUI-KJNodes/fonts\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/text", "output_node": false}, "ColorMatch": {"input": {"required": {"image_ref": ["IMAGE"], "image_target": ["IMAGE"], "method": [["mkl", "hm", "reinhard", "mvgd", "hm-mvgd-hm", "hm-mkl-hm"], {"default": "mkl"}]}, "optional": {"strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["image_ref", "image_target", "method"], "optional": ["strength"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "ColorMatch", "display_name": "Color Match", "description": "\ncolor-matcher enables color transfer across images which comes in handy for automatic  \ncolor-grading of photographs, paintings and film sequences as well as light-field  \nand stopmotion corrections.  \n\nThe methods behind the mappings are based on the approach from Reinhard et al.,  \nthe Monge-Kantorovich Linearization (MKL) as proposed by Pitie et al. and our analytical solution  \nto a Multi-Variate Gaussian Distribution (MVGD) transfer in conjunction with classical histogram   \nmatching. As shown below our HM-MVGD-HM compound outperforms existing methods.   \nhttps://github.com/hahnec/color-matcher/\n\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "CrossFadeImages": {"input": {"required": {"images_1": ["IMAGE"], "images_2": ["IMAGE"], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out", "bounce", "elastic", "glitchy", "exponential_ease_out"]], "transition_start_index": ["INT", {"default": 1, "min": 0, "max": 4096, "step": 1}], "transitioning_frames": ["INT", {"default": 1, "min": 0, "max": 4096, "step": 1}], "start_level": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "end_level": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["images_1", "images_2", "interpolation", "transition_start_index", "transitioning_frames", "start_level", "end_level"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CrossFadeImages", "display_name": "Cross Fade Images", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "GetImagesFromBatchIndexed": {"input": {"required": {"images": ["IMAGE"], "indexes": ["STRING", {"default": "0, 1, 2", "multiline": true}]}}, "input_order": {"required": ["images", "indexes"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "GetImagesFromBatchIndexed", "display_name": "Get Images From Batch Indexed", "description": "\nSelects and returns the images at the specified indices as an image batch.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "GetImageRangeFromBatch": {"input": {"required": {"start_index": ["INT", {"default": 0, "min": -1, "max": 4096, "step": 1}], "num_frames": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}]}, "optional": {"images": ["IMAGE"], "masks": ["MASK"]}}, "input_order": {"required": ["start_index", "num_frames"], "optional": ["images", "masks"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "GetImageRangeFromBatch", "display_name": "Get Image or Mask Range From Batch", "description": "\nCreates a new batch using images from the input,  \nbatch, starting from start_index.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "GetImageSizeAndCount": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["image", "width", "height", "count"], "name": "GetImageSizeAndCount", "display_name": "Get Image Size & Count", "description": "\nReturns width, height and batch size of the image,  \nand passes it through unchanged.  \n\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "ImageAndMaskPreview": {"input": {"required": {"mask_opacity": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "mask_color": ["STRING", {"default": "255, 255, 255"}], "pass_through": ["BOOLEAN", {"default": false}]}, "optional": {"image": ["IMAGE"], "mask": ["MASK"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["mask_opacity", "mask_color", "pass_through"], "optional": ["image", "mask"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["composite"], "name": "ImageAndMaskPreview", "display_name": "ImageAndMaskPreview", "description": "\nPreview an image or a mask, when both inputs are used  \ncomposites the mask on top of the image.\nwith pass_through on the preview is disabled and the  \ncomposite is returned from the composite slot instead,  \nthis allows for the preview to be passed for video combine  \nnodes for example.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes", "output_node": true}, "ImageAddMulti": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 1000, "step": 1}], "image_1": ["IMAGE"], "image_2": ["IMAGE"], "blending": [["add", "subtract", "multiply", "difference"], {"default": "add"}]}}, "input_order": {"required": ["inputcount", "image_1", "image_2", "blending"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "ImageAddMulti", "display_name": "Image Add Multi", "description": "\nAdd blends multiple images together.    \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "ImageBatchMulti": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 1000, "step": 1}], "image_1": ["IMAGE"], "image_2": ["IMAGE"]}}, "input_order": {"required": ["inputcount", "image_1", "image_2"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "ImageBatchMulti", "display_name": "Image Batch Multi", "description": "\nCreates an image batch from multiple images.  \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "ImageBatchRepeatInterleaving": {"input": {"required": {"images": ["IMAGE"], "repeats": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["images", "repeats"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBatchRepeatInterleaving", "display_name": "ImageBatchRepeatInterleaving", "description": "\nRepeats each image in a batch by the specified number of times.  \nExample batch of 5 images: 0, 1 ,2, 3, 4  \nwith repeats 2 becomes batch of 10 images: 0, 0, 1, 1, 2, 2, 3, 3, 4, 4  \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "ImageBatchTestPattern": {"input": {"required": {"batch_size": ["INT", {"default": 1, "min": 1, "max": 255, "step": 1}], "start_from": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "text_x": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 1}], "text_y": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 1}], "width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "font": [["FreeMono.ttf", "FreeMonoBoldOblique.otf", "TTNorms-Black.otf"]], "font_size": ["INT", {"default": 255, "min": 8, "max": 4096, "step": 1}]}}, "input_order": {"required": ["batch_size", "start_from", "text_x", "text_y", "width", "height", "font", "font_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBatchTestPattern", "display_name": "Image Batch Test Pattern", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/text", "output_node": false}, "ImageConcanate": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "direction": [["right", "down", "left", "up"], {"default": "right"}], "match_image_size": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image1", "image2", "direction", "match_image_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageConcanate", "display_name": "Image Concatenate", "description": "\nConcatenates the image2 to image1 in the specified direction.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "ImageConcatFromBatch": {"input": {"required": {"images": ["IMAGE"], "num_columns": ["INT", {"default": 3, "min": 1, "max": 255, "step": 1}], "match_image_size": ["BOOLEAN", {"default": false}], "max_resolution": ["INT", {"default": 4096}]}}, "input_order": {"required": ["images", "num_columns", "match_image_size", "max_resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageConcatFromBatch", "display_name": "Image Concatenate From Batch", "description": "\n    Concatenates images from a batch into a grid with a specified number of columns.\n    ", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "ImageConcatMulti": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 1000, "step": 1}], "image_1": ["IMAGE"], "image_2": ["IMAGE"], "direction": [["right", "down", "left", "up"], {"default": "right"}], "match_image_size": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["inputcount", "image_1", "image_2", "direction", "match_image_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "ImageConcatMulti", "display_name": "Image Concatenate Multi", "description": "\nCreates an image from multiple images.  \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "ImageGrabPIL": {"input": {"required": {"x": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "width": ["INT", {"default": 512, "min": 0, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 0, "max": 4096, "step": 1}], "num_frames": ["INT", {"default": 1, "min": 1, "max": 255, "step": 1}], "delay": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["x", "y", "width", "height", "num_frames", "delay"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "ImageGrabPIL", "display_name": "Image Grab PIL", "description": "\nCaptures an area specified by screen coordinates.  \nCan be used for realtime diffusion with autoqueue.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/experimental", "output_node": false}, "ImageGridComposite2x2": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "image3": ["IMAGE"], "image4": ["IMAGE"]}}, "input_order": {"required": ["image1", "image2", "image3", "image4"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageGridComposite2x2", "display_name": "Image Grid Composite 2x2", "description": "\nConcatenates the 4 input images into a 2x2 grid. \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "ImageGridComposite3x3": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "image3": ["IMAGE"], "image4": ["IMAGE"], "image5": ["IMAGE"], "image6": ["IMAGE"], "image7": ["IMAGE"], "image8": ["IMAGE"], "image9": ["IMAGE"]}}, "input_order": {"required": ["image1", "image2", "image3", "image4", "image5", "image6", "image7", "image8", "image9"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageGridComposite3x3", "display_name": "Image Grid Composite 3x3", "description": "\nConcatenates the 9 input images into a 3x3 grid. \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "ImageGridtoBatch": {"input": {"required": {"image": ["IMAGE"], "columns": ["INT", {"default": 3, "min": 1, "max": 8, "tooltip": "The number of columns in the grid."}], "rows": ["INT", {"default": 0, "min": 1, "max": 8, "tooltip": "The number of rows in the grid. Set to 0 for automatic calculation."}]}}, "input_order": {"required": ["image", "columns", "rows"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageGridtoBatch", "display_name": "Image Grid To Batch", "description": "Converts a grid of images to a batch of images.", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "ImageNormalize_Neg1_To_1": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageNormalize_Neg1_To_1", "display_name": "Image Normalize -1 to 1", "description": "\nNormalize the images to be in the range [-1, 1]  \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "ImagePass": {"input": {"required": {}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": [], "optional": ["image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImagePass", "display_name": "ImagePass", "description": "\nPasses the image through without modifying it.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "ImagePadForOutpaintMasked": {"input": {"required": {"image": ["IMAGE"], "left": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "top": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "right": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "bottom": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "feathering": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "left", "top", "right", "bottom", "feathering"], "optional": ["mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImagePadForOutpaintMasked", "display_name": "Image Pad For Outpaint Masked", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "image", "output_node": false}, "ImagePadForOutpaintTargetSize": {"input": {"required": {"image": ["IMAGE"], "target_width": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "target_height": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "feathering": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "target_width", "target_height", "feathering", "upscale_method"], "optional": ["mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImagePadForOutpaintTargetSize", "display_name": "Image Pad For Outpaint Target Size", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "image", "output_node": false}, "ImageResizeKJ": {"input": {"required": {"image": ["IMAGE"], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]], "keep_proportion": ["BOOLEAN", {"default": false}], "divisible_by": ["INT", {"default": 2, "min": 0, "max": 512, "step": 1}]}, "optional": {"width_input": ["INT", {"forceInput": true}], "height_input": ["INT", {"forceInput": true}], "get_image_size": ["IMAGE"], "crop": [["disabled", "center"]]}}, "input_order": {"required": ["image", "width", "height", "upscale_method", "keep_proportion", "divisible_by"], "optional": ["width_input", "height_input", "get_image_size", "crop"]}, "output": ["IMAGE", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "width", "height"], "name": "ImageResizeKJ", "display_name": "Resize Image", "description": "\nResizes the image to the specified width and height.  \nSize can be retrieved from the inputs, and the final scale  \nis  determined in this order of importance:  \n- get_image_size  \n- width_input and height_input  \n- width and height widgets  \n  \nKeep proportions keeps the aspect ratio of the image, by  \nhighest dimension.  \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "ImageUpscaleWithModelBatched": {"input": {"required": {"upscale_model": ["UPSCALE_MODEL"], "images": ["IMAGE"], "per_batch": ["INT", {"default": 16, "min": 1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["upscale_model", "images", "per_batch"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageUpscaleWithModelBatched", "display_name": "Image Upscale With Model Batched", "description": "\nSame as ComfyUI native model upscaling node,  \nbut allows setting sub-batches for reduced VRAM usage.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "InsertImagesToBatchIndexed": {"input": {"required": {"original_images": ["IMAGE"], "images_to_insert": ["IMAGE"], "indexes": ["STRING", {"default": "0, 1, 2", "multiline": true}]}}, "input_order": {"required": ["original_images", "images_to_insert", "indexes"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "InsertImagesToBatchIndexed", "display_name": "Insert Images To Batch Indexed", "description": "\nInserts images at the specified indices into the original image batch.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "LoadAndResizeImage": {"input": {"required": {"image": [["00100-3444294236.png", "01115-3441384736-mature ginger guy, laying on field, armpit, sunburnt, blushing, blued eyes, smile, tank top, muscular, facial hair, moustache ,.png", "0c42073e550d6ae9cb7624ad1b2ee53d1d4e8c69_high.webp", "11121_158078841563e50810b30c1.jpg", "1313766545.png", "2024-08-14ComfyUI_00004_.png", "33097901.jpg", "33246906.jpg", "360_F_562816292_d7bYLVGfttt68HKFkOc4f2QKtWUg8Q5n.jpg", "381543ce-3045-4381-9b52-676686caed8f.jpg", "AnimateDiff_00037.mp4", "BGDK748BV7YGRQNF7P3CDK8910 (1).jpeg", "ComfyUI_00074_.png", "ComfyUI_00078_.png", "ComfyUI_00091_.png", "ComfyUI_00219_.png", "ComfyUI_00222_.png", "ComfyUI_00808_.png", "ComfyUI_00809_.png", "ComfyUI_00810_.png", "ComfyUI_00813_.png", "ComfyUI_00815_.png", "ComfyUI_00818_.png", "ComfyUI_00819_.png", "ComfyUI_00842_.png", "ComfyUI_temp_alxcm_00001_.png", "ComfyUI_temp_ayutp_00001_.png", "ComfyUI_temp_bvpdk_00001_.png", "ComfyUI_temp_bvpdk_00004_.png", "ComfyUI_temp_cgbmm_00001_.png", "ComfyUI_temp_chusq_00001_.png", "ComfyUI_temp_doxtg_00002_.png", "ComfyUI_temp_ecxhs_00001_.png", "ComfyUI_temp_ecxhs_00004_.png", "ComfyUI_temp_ecxhs_00006_ (1).png", "ComfyUI_temp_ecxhs_00006_.png", "ComfyUI_temp_ecxhs_00008_.png", "ComfyUI_temp_ecxhs_00010_.png", "ComfyUI_temp_fqjhe_00001_.png", "ComfyUI_temp_fqjhe_00016_.png", "ComfyUI_temp_gxxzz_00001_.png", "ComfyUI_temp_hlvpl_00001_.png", "ComfyUI_temp_ipugi_00131_.png", "ComfyUI_temp_jluvj_00001_.png", "ComfyUI_temp_kteza_00001_.png", "ComfyUI_temp_kubpn_00003_.png", "ComfyUI_temp_lviic_00009_.png", "ComfyUI_temp_lzhyu_00004_.png", "ComfyUI_temp_nmjmf_00001_.png", "ComfyUI_temp_oqypc_00001_.png", "ComfyUI_temp_oqypc_00004_ (1).png", "ComfyUI_temp_oufve_00001_.png", "ComfyUI_temp_pukae_00002_.png", "ComfyUI_temp_qakbs_00001_.png", "ComfyUI_temp_rdanj_00004_.png", "ComfyUI_temp_rqrpi_00001_.png", "ComfyUI_temp_rsiuu_00005_.png", "ComfyUI_temp_rtbjq_00004_.png", "ComfyUI_temp_toyue_00002_.png", "ComfyUI_temp_tqaav_00002_.png", "ComfyUI_temp_txndi_00002_.png", "Guy_Mask_5.png", "Guy_Matcap_5.png", "Guy_Outline_5.png", "H100Test_00015_.png", "H100Test_00016_.png", "H100Test_00034_.png", "IMG_3440.png", "IMG_6129.png", "MAsk.png", "Mario.webp", "MarkuryFLUX_00003_.png", "MarkuryFLUX_00005_.png", "MarkuryFLUX_00022_.png", "MarkuryFLUX_00036_.png", "MarkuryFLUX_00037_.png", "Mask_2 (1).png", "Mask_2.png", "Matcap.png", "Outline.png", "Outline_2.png", "PB-_temp_bxspr_00001_.png", "PNG image.jpeg", "Playbook_00.png", "Playbook_22.png", "Playbook_47.png", "Playbook__00001_ (1) (1).png", "Playbook__00001_ (1).png", "Playbook__00001_ (2).png", "Playbook__00001_.png", "Playbook__00003_ (4).png", "Playbook__00016_.png", "Playbook__00018_.png", "Playbook__00031_.png", "Playbook__00034_.png", "Playbook__00045_.png", "Playbook__00058_.png", "Playbook__00065_.png", "Playbook__00113_.png", "Playbook__00178_.png", "Playbook__00183_.png", "Playbook__00184_.png", "Playbook__00205_.png", "Playbook__00314.mp4", "Playbook__00348_.png", "Playbook__00417_.png", "Playbook__00419_ (1).png", "Playbook__00419_.png", "SDXL-Lightning_00012_.png", "SDXL_ControlNet_Image.png", "archivs_upscalewithflux.png", "beauty (1).png", "beauty (2).png", "beauty (3).png", "beauty (4).png", "beauty-0 (11).png", "beauty-0 (21).png", "beauty-0 (36).png", "beauty-0 (9).png", "beauty-0 - 2024-07-02T105656.553.png", "beauty.png", "ca-times.brightspotcdn.jpg", "canny.png", "canny_res_00003_ (1).png", "canny_res_00003_.png", "canny_res_00014_.png", "canny_res_00038_.png", "canny_res_00040_.png", "dancer-front-depth.png", "dancer-front-mask.png", "dancer-front-outline.png", "depth (1).png", "depth (2).png", "depth (3).png", "depth (4).png", "depth (5).png", "depth-0 (16).png", "depth-0 (18).png", "depth-0 (19).png", "depth-0 (31).png", "depth-0 (38).png", "depth-0 - 2024-07-02T105656.499.png", "depth.png", "depth0000 (1).png", "depth0000 (2).png", "depth0000 (3).png", "depth0000.png", "depth0001.png", "depth0043.png", "download.png", "example.png", "file.txt", "img_BmzB6PyCLHnFfVvV.png", "img_DpgERK4DxUAwLftG.png", "img_QYLbD1uzHC1nFbAE.png", "img_ULjhfQdRpzpEnmug.png", "img_Xipc5yPPxgtt1QGj.png", "img_iBZAGHnJ2Bv3f1XS.png", "inputs_img_DLe7eAeVKcd5aihb copy.png", "inputs_img_DLe7eAeVKcd5aihb.png", "inputs_img_EPMSddrLooFQ1YVD.png", "inputs_img_JLRRUVkofX1vCmjx.png", "inputs_img_Jvze5V927RFFAHX5.png", "inputs_img_KiPSrfifuNwC54ep.png", "inputs_img_UBc9tSV7cFAx87FQ.png", "inputs_img_Uf1LEsrNL4ovoWpz copy.png", "inputs_img_Uf1LEsrNL4ovoWpz.png", "inputs_img_Yhq6WtF5vDhoS4r5.png", "inputs_img_bG6odzGr8EZUPK1u.png", "inputs_img_fp87ttHy7b3hLkDg.png", "inputs_img_pKYznktDTwbYPGcL.png", "inputs_img_qyyvpcueAihTw9YV.png", "istockphoto-1325701162-612x612.jpg", "large-elephant-herd-walking-dust-savuti-botswana-towards-camera-196186738.webp", "manwithsign-depth.png", "manwithsign-mask.png", "manwithsign-outline.png", "mask (1).png", "mask (10).png", "mask (2).png", "mask (3).png", "mask (4).png", "mask (5).png", "mask (6).png", "mask (7).png", "mask (8).png", "mask (9).png", "mask-0 (11).png", "mask-0 (24).png", "mask-0 (28).png", "mask-0 (9).png", "mask-0 - 2024-07-02T105656.507.png", "mask.png", "masks.png", "night vision.jpg", "outline (1).png", "outline (2).png", "outline (3).png", "outline (4).png", "outline-0 (11).png", "outline-0 (31).png", "outline-0 (9).png", "outline-0 - 2024-07-02T105656.503.png", "outline.png", "outline0000 (1).png", "outline0000 (2).png", "outline0000 (3).png", "outline0000.png", "outline0001.png", "outline0043.png", "playbook_59b784a6-af19-4b44-9a45-1e98bae3c9e5.png", "playbook_e2a76fa6-15a6-41d2-922a-29dd68bfd3e3.png", "refernece.jpg", "result_14.png", "rgthree.compare._temp_rzpfz_00007_.png", "safari.jpg", "undefined_image (1).png", "walking-depth.png", "walking-mask.png", "walking-outline.png"], {"image_upload": true}], "resize": ["BOOLEAN", {"default": false}], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "repeat": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "keep_proportion": ["BOOLEAN", {"default": false}], "divisible_by": ["INT", {"default": 2, "min": 0, "max": 512, "step": 1}], "mask_channel": [["alpha", "red", "green", "blue"], {"tooltip": "Channel to use for the mask output"}], "background_color": ["STRING", {"default": "", "tooltip": "Fills the alpha channel with the specified color."}]}}, "input_order": {"required": ["image", "resize", "width", "height", "repeat", "keep_proportion", "divisible_by", "mask_channel", "background_color"]}, "output": ["IMAGE", "MASK", "INT", "INT", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["image", "mask", "width", "height", "image_path"], "name": "LoadAndResizeImage", "display_name": "Load & Resize Image", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "LoadImagesFromFolderKJ": {"input": {"required": {"folder": ["STRING", {"default": ""}]}, "optional": {"image_load_cap": ["INT", {"default": 0, "min": 0, "step": 1}], "start_index": ["INT", {"default": 0, "min": 0, "step": 1}]}}, "input_order": {"required": ["folder"], "optional": ["image_load_cap", "start_index"]}, "output": ["IMAGE", "MASK", "INT", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["image", "mask", "count", "image_path"], "name": "LoadImagesFromFolderKJ", "display_name": "Load Images From Folder (KJ)", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "image", "output_node": false}, "MergeImageChannels": {"input": {"required": {"red": ["IMAGE"], "green": ["IMAGE"], "blue": ["IMAGE"]}, "optional": {"alpha": ["MASK", {"default": null}]}}, "input_order": {"required": ["red", "green", "blue"], "optional": ["alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "MergeImageChannels", "display_name": "Merge Image Channels", "description": "\nMerges channel data into an image.  \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "PreviewAnimation": {"input": {"required": {"fps": ["FLOAT", {"default": 8.0, "min": 0.01, "max": 1000.0, "step": 0.01}]}, "optional": {"images": ["IMAGE"], "masks": ["MASK"]}}, "input_order": {"required": ["fps"], "optional": ["images", "masks"]}, "output": [], "output_is_list": [], "output_name": [], "name": "PreviewAnimation", "display_name": "Preview Animation", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": true}, "RemapImageRange": {"input": {"required": {"image": ["IMAGE"], "min": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 1.0, "step": 0.01}], "max": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "clamp": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "min", "max", "clamp"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RemapImageRange", "display_name": "Remap Image Range", "description": "\nRemaps the image values to the specified range. \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "ReverseImageBatch": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ReverseImageBatch", "display_name": "Reverse Image Batch", "description": "\nReverses the order of the images in a batch.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "ReplaceImagesInBatch": {"input": {"required": {"original_images": ["IMAGE"], "replacement_images": ["IMAGE"], "start_index": ["INT", {"default": 1, "min": 0, "max": 4096, "step": 1}]}}, "input_order": {"required": ["original_images", "replacement_images", "start_index"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ReplaceImagesInBatch", "display_name": "Replace Images In Batch", "description": "\nReplaces the images in a batch, starting from the specified start index,  \nwith the replacement images.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "SaveImageWithAlpha": {"input": {"required": {"images": ["IMAGE"], "mask": ["MASK"], "filename_prefix": ["STRING", {"default": "ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "mask", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveImageWithAlpha", "display_name": "Save Image With Alpha", "description": "\nSaves an image and mask as .PNG with the mask as the alpha channel. \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": true}, "SaveImageKJ": {"input": {"required": {"images": ["IMAGE", {"tooltip": "The images to save."}], "filename_prefix": ["STRING", {"default": "ComfyUI", "tooltip": "The prefix for the file to save. This may include formatting information such as %date:yyyy-MM-dd% or %Empty Latent Image.width% to include values from nodes."}], "output_folder": ["STRING", {"default": "output", "tooltip": "The folder to save the images to."}]}, "optional": {"caption_file_extension": ["STRING", {"default": ".txt", "tooltip": "The extension for the caption file."}], "caption": ["STRING", {"forceInput": true, "tooltip": "string to save as .txt file"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "output_folder"], "optional": ["caption_file_extension", "caption"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["filename"], "name": "SaveImageKJ", "display_name": "Save Image KJ", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "image", "output_node": true}, "SplitImageChannels": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "IMAGE", "IMAGE", "MASK"], "output_is_list": [false, false, false, false], "output_name": ["red", "green", "blue", "mask"], "name": "SplitImageChannels", "display_name": "Split Image Channels", "description": "\nSplits image channels into images where the selected channel  \nis repeated for all channels, and the alpha as a mask. \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "BatchCropFromMask": {"input": {"required": {"original_images": ["IMAGE"], "masks": ["MASK"], "crop_size_mult": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "bbox_smooth_alpha": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["original_images", "masks", "crop_size_mult", "bbox_smooth_alpha"]}, "output": ["IMAGE", "IMAGE", "BBOX", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["original_images", "cropped_images", "bboxes", "width", "height"], "name": "BatchCropFromMask", "display_name": "Batch Crop From Mask", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking", "output_node": false}, "BatchCropFromMaskAdvanced": {"input": {"required": {"original_images": ["IMAGE"], "masks": ["MASK"], "crop_size_mult": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "bbox_smooth_alpha": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["original_images", "masks", "crop_size_mult", "bbox_smooth_alpha"]}, "output": ["IMAGE", "IMAGE", "MASK", "IMAGE", "MASK", "BBOX", "BBOX", "INT", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["original_images", "cropped_images", "cropped_masks", "combined_crop_image", "combined_crop_masks", "bboxes", "combined_bounding_box", "bbox_width", "bbox_height"], "name": "BatchCropFromMaskAdvanced", "display_name": "Batch Crop From Mask Advanced", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking", "output_node": false}, "FilterZeroMasksAndCorrespondingImages": {"input": {"required": {"masks": ["MASK"]}, "optional": {"original_images": ["IMAGE"]}}, "input_order": {"required": ["masks"], "optional": ["original_images"]}, "output": ["MASK", "IMAGE", "IMAGE", "INDEXES"], "output_is_list": [false, false, false, false], "output_name": ["non_zero_masks_out", "non_zero_mask_images_out", "zero_mask_images_out", "zero_mask_images_out_indexes"], "name": "FilterZeroMasksAndCorrespondingImages", "display_name": "FilterZeroMasksAndCorrespondingImages", "description": "\nFilter out all the empty (i.e. all zero) mask in masks  \nAlso filter out all the corresponding images in original_images by indexes if provide  \n  \noriginal_images (optional): If provided, need have same length as masks.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking", "output_node": false}, "InsertImageBatchByIndexes": {"input": {"required": {"images": ["IMAGE"], "images_to_insert": ["IMAGE"], "insert_indexes": ["INDEXES"]}}, "input_order": {"required": ["images", "images_to_insert", "insert_indexes"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images_after_insert"], "name": "InsertImageBatchByIndexes", "display_name": "Insert Image Batch By Indexes", "description": "\nThis node is designed to be use with node FilterZeroMasksAndCorrespondingImages\nIt inserts the images_to_insert into images according to insert_indexes\n\nReturns:\n    images_after_insert: updated original images with origonal sequence order\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "BatchUncrop": {"input": {"required": {"original_images": ["IMAGE"], "cropped_images": ["IMAGE"], "bboxes": ["BBOX"], "border_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "crop_rescale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "border_top": ["BOOLEAN", {"default": true}], "border_bottom": ["BOOLEAN", {"default": true}], "border_left": ["BOOLEAN", {"default": true}], "border_right": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["original_images", "cropped_images", "bboxes", "border_blending", "crop_rescale", "border_top", "border_bottom", "border_left", "border_right"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BatchUncrop", "display_name": "Batch Uncrop", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking", "output_node": false}, "BatchUncropAdvanced": {"input": {"required": {"original_images": ["IMAGE"], "cropped_images": ["IMAGE"], "cropped_masks": ["MASK"], "combined_crop_mask": ["MASK"], "bboxes": ["BBOX"], "border_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "crop_rescale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "use_combined_mask": ["BOOLEAN", {"default": false}], "use_square_mask": ["BOOLEAN", {"default": true}]}, "optional": {"combined_bounding_box": ["BBOX", {"default": null}]}}, "input_order": {"required": ["original_images", "cropped_images", "cropped_masks", "combined_crop_mask", "bboxes", "border_blending", "crop_rescale", "use_combined_mask", "use_square_mask"], "optional": ["combined_bounding_box"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BatchUncropAdvanced", "display_name": "Batch Uncrop Advanced", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking", "output_node": false}, "SplitBboxes": {"input": {"required": {"bboxes": ["BBOX"], "index": ["INT", {"default": 0, "min": 0, "max": 99999999, "step": 1}]}}, "input_order": {"required": ["bboxes", "index"]}, "output": ["BBOX", "BBOX"], "output_is_list": [false, false], "output_name": ["bboxes_a", "bboxes_b"], "name": "SplitBboxes", "display_name": "Split Bboxes", "description": "\nSplits the specified bbox list at the given index into two lists.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking", "output_node": false}, "BboxToInt": {"input": {"required": {"bboxes": ["BBOX"], "index": ["INT", {"default": 0, "min": 0, "max": 99999999, "step": 1}]}}, "input_order": {"required": ["bboxes", "index"]}, "output": ["INT", "INT", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["x_min", "y_min", "width", "height", "center_x", "center_y"], "name": "BboxToInt", "display_name": "Bbox To Int", "description": "\nReturns selected index from bounding box list as integers.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking", "output_node": false}, "BboxVisualize": {"input": {"required": {"images": ["IMAGE"], "bboxes": ["BBOX"], "line_width": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}}, "input_order": {"required": ["images", "bboxes", "line_width"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "BboxVisualize", "display_name": "Bbox Visualize", "description": "\nVisualizes the specified bbox on the image.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking", "output_node": false}, "GenerateNoise": {"input": {"required": {"width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}], "multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 4096, "step": 0.01}], "constant_batch_noise": ["BOOLEAN", {"default": false}], "normalize": ["BOOLEAN", {"default": false}]}, "optional": {"model": ["MODEL"], "sigmas": ["SIGMAS"], "latent_channels": [["4", "16"]]}}, "input_order": {"required": ["width", "height", "batch_size", "seed", "multiplier", "constant_batch_noise", "normalize"], "optional": ["model", "sigmas", "latent_channels"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "GenerateNoise", "display_name": "Generate Noise", "description": "\nGenerates noise for injection or to be used as empty latents on samplers with add_noise off.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/noise", "output_node": false}, "FlipSigmasAdjusted": {"input": {"required": {"sigmas": ["SIGMAS"], "divide_by_last_sigma": ["BOOLEAN", {"default": false}], "divide_by": ["FLOAT", {"default": 1, "min": 1, "max": 255, "step": 0.01}], "offset_by": ["INT", {"default": 1, "min": -100, "max": 100, "step": 1}]}}, "input_order": {"required": ["sigmas", "divide_by_last_sigma", "divide_by", "offset_by"]}, "output": ["SIGMAS", "STRING"], "output_is_list": [false, false], "output_name": ["SIGMAS", "sigmas_string"], "name": "FlipSigmasAdjusted", "display_name": "Flip Sigmas Adjusted", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/noise", "output_node": false}, "InjectNoiseToLatent": {"input": {"required": {"latents": ["LATENT"], "strength": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 200.0, "step": 0.0001}], "noise": ["LATENT"], "normalize": ["BOOLEAN", {"default": false}], "average": ["BOOLEAN", {"default": false}]}, "optional": {"mask": ["MASK"], "mix_randn_amount": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.001}], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}]}}, "input_order": {"required": ["latents", "strength", "noise", "normalize", "average"], "optional": ["mask", "mix_randn_amount", "seed"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "InjectNoiseToLatent", "display_name": "Inject Noise To Latent", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/noise", "output_node": false}, "CustomSigmas": {"input": {"required": {"sigmas_string": ["STRING", {"default": "14.615, 6.475, 3.861, 2.697, 1.886, 1.396, 0.963, 0.652, 0.399, 0.152, 0.029", "multiline": true}], "interpolate_to_steps": ["INT", {"default": 10, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["sigmas_string", "interpolate_to_steps"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "CustomSigmas", "display_name": "Custom Sigmas", "description": "\nCreates a sigmas tensor from a string of comma separated values.  \nExamples: \n   \nNvidia's optimized AYS 10 step schedule for SD 1.5:  \n14.615, 6.475, 3.861, 2.697, 1.886, 1.396, 0.963, 0.652, 0.399, 0.152, 0.029  \nSDXL:   \n14.615, 6.315, 3.771, 2.181, 1.342, 0.862, 0.555, 0.380, 0.234, 0.113, 0.029  \nSVD:  \n700.00, 54.5, 15.886, 7.977, 4.248, 1.789, 0.981, 0.403, 0.173, 0.034, 0.002  \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/noise", "output_node": false}, "WidgetToString": {"input": {"required": {"id": ["INT", {"default": 0}], "widget_name": ["STRING", {"multiline": false}], "return_all": ["BOOLEAN", {"default": false}]}, "optional": {"any_input": ["*", {}], "node_title": ["STRING", {"multiline": false}]}, "hidden": {"extra_pnginfo": "EXTRA_PNGINFO", "prompt": "PROMPT", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["id", "widget_name", "return_all"], "optional": ["any_input", "node_title"], "hidden": ["extra_pnginfo", "prompt", "unique_id"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "WidgetToString", "display_name": "Widget To String", "description": "\nSelects a node and it's specified widget and outputs the value as a string.  \nIf no node id or title is provided it will use the 'any_input' link and use that node.  \nTo see node id's, enable node id display from Manager badge menu.  \nAlternatively you can search with the node title. Node titles ONLY exist if they  \nare manually edited!  \nThe 'any_input' is required for making sure the node you want the value from exists in the workflow.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/text", "output_node": false}, "DummyOut": {"input": {"required": {"any_input": ["*", {}]}}, "input_order": {"required": ["any_input"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "DummyOut", "display_name": "Dummy Out", "description": "\nDoes nothing, used to trigger generic workflow output.    \nA way to get previews in the UI without saving anything to disk.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/misc", "output_node": true}, "GetLatentsFromBatchIndexed": {"input": {"required": {"latents": ["LATENT"], "indexes": ["STRING", {"default": "0, 1, 2", "multiline": true}]}}, "input_order": {"required": ["latents", "indexes"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "GetLatentsFromBatchIndexed", "display_name": "Get Latents From Batch Indexed", "description": "\nSelects and returns the latents at the specified indices as an latent batch.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes", "output_node": false}, "ScaleBatchPromptSchedule": {"input": {"required": {"input_str": ["STRING", {"forceInput": true, "default": "0:(0.0),\n7:(1.0),\n15:(0.0)\n"}], "old_frame_count": ["INT", {"forceInput": true, "default": 1, "min": 1, "max": 4096, "step": 1}], "new_frame_count": ["INT", {"forceInput": true, "default": 1, "min": 1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["input_str", "old_frame_count", "new_frame_count"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "ScaleBatchPromptSchedule", "display_name": "Scale Batch Prompt Schedule", "description": "\nScales a batch schedule from Fizz' nodes BatchPromptSchedule\nto a different frame count.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes", "output_node": false}, "CameraPoseVisualizer": {"input": {"required": {"pose_file_path": ["STRING", {"default": "", "multiline": false}], "base_xval": ["FLOAT", {"default": 0.2, "min": 0, "max": 100, "step": 0.01}], "zval": ["FLOAT", {"default": 0.3, "min": 0, "max": 100, "step": 0.01}], "scale": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 10.0, "step": 0.01}], "use_exact_fx": ["BOOLEAN", {"default": false}], "relative_c2w": ["BOOLEAN", {"default": true}], "use_viewer": ["BOOLEAN", {"default": false}]}, "optional": {"cameractrl_poses": ["CAMERACTRL_POSES", {"default": null}]}}, "input_order": {"required": ["pose_file_path", "base_xval", "zval", "scale", "use_exact_fx", "relative_c2w", "use_viewer"], "optional": ["cameractrl_poses"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CameraPoseVisualizer", "display_name": "Camera Pose Visualizer", "description": "\nVisualizes the camera poses, from Animatediff-Evolved CameraCtrl Pose  \nor a .txt file with RealEstate camera intrinsics and coordinates, in a 3D plot. \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/misc", "output_node": false}, "JoinStrings": {"input": {"required": {"string1": ["STRING", {"default": "", "forceInput": true}], "string2": ["STRING", {"default": "", "forceInput": true}], "delimiter": ["STRING", {"default": " ", "multiline": false}]}}, "input_order": {"required": ["string1", "string2", "delimiter"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JoinStrings", "display_name": "Join Strings", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/constants", "output_node": false}, "JoinStringMulti": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 1000, "step": 1}], "string_1": ["STRING", {"default": "", "forceInput": true}], "string_2": ["STRING", {"default": "", "forceInput": true}], "delimiter": ["STRING", {"default": " ", "multiline": false}], "return_list": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["inputcount", "string_1", "string_2", "delimiter", "return_list"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["string"], "name": "JoinStringMulti", "display_name": "Join String Multi", "description": "\nCreates single string, or a list of strings, from  \nmultiple input strings.  \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes", "output_node": false}, "SomethingToString": {"input": {"required": {"input": ["*", {}]}, "optional": {"prefix": ["STRING", {"default": ""}], "suffix": ["STRING", {"default": ""}]}}, "input_order": {"required": ["input"], "optional": ["prefix", "suffix"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "SomethingToString", "display_name": "Something To String", "description": "\nConverts any type to a string.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/text", "output_node": false}, "Sleep": {"input": {"required": {"input": ["*", {}], "minutes": ["INT", {"default": 0, "min": 0, "max": 1439}], "seconds": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 59.99, "step": 0.01}]}}, "input_order": {"required": ["input", "minutes", "seconds"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "Sleep", "display_name": "Sleep", "description": "\nDelays the execution for the input amount of time.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/misc", "output_node": false}, "VRAM_Debug": {"input": {"required": {"empty_cache": ["BOOLEAN", {"default": true}], "gc_collect": ["BOOLEAN", {"default": true}], "unload_all_models": ["BOOLEAN", {"default": false}]}, "optional": {"any_input": ["*", {}], "image_pass": ["IMAGE"], "model_pass": ["MODEL"]}}, "input_order": {"required": ["empty_cache", "gc_collect", "unload_all_models"], "optional": ["any_input", "image_pass", "model_pass"]}, "output": ["*", "IMAGE", "MODEL", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["any_output", "image_pass", "model_pass", "freemem_before", "freemem_after"], "name": "VRAM_Debug", "display_name": "VRAM Debug", "description": "\nReturns the inputs unchanged, they are only used as triggers,  \nand performs comfy model management functions and garbage collection,  \nreports free VRAM before and after the operations.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/misc", "output_node": false}, "EmptyLatentImagePresets": {"input": {"required": {"dimensions": [["512 x 512 (1:1)", "768 x 512 (1.5:1)", "960 x 512 (1.875:1)", "1024 x 512 (2:1)", "1024 x 576 (1.778:1)", "1536 x 640 (2.4:1)", "1344 x 768 (1.75:1)", "1216 x 832 (1.46:1)", "1152 x 896 (1.286:1)", "1024 x 1024 (1:1)"], {"default": "512 x 512 (1:1)"}], "invert": ["BOOLEAN", {"default": false}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["dimensions", "invert", "batch_size"]}, "output": ["LATENT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["Latent", "Width", "Height"], "name": "EmptyLatentImagePresets", "display_name": "Empty Latent Image Presets", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes", "output_node": false}, "EmptyLatentImageCustomPresets": {"input": {"required": {"dimensions": [["SD - 512x512", "HD - 768x768", "Full HD - 1024x1024", "4k - 2048x2048", "SVD - 1024x576"]], "invert": ["BOOLEAN", {"default": false}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["dimensions", "invert", "batch_size"]}, "output": ["LATENT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["Latent", "Width", "Height"], "name": "EmptyLatentImageCustomPresets", "display_name": "Empty Latent Image Custom Presets", "description": "\nGenerates an empty latent image with the specified dimensions.  \nThe choices are loaded from 'custom_dimensions.json' in the nodes folder.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes", "output_node": false}, "ModelPassThrough": {"input": {"required": {}, "optional": {"model": ["MODEL"]}}, "input_order": {"required": [], "optional": ["model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "ModelPassThrough", "display_name": "ModelPass", "description": "\n    Simply passes through the model,\n    workaround for Set node not allowing bypassed inputs.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/misc", "output_node": false}, "ModelSaveKJ": {"input": {"required": {"model": ["MODEL"], "filename_prefix": ["STRING", {"default": "diffusion_models/ComfyUI"}], "model_key_prefix": ["STRING", {"default": "model.diffusion_model."}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["model", "filename_prefix", "model_key_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ModelSaveKJ", "display_name": "Model Save KJ", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "advanced/model_merging", "output_node": true}, "SetShakkerLabsUnionControlNetType": {"input": {"required": {"control_net": ["CONTROL_NET"], "type": [["auto", "canny", "tile", "depth", "blur", "pose", "gray", "low quality"]]}}, "input_order": {"required": ["control_net", "type"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "SetShakkerLabsUnionControlNetType", "display_name": "Set Shakker Labs Union ControlNet Type", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "conditioning/controlnet", "output_node": false}, "NormalizedAmplitudeToMask": {"input": {"required": {"normalized_amp": ["NORMALIZED_AMPLITUDE"], "width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_offset": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "location_x": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 1}], "location_y": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 1}], "size": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 1}], "shape": [["none", "circle", "square", "triangle"], {"default": "none"}], "color": [["white", "amplitude"], {"default": "amplitude"}]}}, "input_order": {"required": ["normalized_amp", "width", "height", "frame_offset", "location_x", "location_y", "size", "shape", "color"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "NormalizedAmplitudeToMask", "display_name": "NormalizedAmplitudeToMask", "description": "\nWorks as a bridge to the AudioScheduler -nodes:  \nhttps://github.com/a1lazydog/ComfyUI-AudioScheduler  \nCreates masks based on the normalized amplitude.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/audio", "output_node": false}, "NormalizedAmplitudeToFloatList": {"input": {"required": {"normalized_amp": ["NORMALIZED_AMPLITUDE"]}}, "input_order": {"required": ["normalized_amp"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "NormalizedAmplitudeToFloatList", "display_name": "NormalizedAmplitudeToFloatList", "description": "\nWorks as a bridge to the AudioScheduler -nodes:  \nhttps://github.com/a1lazydog/ComfyUI-AudioScheduler  \nCreates a list of floats from the normalized amplitude.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/audio", "output_node": false}, "OffsetMaskByNormalizedAmplitude": {"input": {"required": {"normalized_amp": ["NORMALIZED_AMPLITUDE"], "mask": ["MASK"], "x": ["INT", {"default": 0, "min": -4096, "max": 16384, "step": 1, "display": "number"}], "y": ["INT", {"default": 0, "min": -4096, "max": 16384, "step": 1, "display": "number"}], "rotate": ["BOOLEAN", {"default": false}], "angle_multiplier": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.001, "display": "number"}]}}, "input_order": {"required": ["normalized_amp", "mask", "x", "y", "rotate", "angle_multiplier"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "OffsetMaskByNormalizedAmplitude", "display_name": "OffsetMaskByNormalizedAmplitude", "description": "\nWorks as a bridge to the AudioScheduler -nodes:  \nhttps://github.com/a1lazydog/ComfyUI-AudioScheduler  \nOffsets masks based on the normalized amplitude.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/audio", "output_node": false}, "ImageTransformByNormalizedAmplitude": {"input": {"required": {"normalized_amp": ["NORMALIZED_AMPLITUDE"], "zoom_scale": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.001, "display": "number"}], "x_offset": ["INT", {"default": 0, "min": -16383, "max": 16384, "step": 1, "display": "number"}], "y_offset": ["INT", {"default": 0, "min": -16383, "max": 16384, "step": 1, "display": "number"}], "cumulative": ["BOOLEAN", {"default": false}], "image": ["IMAGE"]}}, "input_order": {"required": ["normalized_amp", "zoom_scale", "x_offset", "y_offset", "cumulative", "image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageTransformByNormalizedAmplitude", "display_name": "ImageTransformByNormalizedAmplitude", "description": "\nWorks as a bridge to the AudioScheduler -nodes:  \nhttps://github.com/a1lazydog/ComfyUI-AudioScheduler  \nTransforms image based on the normalized amplitude.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/audio", "output_node": false}, "SplineEditor": {"input": {"required": {"points_store": ["STRING", {"multiline": false}], "coordinates": ["STRING", {"multiline": false}], "mask_width": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 8}], "mask_height": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 8}], "points_to_sample": ["INT", {"default": 16, "min": 2, "max": 1000, "step": 1}], "sampling_method": [["path", "time", "controlpoints"], {"default": "time"}], "interpolation": [["cardinal", "monotone", "basis", "linear", "step-before", "step-after", "polar", "polar-reverse"], {"default": "cardinal"}], "tension": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "repeat_output": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "float_output_type": [["list", "pandas series", "tensor"], {"default": "list"}]}, "optional": {"min_value": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "max_value": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01}]}}, "input_order": {"required": ["points_store", "coordinates", "mask_width", "mask_height", "points_to_sample", "sampling_method", "interpolation", "tension", "repeat_output", "float_output_type"], "optional": ["min_value", "max_value"]}, "output": ["MASK", "STRING", "FLOAT", "INT", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["mask", "coord_str", "float", "count", "normalized_str"], "name": "SplineEditor", "display_name": "Spline Editor", "description": "\n# WORK IN PROGRESS  \nDo not count on this as part of your workflow yet,  \nprobably contains lots of bugs and stability is not  \nguaranteed!!  \n  \n## Graphical editor to create values for various   \n## schedules and/or mask batches.  \n\n**Shift + click** to add control point at end.\n**Ctrl + click** to add control point (subdivide) between two points.  \n**Right click on a point** to delete it.    \nNote that you can't delete from start/end.  \n  \nRight click on canvas for context menu:  \nThese are purely visual options, doesn't affect the output:  \n - Toggle handles visibility\n - Display sample points: display the points to be returned.  \n\n**points_to_sample** value sets the number of samples  \nreturned from the **drawn spline itself**, this is independent from the  \nactual control points, so the interpolation type matters.  \nsampling_method: \n - time: samples along the time axis, used for schedules  \n - path: samples along the path itself, useful for coordinates  \n\noutput types:\n - mask batch  \n        example compatible nodes: anything that takes masks  \n - list of floats\n        example compatible nodes: IPAdapter weights  \n - pandas series\n        example compatible nodes: anything that takes Fizz'  \n        nodes Batch Value Schedule  \n - torch tensor  \n        example compatible nodes: unknown\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/weights", "output_node": false}, "CreateShapeImageOnPath": {"input": {"required": {"shape": [["circle", "square", "triangle"], {"default": "circle"}], "coordinates": ["STRING", {"forceInput": true}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "shape_width": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 1}], "shape_height": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 1}], "shape_color": ["STRING", {"default": "white"}], "bg_color": ["STRING", {"default": "black"}], "blur_radius": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100, "step": 0.1}], "intensity": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 100.0, "step": 0.01}]}, "optional": {"size_multiplier": ["FLOAT", {"default": [1.0], "forceInput": true}]}}, "input_order": {"required": ["shape", "coordinates", "frame_width", "frame_height", "shape_width", "shape_height", "shape_color", "bg_color", "blur_radius", "intensity"], "optional": ["size_multiplier"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "CreateShapeImageOnPath", "display_name": "Create Shape Image On Path", "description": "\nCreates an image or batch of images with the specified shape.  \nLocations are center locations.  \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "CreateShapeMaskOnPath": {"input": {"required": {"shape": [["circle", "square", "triangle"], {"default": "circle"}], "coordinates": ["STRING", {"forceInput": true}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "shape_width": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 1}], "shape_height": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 1}]}, "optional": {"size_multiplier": ["FLOAT", {"default": [1.0], "forceInput": true}]}}, "input_order": {"required": ["shape", "coordinates", "frame_width", "frame_height", "shape_width", "shape_height"], "optional": ["size_multiplier"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["mask", "mask_inverted"], "name": "CreateShapeMaskOnPath", "display_name": "Create Shape Mask On Path", "description": "\nCreates a mask or batch of masks with the specified shape.  \nLocations are center locations.  \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking/generate", "output_node": false}, "CreateTextOnPath": {"input": {"required": {"coordinates": ["STRING", {"forceInput": true}], "text": ["STRING", {"default": "text", "multiline": true}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "font": [["FreeMono.ttf", "FreeMonoBoldOblique.otf", "TTNorms-Black.otf"]], "font_size": ["INT", {"default": 42}], "alignment": [["left", "center", "right"], {"default": "center"}], "text_color": ["STRING", {"default": "white"}]}, "optional": {"size_multiplier": ["FLOAT", {"default": [1.0], "forceInput": true}]}}, "input_order": {"required": ["coordinates", "text", "frame_width", "frame_height", "font", "font_size", "alignment", "text_color"], "optional": ["size_multiplier"]}, "output": ["IMAGE", "MASK", "MASK"], "output_is_list": [false, false, false], "output_name": ["image", "mask", "mask_inverted"], "name": "CreateTextOnPath", "display_name": "Create Text On Path", "description": "\nCreates a mask or batch of masks with the specified text.  \nLocations are center locations.  \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking/generate", "output_node": false}, "CreateGradientFromCoords": {"input": {"required": {"coordinates": ["STRING", {"forceInput": true}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "start_color": ["STRING", {"default": "white"}], "end_color": ["STRING", {"default": "black"}], "multiplier": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["coordinates", "frame_width", "frame_height", "start_color", "end_color", "multiplier"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "CreateGradientFromCoords", "display_name": "Create Gradient From Coords", "description": "\nCreates a gradient image from coordinates.    \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "GradientToFloat": {"input": {"required": {"image": ["IMAGE"], "steps": ["INT", {"default": 10, "min": 2, "max": 10000, "step": 1}]}}, "input_order": {"required": ["image", "steps"]}, "output": ["FLOAT", "FLOAT"], "output_is_list": [false, false], "output_name": ["float_x", "float_y"], "name": "GradientToFloat", "display_name": "Gradient To Float", "description": "\nCalculates list of floats from image.    \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/image", "output_node": false}, "WeightScheduleExtend": {"input": {"required": {"input_values_1": ["FLOAT", {"default": 0.0, "forceInput": true}], "input_values_2": ["FLOAT", {"default": 0.0, "forceInput": true}], "output_type": [["match_input", "list", "pandas series", "tensor"], {"default": "match_input"}]}}, "input_order": {"required": ["input_values_1", "input_values_2", "output_type"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "WeightScheduleExtend", "display_name": "Weight Schedule Extend", "description": "\nExtends, and converts if needed, different value lists/series  \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/weights", "output_node": false}, "MaskOrImageToWeight": {"input": {"required": {"output_type": [["list", "pandas series", "tensor", "string"], {"default": "list"}]}, "optional": {"images": ["IMAGE"], "masks": ["MASK"]}}, "input_order": {"required": ["output_type"], "optional": ["images", "masks"]}, "output": ["FLOAT", "STRING"], "output_is_list": [false, false], "output_name": ["FLOAT", "STRING"], "name": "MaskOrImageToWeight", "display_name": "Mask Or Image To Weight", "description": "\nGets the mean values from mask or image batch  \nand returns that as the selected output type.   \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/weights", "output_node": false}, "WeightScheduleConvert": {"input": {"required": {"input_values": ["FLOAT", {"default": 0.0, "forceInput": true}], "output_type": [["match_input", "list", "pandas series", "tensor"], {"default": "list"}], "invert": ["BOOLEAN", {"default": false}], "repeat": ["INT", {"default": 1, "min": 1, "max": 255, "step": 1}]}, "optional": {"remap_to_frames": ["INT", {"default": 0}], "interpolation_curve": ["FLOAT", {"forceInput": true}], "remap_values": ["BOOLEAN", {"default": false}], "remap_min": ["FLOAT", {"default": 0.0, "min": -100000, "max": 100000.0, "step": 0.01}], "remap_max": ["FLOAT", {"default": 1.0, "min": -100000, "max": 100000.0, "step": 0.01}]}}, "input_order": {"required": ["input_values", "output_type", "invert", "repeat"], "optional": ["remap_to_frames", "interpolation_curve", "remap_values", "remap_min", "remap_max"]}, "output": ["FLOAT", "STRING", "INT"], "output_is_list": [false, false, false], "output_name": ["FLOAT", "STRING", "INT"], "name": "WeightScheduleConvert", "display_name": "Weight Schedule Convert", "description": "\nConverts different value lists/series to another type.  \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/weights", "output_node": false}, "FloatToMask": {"input": {"required": {"input_values": ["FLOAT", {"forceInput": true, "default": 0}], "width": ["INT", {"default": 100, "min": 1}], "height": ["INT", {"default": 100, "min": 1}]}}, "input_order": {"required": ["input_values", "width", "height"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "FloatToMask", "display_name": "Float To Mask", "description": "\nGenerates a batch of masks based on the input float values.\nThe batch size is determined by the length of the input float values.\nEach mask is generated with the specified width and height.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/masking/generate", "output_node": false}, "FloatToSigmas": {"input": {"required": {"float_list": ["FLOAT", {"default": 0.0, "forceInput": true}]}}, "input_order": {"required": ["float_list"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "FloatToSigmas", "display_name": "Float To Sigmas", "description": "\nCreates a sigmas tensor from list of float values.  \n\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/noise", "output_node": false}, "PlotCoordinates": {"input": {"required": {"coordinates": ["STRING", {"forceInput": true}], "text": ["STRING", {"default": "title", "multiline": false}], "width": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 8}], "height": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 8}], "bbox_width": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 8}], "bbox_height": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 8}]}, "optional": {"size_multiplier": ["FLOAT", {"default": [1.0], "forceInput": true}]}}, "input_order": {"required": ["coordinates", "text", "width", "height", "bbox_width", "bbox_height"], "optional": ["size_multiplier"]}, "output": ["IMAGE", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["images", "width", "height", "bbox_width", "bbox_height"], "name": "PlotCoordinates", "display_name": "Plot Coordinates", "description": "\nPlots coordinates to sequence of images using Matplotlib.  \n\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/experimental", "output_node": false}, "InterpolateCoords": {"input": {"required": {"coordinates": ["STRING", {"forceInput": true}], "interpolation_curve": ["FLOAT", {"forceInput": true}]}}, "input_order": {"required": ["coordinates", "interpolation_curve"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["coordinates"], "name": "InterpolateCoords", "display_name": "Interpolate Coords", "description": "\nInterpolates coordinates based on a curve.   \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/experimental", "output_node": false}, "PointsEditor": {"input": {"required": {"points_store": ["STRING", {"multiline": false}], "coordinates": ["STRING", {"multiline": false}], "neg_coordinates": ["STRING", {"multiline": false}], "bbox_store": ["STRING", {"multiline": false}], "bboxes": ["STRING", {"multiline": false}], "bbox_format": [["xyxy", "xywh"]], "width": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 8}], "height": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 8}], "normalize": ["BOOLEAN", {"default": false}]}, "optional": {"bg_image": ["IMAGE"]}}, "input_order": {"required": ["points_store", "coordinates", "neg_coordinates", "bbox_store", "bboxes", "bbox_format", "width", "height", "normalize"], "optional": ["bg_image"]}, "output": ["STRING", "STRING", "BBOX", "MASK", "IMAGE"], "output_is_list": [false, false, false, false, false], "output_name": ["positive_coords", "negative_coords", "bbox", "bbox_mask", "cropped_image"], "name": "PointsEditor", "display_name": "Points Editor", "description": "\n# WORK IN PROGRESS  \nDo not count on this as part of your workflow yet,  \nprobably contains lots of bugs and stability is not  \nguaranteed!!  \n  \n## Graphical editor to create coordinates\n\n**Shift + click** to add a positive (green) point.\n**Shift + right click** to add a negative (red) point.\n**Ctrl + click** to draw a box.  \n**Right click on a point** to delete it.    \nNote that you can't delete from start/end of the points array.  \n  \nTo add an image select the node and copy/paste or drag in the image.  \nOr from the bg_image input on queue (first frame of the batch).  \n\n**THE IMAGE IS SAVED TO THE NODE AND WORKFLOW METADATA**  \nyou can clear the image from the context menu by right clicking on the canvas  \n\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/experimental", "output_node": false}, "StabilityAPI_SD3": {"input": {"required": {"prompt": ["STRING", {"multiline": true}], "n_prompt": ["STRING", {"multiline": true}], "seed": ["INT", {"default": 123, "min": 0, "max": 4294967294, "step": 1}], "model": [["sd3", "sd3-turbo"], {"default": "sd3"}], "aspect_ratio": [["1:1", "16:9", "21:9", "2:3", "3:2", "4:5", "5:4", "9:16", "9:21"], {"default": "1:1"}], "output_format": [["png", "jpeg"], {"default": "jpeg"}]}, "optional": {"api_key": ["STRING", {"multiline": true}], "image": ["IMAGE"], "img2img_strength": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "disable_metadata": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["prompt", "n_prompt", "seed", "model", "aspect_ratio", "output_format"], "optional": ["api_key", "image", "img2img_strength", "disable_metadata"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "StabilityAPI_SD3", "display_name": "Stability API SD3", "description": "\n## Calls StabilityAI API\n   \nAlthough you may have multiple keys in your account,  \nyou should use the same key for all requests to this API.  \n\nGet your API key here: https://platform.stability.ai/account/keys  \nRecommended to set the key in the config.json -file under this  \nnode packs folder.  \n# WARNING:  \nOtherwise the API key may get saved in the image metadata even  \nwith \"disable_metadata\" on if the workflow includes save nodes  \nseparate from this node.  \n   \nsd3 requires 6.5 credits per generation  \nsd3-turbo requires 4 credits per generation  \n\nIf no image is provided, mode is set to text-to-image  \n\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/experimental", "output_node": false}, "SoundReactive": {"input": {"required": {"sound_level": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 99999, "step": 0.01}], "start_range_hz": ["INT", {"default": 150, "min": 0, "max": 9999, "step": 1}], "end_range_hz": ["INT", {"default": 2000, "min": 0, "max": 9999, "step": 1}], "multiplier": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 99999, "step": 0.01}], "smoothing_factor": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "normalize": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["sound_level", "start_range_hz", "end_range_hz", "multiplier", "smoothing_factor", "normalize"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["sound_level", "sound_level_int"], "name": "SoundReactive", "display_name": "Sound Reactive", "description": "\nReacts to the sound level of the input.  \nUses your browsers sound input options and requires.  \nMeant to be used with realtime diffusion with autoqueue.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/audio", "output_node": false}, "StableZero123_BatchSchedule": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "init_image": ["IMAGE"], "vae": ["VAE"], "width": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out"]], "azimuth_points_string": ["STRING", {"default": "0:(0.0),\n7:(1.0),\n15:(0.0)\n", "multiline": true}], "elevation_points_string": ["STRING", {"default": "0:(0.0),\n7:(0.0),\n15:(0.0)\n", "multiline": true}]}}, "input_order": {"required": ["clip_vision", "init_image", "vae", "width", "height", "batch_size", "interpolation", "azimuth_points_string", "elevation_points_string"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "StableZero123_BatchSchedule", "display_name": "Stable Zero123 Batch Schedule", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/experimental", "output_node": false}, "SV3D_BatchSchedule": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "init_image": ["IMAGE"], "vae": ["VAE"], "width": ["INT", {"default": 576, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 576, "min": 16, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 21, "min": 1, "max": 4096}], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out"]], "azimuth_points_string": ["STRING", {"default": "0:(0.0),\n9:(180.0),\n20:(360.0)\n", "multiline": true}], "elevation_points_string": ["STRING", {"default": "0:(0.0),\n9:(0.0),\n20:(0.0)\n", "multiline": true}]}}, "input_order": {"required": ["clip_vision", "init_image", "vae", "width", "height", "batch_size", "interpolation", "azimuth_points_string", "elevation_points_string"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "SV3D_BatchSchedule", "display_name": "SV3D Batch Schedule", "description": "\nAllow scheduling of the azimuth and elevation conditions for SV3D.  \nNote that SV3D is still a video model and the schedule needs to always go forward  \nhttps://huggingface.co/stabilityai/sv3d\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/experimental", "output_node": false}, "LoadResAdapterNormalization": {"input": {"required": {"model": ["MODEL"], "resadapter_path": [["CRM.pth", "SUPIR-v0F.ckpt", "SUPIR-v0Q.ckpt", "disneyPixarCartoon_A.safetensors", "disneyPixarCartoon_v10.safetensors", "dreamshaperXL_alpha2Xl10.safetensors", "dreamshaper_8.safetensors", "dynavisionXLAllInOneStylized_releaseV0610Bakedvae.safetensors", "epicrealism_naturalSinRC1VAE.safetensors", "fenrisxlFlux_fenrisxlV18THLSDXL.safetensors", "flat2DAnimerge_v45Sharp.safetensors", "flux1-dev.safetensors", "juggernautXL_juggXIByRundiffusion.safetensors", "juggernautXL_v9Rdphoto2Lightning.safetensors", "juggernaut_reborn.safetensors", "photonLCM_v10.safetensors", "photon_v1.safetensors", "realisticVisionV60B1_v51HyperVAE.safetensors", "realvisxlV50_v50LightningBakedvae.safetensors", "sdXL_v10VAEFix.safetensors", "turbovisionxlSuperFastXLBasedOnNew_tvxlV431Bakedvae.safetensors", "wildcardxXLTURBO_wildcardxXLTURBOV10.safetensors"]]}}, "input_order": {"required": ["model", "resadapter_path"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "LoadResAdapterNormalization", "display_name": "LoadResAdapterNormalization", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/experimental", "output_node": false}, "Superprompt": {"input": {"required": {"instruction_prompt": ["STRING", {"default": "Expand the following prompt to add more detail", "multiline": true}], "prompt": ["STRING", {"default": "", "multiline": true, "forceInput": true}], "max_new_tokens": ["INT", {"default": 128, "min": 1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["instruction_prompt", "prompt", "max_new_tokens"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Superprompt", "display_name": "Superprompt", "description": "\n# SuperPrompt\nA T5 model fine-tuned on the SuperPrompt dataset for  \nupsampling text prompts to more detailed descriptions.  \nMeant to be used as a pre-generation step for text-to-image  \nmodels that benefit from more detailed prompts.  \nhttps://huggingface.co/roborovski/superprompt-v1\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/text", "output_node": false}, "GLIGENTextBoxApplyBatchCoords": {"input": {"required": {"conditioning_to": ["CONDITIONING"], "latents": ["LATENT"], "clip": ["CLIP"], "gligen_textbox_model": ["GLIGEN"], "coordinates": ["STRING", {"forceInput": true}], "text": ["STRING", {"multiline": true}], "width": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 8}], "height": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 8}]}, "optional": {"size_multiplier": ["FLOAT", {"default": [1.0], "forceInput": true}]}}, "input_order": {"required": ["conditioning_to", "latents", "clip", "gligen_textbox_model", "coordinates", "text", "width", "height"], "optional": ["size_multiplier"]}, "output": ["CONDITIONING", "IMAGE"], "output_is_list": [false, false], "output_name": ["conditioning", "coord_preview"], "name": "GLIGENTextBoxApplyBatchCoords", "display_name": "GLIGENTextBoxApplyBatchCoords", "description": "\nThis node allows scheduling GLIGEN text box positions in a batch,  \nto be used with AnimateDiff-Evolved. Intended to pair with the  \nSpline Editor -node.  \n\nGLIGEN model can be downloaded through the Manage's \"Install Models\" menu.  \nOr directly from here:  \nhttps://huggingface.co/comfyanonymous/GLIGEN_pruned_safetensors/tree/main  \n  \nInputs:  \n- **latents** input is used to calculate batch size  \n- **clip** is your standard text encoder, use same as for the main prompt  \n- **gligen_textbox_model** connects to GLIGEN Loader  \n- **coordinates** takes a json string of points, directly compatible  \nwith the spline editor node.\n- **text** is the part of the prompt to set position for  \n- **width** and **height** are the size of the GLIGEN bounding box  \n  \nOutputs:\n- **conditioning** goes between to clip text encode and the sampler  \n- **coord_preview** is an optional preview of the coordinates and  \nbounding boxes.\n\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/experimental", "output_node": false}, "Intrinsic_lora_sampling": {"input": {"required": {"model": ["MODEL"], "lora_name": [["intrinsic_lora_sd15_albedo.safetensors", "intrinsic_lora_sd15_depth.safetensors", "intrinsic_lora_sd15_normal.safetensors", "intrinsic_lora_sd15_shading.safetensors", "intrinsic_loras.txt"]], "task": [["depth map", "surface normals", "albedo", "shading"], {"default": "depth map"}], "text": ["STRING", {"multiline": true, "default": ""}], "clip": ["CLIP"], "vae": ["VAE"], "per_batch": ["INT", {"default": 16, "min": 1, "max": 4096, "step": 1}]}, "optional": {"image": ["IMAGE"], "optional_latent": ["LATENT"]}}, "input_order": {"required": ["model", "lora_name", "task", "text", "clip", "vae", "per_batch"], "optional": ["image", "optional_latent"]}, "output": ["IMAGE", "LATENT"], "output_is_list": [false, false], "output_name": ["IMAGE", "LATENT"], "name": "Intrinsic_lora_sampling", "display_name": "Intrinsic Lora Sampling", "description": "\nSampler to use the intrinsic loras:  \nhttps://github.com/duxiaodan/intrinsic-lora  \nThese LoRAs are tiny and thus included  \nwith this node pack.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes", "output_node": false}, "CheckpointPerturbWeights": {"input": {"required": {"model": ["MODEL"], "joint_blocks": ["FLOAT", {"default": 0.02, "min": 0.001, "max": 10.0, "step": 0.001}], "final_layer": ["FLOAT", {"default": 0.02, "min": 0.001, "max": 10.0, "step": 0.001}], "rest_of_the_blocks": ["FLOAT", {"default": 0.02, "min": 0.001, "max": 10.0, "step": 0.001}], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}]}}, "input_order": {"required": ["model", "joint_blocks", "final_layer", "rest_of_the_blocks", "seed"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "CheckpointPerturbWeights", "display_name": "CheckpointPerturbWeights", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/experimental", "output_node": true}, "Screencap_mss": {"input": {"required": {"x": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "width": ["INT", {"default": 512, "min": 0, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 0, "max": 4096, "step": 1}], "num_frames": ["INT", {"default": 1, "min": 1, "max": 255, "step": 1}], "delay": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["x", "y", "width", "height", "num_frames", "delay"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Screencap_mss", "display_name": "Screencap mss", "description": "\nCaptures an area specified by screen coordinates.  \nCan be used for realtime diffusion with autoqueue.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/experimental", "output_node": false}, "WebcamCaptureCV2": {"input": {"required": {"x": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "width": ["INT", {"default": 512, "min": 0, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 0, "max": 4096, "step": 1}], "cam_index": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "release": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["x", "y", "width", "height", "cam_index", "release"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "WebcamCaptureCV2", "display_name": "Webcam Capture CV2", "description": "\nCaptures a frame from a webcam using CV2.  \nCan be used for realtime diffusion with autoqueue.\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/experimental", "output_node": false}, "DifferentialDiffusionAdvanced": {"input": {"required": {"model": ["MODEL"], "samples": ["LATENT"], "mask": ["MASK"], "multiplier": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.001}]}}, "input_order": {"required": ["model", "samples", "mask", "multiplier"]}, "output": ["MODEL", "LATENT"], "output_is_list": [false, false], "output_name": ["MODEL", "LATENT"], "name": "DifferentialDiffusionAdvanced", "display_name": "Differential Diffusion Advanced", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "_for_testing", "output_node": false}, "FluxBlockLoraLoader": {"input": {"required": {"model": ["MODEL", {"tooltip": "The diffusion model the LoRA will be applied to."}], "strength_model": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "tooltip": "How strongly to modify the diffusion model. This value can be negative."}]}, "optional": {"lora_name": [["AnimateLCM_sd15_t2v_lora.safetensors", "Bending_Illustartion-000007.safetensors", "Bending_Illustartion-000010.safetensors", "Bending_Illustartion-000014.safetensors", "CPA.safetensors", "Kodak Motion Picture Film Style v5_2.safetensors", "Lego_XL_v2.1.safetensors", "PixarXL.safetensors", "RW_PS1v1.safetensors", "RW_pixelart_XL_v1.safetensors", "Retro_Comic_Flux_v1_renderartist.safetensors", "SDXL-Lightning/sdxl_lightning_2step_lora.safetensors", "Vivid Midjourney mimic - XL SDXL v2.0.safetensors", "add_detail.safetensors", "anime_lora_comfy_converted.safetensors", "disney_lora_comfy_converted.safetensors", "flux_realism_lora.safetensors", "flux_spirited_away.safetensors", "furry_lora.safetensors", "house_architecture_Exterior_SDlife_Chiasedamme.safetensors", "lcm/SD1.5/pytorch_lora_weights.safetensors", "legody-v10.safetensors", "moonies&glorpies_lora.safetensors", "moonies_lora.safetensors", "more_details.safetensors", "pieter.safetensors", "ps1_style_SDXL_v2.safetensors", "sdxl_lightning_4step_lora.safetensors", "v3_sd15_adapter.ckpt", "xl_more_art-full_v1.safetensors", "zavy-cntrst-sdxl.safetensors", "zyd232_Ink_Style_Flux1D_v1_1.safetensors"], {"tooltip": "The name of the LoRA."}], "opt_lora_path": ["STRING", {"forceInput": true, "tooltip": "Absolute path of the LoRA."}], "blocks": ["SELECTEDBLOCKS"]}}, "input_order": {"required": ["model", "strength_model"], "optional": ["lora_name", "opt_lora_path", "blocks"]}, "output": ["MODEL", "STRING"], "output_is_list": [false, false], "output_name": ["model", "rank"], "name": "FluxBlockLoraLoader", "display_name": "Flux Block Lora Loader", "description": "", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/experimental", "output_node": false, "output_tooltips": ["The modified diffusion model.", "possible rank of the LoRA."]}, "FluxBlockLoraSelect": {"input": {"required": {"double_blocks.0.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.1.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.2.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.3.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.4.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.5.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.6.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.7.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.8.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.9.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.10.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.11.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.12.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.13.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.14.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.15.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.16.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.17.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.18.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.0.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.1.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.2.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.3.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.4.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.5.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.6.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.7.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.8.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.9.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.10.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.11.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.12.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.13.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.14.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.15.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.16.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.17.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.18.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.19.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.20.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.21.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.22.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.23.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.24.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.25.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.26.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.27.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.28.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.29.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.30.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.31.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.32.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.33.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.34.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.35.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.36.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.37.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}]}}, "input_order": {"required": ["double_blocks.0.", "double_blocks.1.", "double_blocks.2.", "double_blocks.3.", "double_blocks.4.", "double_blocks.5.", "double_blocks.6.", "double_blocks.7.", "double_blocks.8.", "double_blocks.9.", "double_blocks.10.", "double_blocks.11.", "double_blocks.12.", "double_blocks.13.", "double_blocks.14.", "double_blocks.15.", "double_blocks.16.", "double_blocks.17.", "double_blocks.18.", "single_blocks.0.", "single_blocks.1.", "single_blocks.2.", "single_blocks.3.", "single_blocks.4.", "single_blocks.5.", "single_blocks.6.", "single_blocks.7.", "single_blocks.8.", "single_blocks.9.", "single_blocks.10.", "single_blocks.11.", "single_blocks.12.", "single_blocks.13.", "single_blocks.14.", "single_blocks.15.", "single_blocks.16.", "single_blocks.17.", "single_blocks.18.", "single_blocks.19.", "single_blocks.20.", "single_blocks.21.", "single_blocks.22.", "single_blocks.23.", "single_blocks.24.", "single_blocks.25.", "single_blocks.26.", "single_blocks.27.", "single_blocks.28.", "single_blocks.29.", "single_blocks.30.", "single_blocks.31.", "single_blocks.32.", "single_blocks.33.", "single_blocks.34.", "single_blocks.35.", "single_blocks.36.", "single_blocks.37."]}, "output": ["SELECTEDBLOCKS"], "output_is_list": [false], "output_name": ["blocks"], "name": "FluxBlockLoraSelect", "display_name": "Flux Block Lora Select", "description": "Select individual block alpha values, value of 0 removes the block altogether", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/experimental", "output_node": false, "output_tooltips": ["The modified diffusion model."]}, "CustomControlNetWeightsFluxFromList": {"input": {"required": {"list_of_floats": ["FLOAT", {"forceInput": true}]}, "optional": {"uncond_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "cn_extras": ["CN_WEIGHTS_EXTRAS"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["list_of_floats"], "optional": ["uncond_multiplier", "cn_extras", "autosize"]}, "output": ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"], "output_is_list": [false, false], "output_name": ["CN_WEIGHTS", "TK_SHORTCUT"], "name": "CustomControlNetWeightsFluxFromList", "display_name": "Custom ControlNet Weights Flux From List", "description": "Creates controlnet weights from a list of floats for Advanced-ControlNet", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/controlnet", "output_node": false}, "CreateInstanceDiffusionTracking": {"input": {"required": {"coordinates": ["STRING", {"forceInput": true}], "width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "bbox_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "bbox_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "class_name": ["STRING", {"default": "class_name"}], "class_id": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "prompt": ["STRING", {"default": "prompt", "multiline": true}]}, "optional": {"size_multiplier": ["FLOAT", {"default": [1.0], "forceInput": true}], "fit_in_frame": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["coordinates", "width", "height", "bbox_width", "bbox_height", "class_name", "class_id", "prompt"], "optional": ["size_multiplier", "fit_in_frame"]}, "output": ["TRACKING", "STRING", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["tracking", "prompt", "width", "height", "bbox_width", "bbox_height"], "name": "CreateInstanceDiffusionTracking", "display_name": "CreateInstanceDiffusionTracking", "description": "\nCreates tracking data to be used with InstanceDiffusion:  \nhttps://github.com/logtd/ComfyUI-InstanceDiffusion  \n  \nInstanceDiffusion prompt format:  \n\"class_id.class_name\": \"prompt\",  \nfor example:  \n\"1.head\": \"((head))\",  \n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/InstanceDiffusion", "output_node": false}, "AppendInstanceDiffusionTracking": {"input": {"required": {"tracking_1": ["TRACKING", {"forceInput": true}], "tracking_2": ["TRACKING", {"forceInput": true}]}, "optional": {"prompt_1": ["STRING", {"default": "", "forceInput": true}], "prompt_2": ["STRING", {"default": "", "forceInput": true}]}}, "input_order": {"required": ["tracking_1", "tracking_2"], "optional": ["prompt_1", "prompt_2"]}, "output": ["TRACKING", "STRING"], "output_is_list": [false, false], "output_name": ["tracking", "prompt"], "name": "AppendInstanceDiffusionTracking", "display_name": "AppendInstanceDiffusionTracking", "description": "\nAppends tracking data to be used with InstanceDiffusion:  \nhttps://github.com/logtd/ComfyUI-InstanceDiffusion  \n\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/InstanceDiffusion", "output_node": false}, "DrawInstanceDiffusionTracking": {"input": {"required": {"image": ["IMAGE"], "tracking": ["TRACKING", {"forceInput": true}], "box_line_width": ["INT", {"default": 2, "min": 1, "max": 10, "step": 1}], "draw_text": ["BOOLEAN", {"default": true}], "font": [["FreeMono.ttf", "FreeMonoBoldOblique.otf", "TTNorms-Black.otf"]], "font_size": ["INT", {"default": 20}]}}, "input_order": {"required": ["image", "tracking", "box_line_width", "draw_text", "font", "font_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "DrawInstanceDiffusionTracking", "display_name": "DrawInstanceDiffusionTracking", "description": "\nDraws the tracking data from  \nCreateInstanceDiffusionTracking -node.\n\n", "python_module": "custom_nodes.ComfyUI-KJNodes", "category": "KJNodes/InstanceDiffusion", "output_node": false}, "Seed Everywhere": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "hidden": {"id": "UNIQUE_ID"}}, "input_order": {"required": ["seed"], "hidden": ["id"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "Seed Everywhere", "display_name": "Seed Everywhere", "description": "", "python_module": "custom_nodes.cg-use-everywhere", "category": "everywhere", "output_node": true}, "Anything Everywhere": {"input": {"required": {}, "optional": {"anything": ["*", {}]}, "hidden": {"id": "UNIQUE_ID"}}, "input_order": {"required": [], "optional": ["anything"], "hidden": ["id"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Anything Everywhere", "display_name": "Anything Everywhere", "description": "", "python_module": "custom_nodes.cg-use-everywhere", "category": "everywhere", "output_node": true}, "Anything Everywhere3": {"input": {"required": {}, "optional": {"anything": ["*", {}], "anything2": ["*", {}], "anything3": ["*", {}]}}, "input_order": {"required": [], "optional": ["anything", "anything2", "anything3"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Anything Everywhere3", "display_name": "Anything Everywhere3", "description": "", "python_module": "custom_nodes.cg-use-everywhere", "category": "everywhere", "output_node": true}, "Anything Everywhere?": {"input": {"required": {}, "optional": {"anything": ["*", {}], "title_regex": ["STRING", {"default": ".*"}], "input_regex": ["STRING", {"default": ".*"}], "group_regex": ["STRING", {"default": ".*"}]}, "hidden": {"id": "UNIQUE_ID"}}, "input_order": {"required": [], "optional": ["anything", "title_regex", "input_regex", "group_regex"], "hidden": ["id"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Anything Everywhere?", "display_name": "Anything Everywhere?", "description": "", "python_module": "custom_nodes.cg-use-everywhere", "category": "everywhere", "output_node": true}, "Prompts Everywhere": {"input": {"required": {}, "optional": {"+ve": ["*", {}], "-ve": ["*", {}]}}, "input_order": {"required": [], "optional": ["+ve", "-ve"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Prompts Everywhere", "display_name": "Prompts Everywhere", "description": "", "python_module": "custom_nodes.cg-use-everywhere", "category": "everywhere", "output_node": true}, "Simple String": {"input": {"required": {"string": ["STRING", {"default": ""}]}}, "input_order": {"required": ["string"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Simple String", "display_name": "Simple String", "description": "", "python_module": "custom_nodes.cg-use-everywhere", "category": "everywhere", "output_node": false}, "JDC_Plasma": {"input": {"required": {"width": ["INT", {"default": 512, "min": 128, "max": 8192, "step": 8}], "height": ["INT", {"default": 512, "min": 128, "max": 8192, "step": 8}], "turbulence": ["FLOAT", {"default": 2.75, "min": 0.5, "max": 32, "step": 0.01}], "value_min": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "value_max": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "red_min": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "red_max": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "green_min": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "green_max": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "blue_min": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "blue_max": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["width", "height", "turbulence", "value_min", "value_max", "red_min", "red_max", "green_min", "green_max", "blue_min", "blue_max", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JDC_Plasma", "display_name": "Plasma Noise", "description": "", "python_module": "custom_nodes.comfy-plasma", "category": "image/noise", "output_node": false}, "JDC_RandNoise": {"input": {"required": {"width": ["INT", {"default": 512, "min": 128, "max": 8192, "step": 8}], "height": ["INT", {"default": 512, "min": 128, "max": 8192, "step": 8}], "value_min": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "value_max": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "red_min": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "red_max": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "green_min": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "green_max": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "blue_min": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "blue_max": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["width", "height", "value_min", "value_max", "red_min", "red_max", "green_min", "green_max", "blue_min", "blue_max", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JDC_RandNoise", "display_name": "Random Noise", "description": "", "python_module": "custom_nodes.comfy-plasma", "category": "image/noise", "output_node": false}, "JDC_GreyNoise": {"input": {"required": {"width": ["INT", {"default": 512, "min": 128, "max": 8192, "step": 8}], "height": ["INT", {"default": 512, "min": 128, "max": 8192, "step": 8}], "value_min": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "value_max": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "red_min": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "red_max": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "green_min": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "green_max": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "blue_min": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "blue_max": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["width", "height", "value_min", "value_max", "red_min", "red_max", "green_min", "green_max", "blue_min", "blue_max", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JDC_GreyNoise", "display_name": "Greyscale Noise", "description": "", "python_module": "custom_nodes.comfy-plasma", "category": "image/noise", "output_node": false}, "JDC_PinkNoise": {"input": {"required": {"width": ["INT", {"default": 512, "min": 128, "max": 8192, "step": 8}], "height": ["INT", {"default": 512, "min": 128, "max": 8192, "step": 8}], "value_min": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "value_max": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "red_min": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "red_max": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "green_min": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "green_max": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "blue_min": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "blue_max": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["width", "height", "value_min", "value_max", "red_min", "red_max", "green_min", "green_max", "blue_min", "blue_max", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JDC_PinkNoise", "display_name": "Pink Noise", "description": "", "python_module": "custom_nodes.comfy-plasma", "category": "image/noise", "output_node": false}, "JDC_BrownNoise": {"input": {"required": {"width": ["INT", {"default": 512, "min": 128, "max": 8192, "step": 8}], "height": ["INT", {"default": 512, "min": 128, "max": 8192, "step": 8}], "value_min": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "value_max": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "red_min": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "red_max": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "green_min": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "green_max": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "blue_min": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "blue_max": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["width", "height", "value_min", "value_max", "red_min", "red_max", "green_min", "green_max", "blue_min", "blue_max", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JDC_BrownNoise", "display_name": "Brown Noise", "description": "", "python_module": "custom_nodes.comfy-plasma", "category": "image/noise", "output_node": false}, "JDC_PlasmaSampler": {"input": {"required": {"model": ["MODEL"], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 7.0, "min": 0.0, "max": 100.0, "step": 0.1}], "denoise": ["FLOAT", {"default": 0.9, "min": 0.0, "max": 1.0, "step": 0.01}], "latent_noise": ["FLOAT", {"default": 0.05, "min": 0.0, "max": 1.0, "step": 0.01}], "distribution_type": [["default", "rand"]], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"]}}, "input_order": {"required": ["model", "noise_seed", "steps", "cfg", "denoise", "latent_noise", "distribution_type", "sampler_name", "scheduler", "positive", "negative", "latent_image"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "JDC_PlasmaSampler", "display_name": "Plasma KSampler", "description": "", "python_module": "custom_nodes.comfy-plasma", "category": "sampling", "output_node": false}, "JDC_PowerImage": {"input": {"required": {"IMAGE": ["IMAGE"], "power_of": ["FLOAT", {"default": 1, "min": 1, "max": 65536, "step": 0.01}], "mode": [["darken", "lighten", "emphasize both"]]}}, "input_order": {"required": ["IMAGE", "power_of", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JDC_PowerImage", "display_name": "Image To The Power Of", "description": "", "python_module": "custom_nodes.comfy-plasma", "category": "image/postprocessing", "output_node": false}, "JDC_Contrast": {"input": {"required": {"IMAGE": ["IMAGE"], "contrast": ["FLOAT", {"default": 1, "min": 0, "max": 10, "step": 0.01}], "brightness": ["FLOAT", {"default": 1, "min": 0, "max": 10, "step": 0.01}]}}, "input_order": {"required": ["IMAGE", "contrast", "brightness"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JDC_Contrast", "display_name": "Brightness & Contrast", "description": "", "python_module": "custom_nodes.comfy-plasma", "category": "image/postprocessing", "output_node": false}, "JDC_Greyscale": {"input": {"required": {"IMAGE": ["IMAGE"]}}, "input_order": {"required": ["IMAGE"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JDC_Greyscale", "display_name": "RGB to Greyscale", "description": "", "python_module": "custom_nodes.comfy-plasma", "category": "image/postprocessing", "output_node": false}, "JDC_EqualizeGrey": {"input": {"required": {"IMAGE": ["IMAGE"]}}, "input_order": {"required": ["IMAGE"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JDC_EqualizeGrey", "display_name": "Equalize Histogram", "description": "", "python_module": "custom_nodes.comfy-plasma", "category": "image/postprocessing", "output_node": false}, "JDC_AutoContrast": {"input": {"required": {"IMAGE": ["IMAGE"], "cutoff": ["FLOAT", {"default": 2, "min": 0, "max": 100, "step": 0.01}], "min_value": ["INT", {"default": -1, "min": -1, "max": 255, "step": 1}]}}, "input_order": {"required": ["IMAGE", "cutoff", "min_value"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JDC_AutoContrast", "display_name": "AutoContrast", "description": "", "python_module": "custom_nodes.comfy-plasma", "category": "image/postprocessing", "output_node": false}, "JDC_ResizeFactor": {"input": {"required": {"IMAGE": ["IMAGE"], "factor": ["FLOAT", {"default": 2, "min": 0.01, "max": 10, "step": 0.01}], "resampler": [["nearest", "box", "bilinear", "bicubic", "hamming", "lanczos"]]}}, "input_order": {"required": ["IMAGE", "factor", "resampler"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JDC_ResizeFactor", "display_name": "Resize Image by Factor", "description": "", "python_module": "custom_nodes.comfy-plasma", "category": "image/postprocessing", "output_node": false}, "JDC_BlendImages": {"input": {"required": {"IMAGE_A": ["IMAGE"], "IMAGE_B": ["IMAGE"], "blend": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.001}]}}, "input_order": {"required": ["IMAGE_A", "IMAGE_B", "blend"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JDC_BlendImages", "display_name": "Blend Images", "description": "", "python_module": "custom_nodes.comfy-plasma", "category": "image/postprocessing", "output_node": false}, "JDC_GaussianBlur": {"input": {"required": {"IMAGE": ["IMAGE"], "blur_radius": ["FLOAT", {"default": 1, "min": 1, "max": 1024, "step": 0.01}]}}, "input_order": {"required": ["IMAGE", "blur_radius"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JDC_GaussianBlur", "display_name": "Gaussian Blur", "description": "", "python_module": "custom_nodes.comfy-plasma", "category": "image/postprocessing", "output_node": false}, "JDC_ImageLoader": {"input": {"required": {"image": ["STRING", {"default": ""}]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "JDC_ImageLoader", "display_name": "Load Image From Path", "description": "", "python_module": "custom_nodes.comfy-plasma", "category": "image", "output_node": false}, "JDC_ImageLoaderMeta": {"input": {"required": {"image": ["STRING", {"default": ""}]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "MASK", "STRING", "STRING", "INT", "INT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["image", "mask", "PROMPT", "NEGATIVE", "WIDTH", "HEIGHT"], "name": "JDC_ImageLoaderMeta", "display_name": "Load Image From Path With Meta", "description": "", "python_module": "custom_nodes.comfy-plasma", "category": "image", "output_node": false}}